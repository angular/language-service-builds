{"version":3,"sources":["/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.js"],"names":["$getModule","name","$provided","require","define","modules","cb","$deferred","$reflect","defineMetadata","getOwnMetadata","global","$resolved","module","exports","provided","result","Object","assign","reflect-metadata","apply","this","map","fs","path","ts","__extends","d","b","__","constructor","extendStatics","prototype","create","Inject","Attribute","Query","Directive","Component","Pipe","Input","Output","HostBinding","HostListener","NgModule","ModuleWithProviders","SchemaMetadata","MetadataFactory","makeMetadataFactory","props","factory","args","_i","arguments","length","values","__assign","ngMetadataName","isTypeOf","obj","Route","dashCaseToCamelCase","input","replace","DASH_CASE_REGEXP","m","toUpperCase","splitAtColon","defaultValues","_splitAt","splitAtPeriod","character","characterIndex","indexOf","slice","trim","visitValue","value","visitor","context","Array","isArray","visitArray","isStrictStringMap","visitStringMap","visitPrimitive","visitOther","isDefined","val","undefined","noUndefined","syntaxError","msg","parseErrors","error","Error","ERROR_SYNTAX_ERROR","ERROR_PARSE_ERRORS","isSyntaxError","getParseErrors","escapeRegExp","s","getPrototypeOf","STRING_MAP_PROTO","utf8Encode","str","encoded","index","codePoint","charCodeAt","low","String","fromCharCode","stringify","token","join","overriddenName","res","toString","newLineIndex","substring","resolveForwardRef","type","hasOwnProperty","isPromise","then","templateVisitAll","asts","visit","ast","forEach","astResult","push","preserveWhitespacesDefault","preserveWhitespacesOption","defaultSetting","_sanitizeIdentifier","identifierName","compileIdentifier","reference","ref","StaticSymbol","identifier","_anonymousTypeIndex","identifierModuleUrl","filePath","viewClassName","compType","embeddedTemplateIndex","rendererTypeName","hostViewClassName","componentFactoryName","tokenName","tokenReference","_normalizeArray","flatten$1","list","reduce","flat","item","flatItem","concat","jitSourceUrl","url","templateSourceUrl","ngModuleType","compMeta","templateMeta","isInline","sharedStylesheetJitUrl","meta","id","pathParts","split","ngModuleJitUrl","moduleMeta","templateJitUrl","visitAll","nodes","spanOf$1$1","start","sourceSpan","offset","end","Element","endSourceSpan","children","findNode","position","path$$1","_super","class_1","span","RecursiveVisitor","AstPath","assertArrayOfStrings","i","assertInterpolationSymbols","start_1","end_1","INTERPOLATION_BLACKLIST_REGEXPS","regexp","test","isStyleUrlResolvable","schemeMatch","match","URL_WITH_SCHEMA_REGEXP","extractStyleUrls","resolver","baseUrl","cssText","foundUrls","modifiedCssText","CSS_STRIPPABLE_COMMENT_REGEXP","CSS_IMPORT_REGEXP","resolve","StyleWithImports","splitNsName","elementName","colonIndex","isNgContainer","tagName","isNgContent","isNgTemplate","getNsPrefix","fullName","mergeNsAndName","prefix","localName","preparseElement","selectAttr","hrefAttr","relAttr","nonBindable","projectAs","attrs","attr","lcAttrName","toLowerCase","NG_CONTENT_SELECT_ATTR","LINK_STYLE_HREF_ATTR","LINK_STYLE_REL_ATTR","NG_NON_BINDABLE_ATTR","NG_PROJECT_AS","normalizeNgContentSelect","nodeName","PreparsedElementType","OTHER","NG_CONTENT","STYLE_ELEMENT","STYLE","SCRIPT_ELEMENT","SCRIPT","LINK_ELEMENT","LINK_STYLE_REL_VALUE","STYLESHEET","PreparsedElement","isDirectiveMetadata","createDirective","createComponent","findLast","arr","condition","isWhitespace","code","$TAB","$SPACE","$NBSP","isDigit","$0","$9","isAsciiLetter","$a","$z","$A","$Z","isAsciiHexDigit","$f","$F","newCharacterToken","Token","TokenType","Character","newIdentifierToken","text","Identifier","newKeywordToken","Keyword","newOperatorToken","Operator","newStringToken","newNumberToken","n","Number","newErrorToken","message","isIdentifierStart","$_","$$","isIdentifier","scanner","_Scanner","peek","advance","$EOF","isIdentifierPart","isExponentStart","$e","$E","isExponentSign","$MINUS","$PLUS","isQuote","$SQ","$DQ","$BT","unescape","$n","$LF","$FF","$r","$CR","$t","$v","$VTAB","parseIntAutoRadix","parseInt","isNaN","visitAstChildren","visitBinary","left","right","visitChain","expressions","visitConditional","trueExp","falseExp","visitFunctionCall","target","visitImplicitReceiver","visitInterpolation","visitKeyedRead","key","visitKeyedWrite","visitLiteralArray","visitLiteralMap","visitLiteralPrimitive","visitMethodCall","receiver","visitPipe","exp","visitPrefixNot","expression","visitNonNullAssert","visitPropertyRead","visitPropertyWrite","visitQuote","visitSafeMethodCall","visitSafePropertyRead","_createInterpolateRegExp","config","pattern","RegExp","typeSourceSpan","kind","moduleUrl","sourceFileName","sourceFile","ParseSourceFile","ParseSourceSpan","ParseLocation","tokenize","source","getTagDefinition","tokenizeExpansionForms","interpolationConfig","DEFAULT_INTERPOLATION_CONFIG","_Tokenizer","_unexpectedCharacterErrorMsg","charCode","_unknownEntityErrorMsg","entitySrc","isNotWhitespace","isNameEnd","$GT","$SLASH","$EQ","isPrefixEnd","isDigitEntityEnd","$SEMICOLON","isNamedEntityEnd","isExpansionFormStart","isInterpolationStart","$LBRACE","isExpansionCaseStart","compareCharCodeCaseInsensitive","code1","code2","toUpperCaseCharCode","mergeTextTokens","srcTokens","dstTokens","lastDstToken","TokenType$1","TEXT","parts","lastOnStack","stack","element","digest","sha1","serializeNodes","meaning","decimalDigest","_SerializerIgnoreIcuExpVisitor","computeMsgId","a","serializerVisitor","utf8","words32","stringToWords32","Endian","Big","len","w","_a","c","e","_b","h0","h1","h2","h3","h4","j","rol32","_c","fk","f","k","temp","add32","_d","_e","byteStringToHexString","words32ToByteString","fingerprint","hash32","hi","lo","him","lom","add64","rol64","byteStringToDecString","wordAt","Little","mix","sub32","add32to64","high","ah","al","bh","bl","carry","l","count","endian","byteAt","word","word32ToByteString","hex","decimal","toThePower","addBigInt","numberTimesBigInt","reverse","x","y","sum","Math","max","tmpSum","num","product","bToThePower","getHtmlTagDefinition","TAG_DEFINITIONS","_DEFAULT_TAG_DEFINITION","createI18nMessageFactory","_I18nVisitor","_expParser","description","toI18nMessage","_extractPlaceholderName","_CUSTOM_PH_EXP","extractMessages","implicitTags","implicitAttrs","_Visitor","extract","mergeTranslations","translations","merge","_isOpeningComment","Comment","startsWith","_isClosingComment","_getI18nAttr","p","find","_I18N_ATTR","_parseMessageMeta","i18n","idIndex","ID_SEPARATOR","descIndex","MEANING_SEPARATOR","meaningAndDesc","getXmlTagDefinition","_TAG_DEFINITION","serialize","node","_visitor","_escapeXml","_ESCAPED_CHARS","entry","getCtypeForTag","tag","getTypeForTag","digest$1","toPublicName","internalName","createLazyProperty","messages","valueFn","defineProperty","configurable","enumerable","get","set","_","createSerializer","format","Xmb","Xtb","Xliff2","Xliff","ngfactoryFilePath","forceSourceFile","urlWithSuffix","splitTypescriptSuffix","stripGeneratedFileSuffix","GENERATED_FILE","isGeneratedFile","endsWith","lastDot","lastIndexOf","summaryFileName","fileName","STRIP_SRC_FILE_SUFFIXES","summaryForJitFileName","stripSummaryForJitFileSuffix","JIT_SUMMARY_FILE","summaryForJitName","symbolName","stripSummaryForJitNameSuffix","JIT_SUMMARY_NAME","isLoweredSymbol","LOWERED_SYMBOL","createLoweredSymbol","createTokenForReference","createTokenForExternalReference","reflector","resolveExternalReference","hasLifecycleHook","hook","getHookName","getAllLifecycleHooks","LIFECYCLE_HOOKS_VALUES","filter","LifecycleHooks","OnInit","OnDestroy","DoCheck","OnChanges","AfterContentInit","AfterContentChecked","AfterViewInit","AfterViewChecked","flattenArray","tree","out","dedupeArray","array","from","Set","flattenAndDedupeArray","isValidType","Type","extractIdentifiers","targetIdentifiers","_CompileValueConverter","stringifyType","componentStillLoadingError","ERROR_COMPONENT_TYPE","nullSafeIsEquivalent","base","other","isEquivalent","areAllEquivalent","findReadVarNames","stmts","_ReadVarVisitor","visitAllStatements","varNames","collectExternalReferences","_FindExternalReferencesVisitor","externalReferences","applySourceSpanToStatementIfNeeded","stmt","transformer","_ApplySourceSpanTransformer","visitStatement","applySourceSpanToExpressionIfNeeded","expr","visitExpression","variable","ReadVarExpr","importExpr","typeParams","ExternalExpr","importType","typeModifiers","expressionType","ExpressionType","literalArr","LiteralArrayExpr","literalMap","LiteralMapExpr","LiteralMapEntry","quoted","not","NotExpr","assertNotNull","AssertNotNull","fn","params","body","FunctionExpr","literal","LiteralExpr","_transformProvider","provider","useExisting","useValue","deps","useClass","useFactory","multi","_transformProviderAst","eager","providers","ProviderAst","multiProvider","providerType","lifecycleHooks","_resolveProvidersFromDirectives","directives","targetErrors","providersByToken","Map","directive","_resolveProviders","isComponent","ProviderAstType","dir","PublicService","viewProviders","PrivateService","targetProvidersByToken","resolvedProvider","ProviderError","isUseValue","_getViewQueries","component","viewQueryId","viewQueries","query","_addQueryToTokenMap","queryId","_getContentQueries","contentQueryStartId","contentQueryId","contentQueries","directiveIndex","queries","selectors","convertValueToOutputAst","ctx","_ValueOutputAstTransformer","providerDef","providerAst","flags","lifecycleHook","lifecycleHookToNodeFlag","multiProviderDef","singleProviderDef","providerExpr","depsExpr","tokenExpr","convertDeps","providerIndex","dep","depIndex","paramName","allParams","FnParam","DYNAMIC_TYPE","allDepDefs","depDef","exprs","depExprs","diDeps","instantiate","callFn","ReturnStatement","INFERRED_TYPE","providerMeta","NULL_EXPR","tokenMeta","isValue","isSkipSelf","isOptional","nodeFlag","componentFactoryResolverProviderDef","entryComponents","entryComponentFactories","entryComponent","componentFactory","Identifiers","ComponentFactoryResolver","classMeta","NgModuleRef","CodegenComponentFactoryResolver","toBase64String","b64","i1","i2","i3","toBase64Digit","toBase64VLQ","digit","B64_DIGITS","escapeIdentifier","escapeDollar","alwaysQuote","_SINGLE_QUOTE_ESCAPE_STRING_RE","_LEGAL_IDENTIFIER_RE","_createIndent","_INDENT_WITH","debugOutputAstAsTypeScript","converter","_TsEmitterVisitor","EmitterVisitorContext","createRoot","Statement","Expression","Type$1","visitType","toSource","registerContext","specs","specs_1","spec","SECURITY_SCHEMA","_isPixelDimensionStyle","prop","stripComments","_commentRe","extractSourceMappingUrl","matcher","_sourceMappingUrlRe","processRules","ruleCallback","inputWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","_ruleRe","selector","content","suffix","contentPrefix","BLOCK_PLACEHOLDER","blocks","rule","CssRule","inputParts","_curlyRe","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","part","CLOSE_CURLY","OPEN_CURLY","StringWithEscapedBlocks","getStylesVarName","hasPreserveWhitespacesAttr","some","PRESERVE_WS_ATTR_NAME","replaceNgsp","NGSP_UNICODE","removeWhitespaces","htmlAstWithErrors","ParseTreeResult","WhitespaceVisitor","rootNodes","errors","expandNodes","expander","_Expander","ExpansionResult","isExpanded","_expandPluralForm","cases","PLURAL_CASES","ExpansionError","valueSourceSpan","expansionResult","Attribute$1","switchAttr","switchValue","switchValueSourceSpan","_expandDefaultForm","_isAnimationLabel","calcPossibleSecurityContexts","registry","propName","isAttribute","ctxs","CssSelector","parse","elementNames","allKnownElementNames","notElementNames","notSelectors","isElementSelector","possibleElementNames","has","securityContext","SecurityContext","NONE","sort","warnOnlyOnce","warnings","warningCounts","splitExportAs","exportAs","splitClasses","classAttrValue","createElementCssSelector$1","attributes","cssSelector","elNameNoNs","setElement","attrName","attrNameNoNs","attrValue","addAttribute","CLASS_ATTR","className","addClassName","_isEmptyTextNode","Text","removeSummaryDuplicates","items","isEmptyExpression","ASTWithSource","EmptyExpr","isTemplate","el","enableLegacyTemplate","reportDeprecation","tagNoNs","TEMPLATE_ELEMENT","TEMPLATE_ELEMENT_DEPRECATION_WARNING","convertActionBinding","localResolver","implicitReceiver","action","bindingId","DefaultLocalResolver","actionWithoutBuiltins","convertPropertyBindingBuiltins","createLiteralArrayConverter","argCount","createLiteralMapConverter","keys","createPipeConverter","_AstToIrVisitor","actionStmts","flattenStatements","_Mode","prependTemporaryDecls","temporaryCount","lastIndex","preventDefaultVar","lastStatement","returnExpr","convertStmtIntoExpression","createPreventDefaultVar","cast","notIdentical","toDeclStmt","StmtModifier","Final","ConvertActionBindingResult","converterFactory","convertBuiltins","convertPropertyBinding","expressionWithoutBuiltins","currValExpr","createCurrValueExpr","outputExpr","temporaryDeclaration","ConvertPropertyBindingResult","_BuiltinAstConverter","temporaryName","temporaryNumber","DeclareVarStmt","statements","unshift","ensureStatementMode","mode","ensureExpressionMode","convertToStatementIfNeeded","toStmt","arg","output","ExpressionStatement","needsAdditionalRootNode","astNodes","lastAstNode","EmbeddedTemplateAst","hasViewContainer","ElementAst","NgContentAst","elementBindingDef","inputAst","dirAst","PropertyBindingType","Property","Animation","Class","Style","unit","fixedAttrsDef","elementAst","mapResult","attrAst","hostAttributes","prevValue","mergeAttributeValue","attrValue1","attrValue2","CLASS_ATTR$1","STYLE_ATTR","callCheckStmt","nodeIndex","CHECK_VAR","VIEW_VAR","callUnwrapValue","bindingIdx","unwrapValue","findStaticQueryIds","staticQueryIds","dynamicQueryIds","queryMatches","child","childData","add","delete","staticViewQueryIds","nodeStaticQueryIds","elementEventNameAndTarget","eventAst","isAnimation","phase","calcStaticDynamicQueryFlags","queryIds","isFirst","elementEventFullName","toTypeScript","file","preamble","genFileUrl","TypeScriptEmitter","emitStatements","listLazyRoutes","allLazyRoutes","transitiveModule","ROUTES","loadChildren","_collectLoadChildren","loadChildren_1","route","parseLazyRoute","routes","routes_1","routePath","routeName","referencedModule","moduleName","serializeSummaries","srcFileName","forJitCtx","summaryResolver","symbolResolver","symbols","types","toJsonSerializer","ToJsonSerializer","resolvedSymbol","addSummary","symbol","metadata","summary","json","forJitSerializer_1","ForJitSerializer","addSourceType","unprocessedSymbolSummariesBySymbol","isLibraryFile","addLibType","deserializeSummaries","symbolCache","libraryFileName","FromJsonDeserializer","deserialize","createForJitStub","outputCtx","createSummaryForJitFunction","fnName","ArrayType","Exported","isCall","__symbolic","isFunctionCall","isMethodCallOnVariable","_createEmptyStub","ComponentFactory","_resolveStyleStatements","compileResult","needsShim","fileSuffix","dependencies","setValue","getStaticSymbol","_stylesModuleUrl","stylesheetUrl","shim","analyzeNgModules","fileNames","host","staticSymbolResolver","metadataResolver","mergeAnalyzedFiles","_analyzeFilesIncludingNonProgramFiles","analyzeAndValidateNgModules","validateAnalyzedModules","analyzedModules","symbolsMissingModule","seenFiles","files","visitFile","isSourceFile","analyzedFile","analyzeFile","ngModules","ngModule","modMeta","pipes","injectables","hasDecorators","exportsNonSourceFiles","getSymbolsOf","resolveSymbol","symbolMeta","isNgSymbol","isDirective","isPipe","isInjectable","getNgModuleMetadata","isValueExportingNonSourceFile","Visitor","_this","v","analyzedFiles","allNgModules","ngModuleByPipeOrDirective","allPipesAndDirectives","af","declaredDirectives","declaredPipes","mergeAndValidateNgFiles","shouldIgnore","expandedMessage","typeName","produceErrorMessage","mapStringMap","transform","HIDDEN_KEY","isPrimitive","o","positionalError","line","column","unescapeIdentifier","substr","createAotUrlResolver","basePath","resourceNameToFileName","createAotCompiler","compilerHost","options","errorCollector","urlResolver","StaticSymbolCache","AotSummaryResolver","StaticSymbolResolver","staticReflector","StaticReflector","htmlParser","I18NHtmlParser","HtmlParser","i18nFormat","missingTranslation","console","CompilerConfig","defaultEncapsulation","ViewEncapsulation","Emulated","useJit","preserveWhitespaces","strictInjectionParameters","normalizer","DirectiveNormalizer","loadResource","expressionParser","Parser","Lexer","elementSchemaRegistry","DomElementSchemaRegistry","tmplParser","TemplateParser","CompileMetadataResolver","NgModuleResolver","DirectiveResolver","PipeResolver","viewCompiler","ViewCompiler","typeCheckCompiler","TypeCheckCompiler","compiler","AotCompiler","StyleCompiler","NgModuleCompiler","interpretStatements","_ExecutionContext","StatementInterpreter","exportName","vars","_executeFunctionStatements","varValues","childCtx","createChildWihtLocalVars","createDynamicClass","_classStmt","_ctx","propertyDescriptors","getters","getter","instanceCtx","methods","method","paramNames","param","writable","ctorParamNames","constructorMethod","ctor","fields","field","superClass","parent","_declareFn","evalExpression","sourceUrl","createSourceMap","fnBody","fnArgNames","fnArgValues","argName","emptyFn","Function","bind","headerLines","toSourceMapGenerator","toJsComment","jitStatements","createSourceMaps","JitEmitterVisitor","createReturnStmt","getArgs","assertComponent","flattenSummaries","fn$$1","seen","summaries","createOutputContext","genFilePath","runtime","createUrlResolverWithoutPackagePrefix","UrlResolver","createOfflineCompileUrlResolver","getUrlScheme","_split","_ComponentIndex","Scheme","_buildFromEncodedParts","opt_scheme","opt_userInfo","opt_domain","opt_port","opt_path","opt_queryData","opt_fragment","uri","_splitRe","_removeDotSegments","leadingSlash","trailingSlash","segments","up","pos","segment","pop","_joinAndCanonicalizePath","Path","UserInfo","Domain","Port","QueryData","Fragment","_resolveUrl","encodeURI","baseParts","createCommonjsModule","isFunction","isObject","tryCatcher","tryCatchTarget","errorObject","tryCatch","flattenUnsubscriptionErrors","errs","err","UnsubscriptionError_1","UnsubscriptionError","toSubscriber","nextOrObserver","complete","Subscriber_1","Subscriber","rxSubscriber","Observer","empty","noop$1","pipe","fns","pipeFromArray","prev","noop_1","noop","isScheduler","schedule","isPromise$2","subscribe","subscribeToResult","outerSubscriber","outerValue","outerIndex","destination","InnerSubscriber_1","InnerSubscriber","closed","Observable_1","Observable","_isScalar","next","syncErrorThrowable","isArrayLike","isPromise_1","root","setTimeout","iterator","iterator$$1","done","observable","obs","TypeError","isObject_1","mergeMap","project","resultSelector","concurrent","POSITIVE_INFINITY","lift","MergeMapOperator","identity","mergeAll","mergeMap_1","identity_1","merge$3","observables","call","mergeStatic$1","scheduler","last","isScheduler_1","mergeAll_1","ArrayObservable_1","ArrayObservable","merge$2","merge_1","refCount","RefCountOperator$1","multicast","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","ConnectableObservable_1","connectableObservableDescriptor","shareSubjectFactory","Subject_1","Subject","share$1","refCount_1","multicast_1","share","share_1","makeDecorator","parentClass","chainFn","DecoratorFactory","objOrType","metaCtor","annotationInstance","TypeDecorator","cls","ANNOTATIONS","makeMetadataCtor","annotationCls","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","unusedKey","parameters","PARAMETERS","annotation","getSymbolIterator","_symbolIterator","Symbol_1","_global","getOwnPropertyNames","scheduleMicroTask","Zone","current","looseIdentical","stringify$1","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef$1","resolveProvider","computeDeps","IDENT","EMPTY","useNew","provide","USE_VALUE$1","staticError","multiProviderMixError","recursivelyProcessProviders","records","MULTI_PROVIDER_FN","record","tryResolveToken","notFoundValue","resolveToken","NG_TEMP_TOKEN_PATH","CIRCULAR","NO_NEW_LINE","depRecords","depRecord","childRecord","NULL_INJECTOR","Injector","THROW_IF_NOT_FOUND","providerDeps","annotations","Optional","SkipSelf","Self","Inject$1","formatError","charAt","JSON","NEW_LINE","getDebugContext","ERROR_DEBUG_CONTEXT","getOriginalError","ERROR_ORIGINAL_ERROR","getErrorLogger","ERROR_LOGGER","defaultErrorLogger","wrappedError","originalError","findFirstClosedCycle","constructResolvingPath","injectionError","injector","constructResolvingMessage","errMsg","addKey","injectors","noProviderError","cyclicDependencyError","instantiationError","originalException","originalStack","first","invalidProviderError","noAnnotationError","typeOrFunc","signature","ii","parameter","outOfBoundsError","mixingMultiProvidersWithRegularProvidersError","provider1","provider2","isType","convertTsickleDecoratorIntoMetadata","decoratorInvocations","decoratorInvocation","decoratorType","annotationArgs","getParentCtor","parentProto","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","ReflectiveDependency","fromKey","ReflectiveKey","constructDependencies","_EMPTY_LIST","ResolvedReflectiveFactory","resolveReflectiveProvider","ResolvedReflectiveProvider_","resolveReflectiveProviders","normalized","_normalizeProviders","resolved","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","resolvedFactories","Type$1$1","params_1","t","_extractToken","optional","_createDependency","visibility","paramMetadata","InjectionToken","_mapProviders","_providers","getProviderAtIndex","isPromise$1","_appIdRandomProviderFactory","_randomChar","floor","random","_throwError","noComponentFactoryError","ERROR_COMPONENT","createScope","events","leave","scope","returnValue","trace","leaveScope","noopScope","arg0","arg1","checkStable","zone","_nesting","hasPendingMicrotasks","isStable","onMicrotaskEmpty","emit","runOutsideAngular","onStable","forkInnerZoneWithAngularBehavior","_inner","fork","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","hasPendingMacrotasks","macroTask","onHandleError","handleError","onError","onUnstable","isDevMode","_runModeLocked","_devMode","createPlatform","_platform","destroyed","ALLOW_MULTIPLE_PLATFORMS","PlatformRef","inits","PLATFORM_INITIALIZER","init","assertPlatform","requiredToken","platform","getPlatform","getNgZone","ngZoneOption","NoopNgZone","NgZone","enableLongStackTrace","_callAndReportToErrorHandler","errorHandler","ngZone","catch","optionsReducer","dst","objs","remove","splice","flatten$2","_queryElementChildren","predicate","matches","childNodes","DebugElement","_queryNodeChildren","parentNode","getDebugNode","nativeNode","_nativeNodeToDebugNode","indexDebugNode","removeDebugNodeFromIndex","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","isAObject","isBObject","isJsObject","comparator","iterator1","iterator2","item1","item2","iterateListLike","getPreviousIndex","addRemoveOffset","moveOffsets","previousIndex","moveOffset","getTypeNameForDebugging","_iterableDiffersFactory","defaultIterableDiffers","_keyValueDiffersFactory","defaultKeyValueDiffers","_localeFactory","locale","asTextData","view","asElementData","asProviderData","asPureExpressionData","asQueryList","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","viewWrappedDebugError","_addDebugContext","logError","isViewDebugError","viewDestroyedError","tokenKey","_tokenKeyCache","size","checkBinding","def","oldValues","state","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","Services","createDebugContext","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","eventName","event","componentView","handleEvent","declaredViewContainer","viewParentEl","renderNode","renderElement","renderText","elementEventFullName$1","isComponentView","isEmbeddedView","splitDepsDsl","sourceName","SOURCE","getParentRenderElement","renderHost","renderParent","componentRendererType","encapsulation","ViewEncapsulation$1","Native","resolveDefinition","DEFINITION_CACHE","NOOP","rootRenderNodes","renderNodes","visitRootRenderNodes","nextSibling","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostView","hostElDef","projectedNodes","projectableNodes","execRenderNodeAction","rn","bindingFlags","embeddedViews","_embeddedViews","appendChild","insertBefore","removeChild","splitNamespace","NS_PREFIX_RE","createElement","elDef","rootSelectorOrNode","selectorOrNode","ns","createComment","parentEl","selectRootElement","name_2","setAttribute","listenToElementOutputs","outputs","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","outputIndex","checkAndUpdateElementInline","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","bindLen","bindings","changed","checkAndUpdateElementValue","checkAndUpdateElementDynamic","binding","elData","renderNode$$1","setElementAttribute","setElementClass","setElementStyle","setElementProperty","renderValue","sanitizer","sanitize","removeAttribute","addClass","removeClass","SecurityContext$1","setStyle","removeStyle","setProperty","initNgModule","data","_def","provDef","_createProviderInstance$1","resolveNgModuleDep","_parent","tokenKey$$1","InjectorRefTokenKey$1","NgModuleRefTokenKey","providersByKey","providerInstance","UNDEFINED_VALUE","injectable","_createClass","_callFactory","depValues","callNgModuleLifecycle","lifecycles","instance","ngOnDestroy","attachEmbeddedView","parentView","elementData","viewIndex","addToArray","attachProjectedView","dirtyParentQueries","renderAttachEmbeddedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","viewDef","nodeFlags","parentNodeDef","childFlags","detachEmbeddedView","removeFromArray","renderDetachView","detachProjectedView","moveEmbeddedView","oldViewIndex","newViewIndex","prevView","prevRenderNode","createViewContainerData","ViewContainerRef_","createChangeDetectorRef","ViewRef_","createTemplateData","TemplateRef_","createInjector","Injector_","createRendererV1","RendererAdapter","createNgModuleRef","moduleType","bootstrapComponents","NgModuleRef_","createProviderInstance","_createProviderInstance","createPipeInstance","createClass","createDirectiveInstance","allowPrivateServices","subscription","eventHandlerClosure","unsubscribe","checkAndUpdateDirectiveInline","providerData","changes","updateProp","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdateDirectiveDynamic","callFactory","resolveDep","startView","ChangeDetectorRefTokenKey","RendererV1TokenKey","findCompView","Renderer2TokenKey","ElementRefTokenKey","ElementRef","ViewContainerRefTokenKey","viewContainer","TemplateRefTokenKey","InjectorRefTokenKey","providerDef_1","allProviders","publicProviders","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","WrappedValue","wrapped","SimpleChange","callLifecycleHooksChildrenFirst","parent_1","callProviderLifecycles","directChildFlags","callElementProvidersLifecycles","setCurrentNode","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","createQuery","QueryList","nodeMatchedQueries","tplDef","filterId","setDirty","checkAndUpdateQuery","queryList","dirty","directiveInstance","newValues","elementDef","calcQueryValues","reset","notify","boundValue","bindingType","notifyOnChanges","queryDef","valueType","matchedQueries","getQueryValue","childMatchedQueries","embeddedView","dvc","projectedView","queryValueType","appendNgContent","createPureExpression","checkAndUpdatePureExpressionInline","checkAndUpdatePureExpressionDynamic","createText","checkAndUpdateTextInline","_addInterpolationPart","checkAndUpdateTextDynamic","createEmbeddedView","anchorDef$$1","createView","initView","createViewNodes","createRootView","createComponentView","hostElement","compRenderer","rendererType","rendererFactory","createRenderer","componentProvider","disposables","outputCount","bindingCount","hostDef","nodeData","compViewDef","execComponentViewsAction","ViewAction","CreateViewNodes","execQueriesAction","checkNoChangesView","markProjectedViewsForCheck","updateDirectives","execEmbeddedViewsAction","CheckNoChanges","updateRenderer","checkAndUpdateView","CheckAndUpdate","checkAndUpdateNode","argStyle","checkAndUpdateNodeInline","checkAndUpdateNodeDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","destroyView","Destroy","destroyNode","destroyViewNodes","destroy","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","nodeCount","initServicesIfNeeded","initialized","services","createDebugServices","createProdServices","overrideProvider","clearProviderOverrides","createProdRootView","DebugContext_","prodCheckAndUpdateNode","prodCheckNoChangesNode","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugClearProviderOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","elInjector","createRootData","RendererFactory2","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","Sanitizer","ErrorHandler","anchorDef","viewDef$$1","parentInjector","applyProviderOverridesToNgModule","override","providerOverrides","clear","elementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","elIndex","hasOverrides","hasDeprecatedOverrides","deprecatedBehavior","checkIndex","detectChanges","checkNoChanges","_currentView","_currentNodeIndex","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextDirectiveWithBinding","_currentAction","debugCheckRenderNodeFn","nextRenderNodeWithBinding","givenValues","bindingValues","normalizeDebugBindingName","normalizeDebugBindingValue","camelCaseToDashCase","CAMEL_CASE_REGEXP","getRenderNodeIndex","renderNodeIndex","findHostElement","collectReferences","references","refName","self","oldAction","oldView","oldNodeIndex","getCurrentDebugContext","isParseSourceSpan","spanOf","inSpan","exclusive","offsetSpan","amount","isNarrower","spanA","spanB","hasTemplateReference","diDep","getSelectors","info","flatten","removeSuffix","uniqueByName","elements","elements_1","diagnosticInfoFromTemplateInfo","members","htmlAst","templateAst","findTemplateAstAt","allowWidening","visitEmbeddedTemplate","visitChildren","visitElement","inputs","visitDirective","RecursiveTemplateAstVisitor","findAstAt","excludeEmpty","NullAstVisitor","getExpressionCompletions","getType","language_services_4","tail","getPipes","receiverType","getBuiltinType","language_services_7","Any","getExpressionSymbol","compose","indexes","indexes_1","group","groups","name_1","attributeNames","defaultAttributes","eventNames","SchemaInformation","eventsOf","propertyNames","propertiesOf","getTemplateCompletions","templateInfo","templatePosition_1","path_1","mostSpecific","elementCompletions","astPosition_1","startTagSpan","tagLen","attributeCompletions","visitAttribute","valueSpan","attributeValueCompletions","visitText","entityCompletions","getSourceText","interpolationCompletions","contentType","TagContentType","PARSABLE_DATA","voidElementAttributeCompletions","visitComment","visitExpansion","visitExpansionCase","parentOf","attributeCompletionsForElement","getAttributeInfosForElement","fromHtml","nameOfAttr","htmlAttributes","htmlProperties","htmlEvents","selectorMap","applicableSelectors","selectorAndAttributeNames","attrs_1","selectorAndAttr","elementSelector","createElementCssSelector","SelectorMatcher","addSelectables","foldAttrs","expandedAttr","dinfo","ExpressionVisitor","language_services_2","widerPath_1","widerVisitor","htmlNames","hiddenHtmlElements","directiveElements","components","found","re","exec","NAMED_ENTITIES","templatePath","templateAttr","inputOutput","templates","duplicate","cloneAttr","lowerName","locateSymbol","templatePosition","symbol_1","span_1","attributeValueSymbol_1","inEvent","attribute","findAttribute","expressionOffset","visitNgContent","getTypeSymbol","OverrideKindSymbol","visitReference","visitVariable","visitEvent","handler","findOutputBinding","visitElementProperty","visitAttr","visitBoundText","expressionPosition","visitDirectiveProperty","findInputBinding","invertedInput","invertMap","fieldName","templateName","classSymbol","invertedOutputs","getDefinition","definition","getTemplateDiagnostics","astProvider","results","templates_1","getTemplateAst","DiagnosticKind","expressionDiagnostics","language_services_3","getDeclarationDiagnostics","declarations","declarations_1","declaration","report","declarationSpan","templateUrl","getHover","hoverTextOf","language","container","createLanguageService","LanguageServiceImpl","removeMissing","uniqueBySpan","findSuitableDefaultModule","resultSize","module_1","moduleSize","createLanguageServiceFromTypescript","service","ngHost","TypeScriptServiceHost","ngServer","setSite","findTsConfig","dirname","existsSync","candidate","parentDir","spanOf$1","getStart","getEnd","shrink","spanAt","position_1","getPositionOfLineAndCharacter","findChild","SyntaxKind","LastToken","forEachChild","getExternalFiles","projectHostMap","getTemplateReferences","angularOnlyFilter","ls","cleanupSemanticCache","getSyntacticDiagnostics","getSemanticDiagnostics","getCompilerOptionsDiagnostics","getSyntacticClassifications","getSemanticClassifications","getEncodedSyntacticClassifications","getEncodedSemanticClassifications","getCompletionsAtPosition","getCompletionEntryDetails","entryName","getCompletionEntrySymbol","getQuickInfoAtPosition","getNameOrDottedNameSpan","startPos","endPos","getBreakpointStatementAtPosition","getSignatureHelpItems","getRenameInfo","findRenameLocations","findInStrings","findInComments","getDefinitionAtPosition","getTypeDefinitionAtPosition","getImplementationAtPosition","getReferencesAtPosition","findReferences","getDocumentHighlights","filesToSearch","getOccurrencesAtPosition","getNavigateToItems","searchValue","getNavigationBarItems","getNavigationTree","getOutliningSpans","getTodoComments","descriptors","getBraceMatchingAtPosition","getIndentationAtPosition","getFormattingEditsForRange","getFormattingEditsForDocument","getFormattingEditsAfterKeystroke","getDocCommentTemplateAtPosition","isValidBraceCompletionAtPosition","openingBrace","getCodeFixesAtPosition","errorCodes","getEmitOutput","getProgram","dispose","getApplicableRefactors","positionOrRaneg","getEditsForRefactor","formatOptions","positionOrRange","refactorName","actionName","tryCall","oldLS","getSourceFile","tryFilenameCall","tryFilenameOneCall","tryFilenameTwoCall","p1","p2","tryFilenameThreeCall","p3","tryFilenameFourCall","p4","completionToEntry","sortText","kindModifiers","diagnosticToDiagnostic","messageText","category","DiagnosticCategory","tryOperation","attempting","projectService","logger","proxy","languageService","angularOnlyResults","maxResultCount","excludeDtsFiles","serviceHost","languageServiceHost","isGlobalCompletion","isMemberCompletion","isNewIdentifierLocation","entries","getCompletionsAt","results_1","ours","getHoverAt","displayParts","tags","documentation","textSpan","getDiagnostics","file_1","getDefinitionAt","ours_1","loc","containerName","containerKind","fs__default","path__default","ts__default","setPrototypeOf","__proto__","createInject","createInjectionToken","desc","_desc","createAttribute","attributeName","createContentChildren","isViewQuery","descendants","createContentChild","createViewChildren","createViewChild","None","ChangeDetectionStrategy","OnPush","Default","changeDetection","createPipe","pure","createInput","bindingPropertyName","createOutput","createHostBinding","hostPropertyName","createHostListener","createNgModule","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createOptional","createInjectable","createSelf","createSkipSelf","createHost","HTML","URL","RESOURCE_URL","NodeFlags","TypeElement","TypeText","ProjectedTemplate","CatRenderNode","TypeNgContent","TypePipe","TypePureArray","TypePureObject","TypePurePipe","CatPureExpression","TypeValueProvider","TypeClassProvider","TypeFactoryProvider","TypeUseExistingProvider","LazyProvider","PrivateProvider","TypeDirective","CatProviderNoDirective","CatProvider","EmbeddedViews","ComponentView","TypeContentQuery","TypeViewQuery","StaticQuery","DynamicQuery","CatQuery","Types","DepFlags","Value","ArgumentType","Inline","Dynamic","BindingFlags","TypeElementAttribute","TypeElementClass","TypeElementStyle","TypeProperty","SyntheticProperty","SyntheticHostProperty","CatSyntheticProperty","QueryBindingType","First","All","QueryValueType","RenderElement","TemplateRef","ViewContainerRef","Provider","ViewFlags","MissingTranslationStrategy","Warning","Ignore","core","freeze","ValueTransformer","SyncAsync","assertSync","all","syncAsyncValues","Promise","Version","full","splits","major","minor","patch","VERSION$1","TextAst","BoundTextAst","AttrAst","BoundElementPropertyAst","BoundEventAst","calcFullName","ReferenceAst","VariableAst","variables","BoundDirectivePropertyAst","directiveName","DirectiveAst","hostProperties","hostEvents","Builtin","NullTemplateVisitor","jitDevMode","_f","assertNoMembers","cache","declarationFile","memberSuffix","HOST_REG_EXP","CompileSummaryKind","Injectable","CompileStylesheetMetadata","styles","styleUrls","CompileTemplateMetadata","externalStylesheets","animations","ngContentSelectors","interpolation","toSummary","CompileDirectiveMetadata","isHost","hostListeners","componentViewType","inputsMap","bindConfig","outputsMap","summaryKind","CompilePipeMetadata","CompileNgModuleMetadata","exportedDirectives","exportedPipes","importedModules","exportedModules","schemas","TransitiveCompileNgModuleMetadata","directivesSet","exportedDirectivesSet","pipesSet","exportedPipesSet","modulesSet","entryComponentsSet","addProvider","addDirective","addExportedDirective","addPipe","addExportedPipe","addModule","addEntryComponent","ec","componentType","ProviderMeta","childOf","Expansion","ExpansionCase","expSourceSpan","startSourceSpan","InterpolationConfig","fromArray","markers","style","RAW_TEXT","ESCAPABLE_RAW_TEXT","Aacute","aacute","Acirc","acirc","acute","AElig","aelig","Agrave","agrave","alefsym","Alpha","alpha","amp","and","ang","apos","Aring","aring","asymp","Atilde","atilde","Auml","auml","bdquo","Beta","beta","brvbar","bull","cap","Ccedil","ccedil","cedil","cent","Chi","chi","circ","clubs","cong","copy","crarr","cup","curren","dagger","Dagger","darr","dArr","deg","Delta","delta","diams","divide","Eacute","eacute","Ecirc","ecirc","Egrave","egrave","emsp","ensp","Epsilon","epsilon","equiv","Eta","eta","ETH","eth","Euml","euml","euro","exist","fnof","forall","frac12","frac14","frac34","frasl","Gamma","gamma","ge","gt","harr","hArr","hearts","hellip","Iacute","iacute","Icirc","icirc","iexcl","Igrave","igrave","image","infin","int","Iota","iota","iquest","isin","Iuml","iuml","Kappa","kappa","Lambda","lambda","lang","laquo","larr","lArr","lceil","ldquo","le","lfloor","lowast","loz","lrm","lsaquo","lsquo","lt","macr","mdash","micro","middot","minus","Mu","mu","nabla","nbsp","ndash","ne","ni","notin","nsub","Ntilde","ntilde","Nu","nu","Oacute","oacute","Ocirc","ocirc","OElig","oelig","Ograve","ograve","oline","Omega","omega","Omicron","omicron","oplus","or","ordf","ordm","Oslash","oslash","Otilde","otilde","otimes","Ouml","ouml","para","permil","perp","Phi","phi","Pi","pi","piv","plusmn","pound","prime","Prime","prod","Psi","psi","quot","radic","rang","raquo","rarr","rArr","rceil","rdquo","real","reg","rfloor","Rho","rho","rlm","rsaquo","rsquo","sbquo","Scaron","scaron","sdot","sect","shy","Sigma","sigma","sigmaf","sim","spades","sub","sube","sup","sup1","sup2","sup3","supe","szlig","Tau","tau","there4","Theta","theta","thetasym","thinsp","THORN","thorn","tilde","times","trade","Uacute","uacute","uarr","uArr","Ucirc","ucirc","Ugrave","ugrave","uml","upsih","Upsilon","upsilon","Uuml","uuml","weierp","Xi","xi","Yacute","yacute","yen","yuml","Yuml","Zeta","zeta","zwj","zwnj","_resourceLoader","_urlResolver","_htmlParser","_config","_resourceLoaderCache","clearCache","clearCacheFor","normalizedDirective","stylesheet","_fetch","normalizeTemplate","prenormData","_preParseTemplate","preparsedTemplate","_normalizeTemplateMetadata","prenomData","_preparseLoadedTemplate","templateAbsUrl","rootNodesAndErrors","templateMetadataStyles","_normalizeStylesheet","TemplatePreparseVisitor","templateStyles","inlineStyleUrls","_loadMissingExternalStylesheets","_normalizeLoadedTemplateMetadata","stylesheets","_inlineStyles","styleUrl","targetStyles","loadedStylesheets","loadedStyle","allStyleUrls","allStyles","styleWithImports","ngNonBindableStackCount","preparsedElement","textContent_1","QUERY_METADATA_IDENTIFIERS","_reflector","typeMetadata","throwIfNotFound","propertyMetadata","propMetadata","_mergeWithPropertyMetadata","dm","directiveType","hostBinding","startWith","hostListener","_merge","_extractPublicName","_dedupeBindings","names","reversedResult","mergedInputs","mergedOutputs","mergedHost","mergedQueries","comp","moduleId","KEYWORDS","tokens","scanToken","numValue","strValue","isCharacter","isNumber","isString","isOperator","operater","isKeyword","isKeywordLet","isKeywordAs","isKeywordNull","isKeywordUndefined","isKeywordTrue","isKeywordFalse","isKeywordThis","isError","toNumber","EOF","scanIdentifier","scanNumber","scanCharacter","scanString","scanOperator","scanComplexOperator","one","twoCode","two","threeCode","three","simple","parseFloat","quote","buffer","marker","unescapedCode","ParserError","errLocation","ctxLocation","ParseSpan","AST","Quote","uninterpretedExpression","location","ImplicitReceiver","Chain","Conditional","PropertyRead","PropertyWrite","SafePropertyRead","KeyedRead","KeyedWrite","BindingPipe","LiteralPrimitive","LiteralArray","LiteralMap","Interpolation","strings","Binary","operation","PrefixNot","NonNullAssert","MethodCall","SafeMethodCall","FunctionCall","TemplateBinding","keyIsVar","RecursiveAstVisitor","AstTransformer","SplitInterpolation","offsets","TemplateBindingParseResult","templateBindings","_lexer","parseAction","_checkNoInterpolation","sourceToLex","_stripComments","_ParseAST","parseChain","parseBinding","_parseBindingAst","parseSimpleBinding","SimpleExpressionChecker","check","_reportError","_parseQuote","prefixSeparatorIndex","parseTemplateBindings","prefixToken","prefixTokens","parseInterpolation","splitInterpolation","expressionText","_findInterpolationErrorColumn","wrapLiteralPrimitive","_commentStart","outerQuote","char","nextChar","partInErrIdx","inputLength","rparensExpected","rbracketsExpected","rbracesExpected","inputIndex","optionalCharacter","peekKeywordLet","peekKeywordAs","expectCharacter","optionalOperator","op","expectOperator","operator","expectIdentifierOrKeyword","expectIdentifierOrKeywordOrString","parsePipe","parseExpression","parseConditional","parseLogicalOr","yes","no","parseLogicalAnd","parseEquality","parseRelational","parseAdditive","parseMultiplicative","parsePrefix","parseCallChain","parsePrimary","parseAccessMemberOrMethodCall","parseCallArguments","parseExpressionList","parseLiteralMap","literalValue","terminator","isSafe","positionals","expectTemplateBindingKey","operatorFound","rawKey","letStart","letName","locationText","skip","col","moveBy","ch","priorLine","getContext","maxChars","maxLines","startOffset","endOffset","ctxChars","ctxLines","before","after","details","ParseErrorLevel","WARNING","ERROR","ParseError","level","contextualMessage","TAG_OPEN_START","TAG_OPEN_END","TAG_OPEN_END_VOID","TAG_CLOSE","COMMENT_START","COMMENT_END","CDATA_START","CDATA_END","ATTR_NAME","ATTR_VALUE","DOC_TYPE","EXPANSION_FORM_START","EXPANSION_CASE_VALUE","EXPANSION_CASE_EXP_START","EXPANSION_CASE_EXP_END","EXPANSION_FORM_END","Token$1","TokenError","errorMsg","tokenType","TokenizeResult","_CR_OR_CRLF_REGEXP","_ControlFlowError","_file","_getTagDefinition","_tokenizeIcu","_interpolationConfig","_peek","_nextPeek","_index","_line","_column","_expansionCaseStack","_inInterpolation","_input","_length","_advance","_processCarriageReturns","_getLocation","_attemptCharCode","_consumeCdata","_consumeComment","_consumeDocType","_consumeTagClose","_consumeTagOpen","_tokenizeExpansionForm","_consumeText","_beginToken","_endToken","_consumeExpansionFormStart","_isInExpansionForm","_consumeExpansionCaseStart","_isInExpansionCase","_consumeExpansionCaseEnd","_consumeExpansionFormEnd","_getSpan","_currentTokenStart","_currentTokenType","_createError","_attemptCharCodeCaseInsensitive","_requireCharCode","_attemptStr","chars","initialPosition","_savePosition","_restorePosition","_attemptStrCaseInsensitive","_requireStr","_attemptCharCodeUntilFn","_requireCharCodeUntilFn","_attemptUntilChar","_readChar","decodeEntities","_decodeEntity","startPosition","isHex","numberStart","strNum","entity","_consumeRawText","firstCharOfEnd","attemptEndRest","tagCloseStart","textStart","textToken","_consumePrefixAndName","nameOrPrefixStart","nameStart","lowercaseTagName","savedPos","_consumeTagOpenStart","_consumeAttributeName","_consumeAttributeValue","_consumeTagOpenEnd","contentTokenType","_consumeRawTextWithTagClose","prefixAndName","quoteChar","valueStart","_readUntil","_isTextEnd","nbTokens","TreeError","Parser$1","parseExpansionForms","tokensAndErrors","treeAndErrors","_TreeBuilder","build","_rootNodes","_errors","_elementStack","_consumeStartTag","_consumeEndTag","_closeVoidElement","_consumeExpansion","_advanceIf","startToken","_addToParent","expCase","_parseExpansionCase","_collectExpansionExpTokens","parsedExp","expansionFormStack","_getParentElement","ignoreFirstLf","isVoid","startTagToken","_consumeAttr","_getElementFullName","selfClosing","tagDef","canSelfClose","_pushElement","_popElement","isClosedByChild","_getParentElementSkippingContainers","requireExtraParent","newParent","parentToAdd","_insertBeforeContainer","endTagToken","stackIndex","closedByParent","valueToken","parentElement","_SerializerVisitor","visitContainer","visitIcu","icu","strCases","visitTagPlaceholder","ph","startName","closeName","visitPlaceholder","visitIcuPlaceholder","Message","placeholders","placeholderToMessage","sources","startLine","startCol","endLine","endCol","Text$1","Container","Icu","TagPlaceholder","Placeholder","IcuPlaceholder","CloneVisitor","expressionPlaceholder","RecurseVisitor","HtmlTagDefinition","closedByChildren","requiredParents","implicitNamespacePrefix","currentParent","lcParent","area","embed","link","img","hr","br","track","wbr","thead","tbody","tfoot","tr","td","th","svg","math","li","dt","dd","rb","rt","rtc","rp","optgroup","option","pre","listing","script","title","textarea","TAG_TO_PLACEHOLDER_NAMES","A","B","BR","EM","H1","H2","H3","H4","H5","H6","HR","I","LI","LINK","OL","P","Q","S","SMALL","SUB","SUP","TBODY","TD","TFOOT","TH","THEAD","TR","TT","U","UL","PlaceholderRegistry","_placeHolderNameCounts","_signatureToName","getStartTagPlaceholderName","_hashTag","upperTag","baseName","_generateUniqueName","getCloseTagPlaceholderName","_hashClosingTag","getPlaceholderName","upperName","uniqueName","getUniquePlaceholder","_expressionParser","_isIcu","_icuDepth","_placeholderRegistry","_placeholderToContent","_placeholderToMessage","i18nodes","startPhName","closePhName","_visitTextWithInterpolation","comment","i18nIcuCases","i18nIcu","caze","expPh","phName","icuCase","sDelimiter","eDelimiter","lastStringIdx","I18nError","_I18N_COMMENT_PREFIX_REGEXP","i18nCommentsWarned","ExtractionResult","_VisitorMode","Extract","Merge","_implicitTags","_implicitAttrs","_init","_inI18nBlock","_messages","_translations","wrapper","translatedNode","_mode","_mayBeAddBlockChildren","wasInIcu","_inIcu","_isInTranslatableSection","_addMessage","isOpening","isClosing","_inI18nNode","_depth","_blockStartDepth","_closeTranslatableSection","_blockChildren","_blockMeaningAndDesc","_translateMessage","warn","_openTranslatableSection","wasInI18nNode","wasInImplicitNode","_inImplicitNode","translatedChildNodes","i18nAttr","i18nMeta","isImplicit","isTopLevelImplicit","isTranslatable","visited","_visitAttributesOf","translatedAttrs","_translateAttributes","_msgCountAtSectionStart","_createI18nMessage","explicitAttrNameToValue","implicitAttrNames","msgMeta","i18nParsedMessageMeta","translatedAttributes","directChildren","XmlTagDefinition","XmlParser","Serializer","createNameMapper","SimplePlaceholderMapper","mapName","internalToPublic","publicToNextId","publicToInternal","toInternalName","publicName","visitPlaceholderName","nextId","_Visitor$1","visitTag","strAttrs","_serializeAttributes","strChildren","visitDeclaration","decl","visitDoctype","doctype","rootTag","dtd","Declaration","unescapedAttrs","Doctype","Tag","Text$2","unescapedValue","CR","ws","write","_WriteVisitor","transUnits","contextTags","contextGroupTag","purpose","context-type","transUnit","datatype","priority","source-language","original","xliff","version","xmlns","encoding","load","xliffParser","XliffParser","msgIdToHtml","i18nNodesByMsgId","XmlToI18n","msgId","convert","i18nNodes","ctype","equiv-text","startTagPh","closeTagPh","equivText","_locale","_unitMlString","_msgIdToHtml","xml","idAttr","_addError","innerTextStart","innerTextEnd","innerText","localeAttr","expansion","expansionCase","xmlIcu","nameAttr","caseMap","_WriteVisitor$1","units","notes","srcLang","xliff2Parser","Xliff2Parser","XmlToI18n$1","_nextPlaceholderId","disp","tagPc","equivStart","equivEnd","dispStart","dispEnd","idStr","versionAttr","startAttr","endAttr","startId","endId","exampleVisitor","ExampleVisitor","_Visitor$2","rootNode","sourceTags","addDefaultExamples","startEx","closeEx","exTag","exText","xtbParser","XtbParser","XmlToI18n$2","xtb","_bundleDepth","langAttr","TranslationBundle","_i18nNodesByMsgId","mapperFactory","missingTranslationStrategy","_i18nToHtml","I18nToHtmlVisitor","serializer","srcMsg","html","_digest","_mapperFactory","_missingTranslationStrategy","_console","_contextStack","_convertToText","_srcMsg","_mapper","mapper","translationsFormat","_translationBundle","parseResult","CORE","ANALYZE_FOR_ENTRY_COMPONENTS","ChangeDetectorRef","ComponentRef","NgModuleFactory","createModuleFactory","moduleDef","moduleProviderDef","RegisterModuleFactoryFn","LOCALE_ID","TRANSLATIONS_FORMAT","inlineInterpolate","interpolate","EMPTY_ARRAY","EMPTY_MAP","Renderer","textDef","directiveDef","pureArrayDef","pureObjectDef","purePipeDef","pipeDef","nodeValue","ngContentDef","createRendererType2","RendererType2","ViewDefinition","createComponentFactory","_SELECTOR_REGEXP","classNames","_addResult","cssSel","inNot","hasElementSelector","getMatchingElementTemplate","classAttr","klass","notSelector","_elementMap","_elementPartialMap","_classMap","_classPartialMap","_attrValueMap","_attrValuePartialMap","_listContexts","createNotMatcher","notMatcher","cssSelectors","callbackCtxt","listContext","SelectorListContext","_addSelectable","selectable","SelectorContext","isTerminal","_addTerminal","_addPartial","terminalMap","terminalValuesMap","partialMap","partialValuesMap","terminalList","matchedCallback","alreadyMatched","_matchTerminal","_matchPartial","name_3","selectables","starSelectables","finalize","nestedSelector","cbContext","_ngModuleResolver","_directiveResolver","_pipeResolver","_summaryResolver","_schemaRegistry","_directiveNormalizer","_staticSymbolCache","_errorCollector","_nonNormalizedDirectiveCache","_directiveCache","_summaryCache","_pipeCache","_ngModuleCache","_ngModuleOfTypes","getReflector","dirMeta","_createProxyClass","baseType","proxyClass","setDelegate","getGeneratedClass","dirType","getComponentViewClass","getHostComponentViewClass","getHostComponentType","HostClass","getRendererType","getComponentFactory","initComponentFactory","_loadSummary","typeSummary","resolveSummary","getHostComponentMetadata","hostViewType","hostType","loadDirectiveMetadata","isSync","getNonNormalizedDirectiveMetadata","createDirectiveMetadata","templateMetadata","normalizedDirMeta","componentModuleUrl","cacheEntry","nonNormalizedTemplateMetadata","changeDetectionStrategy","entryComponentMetadata","_getProvidersMetadata","_getEntryComponentMetadata","getDefaultComponentElementName","_getQueriesMetadata","_getTypeMetadata","getDirectiveMetadata","getDirectiveSummary","dirSummary","isNgModule","getNgModuleSummary","moduleSummary","loadNgModuleDirectiveAndPipeMetadata","loading","promise","_loadPipeMetadata","compileMeta","exportedNonModuleIdentifiers","imports","importedType","importedModuleType","moduleWithProviders","_checkSelfImport","importedModuleSummary","_getTypeDescriptor","exportedType","exportedModuleSummary","_getIdentifierMetadata","_getTransitiveNgModuleMetadata","declaredType","declaredIdentifier","_addTypeToModule","exportedId","bootstrap","oldModule","modulesByToken","modSummary","mod","addedTokens","tokenRef","prevModules","moduleRef","ann","getInjectableSummary","_getInjectableMetadata","throwOnUnknownDeps","_getDependenciesMetadata","_getFactoryMetadata","getPipeMetadata","pipeType","pipeMeta","getPipeSummary","pipeSummary","getOrLoadPipeMetadata","pipeAnnotation","hasUnknownDeps","dependenciesMetadata","isSelf","paramEntry","_getTokenMetadata","depsTokens","targetEntryComponents","debugInfo","compileProviders","providerIdx","_validateProvider","providersInfo","soFar","seenProvider","seenProviderIdx","_getEntryComponentsFromProvider","getProviderMetadata","collectedIdentifiers","compileDeps","compileTypeMetadata","compileFactoryMetadata","propertyName","_getQueryMetadata","_queryVarBindings","q","varName","read","otherType","TypeModifier","Const","modifiers","hasModifier","modifier","BuiltinTypeName","Bool","Int","Inferred","BuiltinType","visitBuiltintType","visitExpressionType","of","visitArrayType","MapType","visitMapType","BOOL_TYPE","BinaryOperator","Equals","NotEquals","Identical","NotIdentical","Minus","Plus","Divide","Multiply","Modulo","And","Or","Lower","LowerEquals","Bigger","BiggerEquals","ReadPropExpr","ReadKeyExpr","callMethod","InvokeMethodExpr","InvokeFunctionExpr","InstantiateExpr","conditional","trueCase","falseCase","ConditionalExpr","equals","rhs","BinaryOperatorExpr","notEquals","identical","plus","multiply","modulo","lower","lowerEquals","bigger","biggerEquals","isBlank","TYPED_NULL_EXPR","CastExpr","BuiltinVar","This","Super","CatchError","CatchStack","builtin","visitReadVarExpr","WriteVarExpr","visitWriteVarExpr","WriteKeyExpr","visitWriteKeyExpr","WritePropExpr","visitWritePropExpr","BuiltinMethod","ConcatArray","SubscribeObservable","Bind","visitInvokeMethodExpr","visitInvokeFunctionExpr","classExpr","visitInstantiateExpr","visitLiteralExpr","visitExternalExpr","ExternalReference","visitConditionalExpr","visitNotExpr","visitAssertNotNullExpr","visitCastExpr","visitFunctionExpr","DeclareFunctionStmt","lhs","visitBinaryOperatorExpr","visitReadPropExpr","visitReadKeyExpr","visitLiteralArrayExpr","visitLiteralMapExpr","CommaExpr","visitCommaExpr","Private","visitDeclareVarStmt","visitDeclareFunctionStmt","visitExpressionStmt","visitReturnStmt","AbstractClassPart","ClassMethod","ClassField","ClassGetter","ClassStmt","visitDeclareClassStmt","IfStmt","visitIfStmt","CommentStmt","visitCommentStmt","TryCatchStmt","bodyStmts","catchStmts","visitTryCatchStmt","ThrowStmt","visitThrowStmt","AstTransformer$1","transformExpr","transformStmt","visitAllExpressions","mapType","ctorMethod","RecursiveAstVisitor$1","_clone","clone","ProviderViewContext","ProviderElementContext","viewContext","_isViewRoot","_directiveAsts","refs","_sourceSpan","_transformedProviders","_seenProviders","_queriedTokens","transformedHasViewContainer","_attrs","directivesMeta","directiveAst","_allProviders","_contentQueries","_addQueryReadsTo","templateRefId","refAst","defaultQueryValue","_getOrCreateLocalProvider","afterElement","lazyProviders","eagerProviders","sortedProviderTypes","transformProviders","sortedDirectives","dir1","dir2","allMatches","defaultValue","queryReadTokens","_getQueriesFor","queryValue","currentEl","distance","requestingProviderType","transformedProviderAst","transformedProviders","transformedUseValue","transformedUseExisting","transformedDeps","existingDiDep","_getDependency","_getLocalDependency","currElement","currEager","prevElement","NgModuleProviderAnalyzer","extraProviders","errorString","requestorSourceSpan","foundLocal","quotedSet","NgModuleCompileResult","ngModuleFactoryVar","LOG_VAR","compile","ngModuleMeta","providerParser","providerDefs","ngModuleDef","ngModuleDefFactory","_createNgModuleFactory","registerFactoryStmt","createStub","ngModuleReference","ngModuleFactoryStmt","SourceMapGenerator","sourcesContent","lines","lastCol0","hasMappings","addSource","addLine","addMapping","col0","sourceLine0","sourceCol0","currentLine","toJSON","sourcesIndex","mappings","lastSourceIndex","lastSourceLine0","lastSourceCol0","segAsStr","sourceRoot","CATCH_ERROR_VAR$1","CATCH_STACK_VAR$1","_EmittedLine","indent","partsLength","srcSpans","_indent","_classes","_preambleLineCount","_lines","println","lastPart","print","lineIsEmpty","_currentLine","lineLength","newLine","removeEmptyLastLine","incIndent","decIndent","pushClass","clazz","popClass","sourceLines","startsAtLine","firstOffsetMapped","mapFirstOffsetIfNeeded","lineIdx","spans","spanIdx","sourceLine","sourceCol","setPreambleLineCount","emittedLine","columnsLeft","AbstractEmitterVisitor","_escapeDollarInStrings","hasElseCase","lineWasEmpty","getBuiltinMethodName","opStr","visitAllObjects","separator","incrementedIndent","emitStatementsAndContext","emitSourceMaps","referenceFilter","preambleLines","reexports","exportedModuleName","reexportsCode","reexport","as","importsWithPrefixes","importedModuleName","sm","sourceText","typeExpression","defaultType","_visitIdentifier","_printColonType","_visitClassField","_visitClassConstructor","_visitClassGetter","_visitClassMethod","_visitParams","typeStr","metas","ElementSchemaRegistry","BOOLEAN$1","NUMBER$1","STRING$1","OBJECT$1","SCHEMA$1","_ATTR_TO_PROP","class","for","formaction","innerHtml","readonly","tabindex","_schema","encodedType","strType","strProperties","typeNames","superName","superType","property","hasProperty","schemaMetas","schema","hasElement","getMappedPropName","validateProperty","validateAttribute","normalizeAnimationStyleProperty","normalizeAnimationStyleValue","camelCaseProp","userProvidedProp","strVal","valAndSuffixMatch","ShadowCss","strictStyling","shimCssText","hostSelector","sourceMappingUrl","_insertDirectives","_scopeCssText","_insertPolyfillDirectivesInCssText","_insertPolyfillRulesInCssText","_cssContentNextSelectorRe","_cssContentRuleRe","scopeSelector","unscopedRules","_extractUnscopedRulesFromCssText","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertShadowDOMSelectors","_scopeSelectors","r","_cssContentUnscopedRuleRe","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","_cssColonHostContextRe","_colonHostContextPartReplacer","regExp","partReplacer","_polyfillHostNoCombinator","_polyfillHost","_shadowDOMSelectorsRe","_scopeSelector","strict","_shadowDeepSelectors","deepParts","shallowPart","otherParts","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","lre","rre","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","replaceBy_1","_polyfillHostNoCombinatorRe","hnc","colon","isRe","_scopeSelectorPart","scopedP","safeContent","SafeSelector","scopedSelector","sep","scopeAfter","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","keep","replaceBy","_content","pseudo","_parenSuffix","StylesCompileDependency","CompiledStylesheet","stylesVar","isShimmed","_shadowCss","compileComponent","_compileStyles","needsStyleShim","compileStyles","isComponentStylesheet","styleExpressions","plainStyle","_shimIfNeeded","exprIndex","SKIP_WS_TRIM_TAGS","WS_CHARS","NO_WS_REGEXP","WS_REPLACE_REGEXP","expanded","BoundPropertyType","DEFAULT","LITERAL_ATTR","ANIMATION","BoundProperty","isLiteral","BindingParser","_exprParser","_targetErrors","pipesByName","_usedPipes","getUsedPipes","createDirectiveHostPropertyAsts","boundProps_1","parsePropertyBinding","createElementPropertyAst","createDirectiveHostEventAsts","targetEventAsts_1","parseEvent","sourceInfo","_reportExpressionParserErrors","_checkPipes","parseInlineTemplateBinding","targetMatchableAttrs","targetProps","targetVars","_parseTemplateBindings","_parsePropertyAst","parseLiteralAttr","bindingsResult","warning","_parseAnimation","isAnimationProp","_parseBinding","parsePropertyInterpolation","isHostBinding","boundProp","boundPropertyName","securityContexts","_validatePropertyOrAttributeName","nsSeparatorIdx","targetEvents","_parseAnimationEvent","_parseEvent","_parseAction","errors_1","collector","PipeCollector","pipeName","isAttr","BIND_NAME_REGEXP","TEXT_CSS_SELECTOR","TemplateParseError","TemplateParseResult","usedPipes","transforms","tryParse","htmlParseResult","getInterpolationConfig","tryParseHtml","expandHtml","uniqDirectives","uniqPipes","providerViewContext","bindingParser","parseVisitor","TemplateParseVisitor","EMPTY_ELEMENT_CONTEXT","_assertNoReferenceDuplicationOnTemplate","forced","expandedHtmlAst","existingReferences","_bindingParser","_schemas","selectorMatcher","directivesIndex","ngContentCount","findNgContentIndex","valueNoNgsp","queryStartIndex","matchableAttrs","elementOrDirectiveProps","elementOrDirectiveRefs","elementVars","templateElementOrDirectiveProps","templateMatchableAttrs","templateElementVars","hasInlineTemplates","isTemplateElement","templateBindingsSource","hasBinding","_parseAttr","normalizedName","_normalizeAttributeName","hasTemplateBinding","elementCssSelector","_parseDirectives","directiveMetas","matchElement","boundDirectivePropNames","directiveAsts","_createDirectiveAsts","elementProps","_createElementPropertyAsts","isViewRoot","providerContext","NON_BINDABLE_VISITOR","ElementContext","parsedElement","projectionSelector","every","_assertAllEventsPublishedByDirectives","_assertNoComponentsNorElementBindingsOnTemplate","transformedDirectiveAsts","_assertElementExists","_assertOnlyOneComponent","ngContentIndex_1","templateQueryStartIndex","templateSelector","templateDirectiveMetas","templateBoundDirectivePropNames","templateDirectiveAsts","templateElementProps","templateProviderContext","targetRefs","srcSpan","bindParts","_parseVariable","_parseReference","_parseAssignmentEvent","ElementOrDirectiveRef","elementSourceSpan","targetReferences","targetBoundDirectivePropNames","matchedReferences","directiveProperties","_checkPropertiesInSchema","_createDirectivePropertyAsts","elOrDirRef","isReferenceToDirective","refToken","boundProps","targetBoundDirectiveProps","boundPropsByName_1","dirProp","elProp","boundElementProps","_findComponentDirectives","_findComponentDirectiveNames","componentTypeNames","elName","allDirectiveEvents","NonBindableVisitor","attrNameAndValues","_ngContentIndexMatcher","_wildcardNgContentIndex","wildcardNgContentIndex","ngContentIndices","EventHandlerVars","allowDefault","_converterFactory","BuiltinFunctionCall","_localResolver","_implicitReceiver","_nodeMap","_resultMap","_currentTemporary","_visit","fnResult","convertedArgs","leftMostSafe","leftMostSafeNode","convertSafeAccess","_getLocal","getLocal","varExpr","guardedExpression","temporary","needsTemporary","allocateTemporary","access","releaseTemporary","visitSome","tempNumber","componentId","externalReferenceVars","embeddedViewCount","viewBuilderFactory","embeddedViewIndex","ViewBuilder","isHostComponent","refOutputVars","updates","actions","getOutputVar","targetStatements","viewStmts","preprocessUpdateExpression","nameResolver","viewName","viewFactory","visitElementOrTemplate","fullTemplateTypeCheck","childVisitor","outputVarType","outputAst","hostEventAst","currBuilder","varAst","pipeOutputVar","ViewCompileResult","viewClassVar","rendererTypeVar","renderComponentVarName","template_1","customRenderData","renderComponentVar","ViewBuilder$1","LOG_VAR$1","COMP_VAR","EVENT_NAME_VAR","ALLOW_DEFAULT_VAR","purePipeNodeIndices","refNodeIndices","_createPipe","queryIds_1","queryIndex","_createNodeExpressions","updateRendererStmts","updateDirectivesStmts","nodeDefExprs","updateRendererFn","_createUpdateFn","updateDirectivesFn","viewFlags","updateStmts","updateFn","preStmts","astWithSource","inter","updateRendererExpressions","_preprocessUpdateExpression","_visitElementOrTemplate","queryMatchesExpr","_createElementHandleEventFn","usedEvents","dirHostBindings","hostBindings","inputDefs","outputDefs","compAst","compRendererType","_visitComponentFactoryResolverProvider","dirIndex","localDirAst","_visitDirective","dirHostEvents","_visitProvider","queryMatchExprs","elementNodeIndex","_visitProviderOrDirective","mapValue","updateDirectiveExpressions","dirContextExpr","_addProviderNode","componentDirMeta","providerFlags","currViewExpr","refNodeIndex","varValue","_createLiteralArrayConverter","valueExpr_1","_createLiteralMapConverter","valueExpr_2","_createPipeConverter","checkIndex_1","compViewExpr","compBuilder","pipeNodeIndex","pipeValueExpr_1","nodeValueExpr_1","createUpdateStatements","allowEmptyExprs","updateBindingCount","handlers","handleEventStmts","handleEventBindingCount","trueStmts","eventTarget","fullEventName","handleEventFn","MessageBundle","updateFromTemplate","htmlParserResult","i18nParserResult","getMessages","filterSources","mapperVisitor","MapPlaceholderNames","msgList","src","transformedMessage","GeneratedFile","srcFileUrl","sourceOrStmts","indexBySymbol","reexportedBy","processedSummaryBySymbol","processedSummaries","getKnownModuleName","unprocessedSummary","processedSummary","processValue","metadata_1","clone_1","declarationSymbol","ngModuleSummary","summary_1","importAs","reexportSymbol","__symbol","toSummaryFileName","baseSymbol","visitStaticSymbol","loadSummary","isLibrary","exportAsArr","exportAsBySymbol","exportAsArr_1","ngModuleSymbols","serializeSummaryWithDeps","ngModuleSymbol","jitExportAsName","serializeSummaryRef","serializeSummary","typeSymbol","jitImportedSymbol","Transformer","allImportAs","serializedSymbol","fromSummaryFileName","StubEmitFlags","Basic","TypeCheck","_options","_host","_metadataResolver","_templateParser","_styleCompiler","_viewCompiler","_typeCheckCompiler","_ngModuleCompiler","_outputEmitter","_symbolResolver","_templateAstCache","_analyzedFiles","analyzeModulesSync","rootFiles","analyzeResult","analyzeModulesAsync","_analyzeFile","findGeneratedFileNames","genFileNames","allowEmptyCodegenFiles","enableSummariesForJit","dirSymbol","normalizedUrl","emitBasicStub","genFileName","originalFileName","_createOutputContext","originalFile","_createNgFactoryStub","_codegenSourceModule","emitTypeCheckStub","loadFilesAsync","loadingPromises","loadFilesSync","emitFlags","ngModuleIndex","typeIndex","dirId","_createTypeCheckBlock","_parseTemplate","parsedTemplate","emitMessageBundle","messageBundle","compMetas","emitAllImpls","_compileImplFile","generatedFiles","_createSummary","_compileModule","componentStylesheet","stylesheetMeta","_codegenStyles","_compileComponent","_compileComponentFactory","srcModule","ngFactoryCtx","symbolSummaries","typeData","forJitOutputCtx","summaryJson","normalizedLocale","hostMeta","hostViewFactoryVar","compFactoryVar","inputsExprs","outputsExprs","directiveIdentifiers","componentStyles","stylesExpr","viewResult","arity","getTypeArity","getImportAs","importModule","_fileNameToModuleName","selfReference","suppliedTypeParams","missingTypeParamsCount","allTypeParams","fill","memberName","importedFilePath","containingFilePath","fileNameToModuleName","stylesheetMetadata","compiledStylesheet","entryRoute","visitLazyRoute","seenRoutes","lazyRoutes","lazyRoutes_2","lazyRoute","lazyRoutes_1","ANGULAR_CORE","IGNORE","USE_VALUE","PROVIDE","REFERENCE_SET","knownMetadataClasses","knownMetadataFunctions","errorRecorder","annotationCache","propertyCache","parameterCache","methodCache","conversionMap","annotationForParentClassWithSummaryKind","initializeConversionMap","kc","_registerDecoratorOrConstructor","kf","_registerFunction","staticSymbol","findSymbolDeclaration","getResourcePath","containingFile","refSymbol","getSymbolByModule","recordModuleNameForFileName","recordImportAs","findDeclaration","tryFindDeclaration","ignoreErrorsFor","classMetadata","getTypeMetadata","parentType","findParentType","parentAnnotations","ownAnnotations_1","simplify","requiredAnnotationTypes","requiredType","reportError","parentPropMetadata_1","parentProp","members_1","propData","decorators","parameters_1","ctorData","rawParameterTypes","parameterDecorators_1","rawParamType","nestedResult","paramType","trySimplify","_methodNames","methodNames","parentMethodNames_1","members_2","isMethod","lcProperty","injectionToken","opaqueToken","originalRecorder","simplifyInContext","depth","resolveReferenceValue","simplifyCall","functionSymbol","targetFunction","calling","value_1","defaults","functionScope","BindingScope","result_1","oldScope","result_2","spreadArray","spreadArray_1","spreadItem","value_2","declarationValue","operand","indexTarget","member","selectContext","selectTarget","localValue","missing","argExpressions","PopulatedScope","ResolvedStaticSymbol","staticSymbolCache","metadataCache","resolvedSymbols","resolvedFilePaths","symbolResourcePaths","symbolFromFile","knownFileNameToModuleNames","_resolveSymbolMembers","resultFromSummary","_resolveSymbolFromSummary","resultFromCache","_createSymbolsOf","baseImportAs","summarizedFileName","summarizedName","sourceSymbol","targetSymbol","invalidateFile","symbols_1","recorder","baseResolvedSymbol","baseMetadata","statics","getModuleMetadata","metadataKey","summarySymbols","metadataSymbols","this_1","moduleExport","export","exportSymbol","symName","resolvedModule","resolveModule","createExport","topLevelSymbolNames_1","origins_1","origin","originFilePath","createResolvedSymbol","topLevelPath","topLevelSymbolNames","transformedMeta_1","ReferenceTransformer","functionParams","symbolic","oldLen","transformedMeta","moduleMetadata","moduleMetadatas","getMetadataFor","maxVersion_1","md","errorMessage","moduleNameToFileName","summaryCache","loadedFilePaths","referringSrcFileName","referringLibFileName","_loadSummaryFile","hasSummary","summaryFilePath","SummaryResolver","JitSummaryResolver","_summaries","ReturnValue","debugAst","currCtx","CATCH_ERROR_VAR$2","CATCH_STACK_VAR$2","fnExpr","AbstractJsEmitterVisitor","_evalArgNames","_evalArgValues","_evalExportedVars","resultVar","JitCompiler","_compilerConfig","getExtraNgModuleProviders","_compiledTemplateCache","_compiledHostTemplateCache","_compiledDirectiveWrapperCache","_compiledNgModuleCache","_sharedStylesheetCount","compileModuleSync","_compileModuleAndComponents","compileModuleAsync","compileModuleAndAllComponentsSync","_compileModuleAndAllComponents","compileModuleAndAllComponentsAsync","loadAotSummaries","hasAotSummary","_filterJitIdentifiers","ids","_loadModules","_compileComponents","componentFactories","ngModuleFactory","mainModule","mainNgModule","nestedNgModule","_interpretOrJit","allComponentFactories","moduleByJitDirective","transJitModules","localMod","localModuleMeta","dirRef","_createCompiledTemplate","_createCompiledHostTemplate","entryComponentType","_compileTemplate","compiledTemplate","viewDefFactory","CompiledTemplate","isCompiled","externalStylesheetsByModuleUrl","outputContext","_resolveStylesCompileResult","evalResult","viewClass","compiled","nestedCompileResult","nestedStylesArr","_resolveAndEvalStylesCompileResult","_viewClass","CompileReflector","UrlResolverImpl","_packagePrefix","resolvedUrl","resolvedParts","ResourceLoader","Extractor","extractor","VERSION","commonjsGlobal","window","compiler_1","expression_type","TypeDiagnostic","AstType","diagnostics","callable","reportWarning","normalize","Undefined","Null","Other","nullable","getNonNullableType","leftType","rightType","leftRawKind","getTypeKind","rightRawKind","leftKind","rightKind","operKind","errorAst","Boolean","anyType","getTypeUnion","selectSignature","public","signatures","indexed","argument","undefinedType","targetType","keyType","getArrayType","resolveMethodCall","expType","resolvePropertyRead","_anyType","_undefinedType","isAny","receiverInfo","expression_diagnostics","getTemplateExpressionDiagnostics","ExpressionDiagnosticsVisitor","includeEvent","getExpressionScope","getExpressionDiagnostics","analyzer","getReferences","processReferences","references_1","getDefinitionOf","templateOffset","getVarDeclarations","getTemplateContext","Unbound","refinedVariableType","templateElement","ngForDirective","ngForOfBinding","getElementType","getEventDeclaration","referenceTable","createSymbolTable","variableTable","eventsTable","mergeSymbolTable","diagnoseExpression","attributeValueLocation","directiveSummary","previousDirectiveSummary","typescript_symbols","getSymbolQuery","program","checker","fetchPipes","TypeScriptSymbolQuery","getClassMembers","getClassFromStaticSymbol","getTypeAtLocation","TypeWrapper","getClassMembersFromDeclaration","ClassDeclaration","classDeclaration","getPipesTable","PipesTable","typeCallable","getCallSignatures","signaturesOf","SignatureWrapper","toSymbols","symbolTable","table","own","findClassSymbolInContext","moduleSymbol","getExportsOfModule","isSymbolPrivate","valueDeclaration","isPrivate","getBuiltinTypeFromTs","setParents","AsExpression","TrueKeyword","AnyKeyword","NullKeyword","numeric","NumericLiteral","NoSubstitutionTemplateLiteral","VoidExpression","definitionFromTsSymbol","parentDeclarationOf","InterfaceDeclaration","SourceFile","getContainerOf","getFlags","SymbolFlags","ClassMember","getTypeParameterOf","typeArguments","typeKindOf","TypeFlags","StringLike","StringLiteral","NumberLike","Union","unionType","TypeParameter","getFromSymbolTable","toNumbers","compareNumbers","ModifierFlags","getCombinedModifierFlags","isReferenceType","ObjectFlags","objectFlags","Reference","typeCache","getTsTypeOf","elementType","tsType","nonNullableType","pipesCache","contextType","getTemplateRefContextType","SymbolWrapper","symbols$$2","MapSymbolTable","addAll","DeclaredSymbol","symbolTables","symbolTables_1","getSpanAt","getTypeOfSymbolAtLocation","constructorDeclaration","type_1","typeReference","getTypeWrapper","getSymbol","SymbolTableWrapper","getProperties","Alias","getAliasedSymbol","_members","Interface","getDeclaredTypeOfSymbol","typeWrapper","_tsType","getParameters","getReturnType","SignatureResultOverride","resultType","toSymbolTable","tsNumbers","symbols_2","symbols_3","_values","previous","symbols_4","PipeSymbol","EmptyTable","parameterType","findClassSymbol","findTransformMethodType","classType","getProperty","isModuleMetadata","isClassMetadata","isInterfaceMetadata","isMemberMetadata","isMethodMetadata","isConstructorMetadata","isFunctionMetadata","isMetadataSymbolicExpression","isMetadataSymbolicBinaryExpression","isMetadataSymbolicIndexExpression","isMetadataSymbolicCallExpression","isMetadataSymbolicPrefixExpression","isMetadataSymbolicIfExpression","isMetadataGlobalReferenceExpression","isMetadataSymbolicReferenceExpression","isMetadataModuleReferenceExpression","default","isMetadataImportedSymbolReferenceExpression","isMetadataImportDefaultReference","isMetadataSymbolicSelectExpression","isMetadataSymbolicSpreadExpression","isMetadataError","METADATA_VERSION","evaluator","isMethodCallOf","callExpression","PropertyAccessExpression","propertyAccessExpression","isCallOf","ident","everyNodeChild","getSourceFileOfNode","errorSymbol","getLineAndCharacterOfPosition","isPropertyAssignment","PropertyAssignment","arrayOrEmpty","spreadElementSyntaxKind","SpreadElement","SpreadElementExpression","Evaluator","nodeMap","recordExport","nameOf","evaluateNode","received","getText","isFoldable","isFoldableWorker","folding","ObjectLiteralExpression","propertyAssignment","initializer","ArrayLiteralExpression","CallExpression","arrayNode","arrayValue","FalseKeyword","TemplateHead","TemplateMiddle","TemplateTail","ParenthesizedExpression","parenthesizedExpression","BinaryExpression","binaryExpression","operatorToken","PlusToken","MinusToken","AsteriskToken","SlashToken","PercentToken","AmpersandAmpersandToken","BarBarToken","ElementAccessExpression","elementAccessExpression","argumentExpression","TemplateExpression","templateSpans","preferReference","recordEntry","substituteExpression","newEntry","isFoldableError","verboseInvalidExpression","resolveName","obj_1","quoted_1","ShorthandPropertyAssignment","assignment","propertyValue","quotedNames","arr_1","spreadValue","firstArgument","ArrowFunction","arrowFunction","NewExpression","newExpression","newArgs","newTarget","expression_1","expression_2","TypeReference","typeReferenceNode","typeNameNode_1","QualifiedName","qualifiedName","left_1","identifier_1","args_1","UnionType","UndefinedKeyword","StringKeyword","NumberKeyword","BooleanKeyword","arrayTypeNode","TypeAssertionExpression","typeAssertion","PrefixUnaryExpression","prefixUnaryExpression","TildeToken","ExclamationToken","operatorText","AmpersandToken","BarToken","CaretToken","EqualsEqualsToken","ExclamationEqualsToken","EqualsEqualsEqualsToken","ExclamationEqualsEqualsToken","LessThanToken","GreaterThanToken","LessThanEqualsToken","GreaterThanEqualsToken","LessThanLessThanToken","GreaterThanGreaterThanToken","GreaterThanGreaterThanGreaterThanToken","ConditionalExpression","conditionalExpression","thenExpression","whenTrue","elseExpression","whenFalse","FunctionExpression","TaggedTemplateExpression","templateExpression","head","asExpression","ClassExpression","createNodeArray","symbols$2","populateBuiltins","Symbols","defineReference","_symbols","buildImports","stripQuotes","ImportEqualsDeclaration","importEqualsDeclaration","moduleReference","ExternalModuleReference","externalReference","from_1","ImportDeclaration","importDecl","importClause","moduleSpecifier","namedBindings","NamedImports","NamespaceImport","validateMetadata","validateExpression","locals","validateFunction","indexExpression","prefixExpression","selectExpression","spreadExpression","ifExpression","validateMember","classData","parameterDecorators","validateClass","staticMember","functionDeclaration","oldLocals","shouldReportNode","nodeStart","lineInfo","namesOf","addNamesOf","bindingPattern","name_11","parameters_2","isStatic","Static","MetadataCollector","getMetadata","objFromDecorator","decoratorNode","evaluator$$1","errorSym","maybeGetSimpleFunction","nameNode","functionName","functionBody","statement","returnStatement","func","classMetadataOf","getDecorators","decorator","referenceFrom","recordMember","recordStaticMember","heritageClauses","hc","ExtendsKeyword","extends","typeParameters","isConstructor","Constructor","MethodDeclaration","maybeFunc","methodDecorators","parameterDecoratorData","parametersData","hasDecoratorData","hasParameterData","parameterData","PropertyDeclaration","GetAccessor","SetAccessor","propertyDecorators","composedSubstituter","evaluatorOptions","exportMap","ExportDeclaration","exportDeclaration","exportClause","exportedAs","isExport","isDeclarationFile","Export","isExportedIdentifier","isExported","exportedIdentifierName","exportedName","interfaceDeclaration","interfaceName","FunctionDeclaration","propNode","name_4","TypeAliasDeclaration","typeDeclaration","name_5","name_6","name_7","EnumDeclaration","enumDeclaration","enumValueHolder","enumName","nextDefaultValue","writtenMembers","enumValue","name_8","VariableStatement","variableStatement","declarationList","variableDeclaration","exported","name_9","report_1","name_10","BindingElement","ObjectBindingPattern","ArrayBindingPattern","bundler","importName","normalPath","getRootExport","reexportedAs","getSymbolDeclaration","PRIVATE_NAME_CHARS","MetadataBundler","symbolMap","rootModule","basename","getMetadataBundle","exportedSymbols","exportAll","canonicalizeSymbols","getEntries","privates","referenced","privateName","origins","getReExports","fullModuleName","exportedSymbol","symbolOf","exportFrom","exportItem","exportedSymbols_1","exportedSymbols_2","canonicalizeSymbol","rootExport","canonicalSymbol","newPrivateName","digits","exportedNames","convertSymbol","symbolsMap","declaredName","reference_1","exportAlls","exportedSymbols_3","module_2","module_3","convertEntry","convertClass","convertFunction","convertValue","convertExpression","convertMembers","convertStatics","convertMember","convertError","object","convertReference","convertExpressionNode","createReference","canonicalSymbolOf","referencedName","symbolKey","CompilerHostAdapter","ScriptTarget","Latest","index_writer","privateEntriesToIndex","INDEX_HEADER","privates_1","compareEntries","compare","compareModules","orderedExports","orderedExports_1","select","ak","bk","bundle_index_host","createSyntheticIndexHost","syntheticIndex","normalSyntheticIndexName","indexContent","indexMetadata","newHost","fileExists","readFile","languageVersion","createSourceFile","writeFile","writeByteOrderMark","sourceFiles","DTS","metadataName","writeFileSync","createBundleIndexHost","ngOptions","indexModule","bundler$$1","flatModuleId","metadataBundle","flatModuleOutFile","JS_EXT","libraryIndex","indexName","__export","api","isTsDiagnostic","diagnostic","isNgDiagnostic","DEFAULT_ERROR_CODE","UNKNOWN_ERROR_CODE","EmitFlags","util","tsStructureIsReused","structureIsReused","createMessageDiagnostic","isInRootDir","rootDir","pathStartsWithPrefix","relativeToRootDirs","rootDirs","rel","fullPath","relative","ngToTsDiagnostic","ng","GENERATED_FILES","metadata_reader","createMetadataReaderCache","readMetadata","metadatas","readMetadataFile","upgradeMetadataWithDtsData","getSourceFileMetadata","cacheMetadata","dtsFilePath","metadataPath","metadataOrMetadatas","maxMetadata","oldMetadata","newMetadata","dtsMetadata","language_services","language_services_10","language_services_11","language_services_12","language_services_13","language_services_14","language_services_15","__window$1","__self$1","WorkerGlobalScope","__global$1","_root","root_1","isFunction_2","isFunction_1","isArray_1","isObject_2","errorObject_1","tryCatch_2","tryCatch_1","__extends$2","UnsubscriptionError_2","Subscription","_parents","_subscriptions","_unsubscribe","hasErrors","trial","teardown","_addParent","tmp","subscriptions","subscriptionIndex","Subscription_2","Subscription_1","Symbol","$$rxSubscriber","__extends$1","destinationOrNext","syncErrorValue","syncErrorThrown","isStopped","SafeSubscriber","subscriber","_next","_error","_complete","_unsubscribeAndRecycle","Subscriber_2","_parentSubscriber","observerOrNext","_context","__tryOrSetError","__tryOrUnsub","wrappedComplete","toSubscriber_2","toSubscriber_1","getSymbolObservable","$$observable","noop_2","pipe_2","pipeFromArray_1","pipe_1","_subscribe","observable$$1","sink","_trySubscribe","PromiseCtor","Rx","reject","operations","toPromise","Observable_2","__extends$4","ScalarObservable","dispatch","ScalarObservable_2","ScalarObservable_1","__extends$5","EmptyObservable","EmptyObservable_2","EmptyObservable_1","isScheduler_2","__extends$3","ArrayObservable_2","isArrayLike_1","isPromise_2","symbolIteratorPonyfill","root$$2","Set_1","Map_1","$$iterator","__extends$7","notifyNext","notifyError","notifyComplete","InnerSubscriber_2","subscribeToResult_2","subscribeToResult_1","__extends$8","OuterSubscriber","innerValue","innerIndex","innerSub","OuterSubscriber_2","OuterSubscriber_1","__extends$6","mergeMap_2","observer","MergeMapSubscriber","MergeMapOperator_1","hasCompleted","active","_tryNext","_innerSub","ish","_notifyResultSelector","shift","MergeMapSubscriber_1","identity_2","mergeAll_2","merge_2$2","mergeStatic_1","mergeStatic","merge_2$1","merge_4","merge_3","merge_2","__extends$11","ObjectUnsubscribedError","ObjectUnsubscribedError_2","ObjectUnsubscribedError_1","__extends$12","SubjectSubscription","subject","observers","subscriberIndex","SubjectSubscription_2","SubjectSubscription_1","__extends$10","SubjectSubscriber","SubjectSubscriber_1","hasError","thrownError","AnonymousSubject","asObservable","Subject_2","AnonymousSubject_1","__extends$13","refCount_2","RefCountOperator","_refCount","refCounter","RefCountSubscriber$1","connection","connect","RefCountSubscriber","sharedConnection","_connection","__extends$9","ConnectableObservable","_isComplete","getSubject","_subject","ConnectableSubscriber","ConnectableObservable_2","connectableProto","multicast_2","MulticastOperator_1","share_2$2","share_3","ChangeDetectionStrategy$1","Directive$1","NgModule$1","Version$1","VERSION$2","__window","__self","__global","_THROW_IF_NOT_FOUND","_NullInjector","StaticInjector","NULL","GET_PROPERTY_NAME","ɵ2","objWithPropertyToExtract","_records","tokenPath","_findOriginalError","_findContext","errorLogger","displayName","_globalKeyRegistry","numberOfKeys","KeyRegistry","_allKeys","newKey","DELEGATE_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","_zipTypesAndAnnotations","paramTypes","paramAnnotations","_ownParameters","parentCtor","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","_ownAnnotations","ownAnnotations","_ownPropMetadata","propDecorators","propDecorators_1","propMetadata_1","ownPropMetadata","setter","importUri","resourceUri","resolveIdentifier","resolveEnum","enumIdentifier","Reflector","reflectionCapabilities","updateCapabilities","caps","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_constructionCounter","keyIds","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","_new","_getMaxNumberOfObjects","_instantiate","ResolvedReflectiveFactory$$1","_getByReflectiveDependency","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","inj_","APP_INITIALIZER","ApplicationInitStatus","appInits","donePromise","rej","runInitializers","asyncInitPromises","initResult","APP_ID","APP_ID_RANDOM_PROVIDER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","Console","log","Compiler","CompilerFactory","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryBoundToModule","wtfEnabled","wtf","wtfCreateScope","wtfLeave","EventEmitter","isAsync","__isAsync","generatorOrNext","schedulerFn","errorFn","completeFn","assertZonePatched","_outer","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","cancelTask","runGuarded","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZoneInjector","exceptionHandler","onDestroy","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","createCompiler","appRef","ApplicationRef","_bootstrapComponents","ngDoBootstrap","listener","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","tick","isCurrentlyStable","stableSub","unstableSub","componentOrFactory","compRef","_unloadComponent","nativeElement","_loadComponent","_tickScope","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","Renderer2","_results","toArray","ViewRef","EventListener","EmbeddedViewRef","DebugNode","_debugContext","addChild","listeners","providerTokens","classes","childIndex","insertChildrenAfter","newChildren","siblingIndex","refChild","newChild","refIndex","queryAll","queryAllNodes","triggerEventHandler","eventObj","wrap","previousValue","currentValue","firstChange","isFirstChange","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","forEachOperation","nextIt","nextRemove","adjPreviousIndex","currentIndex","_nextRemoved","localMovePreviousIndex","localCurrentIndex","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","factories","copied","extend","iterable","KeyValueDiffers","kv","keyValDiff","iterableDiff","_CORE_PLATFORM_PROVIDERS","parentPlatformFactory","ApplicationModule","WeakMap","EMPTY_CONTEXT","ComponentRef_","ComponentFactory_","_inputs","_outputs","inputsArr","outputsArr","componentNodeIndex","_view","_viewRef","_component","_elDef","changeDetectorRef","_data","attachToViewContainerRef","templateRef","insert","ngModuleRef","contextInjector","viewRef_","viewData","move","detach","_viewContainerRef","_appRef","markForCheck","fs$$1","begin","reattach","vcRef","_parentView","namespaceAndName","createViewRoot","createTemplateAnchor","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","listenGlobal","attributeValue","setBindingDebugInfo","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","animate","_moduleType","elView","elOrCompView","childDef","logViewDef","logNodeIndex","currRenderNodeIndex","nodeLogger","renderData","DebugRenderer2","whenRenderingDone","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","NgModuleFactory_","_ngModuleDefFactory","onclick","ondblclick","onmousedown","onmouseup","onmouseover","onmousemove","onmouseout","onkeypress","onkeydown","onkeyup","onload","onunload","href","alt","media","nohref","usemap","onfocus","onblur","charset","declare","classid","codebase","codetype","archive","standby","cite","datetime","accept","shape","coords","enctype","onsubmit","onreset","accept-charset","valuetype","longdesc","width","disabled","onselect","accesskey","multiple","onchange","label","selected","checked","maxlength","rows","cols","height","border","frame","rules","cellspacing","cellpadding","datapagesize","align","charoff","valign","abbr","axis","headers","rowspan","colspan","profile","http-equiv","scheme","hreflang","rev","ismap","defer","BIG","STRONG","DFN","CODE","SAMP","KBD","VAR","CITE","ABBR","ACRONYM","SPAN","BDO","BODY","ADDRESS","DIV","MAP","AREA","IMG","OBJECT","PARAM","PRE","BLOCKQUOTE","INS","DEL","DL","DT","DD","FORM","LABEL","INPUT","SELECT","OPTGROUP","OPTION","TEXTAREA","FIELDSET","LEGEND","BUTTON","TABLE","CAPTION","COLGROUP","COL","HEAD","TITLE","BASE","META","NOSCRIPT","SCHEMA","EVENT","BOOLEAN","NUMBER","STRING","typeParts","allKnownElements","typeOf","_instance","noscript","getExpressionScope$$1","key_1","selectorInfo","selector_1","templateBindingResult","valueRelativePosition_1","keyCompletions","equalLocation","directiveMetadata","contextTable","symbolsToCompletions","completions","attributeValuePosition","sym","kindOverride","getTemplates","getDeclarations","getAnalyzedModules","getPipesAt","getTemplateAstAtPosition","getTemplateAt","contextFile","resolvedMetadata","rawHtmlParser","parser","htmlResult","resolvedDirectives","ReflectorModuleModuleResolutionHost","metadataCollector","directoryExists","directoryName","getScriptSnapshot","snapshot","getLength","sf","ReflectorHost","metadataReaderCache","hostAdapter","moduleResolutionCache","createModuleResolutionCache","getCurrentDirectory","modulePath","resolveModuleName","resolvedFileName","DummyHtmlParser","DummyResourceLoader","tsService","_typeCache","modulesOutOfDate","fileVersions","validate","_resolver","moduleResolver","directiveResolver","pipeResolver","resourceLoader","directiveNormalizer","collectError","ensureTemplateMap","templateReferences","getSourceFromNode","getScriptVersion","fileToComponent","getSourceFromType","ensureAnalyzedModules","analyzeHost","programFiles","getSourceFiles","version_1","visit_1","templateSource","visit_2","getDeclarationFromNode","updateAnalyzedModules","_checker","getTypeChecker","_staticSymbolResolver","lastProgram","clearCaches","seen_1","version$$1","collectedErrors","templateReference","getSourceFromDeclaration","queryCache","pipes_1","getTemplateClassDeclFromNode","stringOf","getTemplateClassFromStaticSymbol","_reflectorHost","getScriptFileNames","tsConfigPath","genDir","getCompilationSettings","errorMap","sourceFilePath","reflectorHost","ssr","currentToken","missingTemplate","callTarget","Decorator","getCollectedErrors","defaultSpan","process","argv"],"mappings":"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kD,gBAAgBkF,gBAAgB2/C,cAC5B,cACA,kBACA,YACA,YACA,YACA,eACA,gBACA,aACA,YACA,YACA,kBACA,cACA,cAUJ,IAAI8hD,uBAAyB,WACzB,QAASA,0BAET,MAAOA,0BAcPC,UAAY,UACZC,SAAW,SACXC,SAAW,SACXC,SAAW,SA2CXC,UACA,iYAEA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,yBACA,2BACA,mBACA,8CACA,6BACA,qBACA,mCACA,kCACA,kCACA,oBACA,0BACA,8BACA,2BACA,wEACA,gFACA,yBACA,8BACA,sBAEAC;iwUACAC,MAAS,YACTC,IAAO,UACPC,WAAc,aACdC,UAAa,YACbC,SAAY,WACZC,SAAY,YAEZvvF,yBAA4B,SAAUt8B,QAEtC,QA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IACzBJ,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,IACzBE,OAAQ,EAAG,EAAG,EAAG,GAAI,GAAI,IACzBG,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,IACtBF,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC1BF,IAAK,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAC1B+tF,MAAO,EAAG,IACVC,OAAQ,GACRC,MAAO,GACPC,MAAO,EAAG,IACVhpL,OAAQ,EAAG,EAAG,EAAG,IACjBE,QAAS,EAAG,GAAI,GAAI,IACpB+oL,UAAW,EAAG,EAAG,EAAG,GAAI,IACxB5jH,MAAO,IAEP1S,mBAAqB,EAAG,EAAG,EAAG,GA0B9Bu2H,QACA,iYAGA,s1BACA,qgCACA,gOACA,2uBACA,uBACA,2CACA,uBACA,wCACA,uBACA,kCACA,yCACA,mLACA,8JACA,eACA,yBACA,iCACA,iQACA,yHACA,sCACA,+BACA,4BACA,0BACA,8BACA,yCACA,6BACA,0BACA,uDACA,wCACA,qCACA,uGACA,iGACA,sOACA,mDACA,sBACA,wCACA,6BACA,2JACA,oJACA,wbACA,+BACA,8BACA,6BACA,wIACA,yBACA,4HACA,8BACA,mDACA,2DACA,sCACA,kDACA,uIACA,yCACA,6EACA,wDACA,wBACA,gDACA,yBACA,2BACA,qCACA,mCACA,gGACA,wGACA,wBACA,0BACA,mDACA,sBACA,2CACA,8BACA,mHACA,+DACA,oHACA,iDACA,wDACA,0BACA,qNACA,2BACA,sDACA,iCACA,yBACA,oCACA,wBACA,+BACA,qCACA,wCACA,6BACA,+BACA,2BACA,mBACA,sBACA,8BACA,sBACA,4BACA,kCACA,0BACA,+BACA,gCACA,gCACA,6BACA,2BACA,sBACA,+CACA,+CACA,+CACA,+CACA,6BACA,sBACA,sBACA,0BACA,2BACA,uBACA,2BACA,iCACA,0BACA,qBACA,2BACA,qBACA,oCACA,wBACA,4BACA,2BACA,qCACA,oBACA,qBACA,mBACA,uBACA,2BACA,sBACA,8BACA,+BACA,qCACA,2BACA,mDACA,y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","file":"/home/travis/build/angular/angular/dist/packages-dist/language-service/bundles/language-service.umd.min.js","sourcesContent":["/**\n * @license Angular v5.1.0-beta.0-faa6212\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\nvar $reflect = {defineMetadata: function() {}, getOwnMetadata: function(){}};\n((typeof global !== 'undefined' && global)||{})['Reflect'] = $reflect;\nvar $deferred, $resolved, $provided;\nfunction $getModule(name) { return $provided[name] || require(name); }\nfunction define(modules, cb) { $deferred = { modules: modules, cb: cb }; }\nmodule.exports = function(provided) {\n  if ($resolved) return $resolved;\n  var result = {};\n  $provided = Object.assign({'reflect-metadata': $reflect}, provided || {}, { exports: result });\n  $deferred.cb.apply(this, $deferred.modules.map($getModule));\n  $resolved = result;\n  return result;\n}\n\ndefine(['exports', 'fs', 'path', 'typescript'], function (exports, fs, path, ts) { 'use strict';\n\nvar fs__default = 'default' in fs ? fs['default'] : fs;\nvar path__default = 'default' in path ? path['default'] : path;\nvar ts__default = 'default' in ts ? ts['default'] : ts;\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n};\n\n/**\n * @license Angular v5.1.0-beta.0-faa6212\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\nfunction Inject() { }\nvar createInject = makeMetadataFactory('Inject', function (token) { return ({ token: token }); });\nvar createInjectionToken = makeMetadataFactory('InjectionToken', function (desc) { return ({ _desc: desc }); });\n/**\n * @record\n */\nfunction Attribute() { }\nvar createAttribute = makeMetadataFactory('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @record\n */\nfunction Query() { }\nvar createContentChildren = makeMetadataFactory('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n});\nvar createContentChild = makeMetadataFactory('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n});\nvar createViewChildren = makeMetadataFactory('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n});\nvar createViewChild = makeMetadataFactory('ViewChild', function (selector, data) {\n    return (__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n});\n/**\n * @record\n */\nfunction Directive() { }\nvar createDirective = makeMetadataFactory('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * @record\n */\nfunction Component() { }\n/** @enum {number} */\nvar ViewEncapsulation = {\n    Emulated: 0,\n    Native: 1,\n    None: 2,\n};\nViewEncapsulation[ViewEncapsulation.Emulated] = \"Emulated\";\nViewEncapsulation[ViewEncapsulation.Native] = \"Native\";\nViewEncapsulation[ViewEncapsulation.None] = \"None\";\n/** @enum {number} */\nvar ChangeDetectionStrategy = {\n    OnPush: 0,\n    Default: 1,\n};\nChangeDetectionStrategy[ChangeDetectionStrategy.OnPush] = \"OnPush\";\nChangeDetectionStrategy[ChangeDetectionStrategy.Default] = \"Default\";\nvar createComponent = makeMetadataFactory('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy.Default }, c));\n});\n/**\n * @record\n */\nfunction Pipe() { }\nvar createPipe = makeMetadataFactory('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * @record\n */\nfunction Input() { }\nvar createInput = makeMetadataFactory('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction Output() { }\nvar createOutput = makeMetadataFactory('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * @record\n */\nfunction HostBinding() { }\nvar createHostBinding = makeMetadataFactory('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * @record\n */\nfunction HostListener() { }\nvar createHostListener = makeMetadataFactory('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n/**\n * @record\n */\nfunction NgModule() { }\nvar createNgModule = makeMetadataFactory('NgModule', function (ngModule) { return ngModule; });\n/**\n * @record\n */\nfunction ModuleWithProviders() { }\n/**\n * @record\n */\nfunction SchemaMetadata() { }\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\nvar createOptional = makeMetadataFactory('Optional');\nvar createInjectable = makeMetadataFactory('Injectable');\nvar createSelf = makeMetadataFactory('Self');\nvar createSkipSelf = makeMetadataFactory('SkipSelf');\nvar createHost = makeMetadataFactory('Host');\nvar Type = Function;\n/** @enum {number} */\nvar SecurityContext = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext[SecurityContext.NONE] = \"NONE\";\nSecurityContext[SecurityContext.HTML] = \"HTML\";\nSecurityContext[SecurityContext.STYLE] = \"STYLE\";\nSecurityContext[SecurityContext.SCRIPT] = \"SCRIPT\";\nSecurityContext[SecurityContext.URL] = \"URL\";\nSecurityContext[SecurityContext.RESOURCE_URL] = \"RESOURCE_URL\";\n/** @enum {number} */\nvar NodeFlags = {\n    None: 0,\n    TypeElement: 1,\n    TypeText: 2,\n    ProjectedTemplate: 4,\n    CatRenderNode: 3,\n    TypeNgContent: 8,\n    TypePipe: 16,\n    TypePureArray: 32,\n    TypePureObject: 64,\n    TypePurePipe: 128,\n    CatPureExpression: 224,\n    TypeValueProvider: 256,\n    TypeClassProvider: 512,\n    TypeFactoryProvider: 1024,\n    TypeUseExistingProvider: 2048,\n    LazyProvider: 4096,\n    PrivateProvider: 8192,\n    TypeDirective: 16384,\n    Component: 32768,\n    CatProviderNoDirective: 3840,\n    CatProvider: 20224,\n    OnInit: 65536,\n    OnDestroy: 131072,\n    DoCheck: 262144,\n    OnChanges: 524288,\n    AfterContentInit: 1048576,\n    AfterContentChecked: 2097152,\n    AfterViewInit: 4194304,\n    AfterViewChecked: 8388608,\n    EmbeddedViews: 16777216,\n    ComponentView: 33554432,\n    TypeContentQuery: 67108864,\n    TypeViewQuery: 134217728,\n    StaticQuery: 268435456,\n    DynamicQuery: 536870912,\n    CatQuery: 201326592,\n    // mutually exclusive values...\n    Types: 201347067,\n};\n/** @enum {number} */\nvar DepFlags = {\n    None: 0,\n    SkipSelf: 1,\n    Optional: 2,\n    Value: 8,\n};\n/** @enum {number} */\nvar ArgumentType = { Inline: 0, Dynamic: 1, };\n/** @enum {number} */\nvar BindingFlags = {\n    TypeElementAttribute: 1,\n    TypeElementClass: 2,\n    TypeElementStyle: 4,\n    TypeProperty: 8,\n    SyntheticProperty: 16,\n    SyntheticHostProperty: 32,\n    CatSyntheticProperty: 48,\n    // mutually exclusive values...\n    Types: 15,\n};\n/** @enum {number} */\nvar QueryBindingType = { First: 0, All: 1, };\n/** @enum {number} */\nvar QueryValueType = {\n    ElementRef: 0,\n    RenderElement: 1,\n    TemplateRef: 2,\n    ViewContainerRef: 3,\n    Provider: 4,\n};\n/** @enum {number} */\nvar ViewFlags = {\n    None: 0,\n    OnPush: 2,\n};\n/** @enum {number} */\nvar MissingTranslationStrategy = {\n    Error: 0,\n    Warning: 1,\n    Ignore: 2,\n};\nMissingTranslationStrategy[MissingTranslationStrategy.Error] = \"Error\";\nMissingTranslationStrategy[MissingTranslationStrategy.Warning] = \"Warning\";\nMissingTranslationStrategy[MissingTranslationStrategy.Ignore] = \"Ignore\";\n/**\n * @record\n */\nfunction MetadataFactory() { }\n/**\n * @template T\n * @param {?} name\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataFactory(name, props) {\n    var /** @type {?} */ factory = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ values = props ? props.apply(void 0, args) : {};\n        return __assign({ ngMetadataName: name }, values);\n    };\n    factory.isTypeOf = function (obj) { return obj && obj.ngMetadataName === name; };\n    factory.ngMetadataName = name;\n    return factory;\n}\n/**\n * @record\n */\nfunction Route() { }\n\n\n\nvar core = Object.freeze({\n\tInject: Inject,\n\tcreateInject: createInject,\n\tcreateInjectionToken: createInjectionToken,\n\tAttribute: Attribute,\n\tcreateAttribute: createAttribute,\n\tQuery: Query,\n\tcreateContentChildren: createContentChildren,\n\tcreateContentChild: createContentChild,\n\tcreateViewChildren: createViewChildren,\n\tcreateViewChild: createViewChild,\n\tDirective: Directive,\n\tcreateDirective: createDirective,\n\tComponent: Component,\n\tViewEncapsulation: ViewEncapsulation,\n\tChangeDetectionStrategy: ChangeDetectionStrategy,\n\tcreateComponent: createComponent,\n\tPipe: Pipe,\n\tcreatePipe: createPipe,\n\tInput: Input,\n\tcreateInput: createInput,\n\tOutput: Output,\n\tcreateOutput: createOutput,\n\tHostBinding: HostBinding,\n\tcreateHostBinding: createHostBinding,\n\tHostListener: HostListener,\n\tcreateHostListener: createHostListener,\n\tNgModule: NgModule,\n\tcreateNgModule: createNgModule,\n\tModuleWithProviders: ModuleWithProviders,\n\tSchemaMetadata: SchemaMetadata,\n\tCUSTOM_ELEMENTS_SCHEMA: CUSTOM_ELEMENTS_SCHEMA,\n\tNO_ERRORS_SCHEMA: NO_ERRORS_SCHEMA,\n\tcreateOptional: createOptional,\n\tcreateInjectable: createInjectable,\n\tcreateSelf: createSelf,\n\tcreateSkipSelf: createSkipSelf,\n\tcreateHost: createHost,\n\tType: Type,\n\tSecurityContext: SecurityContext,\n\tNodeFlags: NodeFlags,\n\tDepFlags: DepFlags,\n\tArgumentType: ArgumentType,\n\tBindingFlags: BindingFlags,\n\tQueryBindingType: QueryBindingType,\n\tQueryValueType: QueryValueType,\n\tViewFlags: ViewFlags,\n\tMissingTranslationStrategy: MissingTranslationStrategy,\n\tMetadataFactory: MetadataFactory,\n\tRoute: Route\n});\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar DASH_CASE_REGEXP = /-+([a-z0-9])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction dashCaseToCamelCase(input) {\n    return input.replace(DASH_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return m[1].toUpperCase();\n    });\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtColon(input, defaultValues) {\n    return _splitAt(input, ':', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} defaultValues\n * @return {?}\n */\nfunction splitAtPeriod(input, defaultValues) {\n    return _splitAt(input, '.', defaultValues);\n}\n/**\n * @param {?} input\n * @param {?} character\n * @param {?} defaultValues\n * @return {?}\n */\nfunction _splitAt(input, character, defaultValues) {\n    var /** @type {?} */ characterIndex = input.indexOf(character);\n    if (characterIndex == -1)\n        return defaultValues;\n    return [input.slice(0, characterIndex).trim(), input.slice(characterIndex + 1).trim()];\n}\n/**\n * @param {?} value\n * @param {?} visitor\n * @param {?} context\n * @return {?}\n */\nfunction visitValue(value, visitor, context) {\n    if (Array.isArray(value)) {\n        return visitor.visitArray(/** @type {?} */ (value), context);\n    }\n    if (isStrictStringMap(value)) {\n        return visitor.visitStringMap(/** @type {?} */ (value), context);\n    }\n    if (value == null || typeof value == 'string' || typeof value == 'number' ||\n        typeof value == 'boolean') {\n        return visitor.visitPrimitive(value, context);\n    }\n    return visitor.visitOther(value, context);\n}\n/**\n * @param {?} val\n * @return {?}\n */\nfunction isDefined(val) {\n    return val !== null && val !== undefined;\n}\n/**\n * @template T\n * @param {?} val\n * @return {?}\n */\nfunction noUndefined(val) {\n    return val === undefined ? /** @type {?} */ ((null)) : val;\n}\n/**\n * @record\n */\n\nvar ValueTransformer = (function () {\n    function ValueTransformer() {\n    }\n    /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} context\n     * @return {?}\n     */\n    function (arr, context) {\n        var _this = this;\n        return arr.map(function (value) { return visitValue(value, _this, context); });\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        Object.keys(map).forEach(function (key) { result[key] = visitValue(map[key], _this, context); });\n        return result;\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ValueTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) { return value; };\n    return ValueTransformer;\n}());\nvar SyncAsync = {\n    assertSync: function (value) {\n        if (isPromise(value)) {\n            throw new Error(\"Illegal state: value cannot be a promise\");\n        }\n        return value;\n    },\n    then: function (value, cb) { return isPromise(value) ? value.then(cb) : cb(value); },\n    all: function (syncAsyncValues) {\n        return syncAsyncValues.some(isPromise) ? Promise.all(syncAsyncValues) : /** @type {?} */ (syncAsyncValues);\n    }\n};\n/**\n * @param {?} msg\n * @param {?=} parseErrors\n * @return {?}\n */\nfunction syntaxError(msg, parseErrors) {\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR] = true;\n    if (parseErrors)\n        (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] = parseErrors;\n    return error;\n}\nvar ERROR_SYNTAX_ERROR = 'ngSyntaxError';\nvar ERROR_PARSE_ERRORS = 'ngParseErrors';\n/**\n * @param {?} error\n * @return {?}\n */\nfunction isSyntaxError(error) {\n    return (/** @type {?} */ (error))[ERROR_SYNTAX_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getParseErrors(error) {\n    return (/** @type {?} */ (error))[ERROR_PARSE_ERRORS] || [];\n}\n/**\n * @param {?} s\n * @return {?}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/([.*+?^=!:${}()|[\\]\\/\\\\])/g, '\\\\$1');\n}\nvar STRING_MAP_PROTO = Object.getPrototypeOf({});\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isStrictStringMap(obj) {\n    return typeof obj === 'object' && obj !== null && Object.getPrototypeOf(obj) === STRING_MAP_PROTO;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction utf8Encode(str) {\n    var /** @type {?} */ encoded = '';\n    for (var /** @type {?} */ index = 0; index < str.length; index++) {\n        var /** @type {?} */ codePoint = str.charCodeAt(index);\n        // decode surrogate\n        // see https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        if (codePoint >= 0xd800 && codePoint <= 0xdbff && str.length > (index + 1)) {\n            var /** @type {?} */ low = str.charCodeAt(index + 1);\n            if (low >= 0xdc00 && low <= 0xdfff) {\n                index++;\n                codePoint = ((codePoint - 0xd800) << 10) + low - 0xdc00 + 0x10000;\n            }\n        }\n        if (codePoint <= 0x7f) {\n            encoded += String.fromCharCode(codePoint);\n        }\n        else if (codePoint <= 0x7ff) {\n            encoded += String.fromCharCode(((codePoint >> 6) & 0x1F) | 0xc0, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0xffff) {\n            encoded += String.fromCharCode((codePoint >> 12) | 0xe0, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n        else if (codePoint <= 0x1fffff) {\n            encoded += String.fromCharCode(((codePoint >> 18) & 0x07) | 0xf0, ((codePoint >> 12) & 0x3f) | 0x80, ((codePoint >> 6) & 0x3f) | 0x80, (codePoint & 0x3f) | 0x80);\n        }\n    }\n    return encoded;\n}\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__')) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\nvar Version = (function () {\n    function Version(full) {\n        this.full = full;\n        var /** @type {?} */ splits = full.split('.');\n        this.major = splits[0];\n        this.minor = splits[1];\n        this.patch = splits.slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * \\@stable\n */\nvar VERSION$1 = new Version('5.1.0-beta.0-faa6212');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An Abstract Syntax Tree node representing part of a parsed Angular template.\n * @record\n */\n\n/**\n * A segment of text within the template.\n */\nvar TextAst = (function () {\n    function TextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return TextAst;\n}());\n/**\n * A bound expression within the text of a template.\n */\nvar BoundTextAst = (function () {\n    function BoundTextAst(value, ngContentIndex, sourceSpan) {\n        this.value = value;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundTextAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBoundText(this, context);\n    };\n    return BoundTextAst;\n}());\n/**\n * A plain attribute on an element.\n */\nvar AttrAst = (function () {\n    function AttrAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AttrAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttr(this, context); };\n    return AttrAst;\n}());\n/**\n * A binding for an element property (e.g. `[property]=\"expression\"`) or an animation trigger (e.g.\n * `[\\@trigger]=\"stateExp\"`)\n */\nvar BoundElementPropertyAst = (function () {\n    function BoundElementPropertyAst(name, type, securityContext, value, unit, sourceSpan) {\n        this.name = name;\n        this.type = type;\n        this.securityContext = securityContext;\n        this.value = value;\n        this.unit = unit;\n        this.sourceSpan = sourceSpan;\n        this.isAnimation = this.type === PropertyBindingType.Animation;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundElementPropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElementProperty(this, context);\n    };\n    return BoundElementPropertyAst;\n}());\n/**\n * A binding for an element event (e.g. `(event)=\"handler()\"`) or an animation trigger event (e.g.\n * `(\\@trigger.phase)=\"callback($event)\"`).\n */\nvar BoundEventAst = (function () {\n    function BoundEventAst(name, target, phase, handler, sourceSpan) {\n        this.name = name;\n        this.target = target;\n        this.phase = phase;\n        this.handler = handler;\n        this.sourceSpan = sourceSpan;\n        this.fullName = BoundEventAst.calcFullName(this.name, this.target, this.phase);\n        this.isAnimation = !!this.phase;\n    }\n    /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    BoundEventAst.calcFullName = /**\n     * @param {?} name\n     * @param {?} target\n     * @param {?} phase\n     * @return {?}\n     */\n    function (name, target, phase) {\n        if (target) {\n            return target + \":\" + name;\n        }\n        else if (phase) {\n            return \"@\" + name + \".\" + phase;\n        }\n        else {\n            return name;\n        }\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundEventAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEvent(this, context);\n    };\n    return BoundEventAst;\n}());\n/**\n * A reference declaration on an element (e.g. `let someName=\"expression\"`).\n */\nvar ReferenceAst = (function () {\n    function ReferenceAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReferenceAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReference(this, context);\n    };\n    return ReferenceAst;\n}());\n/**\n * A variable declaration on a <ng-template> (e.g. `var-someName=\"someLocalName\"`).\n */\nvar VariableAst = (function () {\n    function VariableAst(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    VariableAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitVariable(this, context);\n    };\n    return VariableAst;\n}());\n/**\n * An element declaration in a template.\n */\nvar ElementAst = (function () {\n    function ElementAst(name, attrs, inputs, outputs, references, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan, endSourceSpan) {\n        this.name = name;\n        this.attrs = attrs;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.references = references;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ElementAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitElement(this, context);\n    };\n    return ElementAst;\n}());\n/**\n * A `<ng-template>` element included in an Angular template.\n */\nvar EmbeddedTemplateAst = (function () {\n    function EmbeddedTemplateAst(attrs, outputs, references, variables, directives, providers, hasViewContainer, queryMatches, children, ngContentIndex, sourceSpan) {\n        this.attrs = attrs;\n        this.outputs = outputs;\n        this.references = references;\n        this.variables = variables;\n        this.directives = directives;\n        this.providers = providers;\n        this.hasViewContainer = hasViewContainer;\n        this.queryMatches = queryMatches;\n        this.children = children;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    EmbeddedTemplateAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitEmbeddedTemplate(this, context);\n    };\n    return EmbeddedTemplateAst;\n}());\n/**\n * A directive property with a bound value (e.g. `*ngIf=\"condition\").\n */\nvar BoundDirectivePropertyAst = (function () {\n    function BoundDirectivePropertyAst(directiveName, templateName, value, sourceSpan) {\n        this.directiveName = directiveName;\n        this.templateName = templateName;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BoundDirectivePropertyAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirectiveProperty(this, context);\n    };\n    return BoundDirectivePropertyAst;\n}());\n/**\n * A directive declared on an element.\n */\nvar DirectiveAst = (function () {\n    function DirectiveAst(directive, inputs, hostProperties, hostEvents, contentQueryStartId, sourceSpan) {\n        this.directive = directive;\n        this.inputs = inputs;\n        this.hostProperties = hostProperties;\n        this.hostEvents = hostEvents;\n        this.contentQueryStartId = contentQueryStartId;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DirectiveAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDirective(this, context);\n    };\n    return DirectiveAst;\n}());\n/**\n * A provider declared on an element\n */\nvar ProviderAst = (function () {\n    function ProviderAst(token, multiProvider, eager, providers, providerType, lifecycleHooks, sourceSpan) {\n        this.token = token;\n        this.multiProvider = multiProvider;\n        this.eager = eager;\n        this.providers = providers;\n        this.providerType = providerType;\n        this.lifecycleHooks = lifecycleHooks;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ProviderAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        // No visit method in the visitor for now...\n        return null;\n    };\n    return ProviderAst;\n}());\n/** @enum {number} */\nvar ProviderAstType = {\n    PublicService: 0,\n    PrivateService: 1,\n    Component: 2,\n    Directive: 3,\n    Builtin: 4,\n};\nProviderAstType[ProviderAstType.PublicService] = \"PublicService\";\nProviderAstType[ProviderAstType.PrivateService] = \"PrivateService\";\nProviderAstType[ProviderAstType.Component] = \"Component\";\nProviderAstType[ProviderAstType.Directive] = \"Directive\";\nProviderAstType[ProviderAstType.Builtin] = \"Builtin\";\n/**\n * Position where content is to be projected (instance of `<ng-content>` in a template).\n */\nvar NgContentAst = (function () {\n    function NgContentAst(index, ngContentIndex, sourceSpan) {\n        this.index = index;\n        this.ngContentIndex = ngContentIndex;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NgContentAst.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNgContent(this, context);\n    };\n    return NgContentAst;\n}());\n/** @enum {number} */\nvar PropertyBindingType = {\n    /**\n       * A normal binding to a property (e.g. `[property]=\"expression\"`).\n       */\n    Property: 0,\n    /**\n       * A binding to an element attribute (e.g. `[attr.name]=\"expression\"`).\n       */\n    Attribute: 1,\n    /**\n       * A binding to a CSS class (e.g. `[class.name]=\"condition\"`).\n       */\n    Class: 2,\n    /**\n       * A binding to a style rule (e.g. `[style.rule]=\"expression\"`).\n       */\n    Style: 3,\n    /**\n       * A binding to an animation reference (e.g. `[animate.key]=\"expression\"`).\n       */\n    Animation: 4,\n};\nPropertyBindingType[PropertyBindingType.Property] = \"Property\";\nPropertyBindingType[PropertyBindingType.Attribute] = \"Attribute\";\nPropertyBindingType[PropertyBindingType.Class] = \"Class\";\nPropertyBindingType[PropertyBindingType.Style] = \"Style\";\nPropertyBindingType[PropertyBindingType.Animation] = \"Animation\";\n/**\n * @record\n */\n\n/**\n * A visitor for {\\@link TemplateAst} trees that will process each node.\n * @record\n */\n\n/**\n * A visitor that accepts each node but doesn't do anything. It is intended to be used\n * as the base class for a visitor that is only interested in a subset of the node types.\n */\nvar NullTemplateVisitor = (function () {\n    function NullTemplateVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullTemplateVisitor.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullTemplateVisitor;\n}());\n/**\n * Base class that can be used to build a visitor that visits each node\n * in an template ast recursively.\n */\nvar RecursiveTemplateAstVisitor = (function (_super) {\n    __extends(RecursiveTemplateAstVisitor, _super);\n    function RecursiveTemplateAstVisitor() {\n        return _super.call(this) || this;\n    }\n    // Nodes with children\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.references);\n            visit(ast.variables);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.inputs);\n            visit(ast.outputs);\n            visit(ast.references);\n            visit(ast.directives);\n            visit(ast.providers);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) {\n            visit(ast.inputs);\n            visit(ast.hostProperties);\n            visit(ast.hostEvents);\n        });\n    };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveTemplateAstVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children && children.length)\n                results.push(templateVisitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveTemplateAstVisitor;\n}(NullTemplateVisitor));\n/**\n * Visit every node in a list of {\\@link TemplateAst}s with the given {\\@link TemplateAstVisitor}.\n * @param {?} visitor\n * @param {?} asts\n * @param {?=} context\n * @return {?}\n */\nfunction templateVisitAll(visitor, asts, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    asts.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CompilerConfig = (function () {\n    function CompilerConfig(_a) {\n        var _b = _a === void 0 ? {} : _a, _c = _b.defaultEncapsulation, defaultEncapsulation = _c === void 0 ? ViewEncapsulation.Emulated : _c, _d = _b.useJit, useJit = _d === void 0 ? true : _d, _e = _b.jitDevMode, jitDevMode = _e === void 0 ? false : _e, _f = _b.missingTranslation, missingTranslation = _f === void 0 ? null : _f, enableLegacyTemplate = _b.enableLegacyTemplate, preserveWhitespaces = _b.preserveWhitespaces, strictInjectionParameters = _b.strictInjectionParameters;\n        this.defaultEncapsulation = defaultEncapsulation;\n        this.useJit = !!useJit;\n        this.jitDevMode = !!jitDevMode;\n        this.missingTranslation = missingTranslation;\n        this.enableLegacyTemplate = enableLegacyTemplate === true;\n        this.preserveWhitespaces = preserveWhitespacesDefault(noUndefined(preserveWhitespaces));\n        this.strictInjectionParameters = strictInjectionParameters === true;\n    }\n    return CompilerConfig;\n}());\n/**\n * @param {?} preserveWhitespacesOption\n * @param {?=} defaultSetting\n * @return {?}\n */\nfunction preserveWhitespacesDefault(preserveWhitespacesOption, defaultSetting) {\n    if (defaultSetting === void 0) { defaultSetting = true; }\n    return preserveWhitespacesOption === null ? defaultSetting : preserveWhitespacesOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A token representing the a reference to a static type.\n *\n * This token is unique for a filePath and name and can be used as a hash table key.\n */\nvar StaticSymbol = (function () {\n    function StaticSymbol(filePath, name, members) {\n        this.filePath = filePath;\n        this.name = name;\n        this.members = members;\n    }\n    /**\n     * @return {?}\n     */\n    StaticSymbol.prototype.assertNoMembers = /**\n     * @return {?}\n     */\n    function () {\n        if (this.members.length) {\n            throw new Error(\"Illegal state: symbol without members expected, but got \" + JSON.stringify(this) + \".\");\n        }\n    };\n    return StaticSymbol;\n}());\n/**\n * A cache of static symbol used by the StaticReflector to return the same symbol for the\n * same symbol values.\n */\nvar StaticSymbolCache = (function () {\n    function StaticSymbolCache() {\n        this.cache = new Map();\n    }\n    /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticSymbolCache.prototype.get = /**\n     * @param {?} declarationFile\n     * @param {?} name\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        members = members || [];\n        var /** @type {?} */ memberSuffix = members.length ? \".\" + members.join('.') : '';\n        var /** @type {?} */ key = \"\\\"\" + declarationFile + \"\\\".\" + name + memberSuffix;\n        var /** @type {?} */ result = this.cache.get(key);\n        if (!result) {\n            result = new StaticSymbol(declarationFile, name, members);\n            this.cache.set(key, result);\n        }\n        return result;\n    };\n    return StaticSymbolCache;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// group 0: \"[prop] or (event) or @trigger\"\n// group 1: \"prop\" from \"[prop]\"\n// group 2: \"event\" from \"(event)\"\n// group 3: \"@trigger\" from \"@trigger\"\nvar HOST_REG_EXP = /^(?:(?:\\[([^\\]]+)\\])|(?:\\(([^\\)]+)\\)))|(\\@[-\\w]+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _sanitizeIdentifier(name) {\n    return name.replace(/\\W/g, '_');\n}\nvar _anonymousTypeIndex = 0;\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierName(compileIdentifier) {\n    if (!compileIdentifier || !compileIdentifier.reference) {\n        return null;\n    }\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.name;\n    }\n    if (ref['__anonymousType']) {\n        return ref['__anonymousType'];\n    }\n    var /** @type {?} */ identifier = stringify(ref);\n    if (identifier.indexOf('(') >= 0) {\n        // case: anonymous functions!\n        identifier = \"anonymous_\" + _anonymousTypeIndex++;\n        ref['__anonymousType'] = identifier;\n    }\n    else {\n        identifier = _sanitizeIdentifier(identifier);\n    }\n    return identifier;\n}\n/**\n * @param {?} compileIdentifier\n * @return {?}\n */\nfunction identifierModuleUrl(compileIdentifier) {\n    var /** @type {?} */ ref = compileIdentifier.reference;\n    if (ref instanceof StaticSymbol) {\n        return ref.filePath;\n    }\n    // Runtime type\n    return \"./\" + stringify(ref);\n}\n/**\n * @param {?} compType\n * @param {?} embeddedTemplateIndex\n * @return {?}\n */\nfunction viewClassName(compType, embeddedTemplateIndex) {\n    return \"View_\" + identifierName({ reference: compType }) + \"_\" + embeddedTemplateIndex;\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction rendererTypeName(compType) {\n    return \"RenderType_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction hostViewClassName(compType) {\n    return \"HostView_\" + identifierName({ reference: compType });\n}\n/**\n * @param {?} compType\n * @return {?}\n */\nfunction componentFactoryName(compType) {\n    return identifierName({ reference: compType }) + \"NgFactory\";\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/** @enum {number} */\nvar CompileSummaryKind = {\n    Pipe: 0,\n    Directive: 1,\n    NgModule: 2,\n    Injectable: 3,\n};\nCompileSummaryKind[CompileSummaryKind.Pipe] = \"Pipe\";\nCompileSummaryKind[CompileSummaryKind.Directive] = \"Directive\";\nCompileSummaryKind[CompileSummaryKind.NgModule] = \"NgModule\";\nCompileSummaryKind[CompileSummaryKind.Injectable] = \"Injectable\";\n/**\n * A CompileSummary is the data needed to use a directive / pipe / module\n * in other modules / components. However, this data is not enough to compile\n * the directive / module itself.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenName(token) {\n    return token.value != null ? _sanitizeIdentifier(token.value) : identifierName(token.identifier);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenReference(token) {\n    if (token.identifier != null) {\n        return token.identifier.reference;\n    }\n    else {\n        return token.value;\n    }\n}\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a type.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata about a stylesheet\n */\nvar CompileStylesheetMetadata = (function () {\n    function CompileStylesheetMetadata(_a) {\n        var _b = _a === void 0 ? {} : _a, moduleUrl = _b.moduleUrl, styles = _b.styles, styleUrls = _b.styleUrls;\n        this.moduleUrl = moduleUrl || null;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n    }\n    return CompileStylesheetMetadata;\n}());\n/**\n * Summary Metadata regarding compilation of a template.\n * @record\n */\n\n/**\n * Metadata regarding compilation of a template.\n */\nvar CompileTemplateMetadata = (function () {\n    function CompileTemplateMetadata(_a) {\n        var encapsulation = _a.encapsulation, template = _a.template, templateUrl = _a.templateUrl, htmlAst = _a.htmlAst, styles = _a.styles, styleUrls = _a.styleUrls, externalStylesheets = _a.externalStylesheets, animations = _a.animations, ngContentSelectors = _a.ngContentSelectors, interpolation = _a.interpolation, isInline = _a.isInline, preserveWhitespaces = _a.preserveWhitespaces;\n        this.encapsulation = encapsulation;\n        this.template = template;\n        this.templateUrl = templateUrl;\n        this.htmlAst = htmlAst;\n        this.styles = _normalizeArray(styles);\n        this.styleUrls = _normalizeArray(styleUrls);\n        this.externalStylesheets = _normalizeArray(externalStylesheets);\n        this.animations = animations ? flatten$1(animations) : [];\n        this.ngContentSelectors = ngContentSelectors || [];\n        if (interpolation && interpolation.length != 2) {\n            throw new Error(\"'interpolation' should have a start and an end symbol.\");\n        }\n        this.interpolation = interpolation;\n        this.isInline = isInline;\n        this.preserveWhitespaces = preserveWhitespaces;\n    }\n    /**\n     * @return {?}\n     */\n    CompileTemplateMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            ngContentSelectors: this.ngContentSelectors,\n            encapsulation: this.encapsulation,\n        };\n    };\n    return CompileTemplateMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a directive.\n */\nvar CompileDirectiveMetadata = (function () {\n    function CompileDirectiveMetadata(_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, hostListeners = _a.hostListeners, hostProperties = _a.hostProperties, hostAttributes = _a.hostAttributes, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        this.isHost = !!isHost;\n        this.type = type;\n        this.isComponent = isComponent;\n        this.selector = selector;\n        this.exportAs = exportAs;\n        this.changeDetection = changeDetection;\n        this.inputs = inputs;\n        this.outputs = outputs;\n        this.hostListeners = hostListeners;\n        this.hostProperties = hostProperties;\n        this.hostAttributes = hostAttributes;\n        this.providers = _normalizeArray(providers);\n        this.viewProviders = _normalizeArray(viewProviders);\n        this.queries = _normalizeArray(queries);\n        this.viewQueries = _normalizeArray(viewQueries);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.template = template;\n        this.componentViewType = componentViewType;\n        this.rendererType = rendererType;\n        this.componentFactory = componentFactory;\n    }\n    /**\n     * @param {?} __0\n     * @return {?}\n     */\n    CompileDirectiveMetadata.create = /**\n     * @param {?} __0\n     * @return {?}\n     */\n    function (_a) {\n        var isHost = _a.isHost, type = _a.type, isComponent = _a.isComponent, selector = _a.selector, exportAs = _a.exportAs, changeDetection = _a.changeDetection, inputs = _a.inputs, outputs = _a.outputs, host = _a.host, providers = _a.providers, viewProviders = _a.viewProviders, queries = _a.queries, viewQueries = _a.viewQueries, entryComponents = _a.entryComponents, template = _a.template, componentViewType = _a.componentViewType, rendererType = _a.rendererType, componentFactory = _a.componentFactory;\n        var /** @type {?} */ hostListeners = {};\n        var /** @type {?} */ hostProperties = {};\n        var /** @type {?} */ hostAttributes = {};\n        if (host != null) {\n            Object.keys(host).forEach(function (key) {\n                var /** @type {?} */ value = host[key];\n                var /** @type {?} */ matches = key.match(HOST_REG_EXP);\n                if (matches === null) {\n                    hostAttributes[key] = value;\n                }\n                else if (matches[1] != null) {\n                    hostProperties[matches[1]] = value;\n                }\n                else if (matches[2] != null) {\n                    hostListeners[matches[2]] = value;\n                }\n            });\n        }\n        var /** @type {?} */ inputsMap = {};\n        if (inputs != null) {\n            inputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                inputsMap[parts[0]] = parts[1];\n            });\n        }\n        var /** @type {?} */ outputsMap = {};\n        if (outputs != null) {\n            outputs.forEach(function (bindConfig) {\n                // canonical syntax: `dirProp: elProp`\n                // if there is no `:`, use dirProp = elProp\n                var /** @type {?} */ parts = splitAtColon(bindConfig, [bindConfig, bindConfig]);\n                outputsMap[parts[0]] = parts[1];\n            });\n        }\n        return new CompileDirectiveMetadata({\n            isHost: isHost,\n            type: type,\n            isComponent: !!isComponent, selector: selector, exportAs: exportAs, changeDetection: changeDetection,\n            inputs: inputsMap,\n            outputs: outputsMap,\n            hostListeners: hostListeners,\n            hostProperties: hostProperties,\n            hostAttributes: hostAttributes,\n            providers: providers,\n            viewProviders: viewProviders,\n            queries: queries,\n            viewQueries: viewQueries,\n            entryComponents: entryComponents,\n            template: template,\n            componentViewType: componentViewType,\n            rendererType: rendererType,\n            componentFactory: componentFactory,\n        });\n    };\n    /**\n     * @return {?}\n     */\n    CompileDirectiveMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Directive,\n            type: this.type,\n            isComponent: this.isComponent,\n            selector: this.selector,\n            exportAs: this.exportAs,\n            inputs: this.inputs,\n            outputs: this.outputs,\n            hostListeners: this.hostListeners,\n            hostProperties: this.hostProperties,\n            hostAttributes: this.hostAttributes,\n            providers: this.providers,\n            viewProviders: this.viewProviders,\n            queries: this.queries,\n            viewQueries: this.viewQueries,\n            entryComponents: this.entryComponents,\n            changeDetection: this.changeDetection,\n            template: this.template && this.template.toSummary(),\n            componentViewType: this.componentViewType,\n            rendererType: this.rendererType,\n            componentFactory: this.componentFactory\n        };\n    };\n    return CompileDirectiveMetadata;\n}());\n/**\n * @record\n */\n\nvar CompilePipeMetadata = (function () {\n    function CompilePipeMetadata(_a) {\n        var type = _a.type, name = _a.name, pure = _a.pure;\n        this.type = type;\n        this.name = name;\n        this.pure = !!pure;\n    }\n    /**\n     * @return {?}\n     */\n    CompilePipeMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        return {\n            summaryKind: CompileSummaryKind.Pipe,\n            type: this.type,\n            name: this.name,\n            pure: this.pure\n        };\n    };\n    return CompilePipeMetadata;\n}());\n/**\n * @record\n */\n\n/**\n * Metadata regarding compilation of a module.\n */\nvar CompileNgModuleMetadata = (function () {\n    function CompileNgModuleMetadata(_a) {\n        var type = _a.type, providers = _a.providers, declaredDirectives = _a.declaredDirectives, exportedDirectives = _a.exportedDirectives, declaredPipes = _a.declaredPipes, exportedPipes = _a.exportedPipes, entryComponents = _a.entryComponents, bootstrapComponents = _a.bootstrapComponents, importedModules = _a.importedModules, exportedModules = _a.exportedModules, schemas = _a.schemas, transitiveModule = _a.transitiveModule, id = _a.id;\n        this.type = type || null;\n        this.declaredDirectives = _normalizeArray(declaredDirectives);\n        this.exportedDirectives = _normalizeArray(exportedDirectives);\n        this.declaredPipes = _normalizeArray(declaredPipes);\n        this.exportedPipes = _normalizeArray(exportedPipes);\n        this.providers = _normalizeArray(providers);\n        this.entryComponents = _normalizeArray(entryComponents);\n        this.bootstrapComponents = _normalizeArray(bootstrapComponents);\n        this.importedModules = _normalizeArray(importedModules);\n        this.exportedModules = _normalizeArray(exportedModules);\n        this.schemas = _normalizeArray(schemas);\n        this.id = id || null;\n        this.transitiveModule = transitiveModule || null;\n    }\n    /**\n     * @return {?}\n     */\n    CompileNgModuleMetadata.prototype.toSummary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ module = /** @type {?} */ ((this.transitiveModule));\n        return {\n            summaryKind: CompileSummaryKind.NgModule,\n            type: this.type,\n            entryComponents: module.entryComponents,\n            providers: module.providers,\n            modules: module.modules,\n            exportedDirectives: module.exportedDirectives,\n            exportedPipes: module.exportedPipes\n        };\n    };\n    return CompileNgModuleMetadata;\n}());\nvar TransitiveCompileNgModuleMetadata = (function () {\n    function TransitiveCompileNgModuleMetadata() {\n        this.directivesSet = new Set();\n        this.directives = [];\n        this.exportedDirectivesSet = new Set();\n        this.exportedDirectives = [];\n        this.pipesSet = new Set();\n        this.pipes = [];\n        this.exportedPipesSet = new Set();\n        this.exportedPipes = [];\n        this.modulesSet = new Set();\n        this.modules = [];\n        this.entryComponentsSet = new Set();\n        this.entryComponents = [];\n        this.providers = [];\n    }\n    /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addProvider = /**\n     * @param {?} provider\n     * @param {?} module\n     * @return {?}\n     */\n    function (provider, module) {\n        this.providers.push({ provider: provider, module: module });\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.directivesSet.has(id.reference)) {\n            this.directivesSet.add(id.reference);\n            this.directives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedDirective = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedDirectivesSet.has(id.reference)) {\n            this.exportedDirectivesSet.add(id.reference);\n            this.exportedDirectives.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.pipesSet.has(id.reference)) {\n            this.pipesSet.add(id.reference);\n            this.pipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addExportedPipe = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.exportedPipesSet.has(id.reference)) {\n            this.exportedPipesSet.add(id.reference);\n            this.exportedPipes.push(id);\n        }\n    };\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addModule = /**\n     * @param {?} id\n     * @return {?}\n     */\n    function (id) {\n        if (!this.modulesSet.has(id.reference)) {\n            this.modulesSet.add(id.reference);\n            this.modules.push(id);\n        }\n    };\n    /**\n     * @param {?} ec\n     * @return {?}\n     */\n    TransitiveCompileNgModuleMetadata.prototype.addEntryComponent = /**\n     * @param {?} ec\n     * @return {?}\n     */\n    function (ec) {\n        if (!this.entryComponentsSet.has(ec.componentType)) {\n            this.entryComponentsSet.add(ec.componentType);\n            this.entryComponents.push(ec);\n        }\n    };\n    return TransitiveCompileNgModuleMetadata;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction _normalizeArray(obj) {\n    return obj || [];\n}\nvar ProviderMeta = (function () {\n    function ProviderMeta(token, _a) {\n        var useClass = _a.useClass, useValue = _a.useValue, useExisting = _a.useExisting, useFactory = _a.useFactory, deps = _a.deps, multi = _a.multi;\n        this.token = token;\n        this.useClass = useClass || null;\n        this.useValue = useValue;\n        this.useExisting = useExisting;\n        this.useFactory = useFactory || null;\n        this.dependencies = deps || null;\n        this.multi = !!multi;\n    }\n    return ProviderMeta;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$1(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$1(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n/**\n * @param {?} url\n * @return {?}\n */\nfunction jitSourceUrl(url) {\n    // Note: We need 3 \"/\" so that ng shows up as a separate domain\n    // in the chrome dev tools.\n    return url.replace(/(\\w+:\\/\\/[\\w:-]+)?(\\/+)?/, 'ng:///');\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @param {?} templateMeta\n * @return {?}\n */\nfunction templateSourceUrl(ngModuleType, compMeta, templateMeta) {\n    var /** @type {?} */ url;\n    if (templateMeta.isInline) {\n        if (compMeta.type.reference instanceof StaticSymbol) {\n            // Note: a .ts file might contain multiple components with inline templates,\n            // so we need to give them unique urls, as these will be used for sourcemaps.\n            url = compMeta.type.reference.filePath + \".\" + compMeta.type.reference.name + \".html\";\n        }\n        else {\n            url = identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".html\";\n        }\n    }\n    else {\n        url = /** @type {?} */ ((templateMeta.templateUrl));\n    }\n    return compMeta.type.reference instanceof StaticSymbol ? url : jitSourceUrl(url);\n}\n/**\n * @param {?} meta\n * @param {?} id\n * @return {?}\n */\nfunction sharedStylesheetJitUrl(meta, id) {\n    var /** @type {?} */ pathParts = /** @type {?} */ ((meta.moduleUrl)).split(/\\/\\\\/g);\n    var /** @type {?} */ baseName = pathParts[pathParts.length - 1];\n    return jitSourceUrl(\"css/\" + id + baseName + \".ngstyle.js\");\n}\n/**\n * @param {?} moduleMeta\n * @return {?}\n */\nfunction ngModuleJitUrl(moduleMeta) {\n    return jitSourceUrl(identifierName(moduleMeta.type) + \"/module.ngfactory.js\");\n}\n/**\n * @param {?} ngModuleType\n * @param {?} compMeta\n * @return {?}\n */\nfunction templateJitUrl(ngModuleType, compMeta) {\n    return jitSourceUrl(identifierName(ngModuleType) + \"/\" + identifierName(compMeta.type) + \".ngfactory.js\");\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A path is an ordered set of elements. Typically a path is to  a\n * particular offset in a source file. The head of the list is the top\n * most node. The tail is the node that contains the offset directly.\n *\n * For example, the expresion `a + b + c` might have an ast that looks\n * like:\n *     +\n *    / \\\n *   a   +\n *      / \\\n *     b   c\n *\n * The path to the node at offset 9 would be `['+' at 1-10, '+' at 7-10,\n * 'c' at 9-10]` and the path the node at offset 1 would be\n * `['+' at 1-10, 'a' at 1-2]`.\n */\nvar AstPath = (function () {\n    function AstPath(path$$1, position) {\n        if (position === void 0) { position = -1; }\n        this.path = path$$1;\n        this.position = position;\n    }\n    Object.defineProperty(AstPath.prototype, \"empty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return !this.path || !this.path.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"head\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstPath.prototype, \"tail\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.path[this.path.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.parentOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        return node && this.path[this.path.indexOf(node) - 1];\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.childOf = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.path[this.path.indexOf(node) + 1]; };\n    /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    AstPath.prototype.first = /**\n     * @template N\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (ctor) {\n        for (var /** @type {?} */ i = this.path.length - 1; i >= 0; i--) {\n            var /** @type {?} */ item = this.path[i];\n            if (item instanceof ctor)\n                return /** @type {?} */ (item);\n        }\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    AstPath.prototype.push = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { this.path.push(node); };\n    /**\n     * @return {?}\n     */\n    AstPath.prototype.pop = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this.path.pop())); };\n    return AstPath;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar Text = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Expansion = (function () {\n    function Expansion(switchValue, type, cases, sourceSpan, switchValueSourceSpan) {\n        this.switchValue = switchValue;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n        this.switchValueSourceSpan = switchValueSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Expansion.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansion(this, context); };\n    return Expansion;\n}());\nvar ExpansionCase = (function () {\n    function ExpansionCase(value, expression, sourceSpan, valueSourceSpan, expSourceSpan) {\n        this.value = value;\n        this.expression = expression;\n        this.sourceSpan = sourceSpan;\n        this.valueSourceSpan = valueSourceSpan;\n        this.expSourceSpan = expSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpansionCase.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitExpansionCase(this, context); };\n    return ExpansionCase;\n}());\nvar Attribute$1 = (function () {\n    function Attribute(name, value, sourceSpan, valueSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n        this.valueSpan = valueSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Attribute.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitAttribute(this, context); };\n    return Attribute;\n}());\nvar Element = (function () {\n    function Element(name, attrs, children, sourceSpan, startSourceSpan, endSourceSpan) {\n        if (startSourceSpan === void 0) { startSourceSpan = null; }\n        if (endSourceSpan === void 0) { endSourceSpan = null; }\n        this.name = name;\n        this.attrs = attrs;\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n        this.startSourceSpan = startSourceSpan;\n        this.endSourceSpan = endSourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Element.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitElement(this, context); };\n    return Element;\n}());\nvar Comment = (function () {\n    function Comment(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    Comment.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitComment(this, context); };\n    return Comment;\n}());\n/**\n * @record\n */\n\n/**\n * @param {?} visitor\n * @param {?} nodes\n * @param {?=} context\n * @return {?}\n */\nfunction visitAll(visitor, nodes, context) {\n    if (context === void 0) { context = null; }\n    var /** @type {?} */ result = [];\n    var /** @type {?} */ visit = visitor.visit ?\n        function (ast) { return /** @type {?} */ ((visitor.visit))(ast, context) || ast.visit(visitor, context); } :\n        function (ast) { return ast.visit(visitor, context); };\n    nodes.forEach(function (ast) {\n        var /** @type {?} */ astResult = visit(ast);\n        if (astResult) {\n            result.push(astResult);\n        }\n    });\n    return result;\n}\nvar RecursiveVisitor = (function () {\n    function RecursiveVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitChildren(context, function (visit) {\n            visit(ast.attrs);\n            visit(ast.children);\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitChildren(context, function (visit) { visit(ast.cases); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    RecursiveVisitor.prototype.visitChildren = /**\n     * @template T\n     * @param {?} context\n     * @param {?} cb\n     * @return {?}\n     */\n    function (context, cb) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ t = this;\n        /**\n         * @template T\n         * @param {?} children\n         * @return {?}\n         */\n        function visit(children) {\n            if (children)\n                results.push(visitAll(t, children, context));\n        }\n        cb(visit);\n        return [].concat.apply([], results);\n    };\n    return RecursiveVisitor;\n}());\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction spanOf$1$1(ast) {\n    var /** @type {?} */ start = ast.sourceSpan.start.offset;\n    var /** @type {?} */ end = ast.sourceSpan.end.offset;\n    if (ast instanceof Element) {\n        if (ast.endSourceSpan) {\n            end = ast.endSourceSpan.end.offset;\n        }\n        else if (ast.children && ast.children.length) {\n            end = spanOf$1$1(ast.children[ast.children.length - 1]).end;\n        }\n    }\n    return { start: start, end: end };\n}\n/**\n * @param {?} nodes\n * @param {?} position\n * @return {?}\n */\nfunction findNode(nodes, position) {\n    var /** @type {?} */ path$$1 = [];\n    var /** @type {?} */ visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        class_1.prototype.visit = /**\n         * @param {?} ast\n         * @param {?} context\n         * @return {?}\n         */\n        function (ast, context) {\n            var /** @type {?} */ span = spanOf$1$1(ast);\n            if (span.start <= position && position < span.end) {\n                path$$1.push(ast);\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        return class_1;\n    }(RecursiveVisitor));\n    visitAll(visitor, nodes);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertArrayOfStrings(identifier, value) {\n    if (value == null) {\n        return;\n    }\n    if (!Array.isArray(value)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n    }\n    for (var /** @type {?} */ i = 0; i < value.length; i += 1) {\n        if (typeof value[i] !== 'string') {\n            throw new Error(\"Expected '\" + identifier + \"' to be an array of strings.\");\n        }\n    }\n}\nvar INTERPOLATION_BLACKLIST_REGEXPS = [\n    /^\\s*$/,\n    /[<>]/,\n    /^[{}]$/,\n    /&(#|[a-z])/i,\n    /^\\/\\//,\n];\n/**\n * @param {?} identifier\n * @param {?} value\n * @return {?}\n */\nfunction assertInterpolationSymbols(identifier, value) {\n    if (value != null && !(Array.isArray(value) && value.length == 2)) {\n        throw new Error(\"Expected '\" + identifier + \"' to be an array, [start, end].\");\n    }\n    else if (value != null) {\n        var /** @type {?} */ start_1 = /** @type {?} */ (value[0]);\n        var /** @type {?} */ end_1 = /** @type {?} */ (value[1]);\n        // black list checking\n        INTERPOLATION_BLACKLIST_REGEXPS.forEach(function (regexp) {\n            if (regexp.test(start_1) || regexp.test(end_1)) {\n                throw new Error(\"['\" + start_1 + \"', '\" + end_1 + \"'] contains unusable interpolation symbol.\");\n            }\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar InterpolationConfig = (function () {\n    function InterpolationConfig(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    /**\n     * @param {?} markers\n     * @return {?}\n     */\n    InterpolationConfig.fromArray = /**\n     * @param {?} markers\n     * @return {?}\n     */\n    function (markers) {\n        if (!markers) {\n            return DEFAULT_INTERPOLATION_CONFIG;\n        }\n        assertInterpolationSymbols('interpolation', markers);\n        return new InterpolationConfig(markers[0], markers[1]);\n    };\n    return InterpolationConfig;\n}());\nvar DEFAULT_INTERPOLATION_CONFIG = new InterpolationConfig('{{', '}}');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar StyleWithImports = (function () {\n    function StyleWithImports(style, styleUrls) {\n        this.style = style;\n        this.styleUrls = styleUrls;\n    }\n    return StyleWithImports;\n}());\n/**\n * @param {?} url\n * @return {?}\n */\nfunction isStyleUrlResolvable(url) {\n    if (url == null || url.length === 0 || url[0] == '/')\n        return false;\n    var /** @type {?} */ schemeMatch = url.match(URL_WITH_SCHEMA_REGEXP);\n    return schemeMatch === null || schemeMatch[1] == 'package' || schemeMatch[1] == 'asset';\n}\n/**\n * Rewrites stylesheets by resolving and removing the \\@import urls that\n * are either relative or don't have a `package:` scheme\n * @param {?} resolver\n * @param {?} baseUrl\n * @param {?} cssText\n * @return {?}\n */\nfunction extractStyleUrls(resolver, baseUrl, cssText) {\n    var /** @type {?} */ foundUrls = [];\n    var /** @type {?} */ modifiedCssText = cssText.replace(CSS_STRIPPABLE_COMMENT_REGEXP, '')\n        .replace(CSS_IMPORT_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ url = m[1] || m[2];\n        if (!isStyleUrlResolvable(url)) {\n            // Do not attempt to resolve non-package absolute URLs with URI\n            // scheme\n            return m[0];\n        }\n        foundUrls.push(resolver.resolve(baseUrl, url));\n        return '';\n    });\n    return new StyleWithImports(modifiedCssText, foundUrls);\n}\nvar CSS_IMPORT_REGEXP = /@import\\s+(?:url\\()?\\s*(?:(?:['\"]([^'\"]*))|([^;\\)\\s]*))[^;]*;?/g;\nvar CSS_STRIPPABLE_COMMENT_REGEXP = /\\/\\*(?!#\\s*(?:sourceURL|sourceMappingURL)=)[\\s\\S]+?\\*\\//g;\nvar URL_WITH_SCHEMA_REGEXP = /^([^:/?#]+):/;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TagContentType = {\n    RAW_TEXT: 0,\n    ESCAPABLE_RAW_TEXT: 1,\n    PARSABLE_DATA: 2,\n};\nTagContentType[TagContentType.RAW_TEXT] = \"RAW_TEXT\";\nTagContentType[TagContentType.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTagContentType[TagContentType.PARSABLE_DATA] = \"PARSABLE_DATA\";\n/**\n * @record\n */\n\n/**\n * @param {?} elementName\n * @return {?}\n */\nfunction splitNsName(elementName) {\n    if (elementName[0] != ':') {\n        return [null, elementName];\n    }\n    var /** @type {?} */ colonIndex = elementName.indexOf(':', 1);\n    if (colonIndex == -1) {\n        throw new Error(\"Unsupported format \\\"\" + elementName + \"\\\" expecting \\\":namespace:name\\\"\");\n    }\n    return [elementName.slice(1, colonIndex), elementName.slice(colonIndex + 1)];\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContainer(tagName) {\n    return splitNsName(tagName)[1] === 'ng-container';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgContent(tagName) {\n    return splitNsName(tagName)[1] === 'ng-content';\n}\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction isNgTemplate(tagName) {\n    return splitNsName(tagName)[1] === 'ng-template';\n}\n/**\n * @param {?} fullName\n * @return {?}\n */\nfunction getNsPrefix(fullName) {\n    return fullName === null ? null : splitNsName(fullName)[0];\n}\n/**\n * @param {?} prefix\n * @param {?} localName\n * @return {?}\n */\nfunction mergeNsAndName(prefix, localName) {\n    return prefix ? \":\" + prefix + \":\" + localName : localName;\n}\n// see http://www.w3.org/TR/html51/syntax.html#named-character-references\n// see https://html.spec.whatwg.org/multipage/entities.json\n// This list is not exhaustive to keep the compiler footprint low.\n// The `&#123;` / `&#x1ab;` syntax should be used when the named character reference does not\n// exist.\nvar NAMED_ENTITIES = {\n    'Aacute': '\\u00C1',\n    'aacute': '\\u00E1',\n    'Acirc': '\\u00C2',\n    'acirc': '\\u00E2',\n    'acute': '\\u00B4',\n    'AElig': '\\u00C6',\n    'aelig': '\\u00E6',\n    'Agrave': '\\u00C0',\n    'agrave': '\\u00E0',\n    'alefsym': '\\u2135',\n    'Alpha': '\\u0391',\n    'alpha': '\\u03B1',\n    'amp': '&',\n    'and': '\\u2227',\n    'ang': '\\u2220',\n    'apos': '\\u0027',\n    'Aring': '\\u00C5',\n    'aring': '\\u00E5',\n    'asymp': '\\u2248',\n    'Atilde': '\\u00C3',\n    'atilde': '\\u00E3',\n    'Auml': '\\u00C4',\n    'auml': '\\u00E4',\n    'bdquo': '\\u201E',\n    'Beta': '\\u0392',\n    'beta': '\\u03B2',\n    'brvbar': '\\u00A6',\n    'bull': '\\u2022',\n    'cap': '\\u2229',\n    'Ccedil': '\\u00C7',\n    'ccedil': '\\u00E7',\n    'cedil': '\\u00B8',\n    'cent': '\\u00A2',\n    'Chi': '\\u03A7',\n    'chi': '\\u03C7',\n    'circ': '\\u02C6',\n    'clubs': '\\u2663',\n    'cong': '\\u2245',\n    'copy': '\\u00A9',\n    'crarr': '\\u21B5',\n    'cup': '\\u222A',\n    'curren': '\\u00A4',\n    'dagger': '\\u2020',\n    'Dagger': '\\u2021',\n    'darr': '\\u2193',\n    'dArr': '\\u21D3',\n    'deg': '\\u00B0',\n    'Delta': '\\u0394',\n    'delta': '\\u03B4',\n    'diams': '\\u2666',\n    'divide': '\\u00F7',\n    'Eacute': '\\u00C9',\n    'eacute': '\\u00E9',\n    'Ecirc': '\\u00CA',\n    'ecirc': '\\u00EA',\n    'Egrave': '\\u00C8',\n    'egrave': '\\u00E8',\n    'empty': '\\u2205',\n    'emsp': '\\u2003',\n    'ensp': '\\u2002',\n    'Epsilon': '\\u0395',\n    'epsilon': '\\u03B5',\n    'equiv': '\\u2261',\n    'Eta': '\\u0397',\n    'eta': '\\u03B7',\n    'ETH': '\\u00D0',\n    'eth': '\\u00F0',\n    'Euml': '\\u00CB',\n    'euml': '\\u00EB',\n    'euro': '\\u20AC',\n    'exist': '\\u2203',\n    'fnof': '\\u0192',\n    'forall': '\\u2200',\n    'frac12': '\\u00BD',\n    'frac14': '\\u00BC',\n    'frac34': '\\u00BE',\n    'frasl': '\\u2044',\n    'Gamma': '\\u0393',\n    'gamma': '\\u03B3',\n    'ge': '\\u2265',\n    'gt': '>',\n    'harr': '\\u2194',\n    'hArr': '\\u21D4',\n    'hearts': '\\u2665',\n    'hellip': '\\u2026',\n    'Iacute': '\\u00CD',\n    'iacute': '\\u00ED',\n    'Icirc': '\\u00CE',\n    'icirc': '\\u00EE',\n    'iexcl': '\\u00A1',\n    'Igrave': '\\u00CC',\n    'igrave': '\\u00EC',\n    'image': '\\u2111',\n    'infin': '\\u221E',\n    'int': '\\u222B',\n    'Iota': '\\u0399',\n    'iota': '\\u03B9',\n    'iquest': '\\u00BF',\n    'isin': '\\u2208',\n    'Iuml': '\\u00CF',\n    'iuml': '\\u00EF',\n    'Kappa': '\\u039A',\n    'kappa': '\\u03BA',\n    'Lambda': '\\u039B',\n    'lambda': '\\u03BB',\n    'lang': '\\u27E8',\n    'laquo': '\\u00AB',\n    'larr': '\\u2190',\n    'lArr': '\\u21D0',\n    'lceil': '\\u2308',\n    'ldquo': '\\u201C',\n    'le': '\\u2264',\n    'lfloor': '\\u230A',\n    'lowast': '\\u2217',\n    'loz': '\\u25CA',\n    'lrm': '\\u200E',\n    'lsaquo': '\\u2039',\n    'lsquo': '\\u2018',\n    'lt': '<',\n    'macr': '\\u00AF',\n    'mdash': '\\u2014',\n    'micro': '\\u00B5',\n    'middot': '\\u00B7',\n    'minus': '\\u2212',\n    'Mu': '\\u039C',\n    'mu': '\\u03BC',\n    'nabla': '\\u2207',\n    'nbsp': '\\u00A0',\n    'ndash': '\\u2013',\n    'ne': '\\u2260',\n    'ni': '\\u220B',\n    'not': '\\u00AC',\n    'notin': '\\u2209',\n    'nsub': '\\u2284',\n    'Ntilde': '\\u00D1',\n    'ntilde': '\\u00F1',\n    'Nu': '\\u039D',\n    'nu': '\\u03BD',\n    'Oacute': '\\u00D3',\n    'oacute': '\\u00F3',\n    'Ocirc': '\\u00D4',\n    'ocirc': '\\u00F4',\n    'OElig': '\\u0152',\n    'oelig': '\\u0153',\n    'Ograve': '\\u00D2',\n    'ograve': '\\u00F2',\n    'oline': '\\u203E',\n    'Omega': '\\u03A9',\n    'omega': '\\u03C9',\n    'Omicron': '\\u039F',\n    'omicron': '\\u03BF',\n    'oplus': '\\u2295',\n    'or': '\\u2228',\n    'ordf': '\\u00AA',\n    'ordm': '\\u00BA',\n    'Oslash': '\\u00D8',\n    'oslash': '\\u00F8',\n    'Otilde': '\\u00D5',\n    'otilde': '\\u00F5',\n    'otimes': '\\u2297',\n    'Ouml': '\\u00D6',\n    'ouml': '\\u00F6',\n    'para': '\\u00B6',\n    'permil': '\\u2030',\n    'perp': '\\u22A5',\n    'Phi': '\\u03A6',\n    'phi': '\\u03C6',\n    'Pi': '\\u03A0',\n    'pi': '\\u03C0',\n    'piv': '\\u03D6',\n    'plusmn': '\\u00B1',\n    'pound': '\\u00A3',\n    'prime': '\\u2032',\n    'Prime': '\\u2033',\n    'prod': '\\u220F',\n    'prop': '\\u221D',\n    'Psi': '\\u03A8',\n    'psi': '\\u03C8',\n    'quot': '\\u0022',\n    'radic': '\\u221A',\n    'rang': '\\u27E9',\n    'raquo': '\\u00BB',\n    'rarr': '\\u2192',\n    'rArr': '\\u21D2',\n    'rceil': '\\u2309',\n    'rdquo': '\\u201D',\n    'real': '\\u211C',\n    'reg': '\\u00AE',\n    'rfloor': '\\u230B',\n    'Rho': '\\u03A1',\n    'rho': '\\u03C1',\n    'rlm': '\\u200F',\n    'rsaquo': '\\u203A',\n    'rsquo': '\\u2019',\n    'sbquo': '\\u201A',\n    'Scaron': '\\u0160',\n    'scaron': '\\u0161',\n    'sdot': '\\u22C5',\n    'sect': '\\u00A7',\n    'shy': '\\u00AD',\n    'Sigma': '\\u03A3',\n    'sigma': '\\u03C3',\n    'sigmaf': '\\u03C2',\n    'sim': '\\u223C',\n    'spades': '\\u2660',\n    'sub': '\\u2282',\n    'sube': '\\u2286',\n    'sum': '\\u2211',\n    'sup': '\\u2283',\n    'sup1': '\\u00B9',\n    'sup2': '\\u00B2',\n    'sup3': '\\u00B3',\n    'supe': '\\u2287',\n    'szlig': '\\u00DF',\n    'Tau': '\\u03A4',\n    'tau': '\\u03C4',\n    'there4': '\\u2234',\n    'Theta': '\\u0398',\n    'theta': '\\u03B8',\n    'thetasym': '\\u03D1',\n    'thinsp': '\\u2009',\n    'THORN': '\\u00DE',\n    'thorn': '\\u00FE',\n    'tilde': '\\u02DC',\n    'times': '\\u00D7',\n    'trade': '\\u2122',\n    'Uacute': '\\u00DA',\n    'uacute': '\\u00FA',\n    'uarr': '\\u2191',\n    'uArr': '\\u21D1',\n    'Ucirc': '\\u00DB',\n    'ucirc': '\\u00FB',\n    'Ugrave': '\\u00D9',\n    'ugrave': '\\u00F9',\n    'uml': '\\u00A8',\n    'upsih': '\\u03D2',\n    'Upsilon': '\\u03A5',\n    'upsilon': '\\u03C5',\n    'Uuml': '\\u00DC',\n    'uuml': '\\u00FC',\n    'weierp': '\\u2118',\n    'Xi': '\\u039E',\n    'xi': '\\u03BE',\n    'Yacute': '\\u00DD',\n    'yacute': '\\u00FD',\n    'yen': '\\u00A5',\n    'yuml': '\\u00FF',\n    'Yuml': '\\u0178',\n    'Zeta': '\\u0396',\n    'zeta': '\\u03B6',\n    'zwj': '\\u200D',\n    'zwnj': '\\u200C',\n};\n// The &ngsp; pseudo-entity is denoting a space. see:\n// https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart\nvar NGSP_UNICODE = '\\uE500';\nNAMED_ENTITIES['ngsp'] = NGSP_UNICODE;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar NG_CONTENT_SELECT_ATTR = 'select';\nvar LINK_ELEMENT = 'link';\nvar LINK_STYLE_REL_ATTR = 'rel';\nvar LINK_STYLE_HREF_ATTR = 'href';\nvar LINK_STYLE_REL_VALUE = 'stylesheet';\nvar STYLE_ELEMENT = 'style';\nvar SCRIPT_ELEMENT = 'script';\nvar NG_NON_BINDABLE_ATTR = 'ngNonBindable';\nvar NG_PROJECT_AS = 'ngProjectAs';\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction preparseElement(ast) {\n    var /** @type {?} */ selectAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ hrefAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ relAttr = /** @type {?} */ ((null));\n    var /** @type {?} */ nonBindable = false;\n    var /** @type {?} */ projectAs = /** @type {?} */ ((null));\n    ast.attrs.forEach(function (attr) {\n        var /** @type {?} */ lcAttrName = attr.name.toLowerCase();\n        if (lcAttrName == NG_CONTENT_SELECT_ATTR) {\n            selectAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_HREF_ATTR) {\n            hrefAttr = attr.value;\n        }\n        else if (lcAttrName == LINK_STYLE_REL_ATTR) {\n            relAttr = attr.value;\n        }\n        else if (attr.name == NG_NON_BINDABLE_ATTR) {\n            nonBindable = true;\n        }\n        else if (attr.name == NG_PROJECT_AS) {\n            if (attr.value.length > 0) {\n                projectAs = attr.value;\n            }\n        }\n    });\n    selectAttr = normalizeNgContentSelect(selectAttr);\n    var /** @type {?} */ nodeName = ast.name.toLowerCase();\n    var /** @type {?} */ type = PreparsedElementType.OTHER;\n    if (isNgContent(nodeName)) {\n        type = PreparsedElementType.NG_CONTENT;\n    }\n    else if (nodeName == STYLE_ELEMENT) {\n        type = PreparsedElementType.STYLE;\n    }\n    else if (nodeName == SCRIPT_ELEMENT) {\n        type = PreparsedElementType.SCRIPT;\n    }\n    else if (nodeName == LINK_ELEMENT && relAttr == LINK_STYLE_REL_VALUE) {\n        type = PreparsedElementType.STYLESHEET;\n    }\n    return new PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs);\n}\n/** @enum {number} */\nvar PreparsedElementType = {\n    NG_CONTENT: 0,\n    STYLE: 1,\n    STYLESHEET: 2,\n    SCRIPT: 3,\n    OTHER: 4,\n};\nPreparsedElementType[PreparsedElementType.NG_CONTENT] = \"NG_CONTENT\";\nPreparsedElementType[PreparsedElementType.STYLE] = \"STYLE\";\nPreparsedElementType[PreparsedElementType.STYLESHEET] = \"STYLESHEET\";\nPreparsedElementType[PreparsedElementType.SCRIPT] = \"SCRIPT\";\nPreparsedElementType[PreparsedElementType.OTHER] = \"OTHER\";\nvar PreparsedElement = (function () {\n    function PreparsedElement(type, selectAttr, hrefAttr, nonBindable, projectAs) {\n        this.type = type;\n        this.selectAttr = selectAttr;\n        this.hrefAttr = hrefAttr;\n        this.nonBindable = nonBindable;\n        this.projectAs = projectAs;\n    }\n    return PreparsedElement;\n}());\n/**\n * @param {?} selectAttr\n * @return {?}\n */\nfunction normalizeNgContentSelect(selectAttr) {\n    if (selectAttr === null || selectAttr.length === 0) {\n        return '*';\n    }\n    return selectAttr;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\nvar DirectiveNormalizer = (function () {\n    function DirectiveNormalizer(_resourceLoader, _urlResolver, _htmlParser, _config) {\n        this._resourceLoader = _resourceLoader;\n        this._urlResolver = _urlResolver;\n        this._htmlParser = _htmlParser;\n        this._config = _config;\n        this._resourceLoaderCache = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._resourceLoaderCache.clear(); };\n    /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.clearCacheFor = /**\n     * @param {?} normalizedDirective\n     * @return {?}\n     */\n    function (normalizedDirective) {\n        var _this = this;\n        if (!normalizedDirective.isComponent) {\n            return;\n        }\n        var /** @type {?} */ template = /** @type {?} */ ((normalizedDirective.template));\n        this._resourceLoaderCache.delete(/** @type {?} */ ((template.templateUrl)));\n        template.externalStylesheets.forEach(function (stylesheet) { _this._resourceLoaderCache.delete(/** @type {?} */ ((stylesheet.moduleUrl))); });\n    };\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._fetch = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) {\n        var /** @type {?} */ result = this._resourceLoaderCache.get(url);\n        if (!result) {\n            result = this._resourceLoader.get(url);\n            this._resourceLoaderCache.set(url, result);\n        }\n        return result;\n    };\n    /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype.normalizeTemplate = /**\n     * @param {?} prenormData\n     * @return {?}\n     */\n    function (prenormData) {\n        var _this = this;\n        if (isDefined(prenormData.template)) {\n            if (isDefined(prenormData.templateUrl)) {\n                throw syntaxError(\"'\" + stringify(prenormData.componentType) + \"' component cannot define both template and templateUrl\");\n            }\n            if (typeof prenormData.template !== 'string') {\n                throw syntaxError(\"The template specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else if (isDefined(prenormData.templateUrl)) {\n            if (typeof prenormData.templateUrl !== 'string') {\n                throw syntaxError(\"The templateUrl specified for component \" + stringify(prenormData.componentType) + \" is not a string\");\n            }\n        }\n        else {\n            throw syntaxError(\"No template specified for component \" + stringify(prenormData.componentType));\n        }\n        if (isDefined(prenormData.preserveWhitespaces) &&\n            typeof prenormData.preserveWhitespaces !== 'boolean') {\n            throw syntaxError(\"The preserveWhitespaces option for component \" + stringify(prenormData.componentType) + \" must be a boolean\");\n        }\n        return SyncAsync.then(this._preParseTemplate(prenormData), function (preparsedTemplate) { return _this._normalizeTemplateMetadata(prenormData, preparsedTemplate); });\n    };\n    /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preParseTemplate = /**\n     * @param {?} prenomData\n     * @return {?}\n     */\n    function (prenomData) {\n        var _this = this;\n        var /** @type {?} */ template;\n        var /** @type {?} */ templateUrl;\n        if (prenomData.template != null) {\n            template = prenomData.template;\n            templateUrl = prenomData.moduleUrl;\n        }\n        else {\n            templateUrl = this._urlResolver.resolve(prenomData.moduleUrl, /** @type {?} */ ((prenomData.templateUrl)));\n            template = this._fetch(templateUrl);\n        }\n        return SyncAsync.then(template, function (template) { return _this._preparseLoadedTemplate(prenomData, template, templateUrl); });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._preparseLoadedTemplate = /**\n     * @param {?} prenormData\n     * @param {?} template\n     * @param {?} templateAbsUrl\n     * @return {?}\n     */\n    function (prenormData, template, templateAbsUrl) {\n        var /** @type {?} */ isInline = !!prenormData.template;\n        var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((prenormData.interpolation)));\n        var /** @type {?} */ rootNodesAndErrors = this._htmlParser.parse(template, templateSourceUrl({ reference: prenormData.ngModuleType }, { type: { reference: prenormData.componentType } }, { isInline: isInline, templateUrl: templateAbsUrl }), true, interpolationConfig);\n        if (rootNodesAndErrors.errors.length > 0) {\n            var /** @type {?} */ errorString = rootNodesAndErrors.errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString);\n        }\n        var /** @type {?} */ templateMetadataStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: prenormData.styles, moduleUrl: prenormData.moduleUrl }));\n        var /** @type {?} */ visitor = new TemplatePreparseVisitor();\n        visitAll(visitor, rootNodesAndErrors.rootNodes);\n        var /** @type {?} */ templateStyles = this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: visitor.styles, styleUrls: visitor.styleUrls, moduleUrl: templateAbsUrl }));\n        var /** @type {?} */ styles = templateMetadataStyles.styles.concat(templateStyles.styles);\n        var /** @type {?} */ inlineStyleUrls = templateMetadataStyles.styleUrls.concat(templateStyles.styleUrls);\n        var /** @type {?} */ styleUrls = this\n            ._normalizeStylesheet(new CompileStylesheetMetadata({ styleUrls: prenormData.styleUrls, moduleUrl: prenormData.moduleUrl }))\n            .styleUrls;\n        return {\n            template: template,\n            templateUrl: templateAbsUrl, isInline: isInline,\n            htmlAst: rootNodesAndErrors, styles: styles, inlineStyleUrls: inlineStyleUrls, styleUrls: styleUrls,\n            ngContentSelectors: visitor.ngContentSelectors,\n        };\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate) {\n        var _this = this;\n        return SyncAsync.then(this._loadMissingExternalStylesheets(preparsedTemplate.styleUrls.concat(preparsedTemplate.inlineStyleUrls)), function (externalStylesheets) {\n            return _this._normalizeLoadedTemplateMetadata(prenormData, preparsedTemplate, externalStylesheets);\n        });\n    };\n    /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeLoadedTemplateMetadata = /**\n     * @param {?} prenormData\n     * @param {?} preparsedTemplate\n     * @param {?} stylesheets\n     * @return {?}\n     */\n    function (prenormData, preparsedTemplate, stylesheets) {\n        var _this = this;\n        // Algorithm:\n        // - produce exactly 1 entry per original styleUrl in\n        // CompileTemplateMetadata.externalStylesheets whith all styles inlined\n        // - inline all styles that are referenced by the template into CompileTemplateMetadata.styles.\n        // Reason: be able to determine how many stylesheets there are even without loading\n        // the template nor the stylesheets, so we can create a stub for TypeScript always synchronously\n        // (as resouce loading may be async)\n        var /** @type {?} */ styles = preparsedTemplate.styles.slice();\n        this._inlineStyles(preparsedTemplate.inlineStyleUrls, stylesheets, styles);\n        var /** @type {?} */ styleUrls = preparsedTemplate.styleUrls;\n        var /** @type {?} */ externalStylesheets = styleUrls.map(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            var /** @type {?} */ styles = stylesheet.styles.slice();\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, styles);\n            return new CompileStylesheetMetadata({ moduleUrl: styleUrl, styles: styles });\n        });\n        var /** @type {?} */ encapsulation = prenormData.encapsulation;\n        if (encapsulation == null) {\n            encapsulation = this._config.defaultEncapsulation;\n        }\n        if (encapsulation === ViewEncapsulation.Emulated && styles.length === 0 &&\n            styleUrls.length === 0) {\n            encapsulation = ViewEncapsulation.None;\n        }\n        return new CompileTemplateMetadata({\n            encapsulation: encapsulation,\n            template: preparsedTemplate.template,\n            templateUrl: preparsedTemplate.templateUrl,\n            htmlAst: preparsedTemplate.htmlAst, styles: styles, styleUrls: styleUrls,\n            ngContentSelectors: preparsedTemplate.ngContentSelectors,\n            animations: prenormData.animations,\n            interpolation: prenormData.interpolation,\n            isInline: preparsedTemplate.isInline, externalStylesheets: externalStylesheets,\n            preserveWhitespaces: preserveWhitespacesDefault(prenormData.preserveWhitespaces, this._config.preserveWhitespaces),\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._inlineStyles = /**\n     * @param {?} styleUrls\n     * @param {?} stylesheets\n     * @param {?} targetStyles\n     * @return {?}\n     */\n    function (styleUrls, stylesheets, targetStyles) {\n        var _this = this;\n        styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ stylesheet = /** @type {?} */ ((stylesheets.get(styleUrl)));\n            stylesheet.styles.forEach(function (style) { return targetStyles.push(style); });\n            _this._inlineStyles(stylesheet.styleUrls, stylesheets, targetStyles);\n        });\n    };\n    /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._loadMissingExternalStylesheets = /**\n     * @param {?} styleUrls\n     * @param {?=} loadedStylesheets\n     * @return {?}\n     */\n    function (styleUrls, loadedStylesheets) {\n        var _this = this;\n        if (loadedStylesheets === void 0) { loadedStylesheets = new Map(); }\n        return SyncAsync.then(SyncAsync.all(styleUrls.filter(function (styleUrl) { return !loadedStylesheets.has(styleUrl); })\n            .map(function (styleUrl) {\n            return SyncAsync.then(_this._fetch(styleUrl), function (loadedStyle) {\n                var /** @type {?} */ stylesheet = _this._normalizeStylesheet(new CompileStylesheetMetadata({ styles: [loadedStyle], moduleUrl: styleUrl }));\n                loadedStylesheets.set(styleUrl, stylesheet);\n                return _this._loadMissingExternalStylesheets(stylesheet.styleUrls, loadedStylesheets);\n            });\n        })), function (_) { return loadedStylesheets; });\n    };\n    /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    DirectiveNormalizer.prototype._normalizeStylesheet = /**\n     * @param {?} stylesheet\n     * @return {?}\n     */\n    function (stylesheet) {\n        var _this = this;\n        var /** @type {?} */ moduleUrl = /** @type {?} */ ((stylesheet.moduleUrl));\n        var /** @type {?} */ allStyleUrls = stylesheet.styleUrls.filter(isStyleUrlResolvable)\n            .map(function (url) { return _this._urlResolver.resolve(moduleUrl, url); });\n        var /** @type {?} */ allStyles = stylesheet.styles.map(function (style) {\n            var /** @type {?} */ styleWithImports = extractStyleUrls(_this._urlResolver, moduleUrl, style);\n            allStyleUrls.push.apply(allStyleUrls, styleWithImports.styleUrls);\n            return styleWithImports.style;\n        });\n        return new CompileStylesheetMetadata({ styles: allStyles, styleUrls: allStyleUrls, moduleUrl: moduleUrl });\n    };\n    return DirectiveNormalizer;\n}());\nvar TemplatePreparseVisitor = (function () {\n    function TemplatePreparseVisitor() {\n        this.ngContentSelectors = [];\n        this.styles = [];\n        this.styleUrls = [];\n        this.ngNonBindableStackCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        switch (preparsedElement.type) {\n            case PreparsedElementType.NG_CONTENT:\n                if (this.ngNonBindableStackCount === 0) {\n                    this.ngContentSelectors.push(preparsedElement.selectAttr);\n                }\n                break;\n            case PreparsedElementType.STYLE:\n                var /** @type {?} */ textContent_1 = '';\n                ast.children.forEach(function (child) {\n                    if (child instanceof Text) {\n                        textContent_1 += child.value;\n                    }\n                });\n                this.styles.push(textContent_1);\n                break;\n            case PreparsedElementType.STYLESHEET:\n                this.styleUrls.push(preparsedElement.hrefAttr);\n                break;\n            default:\n                break;\n        }\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount++;\n        }\n        visitAll(this, ast.children);\n        if (preparsedElement.nonBindable) {\n            this.ngNonBindableStackCount--;\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansion = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { visitAll(this, ast.cases); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        visitAll(this, ast.expression);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitComment = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitAttribute = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    TemplatePreparseVisitor.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return TemplatePreparseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar QUERY_METADATA_IDENTIFIERS = [\n    createViewChild,\n    createViewChildren,\n    createContentChild,\n    createContentChildren,\n];\nvar DirectiveResolver = (function () {\n    function DirectiveResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    DirectiveResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(isDirectiveMetadata);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    DirectiveResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        if (typeMetadata) {\n            var /** @type {?} */ metadata = findLast(typeMetadata, isDirectiveMetadata);\n            if (metadata) {\n                var /** @type {?} */ propertyMetadata = this._reflector.propMetadata(type);\n                return this._mergeWithPropertyMetadata(metadata, propertyMetadata, type);\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Directive annotation found on \" + stringify(type));\n        }\n        return null;\n    };\n    /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._mergeWithPropertyMetadata = /**\n     * @param {?} dm\n     * @param {?} propertyMetadata\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (dm, propertyMetadata, directiveType) {\n        var /** @type {?} */ inputs = [];\n        var /** @type {?} */ outputs = [];\n        var /** @type {?} */ host = {};\n        var /** @type {?} */ queries = {};\n        Object.keys(propertyMetadata).forEach(function (propName) {\n            var /** @type {?} */ input = findLast(propertyMetadata[propName], function (a) { return createInput.isTypeOf(a); });\n            if (input) {\n                if (input.bindingPropertyName) {\n                    inputs.push(propName + \": \" + input.bindingPropertyName);\n                }\n                else {\n                    inputs.push(propName);\n                }\n            }\n            var /** @type {?} */ output = findLast(propertyMetadata[propName], function (a) { return createOutput.isTypeOf(a); });\n            if (output) {\n                if (output.bindingPropertyName) {\n                    outputs.push(propName + \": \" + output.bindingPropertyName);\n                }\n                else {\n                    outputs.push(propName);\n                }\n            }\n            var /** @type {?} */ hostBindings = propertyMetadata[propName].filter(function (a) { return createHostBinding.isTypeOf(a); });\n            hostBindings.forEach(function (hostBinding) {\n                if (hostBinding.hostPropertyName) {\n                    var /** @type {?} */ startWith = hostBinding.hostPropertyName[0];\n                    if (startWith === '(') {\n                        throw new Error(\"@HostBinding can not bind to events. Use @HostListener instead.\");\n                    }\n                    else if (startWith === '[') {\n                        throw new Error(\"@HostBinding parameter should be a property name, 'class.<name>', or 'attr.<name>'.\");\n                    }\n                    host[\"[\" + hostBinding.hostPropertyName + \"]\"] = propName;\n                }\n                else {\n                    host[\"[\" + propName + \"]\"] = propName;\n                }\n            });\n            var /** @type {?} */ hostListeners = propertyMetadata[propName].filter(function (a) { return createHostListener.isTypeOf(a); });\n            hostListeners.forEach(function (hostListener) {\n                var /** @type {?} */ args = hostListener.args || [];\n                host[\"(\" + hostListener.eventName + \")\"] = propName + \"(\" + args.join(',') + \")\";\n            });\n            var /** @type {?} */ query = findLast(propertyMetadata[propName], function (a) { return QUERY_METADATA_IDENTIFIERS.some(function (i) { return i.isTypeOf(a); }); });\n            if (query) {\n                queries[propName] = query;\n            }\n        });\n        return this._merge(dm, inputs, outputs, host, queries, directiveType);\n    };\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    DirectiveResolver.prototype._extractPublicName = /**\n     * @param {?} def\n     * @return {?}\n     */\n    function (def) { return splitAtColon(def, [/** @type {?} */ ((null)), def])[1].trim(); };\n    /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    DirectiveResolver.prototype._dedupeBindings = /**\n     * @param {?} bindings\n     * @return {?}\n     */\n    function (bindings) {\n        var /** @type {?} */ names = new Set();\n        var /** @type {?} */ reversedResult = [];\n        // go last to first to allow later entries to overwrite previous entries\n        for (var /** @type {?} */ i = bindings.length - 1; i >= 0; i--) {\n            var /** @type {?} */ binding = bindings[i];\n            var /** @type {?} */ name_1 = this._extractPublicName(binding);\n            if (!names.has(name_1)) {\n                names.add(name_1);\n                reversedResult.push(binding);\n            }\n        }\n        return reversedResult.reverse();\n    };\n    /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    DirectiveResolver.prototype._merge = /**\n     * @param {?} directive\n     * @param {?} inputs\n     * @param {?} outputs\n     * @param {?} host\n     * @param {?} queries\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directive, inputs, outputs, host, queries, directiveType) {\n        var /** @type {?} */ mergedInputs = this._dedupeBindings(directive.inputs ? directive.inputs.concat(inputs) : inputs);\n        var /** @type {?} */ mergedOutputs = this._dedupeBindings(directive.outputs ? directive.outputs.concat(outputs) : outputs);\n        var /** @type {?} */ mergedHost = directive.host ? __assign({}, directive.host, host) : host;\n        var /** @type {?} */ mergedQueries = directive.queries ? __assign({}, directive.queries, queries) : queries;\n        if (createComponent.isTypeOf(directive)) {\n            var /** @type {?} */ comp = /** @type {?} */ (directive);\n            return createComponent({\n                selector: comp.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: comp.exportAs,\n                moduleId: comp.moduleId,\n                queries: mergedQueries,\n                changeDetection: comp.changeDetection,\n                providers: comp.providers,\n                viewProviders: comp.viewProviders,\n                entryComponents: comp.entryComponents,\n                template: comp.template,\n                templateUrl: comp.templateUrl,\n                styles: comp.styles,\n                styleUrls: comp.styleUrls,\n                encapsulation: comp.encapsulation,\n                animations: comp.animations,\n                interpolation: comp.interpolation,\n                preserveWhitespaces: directive.preserveWhitespaces,\n            });\n        }\n        else {\n            return createDirective({\n                selector: directive.selector,\n                inputs: mergedInputs,\n                outputs: mergedOutputs,\n                host: mergedHost,\n                exportAs: directive.exportAs,\n                queries: mergedQueries,\n                providers: directive.providers\n            });\n        }\n    };\n    return DirectiveResolver;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction isDirectiveMetadata(type) {\n    return createDirective.isTypeOf(type) || createComponent.isTypeOf(type);\n}\n/**\n * @template T\n * @param {?} arr\n * @param {?} condition\n * @return {?}\n */\nfunction findLast(arr, condition) {\n    for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n            return arr[i];\n        }\n    }\n    return null;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar $EOF = 0;\nvar $TAB = 9;\nvar $LF = 10;\nvar $VTAB = 11;\nvar $FF = 12;\nvar $CR = 13;\nvar $SPACE = 32;\nvar $BANG = 33;\nvar $DQ = 34;\nvar $HASH = 35;\nvar $$ = 36;\nvar $PERCENT = 37;\nvar $AMPERSAND = 38;\nvar $SQ = 39;\nvar $LPAREN = 40;\nvar $RPAREN = 41;\nvar $STAR = 42;\nvar $PLUS = 43;\nvar $COMMA = 44;\nvar $MINUS = 45;\nvar $PERIOD = 46;\nvar $SLASH = 47;\nvar $COLON = 58;\nvar $SEMICOLON = 59;\nvar $LT = 60;\nvar $EQ = 61;\nvar $GT = 62;\nvar $QUESTION = 63;\nvar $0 = 48;\nvar $9 = 57;\nvar $A = 65;\nvar $E = 69;\nvar $F = 70;\nvar $X = 88;\nvar $Z = 90;\nvar $LBRACKET = 91;\nvar $BACKSLASH = 92;\nvar $RBRACKET = 93;\nvar $CARET = 94;\nvar $_ = 95;\nvar $a = 97;\nvar $e = 101;\nvar $f = 102;\nvar $n = 110;\nvar $r = 114;\nvar $t = 116;\nvar $u = 117;\nvar $v = 118;\nvar $x = 120;\nvar $z = 122;\nvar $LBRACE = 123;\nvar $BAR = 124;\nvar $RBRACE = 125;\nvar $NBSP = 160;\n\n\n\nvar $BT = 96;\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isWhitespace(code) {\n    return (code >= $TAB && code <= $SPACE) || (code == $NBSP);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigit(code) {\n    return $0 <= code && code <= $9;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiLetter(code) {\n    return code >= $a && code <= $z || code >= $A && code <= $Z;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isAsciiHexDigit(code) {\n    return code >= $a && code <= $f || code >= $A && code <= $F || isDigit(code);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType = {\n    Character: 0,\n    Identifier: 1,\n    Keyword: 2,\n    String: 3,\n    Operator: 4,\n    Number: 5,\n    Error: 6,\n};\nTokenType[TokenType.Character] = \"Character\";\nTokenType[TokenType.Identifier] = \"Identifier\";\nTokenType[TokenType.Keyword] = \"Keyword\";\nTokenType[TokenType.String] = \"String\";\nTokenType[TokenType.Operator] = \"Operator\";\nTokenType[TokenType.Number] = \"Number\";\nTokenType[TokenType.Error] = \"Error\";\nvar KEYWORDS = ['var', 'let', 'as', 'null', 'undefined', 'true', 'false', 'if', 'else', 'this'];\nvar Lexer = (function () {\n    function Lexer() {\n    }\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    Lexer.prototype.tokenize = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) {\n        var /** @type {?} */ scanner = new _Scanner(text);\n        var /** @type {?} */ tokens = [];\n        var /** @type {?} */ token = scanner.scanToken();\n        while (token != null) {\n            tokens.push(token);\n            token = scanner.scanToken();\n        }\n        return tokens;\n    };\n    return Lexer;\n}());\nvar Token = (function () {\n    function Token(index, type, numValue, strValue) {\n        this.index = index;\n        this.type = type;\n        this.numValue = numValue;\n        this.strValue = strValue;\n    }\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    Token.prototype.isCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        return this.type == TokenType.Character && this.numValue == code;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isString = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.String; };\n    /**\n     * @param {?} operater\n     * @return {?}\n     */\n    Token.prototype.isOperator = /**\n     * @param {?} operater\n     * @return {?}\n     */\n    function (operater) {\n        return this.type == TokenType.Operator && this.strValue == operater;\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isIdentifier = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Identifier; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeyword = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'let'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'as'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordNull = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'null'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordUndefined = /**\n     * @return {?}\n     */\n    function () {\n        return this.type == TokenType.Keyword && this.strValue == 'undefined';\n    };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordTrue = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'true'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordFalse = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'false'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isKeywordThis = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Keyword && this.strValue == 'this'; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.isError = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Error; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toNumber = /**\n     * @return {?}\n     */\n    function () { return this.type == TokenType.Number ? this.numValue : -1; };\n    /**\n     * @return {?}\n     */\n    Token.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        switch (this.type) {\n            case TokenType.Character:\n            case TokenType.Identifier:\n            case TokenType.Keyword:\n            case TokenType.Operator:\n            case TokenType.String:\n            case TokenType.Error:\n                return this.strValue;\n            case TokenType.Number:\n                return this.numValue.toString();\n            default:\n                return null;\n        }\n    };\n    return Token;\n}());\n/**\n * @param {?} index\n * @param {?} code\n * @return {?}\n */\nfunction newCharacterToken(index, code) {\n    return new Token(index, TokenType.Character, code, String.fromCharCode(code));\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newIdentifierToken(index, text) {\n    return new Token(index, TokenType.Identifier, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newKeywordToken(index, text) {\n    return new Token(index, TokenType.Keyword, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newOperatorToken(index, text) {\n    return new Token(index, TokenType.Operator, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} text\n * @return {?}\n */\nfunction newStringToken(index, text) {\n    return new Token(index, TokenType.String, 0, text);\n}\n/**\n * @param {?} index\n * @param {?} n\n * @return {?}\n */\nfunction newNumberToken(index, n) {\n    return new Token(index, TokenType.Number, n, '');\n}\n/**\n * @param {?} index\n * @param {?} message\n * @return {?}\n */\nfunction newErrorToken(index, message) {\n    return new Token(index, TokenType.Error, 0, message);\n}\nvar EOF = new Token(-1, TokenType.Character, 0, '');\nvar _Scanner = (function () {\n    function _Scanner(input) {\n        this.input = input;\n        this.peek = 0;\n        this.index = -1;\n        this.length = input.length;\n        this.advance();\n    }\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.advance = /**\n     * @return {?}\n     */\n    function () {\n        this.peek = ++this.index >= this.length ? $EOF : this.input.charCodeAt(this.index);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanToken = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ input = this.input, /** @type {?} */ length = this.length;\n        var /** @type {?} */ peek = this.peek, /** @type {?} */ index = this.index;\n        // Skip whitespace.\n        while (peek <= $SPACE) {\n            if (++index >= length) {\n                peek = $EOF;\n                break;\n            }\n            else {\n                peek = input.charCodeAt(index);\n            }\n        }\n        this.peek = peek;\n        this.index = index;\n        if (index >= length) {\n            return null;\n        }\n        // Handle identifiers and numbers.\n        if (isIdentifierStart(peek))\n            return this.scanIdentifier();\n        if (isDigit(peek))\n            return this.scanNumber(index);\n        var /** @type {?} */ start = index;\n        switch (peek) {\n            case $PERIOD:\n                this.advance();\n                return isDigit(this.peek) ? this.scanNumber(start) :\n                    newCharacterToken(start, $PERIOD);\n            case $LPAREN:\n            case $RPAREN:\n            case $LBRACE:\n            case $RBRACE:\n            case $LBRACKET:\n            case $RBRACKET:\n            case $COMMA:\n            case $COLON:\n            case $SEMICOLON:\n                return this.scanCharacter(start, peek);\n            case $SQ:\n            case $DQ:\n                return this.scanString();\n            case $HASH:\n            case $PLUS:\n            case $MINUS:\n            case $STAR:\n            case $SLASH:\n            case $PERCENT:\n            case $CARET:\n                return this.scanOperator(start, String.fromCharCode(peek));\n            case $QUESTION:\n                return this.scanComplexOperator(start, '?', $PERIOD, '.');\n            case $LT:\n            case $GT:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=');\n            case $BANG:\n            case $EQ:\n                return this.scanComplexOperator(start, String.fromCharCode(peek), $EQ, '=', $EQ, '=');\n            case $AMPERSAND:\n                return this.scanComplexOperator(start, '&', $AMPERSAND, '&');\n            case $BAR:\n                return this.scanComplexOperator(start, '|', $BAR, '|');\n            case $NBSP:\n                while (isWhitespace(this.peek))\n                    this.advance();\n                return this.scanToken();\n        }\n        this.advance();\n        return this.error(\"Unexpected character [\" + String.fromCharCode(peek) + \"]\", 0);\n    };\n    /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    _Scanner.prototype.scanCharacter = /**\n     * @param {?} start\n     * @param {?} code\n     * @return {?}\n     */\n    function (start, code) {\n        this.advance();\n        return newCharacterToken(start, code);\n    };\n    /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    _Scanner.prototype.scanOperator = /**\n     * @param {?} start\n     * @param {?} str\n     * @return {?}\n     */\n    function (start, str) {\n        this.advance();\n        return newOperatorToken(start, str);\n    };\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param start start index in the expression\n     * @param one first symbol (always part of the operator)\n     * @param twoCode code point for the second symbol\n     * @param two second symbol (part of the operator when the second code point matches)\n     * @param threeCode code point for the third symbol\n     * @param three third symbol (part of the operator when provided and matches source expression)\n     */\n    /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    _Scanner.prototype.scanComplexOperator = /**\n     * Tokenize a 2/3 char long operator\n     *\n     * @param {?} start start index in the expression\n     * @param {?} one first symbol (always part of the operator)\n     * @param {?} twoCode code point for the second symbol\n     * @param {?} two second symbol (part of the operator when the second code point matches)\n     * @param {?=} threeCode code point for the third symbol\n     * @param {?=} three third symbol (part of the operator when provided and matches source expression)\n     * @return {?}\n     */\n    function (start, one, twoCode, two, threeCode, three) {\n        this.advance();\n        var /** @type {?} */ str = one;\n        if (this.peek == twoCode) {\n            this.advance();\n            str += two;\n        }\n        if (threeCode != null && this.peek == threeCode) {\n            this.advance();\n            str += three;\n        }\n        return newOperatorToken(start, str);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanIdentifier = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        this.advance();\n        while (isIdentifierPart(this.peek))\n            this.advance();\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        return KEYWORDS.indexOf(str) > -1 ? newKeywordToken(start, str) :\n            newIdentifierToken(start, str);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Scanner.prototype.scanNumber = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ simple = (this.index === start);\n        this.advance(); // Skip initial digit.\n        while (true) {\n            if (isDigit(this.peek)) {\n                // Do nothing.\n            }\n            else if (this.peek == $PERIOD) {\n                simple = false;\n            }\n            else if (isExponentStart(this.peek)) {\n                this.advance();\n                if (isExponentSign(this.peek))\n                    this.advance();\n                if (!isDigit(this.peek))\n                    return this.error('Invalid exponent', -1);\n                simple = false;\n            }\n            else {\n                break;\n            }\n            this.advance();\n        }\n        var /** @type {?} */ str = this.input.substring(start, this.index);\n        var /** @type {?} */ value = simple ? parseIntAutoRadix(str) : parseFloat(str);\n        return newNumberToken(start, value);\n    };\n    /**\n     * @return {?}\n     */\n    _Scanner.prototype.scanString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.index;\n        var /** @type {?} */ quote = this.peek;\n        this.advance(); // Skip initial quote.\n        var /** @type {?} */ buffer = '';\n        var /** @type {?} */ marker = this.index;\n        var /** @type {?} */ input = this.input;\n        while (this.peek != quote) {\n            if (this.peek == $BACKSLASH) {\n                buffer += input.substring(marker, this.index);\n                this.advance();\n                var /** @type {?} */ unescapedCode = void 0;\n                // Workaround for TS2.1-introduced type strictness\n                this.peek = this.peek;\n                if (this.peek == $u) {\n                    // 4 character hex code for unicode character.\n                    var /** @type {?} */ hex = input.substring(this.index + 1, this.index + 5);\n                    if (/^[0-9a-f]+$/i.test(hex)) {\n                        unescapedCode = parseInt(hex, 16);\n                    }\n                    else {\n                        return this.error(\"Invalid unicode escape [\\\\u\" + hex + \"]\", 0);\n                    }\n                    for (var /** @type {?} */ i = 0; i < 5; i++) {\n                        this.advance();\n                    }\n                }\n                else {\n                    unescapedCode = unescape(this.peek);\n                    this.advance();\n                }\n                buffer += String.fromCharCode(unescapedCode);\n                marker = this.index;\n            }\n            else if (this.peek == $EOF) {\n                return this.error('Unterminated quote', 0);\n            }\n            else {\n                this.advance();\n            }\n        }\n        var /** @type {?} */ last = input.substring(marker, this.index);\n        this.advance(); // Skip terminating quote.\n        return newStringToken(start, buffer + last);\n    };\n    /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    _Scanner.prototype.error = /**\n     * @param {?} message\n     * @param {?} offset\n     * @return {?}\n     */\n    function (message, offset) {\n        var /** @type {?} */ position = this.index + offset;\n        return newErrorToken(position, \"Lexer Error: \" + message + \" at column \" + position + \" in expression [\" + this.input + \"]\");\n    };\n    return _Scanner;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierStart(code) {\n    return ($a <= code && code <= $z) || ($A <= code && code <= $Z) ||\n        (code == $_) || (code == $$);\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isIdentifier(input) {\n    if (input.length == 0)\n        return false;\n    var /** @type {?} */ scanner = new _Scanner(input);\n    if (!isIdentifierStart(scanner.peek))\n        return false;\n    scanner.advance();\n    while (scanner.peek !== $EOF) {\n        if (!isIdentifierPart(scanner.peek))\n            return false;\n        scanner.advance();\n    }\n    return true;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isIdentifierPart(code) {\n    return isAsciiLetter(code) || isDigit(code) || (code == $_) ||\n        (code == $$);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentStart(code) {\n    return code == $e || code == $E;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isExponentSign(code) {\n    return code == $MINUS || code == $PLUS;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isQuote(code) {\n    return code === $SQ || code === $DQ || code === $BT;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction unescape(code) {\n    switch (code) {\n        case $n:\n            return $LF;\n        case $f:\n            return $FF;\n        case $r:\n            return $CR;\n        case $t:\n            return $TAB;\n        case $v:\n            return $VTAB;\n        default:\n            return code;\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction parseIntAutoRadix(text) {\n    var /** @type {?} */ result = parseInt(text);\n    if (isNaN(result)) {\n        throw new Error('Invalid integer literal when parsing ' + text);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ParserError = (function () {\n    function ParserError(message, input, errLocation, ctxLocation) {\n        this.input = input;\n        this.errLocation = errLocation;\n        this.ctxLocation = ctxLocation;\n        this.message = \"Parser Error: \" + message + \" \" + errLocation + \" [\" + input + \"] in \" + ctxLocation;\n    }\n    return ParserError;\n}());\nvar ParseSpan = (function () {\n    function ParseSpan(start, end) {\n        this.start = start;\n        this.end = end;\n    }\n    return ParseSpan;\n}());\nvar AST = (function () {\n    function AST(span) {\n        this.span = span;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    AST.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return null;\n    };\n    /**\n     * @return {?}\n     */\n    AST.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'AST'; };\n    return AST;\n}());\n/**\n * Represents a quoted expression of the form:\n *\n * quote = prefix `:` uninterpretedExpression\n * prefix = identifier\n * uninterpretedExpression = arbitrary string\n *\n * A quoted expression is meant to be pre-processed by an AST transformer that\n * converts it into another AST that no longer contains quoted expressions.\n * It is meant to allow third-party developers to extend Angular template\n * expression language. The `uninterpretedExpression` part of the quote is\n * therefore not interpreted by the Angular's own expression parser.\n */\nvar Quote = (function (_super) {\n    __extends(Quote, _super);\n    function Quote(span, prefix, uninterpretedExpression, location) {\n        var _this = _super.call(this, span) || this;\n        _this.prefix = prefix;\n        _this.uninterpretedExpression = uninterpretedExpression;\n        _this.location = location;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Quote.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitQuote(this, context);\n    };\n    /**\n     * @return {?}\n     */\n    Quote.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return 'Quote'; };\n    return Quote;\n}(AST));\nvar EmptyExpr = (function (_super) {\n    __extends(EmptyExpr, _super);\n    function EmptyExpr() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    EmptyExpr.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        // do nothing\n    };\n    return EmptyExpr;\n}(AST));\nvar ImplicitReceiver = (function (_super) {\n    __extends(ImplicitReceiver, _super);\n    function ImplicitReceiver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ImplicitReceiver.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitImplicitReceiver(this, context);\n    };\n    return ImplicitReceiver;\n}(AST));\n/**\n * Multiple expressions separated by a semicolon.\n */\nvar Chain = (function (_super) {\n    __extends(Chain, _super);\n    function Chain(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Chain.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitChain(this, context);\n    };\n    return Chain;\n}(AST));\nvar Conditional = (function (_super) {\n    __extends(Conditional, _super);\n    function Conditional(span, condition, trueExp, falseExp) {\n        var _this = _super.call(this, span) || this;\n        _this.condition = condition;\n        _this.trueExp = trueExp;\n        _this.falseExp = falseExp;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Conditional.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitConditional(this, context);\n    };\n    return Conditional;\n}(AST));\nvar PropertyRead = (function (_super) {\n    __extends(PropertyRead, _super);\n    function PropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyRead(this, context);\n    };\n    return PropertyRead;\n}(AST));\nvar PropertyWrite = (function (_super) {\n    __extends(PropertyWrite, _super);\n    function PropertyWrite(span, receiver, name, value) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PropertyWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPropertyWrite(this, context);\n    };\n    return PropertyWrite;\n}(AST));\nvar SafePropertyRead = (function (_super) {\n    __extends(SafePropertyRead, _super);\n    function SafePropertyRead(span, receiver, name) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafePropertyRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafePropertyRead(this, context);\n    };\n    return SafePropertyRead;\n}(AST));\nvar KeyedRead = (function (_super) {\n    __extends(KeyedRead, _super);\n    function KeyedRead(span, obj, key) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedRead.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedRead(this, context);\n    };\n    return KeyedRead;\n}(AST));\nvar KeyedWrite = (function (_super) {\n    __extends(KeyedWrite, _super);\n    function KeyedWrite(span, obj, key, value) {\n        var _this = _super.call(this, span) || this;\n        _this.obj = obj;\n        _this.key = key;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    KeyedWrite.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitKeyedWrite(this, context);\n    };\n    return KeyedWrite;\n}(AST));\nvar BindingPipe = (function (_super) {\n    __extends(BindingPipe, _super);\n    function BindingPipe(span, exp, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.exp = exp;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    BindingPipe.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPipe(this, context);\n    };\n    return BindingPipe;\n}(AST));\nvar LiteralPrimitive = (function (_super) {\n    __extends(LiteralPrimitive, _super);\n    function LiteralPrimitive(span, value) {\n        var _this = _super.call(this, span) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralPrimitive.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralPrimitive(this, context);\n    };\n    return LiteralPrimitive;\n}(AST));\nvar LiteralArray = (function (_super) {\n    __extends(LiteralArray, _super);\n    function LiteralArray(span, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralArray.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralArray(this, context);\n    };\n    return LiteralArray;\n}(AST));\nvar LiteralMap = (function (_super) {\n    __extends(LiteralMap, _super);\n    function LiteralMap(span, keys, values) {\n        var _this = _super.call(this, span) || this;\n        _this.keys = keys;\n        _this.values = values;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    LiteralMap.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitLiteralMap(this, context);\n    };\n    return LiteralMap;\n}(AST));\nvar Interpolation = (function (_super) {\n    __extends(Interpolation, _super);\n    function Interpolation(span, strings, expressions) {\n        var _this = _super.call(this, span) || this;\n        _this.strings = strings;\n        _this.expressions = expressions;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Interpolation.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitInterpolation(this, context);\n    };\n    return Interpolation;\n}(AST));\nvar Binary = (function (_super) {\n    __extends(Binary, _super);\n    function Binary(span, operation, left, right) {\n        var _this = _super.call(this, span) || this;\n        _this.operation = operation;\n        _this.left = left;\n        _this.right = right;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Binary.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitBinary(this, context);\n    };\n    return Binary;\n}(AST));\nvar PrefixNot = (function (_super) {\n    __extends(PrefixNot, _super);\n    function PrefixNot(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    PrefixNot.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitPrefixNot(this, context);\n    };\n    return PrefixNot;\n}(AST));\nvar NonNullAssert = (function (_super) {\n    __extends(NonNullAssert, _super);\n    function NonNullAssert(span, expression) {\n        var _this = _super.call(this, span) || this;\n        _this.expression = expression;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    NonNullAssert.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitNonNullAssert(this, context);\n    };\n    return NonNullAssert;\n}(AST));\nvar MethodCall = (function (_super) {\n    __extends(MethodCall, _super);\n    function MethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    MethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitMethodCall(this, context);\n    };\n    return MethodCall;\n}(AST));\nvar SafeMethodCall = (function (_super) {\n    __extends(SafeMethodCall, _super);\n    function SafeMethodCall(span, receiver, name, args) {\n        var _this = _super.call(this, span) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    SafeMethodCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitSafeMethodCall(this, context);\n    };\n    return SafeMethodCall;\n}(AST));\nvar FunctionCall = (function (_super) {\n    __extends(FunctionCall, _super);\n    function FunctionCall(span, target, args) {\n        var _this = _super.call(this, span) || this;\n        _this.target = target;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    FunctionCall.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return visitor.visitFunctionCall(this, context);\n    };\n    return FunctionCall;\n}(AST));\nvar ASTWithSource = (function (_super) {\n    __extends(ASTWithSource, _super);\n    function ASTWithSource(ast, source, location, errors) {\n        var _this = _super.call(this, new ParseSpan(0, source == null ? 0 : source.length)) || this;\n        _this.ast = ast;\n        _this.source = source;\n        _this.location = location;\n        _this.errors = errors;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    ASTWithSource.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        if (context === void 0) { context = null; }\n        return this.ast.visit(visitor, context);\n    };\n    /**\n     * @return {?}\n     */\n    ASTWithSource.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.source + \" in \" + this.location; };\n    return ASTWithSource;\n}(AST));\nvar TemplateBinding = (function () {\n    function TemplateBinding(span, key, keyIsVar, name, expression) {\n        this.span = span;\n        this.key = key;\n        this.keyIsVar = keyIsVar;\n        this.name = name;\n        this.expression = expression;\n    }\n    return TemplateBinding;\n}());\n/**\n * @record\n */\n\nvar NullAstVisitor = (function () {\n    function NullAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    NullAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return NullAstVisitor;\n}());\nvar RecursiveAstVisitor = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.left.visit(this);\n        ast.right.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.expressions, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visit(this);\n        ast.trueExp.visit(this);\n        ast.falseExp.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        /** @type {?} */ ((ast.target)).visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.obj.visit(this);\n        ast.key.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitAll(ast.expressions, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.visitAll(ast.values, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.expression.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        ast.value.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visit(this);\n        return this.visitAll(ast.args, context);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} context\n     * @return {?}\n     */\n    function (asts, context) {\n        var _this = this;\n        asts.forEach(function (ast) { return ast.visit(_this, context); });\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return null; };\n    return RecursiveAstVisitor;\n}());\nvar AstTransformer = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Interpolation(ast.span, ast.strings, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralPrimitive(ast.span, ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PropertyWrite(ast.span, ast.receiver.visit(this), ast.name, ast.value.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafePropertyRead(ast.span, ast.receiver.visit(this), ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new MethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new SafeMethodCall(ast.span, ast.receiver.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new FunctionCall(ast.span, /** @type {?} */ ((ast.target)).visit(this), this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralArray(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new LiteralMap(ast.span, ast.keys, this.visitAll(ast.values));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Binary(ast.span, ast.operation, ast.left.visit(this), ast.right.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new PrefixNot(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new NonNullAssert(ast.span, ast.expression.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Conditional(ast.span, ast.condition.visit(this), ast.trueExp.visit(this), ast.falseExp.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new BindingPipe(ast.span, ast.exp.visit(this), ast.name, this.visitAll(ast.args));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedRead(ast.span, ast.obj.visit(this), ast.key.visit(this));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new KeyedWrite(ast.span, ast.obj.visit(this), ast.key.visit(this), ast.value.visit(this));\n    };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var /** @type {?} */ res = new Array(asts.length);\n        for (var /** @type {?} */ i = 0; i < asts.length; ++i) {\n            res[i] = asts[i].visit(this);\n        }\n        return res;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Chain(ast.span, this.visitAll(ast.expressions));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return new Quote(ast.span, ast.prefix, ast.uninterpretedExpression, ast.location);\n    };\n    return AstTransformer;\n}());\n/**\n * @param {?} ast\n * @param {?} visitor\n * @param {?=} context\n * @return {?}\n */\nfunction visitAstChildren(ast, visitor, context) {\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function visit(ast) {\n        visitor.visit && visitor.visit(ast, context) || ast.visit(visitor, context);\n    }\n    /**\n     * @template T\n     * @param {?} asts\n     * @return {?}\n     */\n    function visitAll(asts) { asts.forEach(visit); }\n    ast.visit({\n        visitBinary: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.left);\n            visit(ast.right);\n        },\n        visitChain: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitConditional: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.condition);\n            visit(ast.trueExp);\n            visit(ast.falseExp);\n        },\n        visitFunctionCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            if (ast.target) {\n                visit(ast.target);\n            }\n            visitAll(ast.args);\n        },\n        visitImplicitReceiver: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitInterpolation: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitKeyedRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n        },\n        visitKeyedWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.obj);\n            visit(ast.key);\n            visit(ast.obj);\n        },\n        visitLiteralArray: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visitAll(ast.expressions); },\n        visitLiteralMap: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitLiteralPrimitive: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitPipe: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.exp);\n            visitAll(ast.args);\n        },\n        visitPrefixNot: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitNonNullAssert: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.expression); },\n        visitPropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n        visitPropertyWrite: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visit(ast.value);\n        },\n        visitQuote: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { },\n        visitSafeMethodCall: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) {\n            visit(ast.receiver);\n            visitAll(ast.args);\n        },\n        visitSafePropertyRead: /**\n         * @param {?} ast\n         * @return {?}\n         */\n        function (ast) { visit(ast.receiver); },\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SplitInterpolation = (function () {\n    function SplitInterpolation(strings, expressions, offsets) {\n        this.strings = strings;\n        this.expressions = expressions;\n        this.offsets = offsets;\n    }\n    return SplitInterpolation;\n}());\nvar TemplateBindingParseResult = (function () {\n    function TemplateBindingParseResult(templateBindings, warnings, errors) {\n        this.templateBindings = templateBindings;\n        this.warnings = warnings;\n        this.errors = errors;\n    }\n    return TemplateBindingParseResult;\n}());\n/**\n * @param {?} config\n * @return {?}\n */\nfunction _createInterpolateRegExp(config) {\n    var /** @type {?} */ pattern = escapeRegExp(config.start) + '([\\\\s\\\\S]*?)' + escapeRegExp(config.end);\n    return new RegExp(pattern, 'g');\n}\nvar Parser = (function () {\n    function Parser(_lexer) {\n        this._lexer = _lexer;\n        this.errors = [];\n    }\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseAction = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(this._stripComments(input));\n        var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, true, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseSimpleBinding = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ ast = this._parseBindingAst(input, location, interpolationConfig);\n        var /** @type {?} */ errors = SimpleExpressionChecker.check(ast);\n        if (errors.length > 0) {\n            this._reportError(\"Host binding expression cannot contain \" + errors.join(' '), input, location);\n        }\n        return new ASTWithSource(ast, input, location, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    Parser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} input\n     * @param {?} errLocation\n     * @param {?=} ctxLocation\n     * @return {?}\n     */\n    function (message, input, errLocation, ctxLocation) {\n        this.errors.push(new ParserError(message, input, errLocation, ctxLocation));\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._parseBindingAst = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        // Quotes expressions use 3rd-party expression language. We don't want to use\n        // our lexer or parser for that, so we check for that ahead of time.\n        var /** @type {?} */ quote = this._parseQuote(input, location);\n        if (quote != null) {\n            return quote;\n        }\n        this._checkNoInterpolation(input, location, interpolationConfig);\n        var /** @type {?} */ sourceToLex = this._stripComments(input);\n        var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n        return new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, input.length - sourceToLex.length)\n            .parseChain();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype._parseQuote = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        if (input == null)\n            return null;\n        var /** @type {?} */ prefixSeparatorIndex = input.indexOf(':');\n        if (prefixSeparatorIndex == -1)\n            return null;\n        var /** @type {?} */ prefix = input.substring(0, prefixSeparatorIndex).trim();\n        if (!isIdentifier(prefix))\n            return null;\n        var /** @type {?} */ uninterpretedExpression = input.substring(prefixSeparatorIndex + 1);\n        return new Quote(new ParseSpan(0, input.length), prefix, uninterpretedExpression, location);\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (prefixToken, input, location) {\n        var /** @type {?} */ tokens = this._lexer.tokenize(input);\n        if (prefixToken) {\n            // Prefix the tokens with the tokens from prefixToken but have them take no space (0 index).\n            var /** @type {?} */ prefixTokens = this._lexer.tokenize(prefixToken).map(function (t) {\n                t.index = 0;\n                return t;\n            });\n            tokens.unshift.apply(tokens, prefixTokens);\n        }\n        return new _ParseAST(input, location, tokens, input.length, false, this.errors, 0)\n            .parseTemplateBindings();\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parseInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ split = this.splitInterpolation(input, location, interpolationConfig);\n        if (split == null)\n            return null;\n        var /** @type {?} */ expressions = [];\n        for (var /** @type {?} */ i = 0; i < split.expressions.length; ++i) {\n            var /** @type {?} */ expressionText = split.expressions[i];\n            var /** @type {?} */ sourceToLex = this._stripComments(expressionText);\n            var /** @type {?} */ tokens = this._lexer.tokenize(sourceToLex);\n            var /** @type {?} */ ast = new _ParseAST(input, location, tokens, sourceToLex.length, false, this.errors, split.offsets[i] + (expressionText.length - sourceToLex.length))\n                .parseChain();\n            expressions.push(ast);\n        }\n        return new ASTWithSource(new Interpolation(new ParseSpan(0, input == null ? 0 : input.length), split.strings, expressions), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.splitInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length <= 1) {\n            return null;\n        }\n        var /** @type {?} */ strings = [];\n        var /** @type {?} */ expressions = [];\n        var /** @type {?} */ offsets = [];\n        var /** @type {?} */ offset = 0;\n        for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n            var /** @type {?} */ part = parts[i];\n            if (i % 2 === 0) {\n                // fixed string\n                strings.push(part);\n                offset += part.length;\n            }\n            else if (part.trim().length > 0) {\n                offset += interpolationConfig.start.length;\n                expressions.push(part);\n                offsets.push(offset);\n                offset += part.length + interpolationConfig.end.length;\n            }\n            else {\n                this._reportError('Blank expressions are not allowed in interpolated strings', input, \"at column \" + this._findInterpolationErrorColumn(parts, i, interpolationConfig) + \" in\", location);\n                expressions.push('$implict');\n                offsets.push(offset);\n            }\n        }\n        return new SplitInterpolation(strings, expressions, offsets);\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    Parser.prototype.wrapLiteralPrimitive = /**\n     * @param {?} input\n     * @param {?} location\n     * @return {?}\n     */\n    function (input, location) {\n        return new ASTWithSource(new LiteralPrimitive(new ParseSpan(0, input == null ? 0 : input.length), input), input, location, this.errors);\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._stripComments = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ i = this._commentStart(input);\n        return i != null ? input.substring(0, i).trim() : input;\n    };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    Parser.prototype._commentStart = /**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        var /** @type {?} */ outerQuote = null;\n        for (var /** @type {?} */ i = 0; i < input.length - 1; i++) {\n            var /** @type {?} */ char = input.charCodeAt(i);\n            var /** @type {?} */ nextChar = input.charCodeAt(i + 1);\n            if (char === $SLASH && nextChar == $SLASH && outerQuote == null)\n                return i;\n            if (outerQuote === char) {\n                outerQuote = null;\n            }\n            else if (outerQuote == null && isQuote(char)) {\n                outerQuote = char;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._checkNoInterpolation = /**\n     * @param {?} input\n     * @param {?} location\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (input, location, interpolationConfig) {\n        var /** @type {?} */ regexp = _createInterpolateRegExp(interpolationConfig);\n        var /** @type {?} */ parts = input.split(regexp);\n        if (parts.length > 1) {\n            this._reportError(\"Got interpolation (\" + interpolationConfig.start + interpolationConfig.end + \") where expression was expected\", input, \"at column \" + this._findInterpolationErrorColumn(parts, 1, interpolationConfig) + \" in\", location);\n        }\n    };\n    /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype._findInterpolationErrorColumn = /**\n     * @param {?} parts\n     * @param {?} partInErrIdx\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (parts, partInErrIdx, interpolationConfig) {\n        var /** @type {?} */ errLocation = '';\n        for (var /** @type {?} */ j = 0; j < partInErrIdx; j++) {\n            errLocation += j % 2 === 0 ?\n                parts[j] :\n                \"\" + interpolationConfig.start + parts[j] + interpolationConfig.end;\n        }\n        return errLocation.length;\n    };\n    return Parser;\n}());\nvar _ParseAST = (function () {\n    function _ParseAST(input, location, tokens, inputLength, parseAction, errors, offset) {\n        this.input = input;\n        this.location = location;\n        this.tokens = tokens;\n        this.inputLength = inputLength;\n        this.parseAction = parseAction;\n        this.errors = errors;\n        this.offset = offset;\n        this.rparensExpected = 0;\n        this.rbracketsExpected = 0;\n        this.rbracesExpected = 0;\n        this.index = 0;\n    }\n    /**\n     * @param {?} offset\n     * @return {?}\n     */\n    _ParseAST.prototype.peek = /**\n     * @param {?} offset\n     * @return {?}\n     */\n    function (offset) {\n        var /** @type {?} */ i = this.index + offset;\n        return i < this.tokens.length ? this.tokens[i] : EOF;\n    };\n    Object.defineProperty(_ParseAST.prototype, \"next\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.peek(0); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(_ParseAST.prototype, \"inputIndex\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return (this.index < this.tokens.length) ? this.next.index + this.offset :\n                this.inputLength + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _ParseAST.prototype.span = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) { return new ParseSpan(start, this.inputIndex); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.advance = /**\n     * @return {?}\n     */\n    function () { this.index++; };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.next.isCharacter(code)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordLet = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordLet(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.peekKeywordAs = /**\n     * @return {?}\n     */\n    function () { return this.next.isKeywordAs(); };\n    /**\n     * @param {?} code\n     * @return {?}\n     */\n    _ParseAST.prototype.expectCharacter = /**\n     * @param {?} code\n     * @return {?}\n     */\n    function (code) {\n        if (this.optionalCharacter(code))\n            return;\n        this.error(\"Missing expected \" + String.fromCharCode(code));\n    };\n    /**\n     * @param {?} op\n     * @return {?}\n     */\n    _ParseAST.prototype.optionalOperator = /**\n     * @param {?} op\n     * @return {?}\n     */\n    function (op) {\n        if (this.next.isOperator(op)) {\n            this.advance();\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * @param {?} operator\n     * @return {?}\n     */\n    _ParseAST.prototype.expectOperator = /**\n     * @param {?} operator\n     * @return {?}\n     */\n    function (operator) {\n        if (this.optionalOperator(operator))\n            return;\n        this.error(\"Missing expected operator \" + operator);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeyword = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier or keyword\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.expectIdentifierOrKeywordOrString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        if (!n.isIdentifier() && !n.isKeyword() && !n.isString()) {\n            this.error(\"Unexpected token \" + n + \", expected identifier, keyword, or string\");\n            return '';\n        }\n        this.advance();\n        return /** @type {?} */ (n.toString());\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ exprs = [];\n        var /** @type {?} */ start = this.inputIndex;\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ expr = this.parsePipe();\n            exprs.push(expr);\n            if (this.optionalCharacter($SEMICOLON)) {\n                if (!this.parseAction) {\n                    this.error('Binding expression cannot contain chained expression');\n                }\n                while (this.optionalCharacter($SEMICOLON)) {\n                } // read all semicolons\n            }\n            else if (this.index < this.tokens.length) {\n                this.error(\"Unexpected token '\" + this.next + \"'\");\n            }\n        }\n        if (exprs.length == 0)\n            return new EmptyExpr(this.span(start));\n        if (exprs.length == 1)\n            return exprs[0];\n        return new Chain(this.span(start), exprs);\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePipe = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parseExpression();\n        if (this.optionalOperator('|')) {\n            if (this.parseAction) {\n                this.error('Cannot have a pipe in an action expression');\n            }\n            do {\n                var /** @type {?} */ name_1 = this.expectIdentifierOrKeyword();\n                var /** @type {?} */ args = [];\n                while (this.optionalCharacter($COLON)) {\n                    args.push(this.parseExpression());\n                }\n                result = new BindingPipe(this.span(result.span.start), result, name_1, args);\n            } while (this.optionalOperator('|'));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpression = /**\n     * @return {?}\n     */\n    function () { return this.parseConditional(); };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseConditional = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        var /** @type {?} */ result = this.parseLogicalOr();\n        if (this.optionalOperator('?')) {\n            var /** @type {?} */ yes = this.parsePipe();\n            var /** @type {?} */ no = void 0;\n            if (!this.optionalCharacter($COLON)) {\n                var /** @type {?} */ end = this.inputIndex;\n                var /** @type {?} */ expression = this.input.substring(start, end);\n                this.error(\"Conditional expression \" + expression + \" requires all 3 expressions\");\n                no = new EmptyExpr(this.span(start));\n            }\n            else {\n                no = this.parsePipe();\n            }\n            return new Conditional(this.span(start), result, yes, no);\n        }\n        else {\n            return result;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalOr = /**\n     * @return {?}\n     */\n    function () {\n        // '||'\n        var /** @type {?} */ result = this.parseLogicalAnd();\n        while (this.optionalOperator('||')) {\n            var /** @type {?} */ right = this.parseLogicalAnd();\n            result = new Binary(this.span(result.span.start), '||', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLogicalAnd = /**\n     * @return {?}\n     */\n    function () {\n        // '&&'\n        var /** @type {?} */ result = this.parseEquality();\n        while (this.optionalOperator('&&')) {\n            var /** @type {?} */ right = this.parseEquality();\n            result = new Binary(this.span(result.span.start), '&&', result, right);\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseEquality = /**\n     * @return {?}\n     */\n    function () {\n        // '==','!=','===','!=='\n        var /** @type {?} */ result = this.parseRelational();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '==':\n                case '===':\n                case '!=':\n                case '!==':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseRelational();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseRelational = /**\n     * @return {?}\n     */\n    function () {\n        // '<', '>', '<=', '>='\n        var /** @type {?} */ result = this.parseAdditive();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '<':\n                case '>':\n                case '<=':\n                case '>=':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseAdditive();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAdditive = /**\n     * @return {?}\n     */\n    function () {\n        // '+', '-'\n        var /** @type {?} */ result = this.parseMultiplicative();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '+':\n                case '-':\n                    this.advance();\n                    var /** @type {?} */ right = this.parseMultiplicative();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseMultiplicative = /**\n     * @return {?}\n     */\n    function () {\n        // '*', '%', '/'\n        var /** @type {?} */ result = this.parsePrefix();\n        while (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ operator = this.next.strValue;\n            switch (operator) {\n                case '*':\n                case '%':\n                case '/':\n                    this.advance();\n                    var /** @type {?} */ right = this.parsePrefix();\n                    result = new Binary(this.span(result.span.start), operator, result, right);\n                    continue;\n            }\n            break;\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrefix = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.type == TokenType.Operator) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ operator = this.next.strValue;\n            var /** @type {?} */ result = void 0;\n            switch (operator) {\n                case '+':\n                    this.advance();\n                    return this.parsePrefix();\n                case '-':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new Binary(this.span(start), operator, new LiteralPrimitive(new ParseSpan(start, start), 0), result);\n                case '!':\n                    this.advance();\n                    result = this.parsePrefix();\n                    return new PrefixNot(this.span(start), result);\n            }\n        }\n        return this.parseCallChain();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallChain = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = this.parsePrimary();\n        while (true) {\n            if (this.optionalCharacter($PERIOD)) {\n                result = this.parseAccessMemberOrMethodCall(result, false);\n            }\n            else if (this.optionalOperator('?.')) {\n                result = this.parseAccessMemberOrMethodCall(result, true);\n            }\n            else if (this.optionalCharacter($LBRACKET)) {\n                this.rbracketsExpected++;\n                var /** @type {?} */ key = this.parsePipe();\n                this.rbracketsExpected--;\n                this.expectCharacter($RBRACKET);\n                if (this.optionalOperator('=')) {\n                    var /** @type {?} */ value = this.parseConditional();\n                    result = new KeyedWrite(this.span(result.span.start), result, key, value);\n                }\n                else {\n                    result = new KeyedRead(this.span(result.span.start), result, key);\n                }\n            }\n            else if (this.optionalCharacter($LPAREN)) {\n                this.rparensExpected++;\n                var /** @type {?} */ args = this.parseCallArguments();\n                this.rparensExpected--;\n                this.expectCharacter($RPAREN);\n                result = new FunctionCall(this.span(result.span.start), result, args);\n            }\n            else if (this.optionalOperator('!')) {\n                result = new NonNullAssert(this.span(result.span.start), result);\n            }\n            else {\n                return result;\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parsePrimary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this.inputIndex;\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ result = this.parsePipe();\n            this.rparensExpected--;\n            this.expectCharacter($RPAREN);\n            return result;\n        }\n        else if (this.next.isKeywordNull()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), null);\n        }\n        else if (this.next.isKeywordUndefined()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), void 0);\n        }\n        else if (this.next.isKeywordTrue()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), true);\n        }\n        else if (this.next.isKeywordFalse()) {\n            this.advance();\n            return new LiteralPrimitive(this.span(start), false);\n        }\n        else if (this.next.isKeywordThis()) {\n            this.advance();\n            return new ImplicitReceiver(this.span(start));\n        }\n        else if (this.optionalCharacter($LBRACKET)) {\n            this.rbracketsExpected++;\n            var /** @type {?} */ elements = this.parseExpressionList($RBRACKET);\n            this.rbracketsExpected--;\n            this.expectCharacter($RBRACKET);\n            return new LiteralArray(this.span(start), elements);\n        }\n        else if (this.next.isCharacter($LBRACE)) {\n            return this.parseLiteralMap();\n        }\n        else if (this.next.isIdentifier()) {\n            return this.parseAccessMemberOrMethodCall(new ImplicitReceiver(this.span(start)), false);\n        }\n        else if (this.next.isNumber()) {\n            var /** @type {?} */ value = this.next.toNumber();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), value);\n        }\n        else if (this.next.isString()) {\n            var /** @type {?} */ literalValue = this.next.toString();\n            this.advance();\n            return new LiteralPrimitive(this.span(start), literalValue);\n        }\n        else if (this.index >= this.tokens.length) {\n            this.error(\"Unexpected end of expression: \" + this.input);\n            return new EmptyExpr(this.span(start));\n        }\n        else {\n            this.error(\"Unexpected token \" + this.next);\n            return new EmptyExpr(this.span(start));\n        }\n    };\n    /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    _ParseAST.prototype.parseExpressionList = /**\n     * @param {?} terminator\n     * @return {?}\n     */\n    function (terminator) {\n        var /** @type {?} */ result = [];\n        if (!this.next.isCharacter(terminator)) {\n            do {\n                result.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n        }\n        return result;\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseLiteralMap = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ keys = [];\n        var /** @type {?} */ values = [];\n        var /** @type {?} */ start = this.inputIndex;\n        this.expectCharacter($LBRACE);\n        if (!this.optionalCharacter($RBRACE)) {\n            this.rbracesExpected++;\n            do {\n                var /** @type {?} */ quoted = this.next.isString();\n                var /** @type {?} */ key = this.expectIdentifierOrKeywordOrString();\n                keys.push({ key: key, quoted: quoted });\n                this.expectCharacter($COLON);\n                values.push(this.parsePipe());\n            } while (this.optionalCharacter($COMMA));\n            this.rbracesExpected--;\n            this.expectCharacter($RBRACE);\n        }\n        return new LiteralMap(this.span(start), keys, values);\n    };\n    /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    _ParseAST.prototype.parseAccessMemberOrMethodCall = /**\n     * @param {?} receiver\n     * @param {?=} isSafe\n     * @return {?}\n     */\n    function (receiver, isSafe) {\n        if (isSafe === void 0) { isSafe = false; }\n        var /** @type {?} */ start = receiver.span.start;\n        var /** @type {?} */ id = this.expectIdentifierOrKeyword();\n        if (this.optionalCharacter($LPAREN)) {\n            this.rparensExpected++;\n            var /** @type {?} */ args = this.parseCallArguments();\n            this.expectCharacter($RPAREN);\n            this.rparensExpected--;\n            var /** @type {?} */ span = this.span(start);\n            return isSafe ? new SafeMethodCall(span, receiver, id, args) :\n                new MethodCall(span, receiver, id, args);\n        }\n        else {\n            if (isSafe) {\n                if (this.optionalOperator('=')) {\n                    this.error('The \\'?.\\' operator cannot be used in the assignment');\n                    return new EmptyExpr(this.span(start));\n                }\n                else {\n                    return new SafePropertyRead(this.span(start), receiver, id);\n                }\n            }\n            else {\n                if (this.optionalOperator('=')) {\n                    if (!this.parseAction) {\n                        this.error('Bindings cannot contain assignments');\n                        return new EmptyExpr(this.span(start));\n                    }\n                    var /** @type {?} */ value = this.parseConditional();\n                    return new PropertyWrite(this.span(start), receiver, id, value);\n                }\n                else {\n                    return new PropertyRead(this.span(start), receiver, id);\n                }\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseCallArguments = /**\n     * @return {?}\n     */\n    function () {\n        if (this.next.isCharacter($RPAREN))\n            return [];\n        var /** @type {?} */ positionals = [];\n        do {\n            positionals.push(this.parsePipe());\n        } while (this.optionalCharacter($COMMA));\n        return /** @type {?} */ (positionals);\n    };\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     */\n    /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    _ParseAST.prototype.expectTemplateBindingKey = /**\n     * An identifier, a keyword, a string with an optional `-` inbetween.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = '';\n        var /** @type {?} */ operatorFound = false;\n        do {\n            result += this.expectIdentifierOrKeywordOrString();\n            operatorFound = this.optionalOperator('-');\n            if (operatorFound) {\n                result += '-';\n            }\n        } while (operatorFound);\n        return result.toString();\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.parseTemplateBindings = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ bindings = [];\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        var /** @type {?} */ warnings = [];\n        while (this.index < this.tokens.length) {\n            var /** @type {?} */ start = this.inputIndex;\n            var /** @type {?} */ keyIsVar = this.peekKeywordLet();\n            if (keyIsVar) {\n                this.advance();\n            }\n            var /** @type {?} */ rawKey = this.expectTemplateBindingKey();\n            var /** @type {?} */ key = rawKey;\n            if (!keyIsVar) {\n                if (prefix == null) {\n                    prefix = key;\n                }\n                else {\n                    key = prefix + key[0].toUpperCase() + key.substring(1);\n                }\n            }\n            this.optionalCharacter($COLON);\n            var /** @type {?} */ name_2 = /** @type {?} */ ((null));\n            var /** @type {?} */ expression = /** @type {?} */ ((null));\n            if (keyIsVar) {\n                if (this.optionalOperator('=')) {\n                    name_2 = this.expectTemplateBindingKey();\n                }\n                else {\n                    name_2 = '\\$implicit';\n                }\n            }\n            else if (this.peekKeywordAs()) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                name_2 = rawKey;\n                key = this.expectTemplateBindingKey(); // read local var name\n                keyIsVar = true;\n            }\n            else if (this.next !== EOF && !this.peekKeywordLet()) {\n                var /** @type {?} */ start_1 = this.inputIndex;\n                var /** @type {?} */ ast = this.parsePipe();\n                var /** @type {?} */ source = this.input.substring(start_1 - this.offset, this.inputIndex - this.offset);\n                expression = new ASTWithSource(ast, source, this.location, this.errors);\n            }\n            bindings.push(new TemplateBinding(this.span(start), key, keyIsVar, name_2, expression));\n            if (this.peekKeywordAs() && !keyIsVar) {\n                var /** @type {?} */ letStart = this.inputIndex;\n                this.advance(); // consume `as`\n                var /** @type {?} */ letName = this.expectTemplateBindingKey(); // read local var name\n                bindings.push(new TemplateBinding(this.span(letStart), letName, true, key, /** @type {?} */ ((null))));\n            }\n            if (!this.optionalCharacter($SEMICOLON)) {\n                this.optionalCharacter($COMMA);\n            }\n        }\n        return new TemplateBindingParseResult(bindings, warnings, this.errors);\n    };\n    /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.error = /**\n     * @param {?} message\n     * @param {?=} index\n     * @return {?}\n     */\n    function (message, index) {\n        if (index === void 0) { index = null; }\n        this.errors.push(new ParserError(message, this.input, this.locationText(index), this.location));\n        this.skip();\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    _ParseAST.prototype.locationText = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        if (index === void 0) { index = null; }\n        if (index == null)\n            index = this.index;\n        return (index < this.tokens.length) ? \"at column \" + (this.tokens[index].index + 1) + \" in\" :\n            \"at the end of the expression\";\n    };\n    /**\n     * @return {?}\n     */\n    _ParseAST.prototype.skip = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ n = this.next;\n        while (this.index < this.tokens.length && !n.isCharacter($SEMICOLON) &&\n            (this.rparensExpected <= 0 || !n.isCharacter($RPAREN)) &&\n            (this.rbracesExpected <= 0 || !n.isCharacter($RBRACE)) &&\n            (this.rbracketsExpected <= 0 || !n.isCharacter($RBRACKET))) {\n            if (this.next.isError()) {\n                this.errors.push(new ParserError(/** @type {?} */ ((this.next.toString())), this.input, this.locationText(), this.location));\n            }\n            this.advance();\n            n = this.next;\n        }\n    };\n    return _ParseAST;\n}());\nvar SimpleExpressionChecker = (function () {\n    function SimpleExpressionChecker() {\n        this.errors = [];\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    SimpleExpressionChecker.check = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var /** @type {?} */ s = new SimpleExpressionChecker();\n        ast.visit(s);\n        return s.errors;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.expressions); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.visitAll(ast.values); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { this.errors.push('pipes'); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} asts\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitAll = /**\n     * @param {?} asts\n     * @return {?}\n     */\n    function (asts) {\n        var _this = this;\n        return asts.map(function (node) { return node.visit(_this); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    SimpleExpressionChecker.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return SimpleExpressionChecker;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ParseLocation = (function () {\n    function ParseLocation(file, offset, line, col) {\n        this.file = file;\n        this.offset = offset;\n        this.line = line;\n        this.col = col;\n    }\n    /**\n     * @return {?}\n     */\n    ParseLocation.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.offset != null ? this.file.url + \"@\" + this.line + \":\" + this.col : this.file.url;\n    };\n    /**\n     * @param {?} delta\n     * @return {?}\n     */\n    ParseLocation.prototype.moveBy = /**\n     * @param {?} delta\n     * @return {?}\n     */\n    function (delta) {\n        var /** @type {?} */ source = this.file.content;\n        var /** @type {?} */ len = source.length;\n        var /** @type {?} */ offset = this.offset;\n        var /** @type {?} */ line = this.line;\n        var /** @type {?} */ col = this.col;\n        while (offset > 0 && delta < 0) {\n            offset--;\n            delta++;\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            if (ch == $LF) {\n                line--;\n                var /** @type {?} */ priorLine = source.substr(0, offset - 1).lastIndexOf(String.fromCharCode($LF));\n                col = priorLine > 0 ? offset - priorLine : offset;\n            }\n            else {\n                col--;\n            }\n        }\n        while (offset < len && delta > 0) {\n            var /** @type {?} */ ch = source.charCodeAt(offset);\n            offset++;\n            delta--;\n            if (ch == $LF) {\n                line++;\n                col = 0;\n            }\n            else {\n                col++;\n            }\n        }\n        return new ParseLocation(this.file, offset, line, col);\n    };\n    // Return the source around the location\n    // Up to `maxChars` or `maxLines` on each side of the location\n    /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    ParseLocation.prototype.getContext = /**\n     * @param {?} maxChars\n     * @param {?} maxLines\n     * @return {?}\n     */\n    function (maxChars, maxLines) {\n        var /** @type {?} */ content = this.file.content;\n        var /** @type {?} */ startOffset = this.offset;\n        if (startOffset != null) {\n            if (startOffset > content.length - 1) {\n                startOffset = content.length - 1;\n            }\n            var /** @type {?} */ endOffset = startOffset;\n            var /** @type {?} */ ctxChars = 0;\n            var /** @type {?} */ ctxLines = 0;\n            while (ctxChars < maxChars && startOffset > 0) {\n                startOffset--;\n                ctxChars++;\n                if (content[startOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            ctxChars = 0;\n            ctxLines = 0;\n            while (ctxChars < maxChars && endOffset < content.length - 1) {\n                endOffset++;\n                ctxChars++;\n                if (content[endOffset] == '\\n') {\n                    if (++ctxLines == maxLines) {\n                        break;\n                    }\n                }\n            }\n            return {\n                before: content.substring(startOffset, this.offset),\n                after: content.substring(this.offset, endOffset + 1),\n            };\n        }\n        return null;\n    };\n    return ParseLocation;\n}());\nvar ParseSourceFile = (function () {\n    function ParseSourceFile(content, url) {\n        this.content = content;\n        this.url = url;\n    }\n    return ParseSourceFile;\n}());\nvar ParseSourceSpan = (function () {\n    function ParseSourceSpan(start, end, details) {\n        if (details === void 0) { details = null; }\n        this.start = start;\n        this.end = end;\n        this.details = details;\n    }\n    /**\n     * @return {?}\n     */\n    ParseSourceSpan.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        return this.start.file.content.substring(this.start.offset, this.end.offset);\n    };\n    return ParseSourceSpan;\n}());\n/** @enum {number} */\nvar ParseErrorLevel = {\n    WARNING: 0,\n    ERROR: 1,\n};\nParseErrorLevel[ParseErrorLevel.WARNING] = \"WARNING\";\nParseErrorLevel[ParseErrorLevel.ERROR] = \"ERROR\";\nvar ParseError = (function () {\n    function ParseError(span, msg, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this.span = span;\n        this.msg = msg;\n        this.level = level;\n    }\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.contextualMessage = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ ctx = this.span.start.getContext(100, 3);\n        return ctx ? \" (\\\"\" + ctx.before + \"[\" + ParseErrorLevel[this.level] + \" ->]\" + ctx.after + \"\\\")\" : '';\n    };\n    /**\n     * @return {?}\n     */\n    ParseError.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ details = this.span.details ? \", \" + this.span.details : '';\n        return \"\" + this.msg + this.contextualMessage() + \": \" + this.span.start + details;\n    };\n    return ParseError;\n}());\n/**\n * @param {?} kind\n * @param {?} type\n * @return {?}\n */\nfunction typeSourceSpan(kind, type) {\n    var /** @type {?} */ moduleUrl = identifierModuleUrl(type);\n    var /** @type {?} */ sourceFileName = moduleUrl != null ? \"in \" + kind + \" \" + identifierName(type) + \" in \" + moduleUrl :\n        \"in \" + kind + \" \" + identifierName(type);\n    var /** @type {?} */ sourceFile = new ParseSourceFile('', sourceFileName);\n    return new ParseSourceSpan(new ParseLocation(sourceFile, -1, -1, -1), new ParseLocation(sourceFile, -1, -1, -1));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar TokenType$1 = {\n    TAG_OPEN_START: 0,\n    TAG_OPEN_END: 1,\n    TAG_OPEN_END_VOID: 2,\n    TAG_CLOSE: 3,\n    TEXT: 4,\n    ESCAPABLE_RAW_TEXT: 5,\n    RAW_TEXT: 6,\n    COMMENT_START: 7,\n    COMMENT_END: 8,\n    CDATA_START: 9,\n    CDATA_END: 10,\n    ATTR_NAME: 11,\n    ATTR_VALUE: 12,\n    DOC_TYPE: 13,\n    EXPANSION_FORM_START: 14,\n    EXPANSION_CASE_VALUE: 15,\n    EXPANSION_CASE_EXP_START: 16,\n    EXPANSION_CASE_EXP_END: 17,\n    EXPANSION_FORM_END: 18,\n    EOF: 19,\n};\nTokenType$1[TokenType$1.TAG_OPEN_START] = \"TAG_OPEN_START\";\nTokenType$1[TokenType$1.TAG_OPEN_END] = \"TAG_OPEN_END\";\nTokenType$1[TokenType$1.TAG_OPEN_END_VOID] = \"TAG_OPEN_END_VOID\";\nTokenType$1[TokenType$1.TAG_CLOSE] = \"TAG_CLOSE\";\nTokenType$1[TokenType$1.TEXT] = \"TEXT\";\nTokenType$1[TokenType$1.ESCAPABLE_RAW_TEXT] = \"ESCAPABLE_RAW_TEXT\";\nTokenType$1[TokenType$1.RAW_TEXT] = \"RAW_TEXT\";\nTokenType$1[TokenType$1.COMMENT_START] = \"COMMENT_START\";\nTokenType$1[TokenType$1.COMMENT_END] = \"COMMENT_END\";\nTokenType$1[TokenType$1.CDATA_START] = \"CDATA_START\";\nTokenType$1[TokenType$1.CDATA_END] = \"CDATA_END\";\nTokenType$1[TokenType$1.ATTR_NAME] = \"ATTR_NAME\";\nTokenType$1[TokenType$1.ATTR_VALUE] = \"ATTR_VALUE\";\nTokenType$1[TokenType$1.DOC_TYPE] = \"DOC_TYPE\";\nTokenType$1[TokenType$1.EXPANSION_FORM_START] = \"EXPANSION_FORM_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_VALUE] = \"EXPANSION_CASE_VALUE\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_START] = \"EXPANSION_CASE_EXP_START\";\nTokenType$1[TokenType$1.EXPANSION_CASE_EXP_END] = \"EXPANSION_CASE_EXP_END\";\nTokenType$1[TokenType$1.EXPANSION_FORM_END] = \"EXPANSION_FORM_END\";\nTokenType$1[TokenType$1.EOF] = \"EOF\";\nvar Token$1 = (function () {\n    function Token(type, parts, sourceSpan) {\n        this.type = type;\n        this.parts = parts;\n        this.sourceSpan = sourceSpan;\n    }\n    return Token;\n}());\nvar TokenError = (function (_super) {\n    __extends(TokenError, _super);\n    function TokenError(errorMsg, tokenType, span) {\n        var _this = _super.call(this, span, errorMsg) || this;\n        _this.tokenType = tokenType;\n        return _this;\n    }\n    return TokenError;\n}(ParseError));\nvar TokenizeResult = (function () {\n    function TokenizeResult(tokens, errors) {\n        this.tokens = tokens;\n        this.errors = errors;\n    }\n    return TokenizeResult;\n}());\n/**\n * @param {?} source\n * @param {?} url\n * @param {?} getTagDefinition\n * @param {?=} tokenizeExpansionForms\n * @param {?=} interpolationConfig\n * @return {?}\n */\nfunction tokenize(source, url, getTagDefinition, tokenizeExpansionForms, interpolationConfig) {\n    if (tokenizeExpansionForms === void 0) { tokenizeExpansionForms = false; }\n    if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n    return new _Tokenizer(new ParseSourceFile(source, url), getTagDefinition, tokenizeExpansionForms, interpolationConfig)\n        .tokenize();\n}\nvar _CR_OR_CRLF_REGEXP = /\\r\\n?/g;\n/**\n * @param {?} charCode\n * @return {?}\n */\nfunction _unexpectedCharacterErrorMsg(charCode) {\n    var /** @type {?} */ char = charCode === $EOF ? 'EOF' : String.fromCharCode(charCode);\n    return \"Unexpected character \\\"\" + char + \"\\\"\";\n}\n/**\n * @param {?} entitySrc\n * @return {?}\n */\nfunction _unknownEntityErrorMsg(entitySrc) {\n    return \"Unknown entity \\\"\" + entitySrc + \"\\\" - use the \\\"&#<decimal>;\\\" or  \\\"&#x<hex>;\\\" syntax\";\n}\nvar _ControlFlowError = (function () {\n    function _ControlFlowError(error) {\n        this.error = error;\n    }\n    return _ControlFlowError;\n}());\nvar _Tokenizer = (function () {\n    /**\n     * @param _file The html source\n     * @param _getTagDefinition\n     * @param _tokenizeIcu Whether to tokenize ICU messages (considered as text nodes when false)\n     * @param _interpolationConfig\n     */\n    function _Tokenizer(_file, _getTagDefinition, _tokenizeIcu, _interpolationConfig) {\n        if (_interpolationConfig === void 0) { _interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        this._file = _file;\n        this._getTagDefinition = _getTagDefinition;\n        this._tokenizeIcu = _tokenizeIcu;\n        this._interpolationConfig = _interpolationConfig;\n        this._peek = -1;\n        this._nextPeek = -1;\n        this._index = -1;\n        this._line = 0;\n        this._column = -1;\n        this._expansionCaseStack = [];\n        this._inInterpolation = false;\n        this.tokens = [];\n        this.errors = [];\n        this._input = _file.content;\n        this._length = _file.content.length;\n        this._advance();\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _Tokenizer.prototype._processCarriageReturns = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        // http://www.w3.org/TR/html5/syntax.html#preprocessing-the-input-stream\n        // In order to keep the original position in the source, we can not\n        // pre-process it.\n        // Instead CRs are processed right before instantiating the tokens.\n        return content.replace(_CR_OR_CRLF_REGEXP, '\\n');\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype.tokenize = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek !== $EOF) {\n            var /** @type {?} */ start = this._getLocation();\n            try {\n                if (this._attemptCharCode($LT)) {\n                    if (this._attemptCharCode($BANG)) {\n                        if (this._attemptCharCode($LBRACKET)) {\n                            this._consumeCdata(start);\n                        }\n                        else if (this._attemptCharCode($MINUS)) {\n                            this._consumeComment(start);\n                        }\n                        else {\n                            this._consumeDocType(start);\n                        }\n                    }\n                    else if (this._attemptCharCode($SLASH)) {\n                        this._consumeTagClose(start);\n                    }\n                    else {\n                        this._consumeTagOpen(start);\n                    }\n                }\n                else if (!(this._tokenizeIcu && this._tokenizeExpansionForm())) {\n                    this._consumeText();\n                }\n            }\n            catch (/** @type {?} */ e) {\n                if (e instanceof _ControlFlowError) {\n                    this.errors.push(e.error);\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        this._beginToken(TokenType$1.EOF);\n        this._endToken([]);\n        return new TokenizeResult(mergeTextTokens(this.tokens), this.errors);\n    };\n    /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    _Tokenizer.prototype._tokenizeExpansionForm = /**\n     * \\@internal\n     * @return {?} whether an ICU token has been created\n     */\n    function () {\n        if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n            this._consumeExpansionFormStart();\n            return true;\n        }\n        if (isExpansionCaseStart(this._peek) && this._isInExpansionForm()) {\n            this._consumeExpansionCaseStart();\n            return true;\n        }\n        if (this._peek === $RBRACE) {\n            if (this._isInExpansionCase()) {\n                this._consumeExpansionCaseEnd();\n                return true;\n            }\n            if (this._isInExpansionForm()) {\n                this._consumeExpansionFormEnd();\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._getLocation = /**\n     * @return {?}\n     */\n    function () {\n        return new ParseLocation(this._file, this._index, this._line, this._column);\n    };\n    /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._getSpan = /**\n     * @param {?=} start\n     * @param {?=} end\n     * @return {?}\n     */\n    function (start, end) {\n        if (start === void 0) { start = this._getLocation(); }\n        if (end === void 0) { end = this._getLocation(); }\n        return new ParseSourceSpan(start, end);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._beginToken = /**\n     * @param {?} type\n     * @param {?=} start\n     * @return {?}\n     */\n    function (type, start) {\n        if (start === void 0) { start = this._getLocation(); }\n        this._currentTokenStart = start;\n        this._currentTokenType = type;\n    };\n    /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    _Tokenizer.prototype._endToken = /**\n     * @param {?} parts\n     * @param {?=} end\n     * @return {?}\n     */\n    function (parts, end) {\n        if (end === void 0) { end = this._getLocation(); }\n        var /** @type {?} */ token = new Token$1(this._currentTokenType, parts, new ParseSourceSpan(this._currentTokenStart, end));\n        this.tokens.push(token);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return token;\n    };\n    /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    _Tokenizer.prototype._createError = /**\n     * @param {?} msg\n     * @param {?} span\n     * @return {?}\n     */\n    function (msg, span) {\n        if (this._isInExpansionForm()) {\n            msg += \" (Do you have an unescaped \\\"{\\\" in your template? Use \\\"{{ '{' }}\\\") to escape it.)\";\n        }\n        var /** @type {?} */ error = new TokenError(msg, this._currentTokenType, span);\n        this._currentTokenStart = /** @type {?} */ ((null));\n        this._currentTokenType = /** @type {?} */ ((null));\n        return new _ControlFlowError(error);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        if (this._index >= this._length) {\n            throw this._createError(_unexpectedCharacterErrorMsg($EOF), this._getSpan());\n        }\n        if (this._peek === $LF) {\n            this._line++;\n            this._column = 0;\n        }\n        else if (this._peek !== $LF && this._peek !== $CR) {\n            this._column++;\n        }\n        this._index++;\n        this._peek = this._index >= this._length ? $EOF : this._input.charCodeAt(this._index);\n        this._nextPeek =\n            this._index + 1 >= this._length ? $EOF : this._input.charCodeAt(this._index + 1);\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (this._peek === charCode) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeCaseInsensitive = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        if (compareCharCodeCaseInsensitive(this._peek, charCode)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCode = /**\n     * @param {?} charCode\n     * @return {?}\n     */\n    function (charCode) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptCharCode(charCode)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location, location));\n        }\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ len = chars.length;\n        if (this._index + len > this._length) {\n            return false;\n        }\n        var /** @type {?} */ initialPosition = this._savePosition();\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            if (!this._attemptCharCode(chars.charCodeAt(i))) {\n                // If attempting to parse the string fails, we want to reset the parser\n                // to where it was before the attempt\n                this._restorePosition(initialPosition);\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptStrCaseInsensitive = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        for (var /** @type {?} */ i = 0; i < chars.length; i++) {\n            if (!this._attemptCharCodeCaseInsensitive(chars.charCodeAt(i))) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {?} chars\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireStr = /**\n     * @param {?} chars\n     * @return {?}\n     */\n    function (chars) {\n        var /** @type {?} */ location = this._getLocation();\n        if (!this._attemptStr(chars)) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(location));\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        while (!predicate(this._peek)) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    _Tokenizer.prototype._requireCharCodeUntilFn = /**\n     * @param {?} predicate\n     * @param {?} len\n     * @return {?}\n     */\n    function (predicate, len) {\n        var /** @type {?} */ start = this._getLocation();\n        this._attemptCharCodeUntilFn(predicate);\n        if (this._index - start.offset < len) {\n            throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan(start, start));\n        }\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._attemptUntilChar = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        while (this._peek !== char) {\n            this._advance();\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._readChar = /**\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (decodeEntities) {\n        if (decodeEntities && this._peek === $AMPERSAND) {\n            return this._decodeEntity();\n        }\n        else {\n            var /** @type {?} */ index = this._index;\n            this._advance();\n            return this._input[index];\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._decodeEntity = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._advance();\n        if (this._attemptCharCode($HASH)) {\n            var /** @type {?} */ isHex = this._attemptCharCode($x) || this._attemptCharCode($X);\n            var /** @type {?} */ numberStart = this._getLocation().offset;\n            this._attemptCharCodeUntilFn(isDigitEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            this._advance();\n            var /** @type {?} */ strNum = this._input.substring(numberStart, this._index - 1);\n            try {\n                var /** @type {?} */ charCode = parseInt(strNum, isHex ? 16 : 10);\n                return String.fromCharCode(charCode);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ entity = this._input.substring(start.offset + 1, this._index - 1);\n                throw this._createError(_unknownEntityErrorMsg(entity), this._getSpan(start));\n            }\n        }\n        else {\n            var /** @type {?} */ startPosition = this._savePosition();\n            this._attemptCharCodeUntilFn(isNamedEntityEnd);\n            if (this._peek != $SEMICOLON) {\n                this._restorePosition(startPosition);\n                return '&';\n            }\n            this._advance();\n            var /** @type {?} */ name_1 = this._input.substring(start.offset + 1, this._index - 1);\n            var /** @type {?} */ char = NAMED_ENTITIES[name_1];\n            if (!char) {\n                throw this._createError(_unknownEntityErrorMsg(name_1), this._getSpan(start));\n            }\n            return char;\n        }\n    };\n    /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawText = /**\n     * @param {?} decodeEntities\n     * @param {?} firstCharOfEnd\n     * @param {?} attemptEndRest\n     * @return {?}\n     */\n    function (decodeEntities, firstCharOfEnd, attemptEndRest) {\n        var /** @type {?} */ tagCloseStart;\n        var /** @type {?} */ textStart = this._getLocation();\n        this._beginToken(decodeEntities ? TokenType$1.ESCAPABLE_RAW_TEXT : TokenType$1.RAW_TEXT, textStart);\n        var /** @type {?} */ parts = [];\n        while (true) {\n            tagCloseStart = this._getLocation();\n            if (this._attemptCharCode(firstCharOfEnd) && attemptEndRest()) {\n                break;\n            }\n            if (this._index > tagCloseStart.offset) {\n                // add the characters consumed by the previous if statement to the output\n                parts.push(this._input.substring(tagCloseStart.offset, this._index));\n            }\n            while (this._peek !== firstCharOfEnd) {\n                parts.push(this._readChar(decodeEntities));\n            }\n        }\n        return this._endToken([this._processCarriageReturns(parts.join(''))], tagCloseStart);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeComment = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.COMMENT_START, start);\n        this._requireCharCode($MINUS);\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $MINUS, function () { return _this._attemptStr('->'); });\n        this._beginToken(TokenType$1.COMMENT_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeCdata = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var _this = this;\n        this._beginToken(TokenType$1.CDATA_START, start);\n        this._requireStr('CDATA[');\n        this._endToken([]);\n        var /** @type {?} */ textToken = this._consumeRawText(false, $RBRACKET, function () { return _this._attemptStr(']>'); });\n        this._beginToken(TokenType$1.CDATA_END, textToken.sourceSpan.end);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeDocType = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.DOC_TYPE, start);\n        this._attemptUntilChar($GT);\n        this._advance();\n        this._endToken([this._input.substring(start.offset + 2, this._index - 1)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumePrefixAndName = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ nameOrPrefixStart = this._index;\n        var /** @type {?} */ prefix = /** @type {?} */ ((null));\n        while (this._peek !== $COLON && !isPrefixEnd(this._peek)) {\n            this._advance();\n        }\n        var /** @type {?} */ nameStart;\n        if (this._peek === $COLON) {\n            this._advance();\n            prefix = this._input.substring(nameOrPrefixStart, this._index - 1);\n            nameStart = this._index;\n        }\n        else {\n            nameStart = nameOrPrefixStart;\n        }\n        this._requireCharCodeUntilFn(isNameEnd, this._index === nameStart ? 1 : 0);\n        var /** @type {?} */ name = this._input.substring(nameStart, this._index);\n        return [prefix, name];\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpen = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ savedPos = this._savePosition();\n        var /** @type {?} */ tagName;\n        var /** @type {?} */ lowercaseTagName;\n        try {\n            if (!isAsciiLetter(this._peek)) {\n                throw this._createError(_unexpectedCharacterErrorMsg(this._peek), this._getSpan());\n            }\n            var /** @type {?} */ nameStart = this._index;\n            this._consumeTagOpenStart(start);\n            tagName = this._input.substring(nameStart, this._index);\n            lowercaseTagName = tagName.toLowerCase();\n            this._attemptCharCodeUntilFn(isNotWhitespace);\n            while (this._peek !== $SLASH && this._peek !== $GT) {\n                this._consumeAttributeName();\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n                if (this._attemptCharCode($EQ)) {\n                    this._attemptCharCodeUntilFn(isNotWhitespace);\n                    this._consumeAttributeValue();\n                }\n                this._attemptCharCodeUntilFn(isNotWhitespace);\n            }\n            this._consumeTagOpenEnd();\n        }\n        catch (/** @type {?} */ e) {\n            if (e instanceof _ControlFlowError) {\n                // When the start tag is invalid, assume we want a \"<\"\n                this._restorePosition(savedPos);\n                // Back to back text tokens are merged at the end\n                this._beginToken(TokenType$1.TEXT, start);\n                this._endToken(['<']);\n                return;\n            }\n            throw e;\n        }\n        var /** @type {?} */ contentTokenType = this._getTagDefinition(tagName).contentType;\n        if (contentTokenType === TagContentType.RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, false);\n        }\n        else if (contentTokenType === TagContentType.ESCAPABLE_RAW_TEXT) {\n            this._consumeRawTextWithTagClose(lowercaseTagName, true);\n        }\n    };\n    /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeRawTextWithTagClose = /**\n     * @param {?} lowercaseTagName\n     * @param {?} decodeEntities\n     * @return {?}\n     */\n    function (lowercaseTagName, decodeEntities) {\n        var _this = this;\n        var /** @type {?} */ textToken = this._consumeRawText(decodeEntities, $LT, function () {\n            if (!_this._attemptCharCode($SLASH))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            if (!_this._attemptStrCaseInsensitive(lowercaseTagName))\n                return false;\n            _this._attemptCharCodeUntilFn(isNotWhitespace);\n            return _this._attemptCharCode($GT);\n        });\n        this._beginToken(TokenType$1.TAG_CLOSE, textToken.sourceSpan.end);\n        this._endToken([/** @type {?} */ ((null)), lowercaseTagName]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenStart = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_OPEN_START, start);\n        var /** @type {?} */ parts = this._consumePrefixAndName();\n        this._endToken(parts);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeName = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_NAME);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeAttributeValue = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.ATTR_VALUE);\n        var /** @type {?} */ value;\n        if (this._peek === $SQ || this._peek === $DQ) {\n            var /** @type {?} */ quoteChar = this._peek;\n            this._advance();\n            var /** @type {?} */ parts = [];\n            while (this._peek !== quoteChar) {\n                parts.push(this._readChar(true));\n            }\n            value = parts.join('');\n            this._advance();\n        }\n        else {\n            var /** @type {?} */ valueStart = this._index;\n            this._requireCharCodeUntilFn(isNameEnd, 1);\n            value = this._input.substring(valueStart, this._index);\n        }\n        this._endToken([this._processCarriageReturns(value)]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagOpenEnd = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokenType = this._attemptCharCode($SLASH) ? TokenType$1.TAG_OPEN_END_VOID : TokenType$1.TAG_OPEN_END;\n        this._beginToken(tokenType);\n        this._requireCharCode($GT);\n        this._endToken([]);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeTagClose = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        this._beginToken(TokenType$1.TAG_CLOSE, start);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        var /** @type {?} */ prefixAndName = this._consumePrefixAndName();\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._requireCharCode($GT);\n        this._endToken(prefixAndName);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_FORM_START);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ condition = this._readUntil($COMMA);\n        this._endToken([condition], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.RAW_TEXT, this._getLocation());\n        var /** @type {?} */ type = this._readUntil($COMMA);\n        this._endToken([type], this._getLocation());\n        this._requireCharCode($COMMA);\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseStart = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_VALUE, this._getLocation());\n        var /** @type {?} */ value = this._readUntil($LBRACE).trim();\n        this._endToken([value], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_START, this._getLocation());\n        this._requireCharCode($LBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.push(TokenType$1.EXPANSION_CASE_EXP_START);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionCaseEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_CASE_EXP_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([], this._getLocation());\n        this._attemptCharCodeUntilFn(isNotWhitespace);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeExpansionFormEnd = /**\n     * @return {?}\n     */\n    function () {\n        this._beginToken(TokenType$1.EXPANSION_FORM_END, this._getLocation());\n        this._requireCharCode($RBRACE);\n        this._endToken([]);\n        this._expansionCaseStack.pop();\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._consumeText = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ start = this._getLocation();\n        this._beginToken(TokenType$1.TEXT, start);\n        var /** @type {?} */ parts = [];\n        do {\n            if (this._interpolationConfig && this._attemptStr(this._interpolationConfig.start)) {\n                parts.push(this._interpolationConfig.start);\n                this._inInterpolation = true;\n            }\n            else if (this._interpolationConfig && this._inInterpolation &&\n                this._attemptStr(this._interpolationConfig.end)) {\n                parts.push(this._interpolationConfig.end);\n                this._inInterpolation = false;\n            }\n            else {\n                parts.push(this._readChar(true));\n            }\n        } while (!this._isTextEnd());\n        this._endToken([this._processCarriageReturns(parts.join(''))]);\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isTextEnd = /**\n     * @return {?}\n     */\n    function () {\n        if (this._peek === $LT || this._peek === $EOF) {\n            return true;\n        }\n        if (this._tokenizeIcu && !this._inInterpolation) {\n            if (isExpansionFormStart(this._input, this._index, this._interpolationConfig)) {\n                // start of an expansion form\n                return true;\n            }\n            if (this._peek === $RBRACE && this._isInExpansionCase()) {\n                // end of and expansion case\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._savePosition = /**\n     * @return {?}\n     */\n    function () {\n        return [this._peek, this._index, this._column, this._line, this.tokens.length];\n    };\n    /**\n     * @param {?} char\n     * @return {?}\n     */\n    _Tokenizer.prototype._readUntil = /**\n     * @param {?} char\n     * @return {?}\n     */\n    function (char) {\n        var /** @type {?} */ start = this._index;\n        this._attemptUntilChar(char);\n        return this._input.substring(start, this._index);\n    };\n    /**\n     * @param {?} position\n     * @return {?}\n     */\n    _Tokenizer.prototype._restorePosition = /**\n     * @param {?} position\n     * @return {?}\n     */\n    function (position) {\n        this._peek = position[0];\n        this._index = position[1];\n        this._column = position[2];\n        this._line = position[3];\n        var /** @type {?} */ nbTokens = position[4];\n        if (nbTokens < this.tokens.length) {\n            // remove any extra tokens\n            this.tokens = this.tokens.slice(0, nbTokens);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_CASE_EXP_START;\n    };\n    /**\n     * @return {?}\n     */\n    _Tokenizer.prototype._isInExpansionForm = /**\n     * @return {?}\n     */\n    function () {\n        return this._expansionCaseStack.length > 0 &&\n            this._expansionCaseStack[this._expansionCaseStack.length - 1] ===\n                TokenType$1.EXPANSION_FORM_START;\n    };\n    return _Tokenizer;\n}());\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNotWhitespace(code) {\n    return !isWhitespace(code) || code === $EOF;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNameEnd(code) {\n    return isWhitespace(code) || code === $GT || code === $SLASH ||\n        code === $SQ || code === $DQ || code === $EQ;\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isPrefixEnd(code) {\n    return (code < $a || $z < code) && (code < $A || $Z < code) &&\n        (code < $0 || code > $9);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isDigitEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiHexDigit(code);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction isNamedEntityEnd(code) {\n    return code == $SEMICOLON || code == $EOF || !isAsciiLetter(code);\n}\n/**\n * @param {?} input\n * @param {?} offset\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction isExpansionFormStart(input, offset, interpolationConfig) {\n    var /** @type {?} */ isInterpolationStart = interpolationConfig ? input.indexOf(interpolationConfig.start, offset) == offset : false;\n    return input.charCodeAt(offset) == $LBRACE && !isInterpolationStart;\n}\n/**\n * @param {?} peek\n * @return {?}\n */\nfunction isExpansionCaseStart(peek) {\n    return peek === $EQ || isAsciiLetter(peek) || isDigit(peek);\n}\n/**\n * @param {?} code1\n * @param {?} code2\n * @return {?}\n */\nfunction compareCharCodeCaseInsensitive(code1, code2) {\n    return toUpperCaseCharCode(code1) == toUpperCaseCharCode(code2);\n}\n/**\n * @param {?} code\n * @return {?}\n */\nfunction toUpperCaseCharCode(code) {\n    return code >= $a && code <= $z ? code - $a + $A : code;\n}\n/**\n * @param {?} srcTokens\n * @return {?}\n */\nfunction mergeTextTokens(srcTokens) {\n    var /** @type {?} */ dstTokens = [];\n    var /** @type {?} */ lastDstToken = undefined;\n    for (var /** @type {?} */ i = 0; i < srcTokens.length; i++) {\n        var /** @type {?} */ token = srcTokens[i];\n        if (lastDstToken && lastDstToken.type == TokenType$1.TEXT && token.type == TokenType$1.TEXT) {\n            lastDstToken.parts[0] += token.parts[0];\n            lastDstToken.sourceSpan.end = token.sourceSpan.end;\n        }\n        else {\n            lastDstToken = token;\n            dstTokens.push(lastDstToken);\n        }\n    }\n    return dstTokens;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TreeError = (function (_super) {\n    __extends(TreeError, _super);\n    function TreeError(elementName, span, msg) {\n        var _this = _super.call(this, span, msg) || this;\n        _this.elementName = elementName;\n        return _this;\n    }\n    /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    TreeError.create = /**\n     * @param {?} elementName\n     * @param {?} span\n     * @param {?} msg\n     * @return {?}\n     */\n    function (elementName, span, msg) {\n        return new TreeError(elementName, span, msg);\n    };\n    return TreeError;\n}(ParseError));\nvar ParseTreeResult = (function () {\n    function ParseTreeResult(rootNodes, errors) {\n        this.rootNodes = rootNodes;\n        this.errors = errors;\n    }\n    return ParseTreeResult;\n}());\nvar Parser$1 = (function () {\n    function Parser(getTagDefinition) {\n        this.getTagDefinition = getTagDefinition;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    Parser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ tokensAndErrors = tokenize(source, url, this.getTagDefinition, parseExpansionForms, interpolationConfig);\n        var /** @type {?} */ treeAndErrors = new _TreeBuilder(tokensAndErrors.tokens, this.getTagDefinition).build();\n        return new ParseTreeResult(treeAndErrors.rootNodes, (/** @type {?} */ (tokensAndErrors.errors)).concat(treeAndErrors.errors));\n    };\n    return Parser;\n}());\nvar _TreeBuilder = (function () {\n    function _TreeBuilder(tokens, getTagDefinition) {\n        this.tokens = tokens;\n        this.getTagDefinition = getTagDefinition;\n        this._index = -1;\n        this._rootNodes = [];\n        this._errors = [];\n        this._elementStack = [];\n        this._advance();\n    }\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype.build = /**\n     * @return {?}\n     */\n    function () {\n        while (this._peek.type !== TokenType$1.EOF) {\n            if (this._peek.type === TokenType$1.TAG_OPEN_START) {\n                this._consumeStartTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TAG_CLOSE) {\n                this._consumeEndTag(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.CDATA_START) {\n                this._closeVoidElement();\n                this._consumeCdata(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.COMMENT_START) {\n                this._closeVoidElement();\n                this._consumeComment(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.TEXT || this._peek.type === TokenType$1.RAW_TEXT ||\n                this._peek.type === TokenType$1.ESCAPABLE_RAW_TEXT) {\n                this._closeVoidElement();\n                this._consumeText(this._advance());\n            }\n            else if (this._peek.type === TokenType$1.EXPANSION_FORM_START) {\n                this._consumeExpansion(this._advance());\n            }\n            else {\n                // Skip all other tokens...\n                this._advance();\n            }\n        }\n        return new ParseTreeResult(this._rootNodes, this._errors);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advance = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ prev = this._peek;\n        if (this._index < this.tokens.length - 1) {\n            // Note: there is always an EOF token at the end\n            this._index++;\n        }\n        this._peek = this.tokens[this._index];\n        return prev;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    _TreeBuilder.prototype._advanceIf = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this._peek.type === type) {\n            return this._advance();\n        }\n        return null;\n    };\n    /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeCdata = /**\n     * @param {?} startToken\n     * @return {?}\n     */\n    function (startToken) {\n        this._consumeText(this._advance());\n        this._advanceIf(TokenType$1.CDATA_END);\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeComment = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = this._advanceIf(TokenType$1.RAW_TEXT);\n        this._advanceIf(TokenType$1.COMMENT_END);\n        var /** @type {?} */ value = text != null ? text.parts[0].trim() : null;\n        this._addToParent(new Comment(value, token.sourceSpan));\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeExpansion = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ switchValue = this._advance();\n        var /** @type {?} */ type = this._advance();\n        var /** @type {?} */ cases = [];\n        // read =\n        while (this._peek.type === TokenType$1.EXPANSION_CASE_VALUE) {\n            var /** @type {?} */ expCase = this._parseExpansionCase();\n            if (!expCase)\n                return; // error\n            cases.push(expCase);\n        }\n        // read the final }\n        if (this._peek.type !== TokenType$1.EXPANSION_FORM_END) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n            return;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(token.sourceSpan.start, this._peek.sourceSpan.end);\n        this._addToParent(new Expansion(switchValue.parts[0], type.parts[0], cases, sourceSpan, switchValue.sourceSpan));\n        this._advance();\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._parseExpansionCase = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ value = this._advance();\n        // read {\n        if (this._peek.type !== TokenType$1.EXPANSION_CASE_EXP_START) {\n            this._errors.push(TreeError.create(null, this._peek.sourceSpan, \"Invalid ICU message. Missing '{'.\"));\n            return null;\n        }\n        // read until }\n        var /** @type {?} */ start = this._advance();\n        var /** @type {?} */ exp = this._collectExpansionExpTokens(start);\n        if (!exp)\n            return null;\n        var /** @type {?} */ end = this._advance();\n        exp.push(new Token$1(TokenType$1.EOF, [], end.sourceSpan));\n        // parse everything in between { and }\n        var /** @type {?} */ parsedExp = new _TreeBuilder(exp, this.getTagDefinition).build();\n        if (parsedExp.errors.length > 0) {\n            this._errors = this._errors.concat(/** @type {?} */ (parsedExp.errors));\n            return null;\n        }\n        var /** @type {?} */ sourceSpan = new ParseSourceSpan(value.sourceSpan.start, end.sourceSpan.end);\n        var /** @type {?} */ expSourceSpan = new ParseSourceSpan(start.sourceSpan.start, end.sourceSpan.end);\n        return new ExpansionCase(value.parts[0], parsedExp.rootNodes, sourceSpan, value.sourceSpan, expSourceSpan);\n    };\n    /**\n     * @param {?} start\n     * @return {?}\n     */\n    _TreeBuilder.prototype._collectExpansionExpTokens = /**\n     * @param {?} start\n     * @return {?}\n     */\n    function (start) {\n        var /** @type {?} */ exp = [];\n        var /** @type {?} */ expansionFormStack = [TokenType$1.EXPANSION_CASE_EXP_START];\n        while (true) {\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_START ||\n                this._peek.type === TokenType$1.EXPANSION_CASE_EXP_START) {\n                expansionFormStack.push(this._peek.type);\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_CASE_EXP_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_CASE_EXP_START)) {\n                    expansionFormStack.pop();\n                    if (expansionFormStack.length == 0)\n                        return exp;\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EXPANSION_FORM_END) {\n                if (lastOnStack(expansionFormStack, TokenType$1.EXPANSION_FORM_START)) {\n                    expansionFormStack.pop();\n                }\n                else {\n                    this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                    return null;\n                }\n            }\n            if (this._peek.type === TokenType$1.EOF) {\n                this._errors.push(TreeError.create(null, start.sourceSpan, \"Invalid ICU message. Missing '}'.\"));\n                return null;\n            }\n            exp.push(this._advance());\n        }\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeText = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ text = token.parts[0];\n        if (text.length > 0 && text[0] == '\\n') {\n            var /** @type {?} */ parent_1 = this._getParentElement();\n            if (parent_1 != null && parent_1.children.length == 0 &&\n                this.getTagDefinition(parent_1.name).ignoreFirstLf) {\n                text = text.substring(1);\n            }\n        }\n        if (text.length > 0) {\n            this._addToParent(new Text(text, token.sourceSpan));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._closeVoidElement = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ el = this._getParentElement();\n        if (el && this.getTagDefinition(el.name).isVoid) {\n            this._elementStack.pop();\n        }\n    };\n    /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeStartTag = /**\n     * @param {?} startTagToken\n     * @return {?}\n     */\n    function (startTagToken) {\n        var /** @type {?} */ prefix = startTagToken.parts[0];\n        var /** @type {?} */ name = startTagToken.parts[1];\n        var /** @type {?} */ attrs = [];\n        while (this._peek.type === TokenType$1.ATTR_NAME) {\n            attrs.push(this._consumeAttr(this._advance()));\n        }\n        var /** @type {?} */ fullName = this._getElementFullName(prefix, name, this._getParentElement());\n        var /** @type {?} */ selfClosing = false;\n        // Note: There could have been a tokenizer error\n        // so that we don't get a token for the end tag...\n        if (this._peek.type === TokenType$1.TAG_OPEN_END_VOID) {\n            this._advance();\n            selfClosing = true;\n            var /** @type {?} */ tagDef = this.getTagDefinition(fullName);\n            if (!(tagDef.canSelfClose || getNsPrefix(fullName) !== null || tagDef.isVoid)) {\n                this._errors.push(TreeError.create(fullName, startTagToken.sourceSpan, \"Only void and foreign elements can be self closed \\\"\" + startTagToken.parts[1] + \"\\\"\"));\n            }\n        }\n        else if (this._peek.type === TokenType$1.TAG_OPEN_END) {\n            this._advance();\n            selfClosing = false;\n        }\n        var /** @type {?} */ end = this._peek.sourceSpan.start;\n        var /** @type {?} */ span = new ParseSourceSpan(startTagToken.sourceSpan.start, end);\n        var /** @type {?} */ el = new Element(fullName, attrs, [], span, span, undefined);\n        this._pushElement(el);\n        if (selfClosing) {\n            this._popElement(fullName);\n            el.endSourceSpan = span;\n        }\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _TreeBuilder.prototype._pushElement = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var /** @type {?} */ parentEl = this._getParentElement();\n        if (parentEl && this.getTagDefinition(parentEl.name).isClosedByChild(el.name)) {\n            this._elementStack.pop();\n        }\n        var /** @type {?} */ tagDef = this.getTagDefinition(el.name);\n        var _a = this._getParentElementSkippingContainers(), parent = _a.parent, container = _a.container;\n        if (parent && tagDef.requireExtraParent(parent.name)) {\n            var /** @type {?} */ newParent = new Element(tagDef.parentToAdd, [], [], el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n            this._insertBeforeContainer(parent, container, newParent);\n        }\n        this._addToParent(el);\n        this._elementStack.push(el);\n    };\n    /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeEndTag = /**\n     * @param {?} endTagToken\n     * @return {?}\n     */\n    function (endTagToken) {\n        var /** @type {?} */ fullName = this._getElementFullName(endTagToken.parts[0], endTagToken.parts[1], this._getParentElement());\n        if (this._getParentElement()) {\n            /** @type {?} */ ((this._getParentElement())).endSourceSpan = endTagToken.sourceSpan;\n        }\n        if (this.getTagDefinition(fullName).isVoid) {\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, \"Void elements do not have end tags \\\"\" + endTagToken.parts[1] + \"\\\"\"));\n        }\n        else if (!this._popElement(fullName)) {\n            var /** @type {?} */ errMsg = \"Unexpected closing tag \\\"\" + fullName + \"\\\". It may happen when the tag has already been closed by another tag. For more info see https://www.w3.org/TR/html5/syntax.html#closing-elements-that-have-implied-end-tags\";\n            this._errors.push(TreeError.create(fullName, endTagToken.sourceSpan, errMsg));\n        }\n    };\n    /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._popElement = /**\n     * @param {?} fullName\n     * @return {?}\n     */\n    function (fullName) {\n        for (var /** @type {?} */ stackIndex = this._elementStack.length - 1; stackIndex >= 0; stackIndex--) {\n            var /** @type {?} */ el = this._elementStack[stackIndex];\n            if (el.name == fullName) {\n                this._elementStack.splice(stackIndex, this._elementStack.length - stackIndex);\n                return true;\n            }\n            if (!this.getTagDefinition(el.name).closedByParent) {\n                return false;\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    _TreeBuilder.prototype._consumeAttr = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        var /** @type {?} */ fullName = mergeNsAndName(attrName.parts[0], attrName.parts[1]);\n        var /** @type {?} */ end = attrName.sourceSpan.end;\n        var /** @type {?} */ value = '';\n        var /** @type {?} */ valueSpan = /** @type {?} */ ((undefined));\n        if (this._peek.type === TokenType$1.ATTR_VALUE) {\n            var /** @type {?} */ valueToken = this._advance();\n            value = valueToken.parts[0];\n            end = valueToken.sourceSpan.end;\n            valueSpan = valueToken.sourceSpan;\n        }\n        return new Attribute$1(fullName, value, new ParseSourceSpan(attrName.sourceSpan.start, end), valueSpan);\n    };\n    /**\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElement = /**\n     * @return {?}\n     */\n    function () {\n        return this._elementStack.length > 0 ? this._elementStack[this._elementStack.length - 1] : null;\n    };\n    /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getParentElementSkippingContainers = /**\n     * Returns the parent in the DOM and the container.\n     *\n     * `<ng-container>` elements are skipped as they are not rendered as DOM element.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ container = null;\n        for (var /** @type {?} */ i = this._elementStack.length - 1; i >= 0; i--) {\n            if (!isNgContainer(this._elementStack[i].name)) {\n                return { parent: this._elementStack[i], container: container };\n            }\n            container = this._elementStack[i];\n        }\n        return { parent: null, container: container };\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._addToParent = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        var /** @type {?} */ parent = this._getParentElement();\n        if (parent != null) {\n            parent.children.push(node);\n        }\n        else {\n            this._rootNodes.push(node);\n        }\n    };\n    /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    _TreeBuilder.prototype._insertBeforeContainer = /**\n     * Insert a node between the parent and the container.\n     * When no container is given, the node is appended as a child of the parent.\n     * Also updates the element stack accordingly.\n     *\n     * \\@internal\n     * @param {?} parent\n     * @param {?} container\n     * @param {?} node\n     * @return {?}\n     */\n    function (parent, container, node) {\n        if (!container) {\n            this._addToParent(node);\n            this._elementStack.push(node);\n        }\n        else {\n            if (parent) {\n                // replace the container with the new node in the children\n                var /** @type {?} */ index = parent.children.indexOf(container);\n                parent.children[index] = node;\n            }\n            else {\n                this._rootNodes.push(node);\n            }\n            node.children.push(container);\n            this._elementStack.splice(this._elementStack.indexOf(container), 0, node);\n        }\n    };\n    /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    _TreeBuilder.prototype._getElementFullName = /**\n     * @param {?} prefix\n     * @param {?} localName\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (prefix, localName, parentElement) {\n        if (prefix == null) {\n            prefix = /** @type {?} */ ((this.getTagDefinition(localName).implicitNamespacePrefix));\n            if (prefix == null && parentElement != null) {\n                prefix = getNsPrefix(parentElement.name);\n            }\n        }\n        return mergeNsAndName(prefix, localName);\n    };\n    return _TreeBuilder;\n}());\n/**\n * @param {?} stack\n * @param {?} element\n * @return {?}\n */\nfunction lastOnStack(stack, element) {\n    return stack.length > 0 && stack[stack.length - 1] === element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest(message) {\n    return message.id || sha1(serializeNodes(message.nodes).join('') + (\"[\" + message.meaning + \"]\"));\n}\n/**\n * @param {?} message\n * @return {?}\n */\nfunction decimalDigest(message) {\n    if (message.id) {\n        return message.id;\n    }\n    var /** @type {?} */ visitor = new _SerializerIgnoreIcuExpVisitor();\n    var /** @type {?} */ parts = message.nodes.map(function (a) { return a.visit(visitor, null); });\n    return computeMsgId(parts.join(''), message.meaning);\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * The visitor is also used in the i18n parser tests\n *\n * \\@internal\n */\nvar _SerializerVisitor = (function () {\n    function _SerializerVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return \"[\" + container.children.map(function (child) { return child.visit(_this); }).join(', ') + \"]\";\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        return \"{\" + icu.expression + \", \" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        return ph.isVoid ?\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\"/>\" :\n            \"<ph tag name=\\\"\" + ph.startName + \"\\\">\" + ph.children.map(function (child) { return child.visit(_this); }).join(', ') + \"</ph name=\\\"\" + ph.closeName + \"\\\">\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return ph.value ? \"<ph name=\\\"\" + ph.name + \"\\\">\" + ph.value + \"</ph>\" : \"<ph name=\\\"\" + ph.name + \"\\\"/>\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _SerializerVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return \"<ph icu name=\\\"\" + ph.name + \"\\\">\" + ph.value.visit(this) + \"</ph>\";\n    };\n    return _SerializerVisitor;\n}());\nvar serializerVisitor = new _SerializerVisitor();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serializeNodes(nodes) {\n    return nodes.map(function (a) { return a.visit(serializerVisitor, null); });\n}\n/**\n * Serialize the i18n ast to something xml-like in order to generate an UID.\n *\n * Ignore the ICU expressions so that message IDs stays identical if only the expression changes.\n *\n * \\@internal\n */\nvar _SerializerIgnoreIcuExpVisitor = (function (_super) {\n    __extends(_SerializerIgnoreIcuExpVisitor, _super);\n    function _SerializerIgnoreIcuExpVisitor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _SerializerIgnoreIcuExpVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ strCases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // Do not take the expression into account\n        return \"{\" + icu.type + \", \" + strCases.join(', ') + \"}\";\n    };\n    return _SerializerIgnoreIcuExpVisitor;\n}(_SerializerVisitor));\n/**\n * Compute the SHA1 of the given string\n *\n * see http://csrc.nist.gov/publications/fips/fips180-4/fips-180-4.pdf\n *\n * WARNING: this function has not been designed not tested with security in mind.\n *          DO NOT USE IT IN A SECURITY SENSITIVE CONTEXT.\n * @param {?} str\n * @return {?}\n */\nfunction sha1(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var /** @type {?} */ words32 = stringToWords32(utf8, Endian.Big);\n    var /** @type {?} */ len = utf8.length * 8;\n    var /** @type {?} */ w = new Array(80);\n    var _a = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0], a = _a[0], b = _a[1], c = _a[2], d = _a[3], e = _a[4];\n    words32[len >> 5] |= 0x80 << (24 - len % 32);\n    words32[((len + 64 >> 9) << 4) + 15] = len;\n    for (var /** @type {?} */ i = 0; i < words32.length; i += 16) {\n        var _b = [a, b, c, d, e], h0 = _b[0], h1 = _b[1], h2 = _b[2], h3 = _b[3], h4 = _b[4];\n        for (var /** @type {?} */ j = 0; j < 80; j++) {\n            if (j < 16) {\n                w[j] = words32[i + j];\n            }\n            else {\n                w[j] = rol32(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);\n            }\n            var _c = fk(j, b, c, d), f = _c[0], k = _c[1];\n            var /** @type {?} */ temp = [rol32(a, 5), f, e, k, w[j]].reduce(add32);\n            _d = [d, c, rol32(b, 30), a, temp], e = _d[0], d = _d[1], c = _d[2], b = _d[3], a = _d[4];\n        }\n        _e = [add32(a, h0), add32(b, h1), add32(c, h2), add32(d, h3), add32(e, h4)], a = _e[0], b = _e[1], c = _e[2], d = _e[3], e = _e[4];\n    }\n    return byteStringToHexString(words32ToByteString([a, b, c, d, e]));\n    var _d, _e;\n}\n/**\n * @param {?} index\n * @param {?} b\n * @param {?} c\n * @param {?} d\n * @return {?}\n */\nfunction fk(index, b, c, d) {\n    if (index < 20) {\n        return [(b & c) | (~b & d), 0x5a827999];\n    }\n    if (index < 40) {\n        return [b ^ c ^ d, 0x6ed9eba1];\n    }\n    if (index < 60) {\n        return [(b & c) | (b & d) | (c & d), 0x8f1bbcdc];\n    }\n    return [b ^ c ^ d, 0xca62c1d6];\n}\n/**\n * Compute the fingerprint of the given string\n *\n * The output is 64 bit number encoded as a decimal string\n *\n * based on:\n * https://github.com/google/closure-compiler/blob/master/src/com/google/javascript/jscomp/GoogleJsMessageIdGenerator.java\n * @param {?} str\n * @return {?}\n */\nfunction fingerprint(str) {\n    var /** @type {?} */ utf8 = utf8Encode(str);\n    var _a = [hash32(utf8, 0), hash32(utf8, 102072)], hi = _a[0], lo = _a[1];\n    if (hi == 0 && (lo == 0 || lo == 1)) {\n        hi = hi ^ 0x130f9bef;\n        lo = lo ^ -0x6b5f56d8;\n    }\n    return [hi, lo];\n}\n/**\n * @param {?} msg\n * @param {?} meaning\n * @return {?}\n */\nfunction computeMsgId(msg, meaning) {\n    var _a = fingerprint(msg), hi = _a[0], lo = _a[1];\n    if (meaning) {\n        var _b = fingerprint(meaning), him = _b[0], lom = _b[1];\n        _c = add64(rol64([hi, lo], 1), [him, lom]), hi = _c[0], lo = _c[1];\n    }\n    return byteStringToDecString(words32ToByteString([hi & 0x7fffffff, lo]));\n    var _c;\n}\n/**\n * @param {?} str\n * @param {?} c\n * @return {?}\n */\nfunction hash32(str, c) {\n    var _a = [0x9e3779b9, 0x9e3779b9], a = _a[0], b = _a[1];\n    var /** @type {?} */ i;\n    var /** @type {?} */ len = str.length;\n    for (i = 0; i + 12 <= len; i += 12) {\n        a = add32(a, wordAt(str, i, Endian.Little));\n        b = add32(b, wordAt(str, i + 4, Endian.Little));\n        c = add32(c, wordAt(str, i + 8, Endian.Little));\n        _b = mix([a, b, c]), a = _b[0], b = _b[1], c = _b[2];\n    }\n    a = add32(a, wordAt(str, i, Endian.Little));\n    b = add32(b, wordAt(str, i + 4, Endian.Little));\n    // the first byte of c is reserved for the length\n    c = add32(c, len);\n    c = add32(c, wordAt(str, i + 8, Endian.Little) << 8);\n    return mix([a, b, c])[2];\n    var _b;\n}\n/**\n * @param {?} __0\n * @return {?}\n */\nfunction mix(_a) {\n    var a = _a[0], b = _a[1], c = _a[2];\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 13;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 8;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 13;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 12;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 16;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 5;\n    a = sub32(a, b);\n    a = sub32(a, c);\n    a ^= c >>> 3;\n    b = sub32(b, c);\n    b = sub32(b, a);\n    b ^= a << 10;\n    c = sub32(c, a);\n    c = sub32(c, b);\n    c ^= b >>> 15;\n    return [a, b, c];\n}\n/** @enum {number} */\nvar Endian = {\n    Little: 0,\n    Big: 1,\n};\nEndian[Endian.Little] = \"Little\";\nEndian[Endian.Big] = \"Big\";\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32(a, b) {\n    return add32to64(a, b)[1];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction add32to64(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) + (b & 0xffff);\n    var /** @type {?} */ high = (a >>> 16) + (b >>> 16) + (low >>> 16);\n    return [high >>> 16, (high << 16) | (low & 0xffff)];\n}\n/**\n * @param {?} __0\n * @param {?} __1\n * @return {?}\n */\nfunction add64(_a, _b) {\n    var ah = _a[0], al = _a[1];\n    var bh = _b[0], bl = _b[1];\n    var _c = add32to64(al, bl), carry = _c[0], l = _c[1];\n    var /** @type {?} */ h = add32(add32(ah, bh), carry);\n    return [h, l];\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction sub32(a, b) {\n    var /** @type {?} */ low = (a & 0xffff) - (b & 0xffff);\n    var /** @type {?} */ high = (a >> 16) - (b >> 16) + (low >> 16);\n    return (high << 16) | (low & 0xffff);\n}\n/**\n * @param {?} a\n * @param {?} count\n * @return {?}\n */\nfunction rol32(a, count) {\n    return (a << count) | (a >>> (32 - count));\n}\n/**\n * @param {?} __0\n * @param {?} count\n * @return {?}\n */\nfunction rol64(_a, count) {\n    var hi = _a[0], lo = _a[1];\n    var /** @type {?} */ h = (hi << count) | (lo >>> (32 - count));\n    var /** @type {?} */ l = (lo << count) | (hi >>> (32 - count));\n    return [h, l];\n}\n/**\n * @param {?} str\n * @param {?} endian\n * @return {?}\n */\nfunction stringToWords32(str, endian) {\n    var /** @type {?} */ words32 = Array((str.length + 3) >>> 2);\n    for (var /** @type {?} */ i = 0; i < words32.length; i++) {\n        words32[i] = wordAt(str, i * 4, endian);\n    }\n    return words32;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @return {?}\n */\nfunction byteAt(str, index) {\n    return index >= str.length ? 0 : str.charCodeAt(index) & 0xff;\n}\n/**\n * @param {?} str\n * @param {?} index\n * @param {?} endian\n * @return {?}\n */\nfunction wordAt(str, index, endian) {\n    var /** @type {?} */ word = 0;\n    if (endian === Endian.Big) {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << (24 - 8 * i);\n        }\n    }\n    else {\n        for (var /** @type {?} */ i = 0; i < 4; i++) {\n            word += byteAt(str, index + i) << 8 * i;\n        }\n    }\n    return word;\n}\n/**\n * @param {?} words32\n * @return {?}\n */\nfunction words32ToByteString(words32) {\n    return words32.reduce(function (str, word) { return str + word32ToByteString(word); }, '');\n}\n/**\n * @param {?} word\n * @return {?}\n */\nfunction word32ToByteString(word) {\n    var /** @type {?} */ str = '';\n    for (var /** @type {?} */ i = 0; i < 4; i++) {\n        str += String.fromCharCode((word >>> 8 * (3 - i)) & 0xff);\n    }\n    return str;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToHexString(str) {\n    var /** @type {?} */ hex = '';\n    for (var /** @type {?} */ i = 0; i < str.length; i++) {\n        var /** @type {?} */ b = byteAt(str, i);\n        hex += (b >>> 4).toString(16) + (b & 0x0f).toString(16);\n    }\n    return hex.toLowerCase();\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction byteStringToDecString(str) {\n    var /** @type {?} */ decimal = '';\n    var /** @type {?} */ toThePower = '1';\n    for (var /** @type {?} */ i = str.length - 1; i >= 0; i--) {\n        decimal = addBigInt(decimal, numberTimesBigInt(byteAt(str, i), toThePower));\n        toThePower = numberTimesBigInt(256, toThePower);\n    }\n    return decimal.split('').reverse().join('');\n}\n/**\n * @param {?} x\n * @param {?} y\n * @return {?}\n */\nfunction addBigInt(x, y) {\n    var /** @type {?} */ sum = '';\n    var /** @type {?} */ len = Math.max(x.length, y.length);\n    for (var /** @type {?} */ i = 0, /** @type {?} */ carry = 0; i < len || carry; i++) {\n        var /** @type {?} */ tmpSum = carry + +(x[i] || 0) + +(y[i] || 0);\n        if (tmpSum >= 10) {\n            carry = 1;\n            sum += tmpSum - 10;\n        }\n        else {\n            carry = 0;\n            sum += tmpSum;\n        }\n    }\n    return sum;\n}\n/**\n * @param {?} num\n * @param {?} b\n * @return {?}\n */\nfunction numberTimesBigInt(num, b) {\n    var /** @type {?} */ product = '';\n    var /** @type {?} */ bToThePower = b;\n    for (; num !== 0; num = num >>> 1) {\n        if (num & 1)\n            product = addBigInt(product, bToThePower);\n        bToThePower = addBigInt(bToThePower, bToThePower);\n    }\n    return product;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar Message = (function () {\n    /**\n     * @param nodes message AST\n     * @param placeholders maps placeholder names to static content\n     * @param placeholderToMessage maps placeholder names to messages (used for nested ICU messages)\n     * @param meaning\n     * @param description\n     * @param id\n     */\n    function Message(nodes, placeholders, placeholderToMessage, meaning, description, id) {\n        this.nodes = nodes;\n        this.placeholders = placeholders;\n        this.placeholderToMessage = placeholderToMessage;\n        this.meaning = meaning;\n        this.description = description;\n        this.id = id;\n        if (nodes.length) {\n            this.sources = [{\n                    filePath: nodes[0].sourceSpan.start.file.url,\n                    startLine: nodes[0].sourceSpan.start.line + 1,\n                    startCol: nodes[0].sourceSpan.start.col + 1,\n                    endLine: nodes[nodes.length - 1].sourceSpan.end.line + 1,\n                    endCol: nodes[0].sourceSpan.start.col + 1\n                }];\n        }\n        else {\n            this.sources = [];\n        }\n    }\n    return Message;\n}());\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar Text$1 = (function () {\n    function Text(value, sourceSpan) {\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitText(this, context); };\n    return Text;\n}());\nvar Container = (function () {\n    function Container(children, sourceSpan) {\n        this.children = children;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Container.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitContainer(this, context); };\n    return Container;\n}());\nvar Icu = (function () {\n    function Icu(expression, type, cases, sourceSpan) {\n        this.expression = expression;\n        this.type = type;\n        this.cases = cases;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Icu.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcu(this, context); };\n    return Icu;\n}());\nvar TagPlaceholder = (function () {\n    function TagPlaceholder(tag, attrs, startName, closeName, children, isVoid, sourceSpan) {\n        this.tag = tag;\n        this.attrs = attrs;\n        this.startName = startName;\n        this.closeName = closeName;\n        this.children = children;\n        this.isVoid = isVoid;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    TagPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitTagPlaceholder(this, context); };\n    return TagPlaceholder;\n}());\nvar Placeholder = (function () {\n    function Placeholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    Placeholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitPlaceholder(this, context); };\n    return Placeholder;\n}());\nvar IcuPlaceholder = (function () {\n    function IcuPlaceholder(value, name, sourceSpan) {\n        this.value = value;\n        this.name = name;\n        this.sourceSpan = sourceSpan;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    IcuPlaceholder.prototype.visit = /**\n     * @param {?} visitor\n     * @param {?=} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitIcuPlaceholder(this, context); };\n    return IcuPlaceholder;\n}());\n/**\n * @record\n */\n\nvar CloneVisitor = (function () {\n    function CloneVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ children = container.children.map(function (n) { return n.visit(_this, context); });\n        return new Container(children, container.sourceSpan);\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = {};\n        Object.keys(icu.cases).forEach(function (key) { return cases[key] = icu.cases[key].visit(_this, context); });\n        var /** @type {?} */ msg = new Icu(icu.expression, icu.type, cases, icu.sourceSpan);\n        msg.expressionPlaceholder = icu.expressionPlaceholder;\n        return msg;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, context); });\n        return new TagPlaceholder(ph.tag, ph.attrs, ph.startName, ph.closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new Placeholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    CloneVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return new IcuPlaceholder(ph.value, ph.name, ph.sourceSpan);\n    };\n    return CloneVisitor;\n}());\nvar RecurseVisitor = (function () {\n    function RecurseVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        container.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        Object.keys(icu.cases).forEach(function (k) { icu.cases[k].visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        ph.children.forEach(function (child) { return child.visit(_this); });\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    RecurseVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { };\n    return RecurseVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlTagDefinition = (function () {\n    function HtmlTagDefinition(_a) {\n        var _b = _a === void 0 ? {} : _a, closedByChildren = _b.closedByChildren, requiredParents = _b.requiredParents, implicitNamespacePrefix = _b.implicitNamespacePrefix, _c = _b.contentType, contentType = _c === void 0 ? TagContentType.PARSABLE_DATA : _c, _d = _b.closedByParent, closedByParent = _d === void 0 ? false : _d, _e = _b.isVoid, isVoid = _e === void 0 ? false : _e, _f = _b.ignoreFirstLf, ignoreFirstLf = _f === void 0 ? false : _f;\n        var _this = this;\n        this.closedByChildren = {};\n        this.closedByParent = false;\n        this.canSelfClose = false;\n        if (closedByChildren && closedByChildren.length > 0) {\n            closedByChildren.forEach(function (tagName) { return _this.closedByChildren[tagName] = true; });\n        }\n        this.isVoid = isVoid;\n        this.closedByParent = closedByParent || isVoid;\n        if (requiredParents && requiredParents.length > 0) {\n            this.requiredParents = {};\n            // The first parent is the list is automatically when none of the listed parents are present\n            this.parentToAdd = requiredParents[0];\n            requiredParents.forEach(function (tagName) { return _this.requiredParents[tagName] = true; });\n        }\n        this.implicitNamespacePrefix = implicitNamespacePrefix || null;\n        this.contentType = contentType;\n        this.ignoreFirstLf = ignoreFirstLf;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) {\n        if (!this.requiredParents) {\n            return false;\n        }\n        if (!currentParent) {\n            return true;\n        }\n        var /** @type {?} */ lcParent = currentParent.toLowerCase();\n        var /** @type {?} */ isParentTemplate = lcParent === 'template' || currentParent === 'ng-template';\n        return !isParentTemplate && this.requiredParents[lcParent] != true;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    HtmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.isVoid || name.toLowerCase() in this.closedByChildren;\n    };\n    return HtmlTagDefinition;\n}());\n// see http://www.w3.org/TR/html51/syntax.html#optional-tags\n// This implementation does not fully conform to the HTML5 spec.\nvar TAG_DEFINITIONS = {\n    'base': new HtmlTagDefinition({ isVoid: true }),\n    'meta': new HtmlTagDefinition({ isVoid: true }),\n    'area': new HtmlTagDefinition({ isVoid: true }),\n    'embed': new HtmlTagDefinition({ isVoid: true }),\n    'link': new HtmlTagDefinition({ isVoid: true }),\n    'img': new HtmlTagDefinition({ isVoid: true }),\n    'input': new HtmlTagDefinition({ isVoid: true }),\n    'param': new HtmlTagDefinition({ isVoid: true }),\n    'hr': new HtmlTagDefinition({ isVoid: true }),\n    'br': new HtmlTagDefinition({ isVoid: true }),\n    'source': new HtmlTagDefinition({ isVoid: true }),\n    'track': new HtmlTagDefinition({ isVoid: true }),\n    'wbr': new HtmlTagDefinition({ isVoid: true }),\n    'p': new HtmlTagDefinition({\n        closedByChildren: [\n            'address', 'article', 'aside', 'blockquote', 'div', 'dl', 'fieldset', 'footer', 'form',\n            'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup', 'hr',\n            'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'\n        ],\n        closedByParent: true\n    }),\n    'thead': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'] }),\n    'tbody': new HtmlTagDefinition({ closedByChildren: ['tbody', 'tfoot'], closedByParent: true }),\n    'tfoot': new HtmlTagDefinition({ closedByChildren: ['tbody'], closedByParent: true }),\n    'tr': new HtmlTagDefinition({\n        closedByChildren: ['tr'],\n        requiredParents: ['tbody', 'tfoot', 'thead'],\n        closedByParent: true\n    }),\n    'td': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'th': new HtmlTagDefinition({ closedByChildren: ['td', 'th'], closedByParent: true }),\n    'col': new HtmlTagDefinition({ requiredParents: ['colgroup'], isVoid: true }),\n    'svg': new HtmlTagDefinition({ implicitNamespacePrefix: 'svg' }),\n    'math': new HtmlTagDefinition({ implicitNamespacePrefix: 'math' }),\n    'li': new HtmlTagDefinition({ closedByChildren: ['li'], closedByParent: true }),\n    'dt': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'] }),\n    'dd': new HtmlTagDefinition({ closedByChildren: ['dt', 'dd'], closedByParent: true }),\n    'rb': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rt': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'rtc': new HtmlTagDefinition({ closedByChildren: ['rb', 'rtc', 'rp'], closedByParent: true }),\n    'rp': new HtmlTagDefinition({ closedByChildren: ['rb', 'rt', 'rtc', 'rp'], closedByParent: true }),\n    'optgroup': new HtmlTagDefinition({ closedByChildren: ['optgroup'], closedByParent: true }),\n    'option': new HtmlTagDefinition({ closedByChildren: ['option', 'optgroup'], closedByParent: true }),\n    'pre': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'listing': new HtmlTagDefinition({ ignoreFirstLf: true }),\n    'style': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'script': new HtmlTagDefinition({ contentType: TagContentType.RAW_TEXT }),\n    'title': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT }),\n    'textarea': new HtmlTagDefinition({ contentType: TagContentType.ESCAPABLE_RAW_TEXT, ignoreFirstLf: true }),\n};\nvar _DEFAULT_TAG_DEFINITION = new HtmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getHtmlTagDefinition(tagName) {\n    return TAG_DEFINITIONS[tagName.toLowerCase()] || _DEFAULT_TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TAG_TO_PLACEHOLDER_NAMES = {\n    'A': 'LINK',\n    'B': 'BOLD_TEXT',\n    'BR': 'LINE_BREAK',\n    'EM': 'EMPHASISED_TEXT',\n    'H1': 'HEADING_LEVEL1',\n    'H2': 'HEADING_LEVEL2',\n    'H3': 'HEADING_LEVEL3',\n    'H4': 'HEADING_LEVEL4',\n    'H5': 'HEADING_LEVEL5',\n    'H6': 'HEADING_LEVEL6',\n    'HR': 'HORIZONTAL_RULE',\n    'I': 'ITALIC_TEXT',\n    'LI': 'LIST_ITEM',\n    'LINK': 'MEDIA_LINK',\n    'OL': 'ORDERED_LIST',\n    'P': 'PARAGRAPH',\n    'Q': 'QUOTATION',\n    'S': 'STRIKETHROUGH_TEXT',\n    'SMALL': 'SMALL_TEXT',\n    'SUB': 'SUBSTRIPT',\n    'SUP': 'SUPERSCRIPT',\n    'TBODY': 'TABLE_BODY',\n    'TD': 'TABLE_CELL',\n    'TFOOT': 'TABLE_FOOTER',\n    'TH': 'TABLE_HEADER_CELL',\n    'THEAD': 'TABLE_HEADER',\n    'TR': 'TABLE_ROW',\n    'TT': 'MONOSPACED_TEXT',\n    'U': 'UNDERLINED_TEXT',\n    'UL': 'UNORDERED_LIST',\n};\n/**\n * Creates unique names for placeholder with different content.\n *\n * Returns the same placeholder name when the content is identical.\n *\n * \\@internal\n */\nvar PlaceholderRegistry = (function () {\n    function PlaceholderRegistry() {\n        this._placeHolderNameCounts = {};\n        this._signatureToName = {};\n    }\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getStartTagPlaceholderName = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ signature = this._hashTag(tag, attrs, isVoid);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(isVoid ? baseName : \"START_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getCloseTagPlaceholderName = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var /** @type {?} */ signature = this._hashClosingTag(tag);\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ upperTag = tag.toUpperCase();\n        var /** @type {?} */ baseName = TAG_TO_PLACEHOLDER_NAMES[upperTag] || \"TAG_\" + upperTag;\n        var /** @type {?} */ name = this._generateUniqueName(\"CLOSE_\" + baseName);\n        this._signatureToName[signature] = name;\n        return name;\n    };\n    /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getPlaceholderName = /**\n     * @param {?} name\n     * @param {?} content\n     * @return {?}\n     */\n    function (name, content) {\n        var /** @type {?} */ upperName = name.toUpperCase();\n        var /** @type {?} */ signature = \"PH: \" + upperName + \"=\" + content;\n        if (this._signatureToName[signature]) {\n            return this._signatureToName[signature];\n        }\n        var /** @type {?} */ uniqueName = this._generateUniqueName(upperName);\n        this._signatureToName[signature] = uniqueName;\n        return uniqueName;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype.getUniquePlaceholder = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this._generateUniqueName(name.toUpperCase());\n    };\n    /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashTag = /**\n     * @param {?} tag\n     * @param {?} attrs\n     * @param {?} isVoid\n     * @return {?}\n     */\n    function (tag, attrs, isVoid) {\n        var /** @type {?} */ start = \"<\" + tag;\n        var /** @type {?} */ strAttrs = Object.keys(attrs).sort().map(function (name) { return \" \" + name + \"=\" + attrs[name]; }).join('');\n        var /** @type {?} */ end = isVoid ? '/>' : \"></\" + tag + \">\";\n        return start + strAttrs + end;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._hashClosingTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) { return this._hashTag(\"/\" + tag, {}, false); };\n    /**\n     * @param {?} base\n     * @return {?}\n     */\n    PlaceholderRegistry.prototype._generateUniqueName = /**\n     * @param {?} base\n     * @return {?}\n     */\n    function (base) {\n        var /** @type {?} */ seen = this._placeHolderNameCounts.hasOwnProperty(base);\n        if (!seen) {\n            this._placeHolderNameCounts[base] = 1;\n            return base;\n        }\n        var /** @type {?} */ id = this._placeHolderNameCounts[base];\n        this._placeHolderNameCounts[base] = id + 1;\n        return base + \"_\" + id;\n    };\n    return PlaceholderRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _expParser = new Parser(new Lexer());\n/**\n * Returns a function converting html nodes to an i18n Message given an interpolationConfig\n * @param {?} interpolationConfig\n * @return {?}\n */\nfunction createI18nMessageFactory(interpolationConfig) {\n    var /** @type {?} */ visitor = new _I18nVisitor(_expParser, interpolationConfig);\n    return function (nodes, meaning, description, id) {\n        return visitor.toI18nMessage(nodes, meaning, description, id);\n    };\n}\nvar _I18nVisitor = (function () {\n    function _I18nVisitor(_expressionParser, _interpolationConfig) {\n        this._expressionParser = _expressionParser;\n        this._interpolationConfig = _interpolationConfig;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    _I18nVisitor.prototype.toI18nMessage = /**\n     * @param {?} nodes\n     * @param {?} meaning\n     * @param {?} description\n     * @param {?} id\n     * @return {?}\n     */\n    function (nodes, meaning, description, id) {\n        this._isIcu = nodes.length == 1 && nodes[0] instanceof Expansion;\n        this._icuDepth = 0;\n        this._placeholderRegistry = new PlaceholderRegistry();\n        this._placeholderToContent = {};\n        this._placeholderToMessage = {};\n        var /** @type {?} */ i18nodes = visitAll(this, nodes, {});\n        return new Message(i18nodes, this._placeholderToContent, this._placeholderToMessage, meaning, description, id);\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var /** @type {?} */ children = visitAll(this, el.children);\n        var /** @type {?} */ attrs = {};\n        el.attrs.forEach(function (attr) {\n            // Do not visit the attributes, translatable ones are top-level ASTs\n            attrs[attr.name] = attr.value;\n        });\n        var /** @type {?} */ isVoid = getHtmlTagDefinition(el.name).isVoid;\n        var /** @type {?} */ startPhName = this._placeholderRegistry.getStartTagPlaceholderName(el.name, attrs, isVoid);\n        this._placeholderToContent[startPhName] = /** @type {?} */ ((el.sourceSpan)).toString();\n        var /** @type {?} */ closePhName = '';\n        if (!isVoid) {\n            closePhName = this._placeholderRegistry.getCloseTagPlaceholderName(el.name);\n            this._placeholderToContent[closePhName] = \"</\" + el.name + \">\";\n        }\n        return new TagPlaceholder(el.name, attrs, startPhName, closePhName, children, isVoid, /** @type {?} */ ((el.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return this._visitTextWithInterpolation(attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        return this._visitTextWithInterpolation(text.value, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        this._icuDepth++;\n        var /** @type {?} */ i18nIcuCases = {};\n        var /** @type {?} */ i18nIcu = new Icu(icu.switchValue, icu.type, i18nIcuCases, icu.sourceSpan);\n        icu.cases.forEach(function (caze) {\n            i18nIcuCases[caze.value] = new Container(caze.expression.map(function (node) { return node.visit(_this, {}); }), caze.expSourceSpan);\n        });\n        this._icuDepth--;\n        if (this._isIcu || this._icuDepth > 0) {\n            // Returns an ICU node when:\n            // - the message (vs a part of the message) is an ICU message, or\n            // - the ICU message is nested.\n            var /** @type {?} */ expPh = this._placeholderRegistry.getUniquePlaceholder(\"VAR_\" + icu.type);\n            i18nIcu.expressionPlaceholder = expPh;\n            this._placeholderToContent[expPh] = icu.switchValue;\n            return i18nIcu;\n        }\n        // Else returns a placeholder\n        // ICU placeholders should not be replaced with their original content but with the their\n        // translations. We need to create a new visitor (they are not re-entrant) to compute the\n        // message id.\n        // TODO(vicb): add a html.Node -> i18n.Message cache to avoid having to re-create the msg\n        var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName('ICU', icu.sourceSpan.toString());\n        var /** @type {?} */ visitor = new _I18nVisitor(this._expressionParser, this._interpolationConfig);\n        this._placeholderToMessage[phName] = visitor.toI18nMessage([icu], '', '', '');\n        return new IcuPlaceholder(i18nIcu, phName, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _I18nVisitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Unreachable code');\n    };\n    /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    _I18nVisitor.prototype._visitTextWithInterpolation = /**\n     * @param {?} text\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (text, sourceSpan) {\n        var /** @type {?} */ splitInterpolation = this._expressionParser.splitInterpolation(text, sourceSpan.start.toString(), this._interpolationConfig);\n        if (!splitInterpolation) {\n            // No expression, return a single text\n            return new Text$1(text, sourceSpan);\n        }\n        // Return a group of text + expressions\n        var /** @type {?} */ nodes = [];\n        var /** @type {?} */ container = new Container(nodes, sourceSpan);\n        var _a = this._interpolationConfig, sDelimiter = _a.start, eDelimiter = _a.end;\n        for (var /** @type {?} */ i = 0; i < splitInterpolation.strings.length - 1; i++) {\n            var /** @type {?} */ expression = splitInterpolation.expressions[i];\n            var /** @type {?} */ baseName = _extractPlaceholderName(expression) || 'INTERPOLATION';\n            var /** @type {?} */ phName = this._placeholderRegistry.getPlaceholderName(baseName, expression);\n            if (splitInterpolation.strings[i].length) {\n                // No need to add empty strings\n                nodes.push(new Text$1(splitInterpolation.strings[i], sourceSpan));\n            }\n            nodes.push(new Placeholder(expression, phName, sourceSpan));\n            this._placeholderToContent[phName] = sDelimiter + expression + eDelimiter;\n        }\n        // The last index contains no expression\n        var /** @type {?} */ lastStringIdx = splitInterpolation.strings.length - 1;\n        if (splitInterpolation.strings[lastStringIdx].length) {\n            nodes.push(new Text$1(splitInterpolation.strings[lastStringIdx], sourceSpan));\n        }\n        return container;\n    };\n    return _I18nVisitor;\n}());\nvar _CUSTOM_PH_EXP = /\\/\\/[\\s\\S]*i18n[\\s\\S]*\\([\\s\\S]*ph[\\s\\S]*=[\\s\\S]*(\"|')([\\s\\S]*?)\\1[\\s\\S]*\\)/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction _extractPlaceholderName(input) {\n    return input.split(_CUSTOM_PH_EXP)[2];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An i18n error.\n */\nvar I18nError = (function (_super) {\n    __extends(I18nError, _super);\n    function I18nError(span, msg) {\n        return _super.call(this, span, msg) || this;\n    }\n    return I18nError;\n}(ParseError));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _I18N_ATTR = 'i18n';\nvar _I18N_ATTR_PREFIX = 'i18n-';\nvar _I18N_COMMENT_PREFIX_REGEXP = /^i18n:?/;\nvar MEANING_SEPARATOR = '|';\nvar ID_SEPARATOR = '@@';\nvar i18nCommentsWarned = false;\n/**\n * Extract translatable messages from an html AST\n * @param {?} nodes\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction extractMessages(nodes, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.extract(nodes, interpolationConfig);\n}\n/**\n * @param {?} nodes\n * @param {?} translations\n * @param {?} interpolationConfig\n * @param {?} implicitTags\n * @param {?} implicitAttrs\n * @return {?}\n */\nfunction mergeTranslations(nodes, translations, interpolationConfig, implicitTags, implicitAttrs) {\n    var /** @type {?} */ visitor = new _Visitor(implicitTags, implicitAttrs);\n    return visitor.merge(nodes, translations, interpolationConfig);\n}\nvar ExtractionResult = (function () {\n    function ExtractionResult(messages, errors) {\n        this.messages = messages;\n        this.errors = errors;\n    }\n    return ExtractionResult;\n}());\n/** @enum {number} */\nvar _VisitorMode = {\n    Extract: 0,\n    Merge: 1,\n};\n_VisitorMode[_VisitorMode.Extract] = \"Extract\";\n_VisitorMode[_VisitorMode.Merge] = \"Merge\";\n/**\n * This Visitor is used:\n * 1. to extract all the translatable strings from an html AST (see `extract()`),\n * 2. to replace the translatable strings with the actual translations (see `merge()`)\n *\n * \\@internal\n */\nvar _Visitor = (function () {\n    function _Visitor(_implicitTags, _implicitAttrs) {\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n    }\n    /**\n     * Extracts the messages from the tree\n     */\n    /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.extract = /**\n     * Extracts the messages from the tree\n     * @param {?} nodes\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, interpolationConfig) {\n        var _this = this;\n        this._init(_VisitorMode.Extract, interpolationConfig);\n        nodes.forEach(function (node) { return node.visit(_this, null); });\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ExtractionResult(this._messages, this._errors);\n    };\n    /**\n     * Returns a tree where all translatable nodes are translated\n     */\n    /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype.merge = /**\n     * Returns a tree where all translatable nodes are translated\n     * @param {?} nodes\n     * @param {?} translations\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (nodes, translations, interpolationConfig) {\n        this._init(_VisitorMode.Merge, interpolationConfig);\n        this._translations = translations;\n        // Construct a single fake root element\n        var /** @type {?} */ wrapper = new Element('wrapper', [], nodes, /** @type {?} */ ((undefined)), undefined, undefined);\n        var /** @type {?} */ translatedNode = wrapper.visit(this, null);\n        if (this._inI18nBlock) {\n            this._reportError(nodes[nodes.length - 1], 'Unclosed block');\n        }\n        return new ParseTreeResult(translatedNode.children, this._errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        // Parse cases for translatable html attributes\n        var /** @type {?} */ expression = visitAll(this, icuCase.expression, context);\n        if (this._mode === _VisitorMode.Merge) {\n            return new ExpansionCase(icuCase.value, expression, icuCase.sourceSpan, icuCase.valueSourceSpan, icuCase.expSourceSpan);\n        }\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this._mayBeAddBlockChildren(icu);\n        var /** @type {?} */ wasInIcu = this._inIcu;\n        if (!this._inIcu) {\n            // nested ICU messages should not be extracted but top-level translated as a whole\n            if (this._isInTranslatableSection) {\n                this._addMessage([icu]);\n            }\n            this._inIcu = true;\n        }\n        var /** @type {?} */ cases = visitAll(this, icu.cases, context);\n        if (this._mode === _VisitorMode.Merge) {\n            icu = new Expansion(icu.switchValue, icu.type, cases, icu.sourceSpan, icu.switchValueSourceSpan);\n        }\n        this._inIcu = wasInIcu;\n        return icu;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) {\n        var /** @type {?} */ isOpening = _isOpeningComment(comment);\n        if (isOpening && this._isInTranslatableSection) {\n            this._reportError(comment, 'Could not start a block inside a translatable section');\n            return;\n        }\n        var /** @type {?} */ isClosing = _isClosingComment(comment);\n        if (isClosing && !this._inI18nBlock) {\n            this._reportError(comment, 'Trying to close an unopened block');\n            return;\n        }\n        if (!this._inI18nNode && !this._inIcu) {\n            if (!this._inI18nBlock) {\n                if (isOpening) {\n                    // deprecated from v5 you should use <ng-container i18n> instead of i18n comments\n                    if (!i18nCommentsWarned && /** @type {?} */ (console) && /** @type {?} */ (console.warn)) {\n                        i18nCommentsWarned = true;\n                        var /** @type {?} */ details = comment.sourceSpan.details ? \", \" + comment.sourceSpan.details : '';\n                        // TODO(ocombe): use a log service once there is a public one available\n                        console.warn(\"I18n comments are deprecated, use an <ng-container> element instead (\" + comment.sourceSpan.start + details + \")\");\n                    }\n                    this._inI18nBlock = true;\n                    this._blockStartDepth = this._depth;\n                    this._blockChildren = [];\n                    this._blockMeaningAndDesc = /** @type {?} */ ((comment.value)).replace(_I18N_COMMENT_PREFIX_REGEXP, '').trim();\n                    this._openTranslatableSection(comment);\n                }\n            }\n            else {\n                if (isClosing) {\n                    if (this._depth == this._blockStartDepth) {\n                        this._closeTranslatableSection(comment, this._blockChildren);\n                        this._inI18nBlock = false;\n                        var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(this._blockChildren, this._blockMeaningAndDesc)));\n                        // merge attributes in sections\n                        var /** @type {?} */ nodes = this._translateMessage(comment, message);\n                        return visitAll(this, nodes);\n                    }\n                    else {\n                        this._reportError(comment, 'I18N blocks should not cross element boundaries');\n                        return;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        if (this._isInTranslatableSection) {\n            this._mayBeAddBlockChildren(text);\n        }\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        this._mayBeAddBlockChildren(el);\n        this._depth++;\n        var /** @type {?} */ wasInI18nNode = this._inI18nNode;\n        var /** @type {?} */ wasInImplicitNode = this._inImplicitNode;\n        var /** @type {?} */ childNodes = [];\n        var /** @type {?} */ translatedChildNodes = /** @type {?} */ ((undefined));\n        // Extract:\n        // - top level nodes with the (implicit) \"i18n\" attribute if not already in a section\n        // - ICU messages\n        var /** @type {?} */ i18nAttr = _getI18nAttr(el);\n        var /** @type {?} */ i18nMeta = i18nAttr ? i18nAttr.value : '';\n        var /** @type {?} */ isImplicit = this._implicitTags.some(function (tag) { return el.name === tag; }) && !this._inIcu &&\n            !this._isInTranslatableSection;\n        var /** @type {?} */ isTopLevelImplicit = !wasInImplicitNode && isImplicit;\n        this._inImplicitNode = wasInImplicitNode || isImplicit;\n        if (!this._isInTranslatableSection && !this._inIcu) {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._inI18nNode = true;\n                var /** @type {?} */ message = /** @type {?} */ ((this._addMessage(el.children, i18nMeta)));\n                translatedChildNodes = this._translateMessage(el, message);\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                var /** @type {?} */ isTranslatable = i18nAttr || isTopLevelImplicit;\n                if (isTranslatable)\n                    this._openTranslatableSection(el);\n                visitAll(this, el.children);\n                if (isTranslatable)\n                    this._closeTranslatableSection(el, el.children);\n            }\n        }\n        else {\n            if (i18nAttr || isTopLevelImplicit) {\n                this._reportError(el, 'Could not mark an element as translatable inside a translatable section');\n            }\n            if (this._mode == _VisitorMode.Extract) {\n                // Descend into child nodes for extraction\n                visitAll(this, el.children);\n            }\n        }\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ visitNodes = translatedChildNodes || el.children;\n            visitNodes.forEach(function (child) {\n                var /** @type {?} */ visited = child.visit(_this, context);\n                if (visited && !_this._isInTranslatableSection) {\n                    // Do not add the children from translatable sections (= i18n blocks here)\n                    // They will be added later in this loop when the block closes (i.e. on `<!-- /i18n -->`)\n                    childNodes = childNodes.concat(visited);\n                }\n            });\n        }\n        this._visitAttributesOf(el);\n        this._depth--;\n        this._inI18nNode = wasInI18nNode;\n        this._inImplicitNode = wasInImplicitNode;\n        if (this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ translatedAttrs = this._translateAttributes(el);\n            return new Element(el.name, translatedAttrs, childNodes, el.sourceSpan, el.startSourceSpan, el.endSourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        throw new Error('unreachable code');\n    };\n    /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    _Visitor.prototype._init = /**\n     * @param {?} mode\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (mode, interpolationConfig) {\n        this._mode = mode;\n        this._inI18nBlock = false;\n        this._inI18nNode = false;\n        this._depth = 0;\n        this._inIcu = false;\n        this._msgCountAtSectionStart = undefined;\n        this._errors = [];\n        this._messages = [];\n        this._inImplicitNode = false;\n        this._createI18nMessage = createI18nMessageFactory(interpolationConfig);\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._visitAttributesOf = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ explicitAttrNameToValue = {};\n        var /** @type {?} */ implicitAttrNames = this._implicitAttrs[el.name] || [];\n        el.attrs.filter(function (attr) { return attr.name.startsWith(_I18N_ATTR_PREFIX); })\n            .forEach(function (attr) {\n            return explicitAttrNameToValue[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                attr.value;\n        });\n        el.attrs.forEach(function (attr) {\n            if (attr.name in explicitAttrNameToValue) {\n                _this._addMessage([attr], explicitAttrNameToValue[attr.name]);\n            }\n            else if (implicitAttrNames.some(function (name) { return attr.name === name; })) {\n                _this._addMessage([attr]);\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    _Visitor.prototype._addMessage = /**\n     * @param {?} ast\n     * @param {?=} msgMeta\n     * @return {?}\n     */\n    function (ast, msgMeta) {\n        if (ast.length == 0 ||\n            ast.length == 1 && ast[0] instanceof Attribute$1 && !(/** @type {?} */ (ast[0])).value) {\n            // Do not create empty messages\n            return null;\n        }\n        var _a = _parseMessageMeta(msgMeta), meaning = _a.meaning, description = _a.description, id = _a.id;\n        var /** @type {?} */ message = this._createI18nMessage(ast, meaning, description, id);\n        this._messages.push(message);\n        return message;\n    };\n    /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    _Visitor.prototype._translateMessage = /**\n     * @param {?} el\n     * @param {?} message\n     * @return {?}\n     */\n    function (el, message) {\n        if (message && this._mode === _VisitorMode.Merge) {\n            var /** @type {?} */ nodes = this._translations.get(message);\n            if (nodes) {\n                return nodes;\n            }\n            this._reportError(el, \"Translation unavailable for message id=\\\"\" + this._translations.digest(message) + \"\\\"\");\n        }\n        return [];\n    };\n    /**\n     * @param {?} el\n     * @return {?}\n     */\n    _Visitor.prototype._translateAttributes = /**\n     * @param {?} el\n     * @return {?}\n     */\n    function (el) {\n        var _this = this;\n        var /** @type {?} */ attributes = el.attrs;\n        var /** @type {?} */ i18nParsedMessageMeta = {};\n        attributes.forEach(function (attr) {\n            if (attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                i18nParsedMessageMeta[attr.name.slice(_I18N_ATTR_PREFIX.length)] =\n                    _parseMessageMeta(attr.value);\n            }\n        });\n        var /** @type {?} */ translatedAttributes = [];\n        attributes.forEach(function (attr) {\n            if (attr.name === _I18N_ATTR || attr.name.startsWith(_I18N_ATTR_PREFIX)) {\n                // strip i18n specific attributes\n                return;\n            }\n            if (attr.value && attr.value != '' && i18nParsedMessageMeta.hasOwnProperty(attr.name)) {\n                var _a = i18nParsedMessageMeta[attr.name], meaning = _a.meaning, description = _a.description, id = _a.id;\n                var /** @type {?} */ message = _this._createI18nMessage([attr], meaning, description, id);\n                var /** @type {?} */ nodes = _this._translations.get(message);\n                if (nodes) {\n                    if (nodes.length == 0) {\n                        translatedAttributes.push(new Attribute$1(attr.name, '', attr.sourceSpan));\n                    }\n                    else if (nodes[0] instanceof Text) {\n                        var /** @type {?} */ value = (/** @type {?} */ (nodes[0])).value;\n                        translatedAttributes.push(new Attribute$1(attr.name, value, attr.sourceSpan));\n                    }\n                    else {\n                        _this._reportError(el, \"Unexpected translation for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                    }\n                }\n                else {\n                    _this._reportError(el, \"Translation unavailable for attribute \\\"\" + attr.name + \"\\\" (id=\\\"\" + (id || _this._translations.digest(message)) + \"\\\")\");\n                }\n            }\n            else {\n                translatedAttributes.push(attr);\n            }\n        });\n        return translatedAttributes;\n    };\n    /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._mayBeAddBlockChildren = /**\n     * Add the node as a child of the block when:\n     * - we are in a block,\n     * - we are not inside a ICU message (those are handled separately),\n     * - the node is a \"direct child\" of the block\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._inI18nBlock && !this._inIcu && this._depth == this._blockStartDepth) {\n            this._blockChildren.push(node);\n        }\n    };\n    /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    _Visitor.prototype._openTranslatableSection = /**\n     * Marks the start of a section, see `_closeTranslatableSection`\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        if (this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section start');\n        }\n        else {\n            this._msgCountAtSectionStart = this._messages.length;\n        }\n    };\n    Object.defineProperty(_Visitor.prototype, \"_isInTranslatableSection\", {\n        get: /**\n         * A translatable section could be:\n         * - the content of translatable element,\n         * - nodes between `<!-- i18n -->` and `<!-- /i18n -->` comments\n         * @return {?}\n         */\n        function () {\n            return this._msgCountAtSectionStart !== void 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    _Visitor.prototype._closeTranslatableSection = /**\n     * Terminates a section.\n     *\n     * If a section has only one significant children (comments not significant) then we should not\n     * keep the message from this children:\n     *\n     * `<p i18n=\"meaning|description\">{ICU message}</p>` would produce two messages:\n     * - one for the <p> content with meaning and description,\n     * - another one for the ICU message.\n     *\n     * In this case the last message is discarded as it contains less information (the AST is\n     * otherwise identical).\n     *\n     * Note that we should still keep messages extracted from attributes inside the section (ie in the\n     * ICU message here)\n     * @param {?} node\n     * @param {?} directChildren\n     * @return {?}\n     */\n    function (node, directChildren) {\n        if (!this._isInTranslatableSection) {\n            this._reportError(node, 'Unexpected section end');\n            return;\n        }\n        var /** @type {?} */ startIndex = this._msgCountAtSectionStart;\n        var /** @type {?} */ significantChildren = directChildren.reduce(function (count, node) { return count + (node instanceof Comment ? 0 : 1); }, 0);\n        if (significantChildren == 1) {\n            for (var /** @type {?} */ i = this._messages.length - 1; i >= /** @type {?} */ ((startIndex)); i--) {\n                var /** @type {?} */ ast = this._messages[i].nodes;\n                if (!(ast.length == 1 && ast[0] instanceof Text$1)) {\n                    this._messages.splice(i, 1);\n                    break;\n                }\n            }\n        }\n        this._msgCountAtSectionStart = undefined;\n    };\n    /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    _Visitor.prototype._reportError = /**\n     * @param {?} node\n     * @param {?} msg\n     * @return {?}\n     */\n    function (node, msg) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), msg));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isOpeningComment(n) {\n    return !!(n instanceof Comment && n.value && n.value.startsWith('i18n'));\n}\n/**\n * @param {?} n\n * @return {?}\n */\nfunction _isClosingComment(n) {\n    return !!(n instanceof Comment && n.value && n.value === '/i18n');\n}\n/**\n * @param {?} p\n * @return {?}\n */\nfunction _getI18nAttr(p) {\n    return p.attrs.find(function (attr) { return attr.name === _I18N_ATTR; }) || null;\n}\n/**\n * @param {?=} i18n\n * @return {?}\n */\nfunction _parseMessageMeta(i18n) {\n    if (!i18n)\n        return { meaning: '', description: '', id: '' };\n    var /** @type {?} */ idIndex = i18n.indexOf(ID_SEPARATOR);\n    var /** @type {?} */ descIndex = i18n.indexOf(MEANING_SEPARATOR);\n    var _a = (idIndex > -1) ? [i18n.slice(0, idIndex), i18n.slice(idIndex + 2)] : [i18n, ''], meaningAndDesc = _a[0], id = _a[1];\n    var _b = (descIndex > -1) ?\n        [meaningAndDesc.slice(0, descIndex), meaningAndDesc.slice(descIndex + 1)] :\n        ['', meaningAndDesc], meaning = _b[0], description = _b[1];\n    return { meaning: meaning, description: description, id: id };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlTagDefinition = (function () {\n    function XmlTagDefinition() {\n        this.closedByParent = false;\n        this.contentType = TagContentType.PARSABLE_DATA;\n        this.isVoid = false;\n        this.ignoreFirstLf = false;\n        this.canSelfClose = true;\n    }\n    /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.requireExtraParent = /**\n     * @param {?} currentParent\n     * @return {?}\n     */\n    function (currentParent) { return false; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    XmlTagDefinition.prototype.isClosedByChild = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return false; };\n    return XmlTagDefinition;\n}());\nvar _TAG_DEFINITION = new XmlTagDefinition();\n/**\n * @param {?} tagName\n * @return {?}\n */\nfunction getXmlTagDefinition(tagName) {\n    return _TAG_DEFINITION;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XmlParser = (function (_super) {\n    __extends(XmlParser, _super);\n    function XmlParser() {\n        return _super.call(this, getXmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    XmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms);\n    };\n    return XmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar Serializer = (function () {\n    function Serializer() {\n    }\n    // Creates a name mapper, see `PlaceholderMapper`\n    // Returning `null` means that no name mapping is used.\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Serializer.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return null; };\n    return Serializer;\n}());\n/**\n * A `PlaceholderMapper` converts placeholder names from internal to serialized representation and\n * back.\n *\n * It should be used for serialization format that put constraints on the placeholder names.\n * @record\n */\n\n/**\n * A simple mapper that take a function to transform an internal name to a public name\n */\nvar SimplePlaceholderMapper = (function (_super) {\n    __extends(SimplePlaceholderMapper, _super);\n    // create a mapping from the message\n    function SimplePlaceholderMapper(message, mapName) {\n        var _this = _super.call(this) || this;\n        _this.mapName = mapName;\n        _this.internalToPublic = {};\n        _this.publicToNextId = {};\n        _this.publicToInternal = {};\n        message.nodes.forEach(function (node) { return node.visit(_this); });\n        return _this;\n    }\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toPublicName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        return this.internalToPublic.hasOwnProperty(internalName) ?\n            this.internalToPublic[internalName] :\n            null;\n    };\n    /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.toInternalName = /**\n     * @param {?} publicName\n     * @return {?}\n     */\n    function (publicName) {\n        return this.publicToInternal.hasOwnProperty(publicName) ? this.publicToInternal[publicName] :\n            null;\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return null; };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.startName);\n        _super.prototype.visitTagPlaceholder.call(this, ph, context);\n        this.visitPlaceholderName(ph.closeName);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) { this.visitPlaceholderName(ph.name); };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        this.visitPlaceholderName(ph.name);\n    };\n    /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    SimplePlaceholderMapper.prototype.visitPlaceholderName = /**\n     * @param {?} internalName\n     * @return {?}\n     */\n    function (internalName) {\n        if (!internalName || this.internalToPublic.hasOwnProperty(internalName)) {\n            return;\n        }\n        var /** @type {?} */ publicName = this.mapName(internalName);\n        if (this.publicToInternal.hasOwnProperty(publicName)) {\n            // Create a new XMB when it has already been used\n            var /** @type {?} */ nextId = this.publicToNextId[publicName];\n            this.publicToNextId[publicName] = nextId + 1;\n            publicName = publicName + \"_\" + nextId;\n        }\n        else {\n            this.publicToNextId[publicName] = 1;\n        }\n        this.internalToPublic[internalName] = publicName;\n        this.publicToInternal[publicName] = internalName;\n    };\n    return SimplePlaceholderMapper;\n}(RecurseVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar _Visitor$1 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    _Visitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        var /** @type {?} */ strAttrs = this._serializeAttributes(tag.attrs);\n        if (tag.children.length == 0) {\n            return \"<\" + tag.name + strAttrs + \"/>\";\n        }\n        var /** @type {?} */ strChildren = tag.children.map(function (node) { return node.visit(_this); });\n        return \"<\" + tag.name + strAttrs + \">\" + strChildren.join('') + \"</\" + tag.name + \">\";\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { return text.value; };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    _Visitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) {\n        return \"<?xml\" + this._serializeAttributes(decl.attrs) + \" ?>\";\n    };\n    /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    _Visitor.prototype._serializeAttributes = /**\n     * @param {?} attrs\n     * @return {?}\n     */\n    function (attrs) {\n        var /** @type {?} */ strAttrs = Object.keys(attrs).map(function (name) { return name + \"=\\\"\" + attrs[name] + \"\\\"\"; }).join(' ');\n        return strAttrs.length > 0 ? ' ' + strAttrs : '';\n    };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    _Visitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) {\n        return \"<!DOCTYPE \" + doctype.rootTag + \" [\\n\" + doctype.dtd + \"\\n]>\";\n    };\n    return _Visitor;\n}());\nvar _visitor = new _Visitor$1();\n/**\n * @param {?} nodes\n * @return {?}\n */\nfunction serialize(nodes) {\n    return nodes.map(function (node) { return node.visit(_visitor); }).join('');\n}\n/**\n * @record\n */\n\nvar Declaration = (function () {\n    function Declaration(unescapedAttrs) {\n        var _this = this;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Declaration.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDeclaration(this); };\n    return Declaration;\n}());\nvar Doctype = (function () {\n    function Doctype(rootTag, dtd) {\n        this.rootTag = rootTag;\n        this.dtd = dtd;\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Doctype.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitDoctype(this); };\n    return Doctype;\n}());\nvar Tag = (function () {\n    function Tag(name, unescapedAttrs, children) {\n        if (unescapedAttrs === void 0) { unescapedAttrs = {}; }\n        if (children === void 0) { children = []; }\n        var _this = this;\n        this.name = name;\n        this.children = children;\n        this.attrs = {};\n        Object.keys(unescapedAttrs).forEach(function (k) {\n            _this.attrs[k] = _escapeXml(unescapedAttrs[k]);\n        });\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Tag.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitTag(this); };\n    return Tag;\n}());\nvar Text$2 = (function () {\n    function Text(unescapedValue) {\n        this.value = _escapeXml(unescapedValue);\n    }\n    /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    Text.prototype.visit = /**\n     * @param {?} visitor\n     * @return {?}\n     */\n    function (visitor) { return visitor.visitText(this); };\n    return Text;\n}());\nvar CR = (function (_super) {\n    __extends(CR, _super);\n    function CR(ws) {\n        if (ws === void 0) { ws = 0; }\n        return _super.call(this, \"\\n\" + new Array(ws + 1).join(' ')) || this;\n    }\n    return CR;\n}(Text$2));\nvar _ESCAPED_CHARS = [\n    [/&/g, '&amp;'],\n    [/\"/g, '&quot;'],\n    [/'/g, '&apos;'],\n    [/</g, '&lt;'],\n    [/>/g, '&gt;'],\n];\n/**\n * @param {?} text\n * @return {?}\n */\nfunction _escapeXml(text) {\n    return _ESCAPED_CHARS.reduce(function (text, entry) { return text.replace(entry[0], entry[1]); }, text);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION = '1.2';\nvar _XMLNS = 'urn:oasis:names:tc:xliff:document:1.2';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG = 'en';\nvar _PLACEHOLDER_TAG = 'x';\nvar _FILE_TAG = 'file';\nvar _SOURCE_TAG = 'source';\nvar _TARGET_TAG = 'target';\nvar _UNIT_TAG = 'trans-unit';\nvar _CONTEXT_GROUP_TAG = 'context-group';\nvar _CONTEXT_TAG = 'context';\nvar Xliff = (function (_super) {\n    __extends(Xliff, _super);\n    function Xliff() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor();\n        var /** @type {?} */ transUnits = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ contextTags = [];\n            message.sources.forEach(function (source) {\n                var /** @type {?} */ contextGroupTag = new Tag(_CONTEXT_GROUP_TAG, { purpose: 'location' });\n                contextGroupTag.children.push(new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'sourcefile' }, [new Text$2(source.filePath)]), new CR(10), new Tag(_CONTEXT_TAG, { 'context-type': 'linenumber' }, [new Text$2(\"\" + source.startLine)]), new CR(8));\n                contextTags.push(new CR(8), contextGroupTag);\n            });\n            var /** @type {?} */ transUnit = new Tag(_UNIT_TAG, { id: message.id, datatype: 'html' });\n            (_a = transUnit.children).push.apply(_a, [new CR(8), new Tag(_SOURCE_TAG, {}, visitor.serialize(message.nodes))].concat(contextTags));\n            if (message.description) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'description' }, [new Text$2(message.description)]));\n            }\n            if (message.meaning) {\n                transUnit.children.push(new CR(8), new Tag('note', { priority: '1', from: 'meaning' }, [new Text$2(message.meaning)]));\n            }\n            transUnit.children.push(new CR(6));\n            transUnits.push(new CR(6), transUnit);\n            var _a;\n        });\n        var /** @type {?} */ body = new Tag('body', {}, transUnits.concat([new CR(4)]));\n        var /** @type {?} */ file = new Tag('file', {\n            'source-language': locale || _DEFAULT_SOURCE_LANG,\n            datatype: 'plaintext',\n            original: 'ng2.template',\n        }, [new CR(4), body, new CR(2)]);\n        var /** @type {?} */ xliff = new Tag('xliff', { version: _VERSION, xmlns: _XMLNS }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliffParser = new XliffParser();\n        var _a = xliffParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest(message); };\n    return Xliff;\n}(Serializer));\nvar _WriteVisitor = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ ctype = getCtypeForTag(ph.tag);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \"/>\" })];\n        }\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.startName, ctype: ctype, 'equiv-text': \"<\" + ph.tag + \">\" });\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG, { id: ph.closeName, ctype: ctype, 'equiv-text': \"</\" + ph.tag + \">\" });\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': \"{{\" + ph.value + \"}}\" })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ equivText = \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\";\n        return [new Tag(_PLACEHOLDER_TAG, { id: ph.name, 'equiv-text': equivText })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar XliffParser = (function () {\n    function XliffParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    XliffParser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG:\n                this._unitMlString = /** @type {?} */ ((null));\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG:\n                // ignore source message\n                break;\n            case _TARGET_TAG:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _FILE_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'target-language'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                visitAll(this, element.children, null);\n                break;\n            default:\n                // TODO(vicb): assert file structure, xliff version\n                // For now only recurse on unhandled nodes\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XliffParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XliffParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XliffParser;\n}());\nvar XmlToI18n = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'id'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG + \"> misses the \\\"id\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getCtypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n            return 'lb';\n        case 'img':\n            return 'image';\n        default:\n            return \"x-\" + tag;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _VERSION$1 = '2.0';\nvar _XMLNS$1 = 'urn:oasis:names:tc:xliff:document:2.0';\n// TODO(vicb): make this a param (s/_/-/)\nvar _DEFAULT_SOURCE_LANG$1 = 'en';\nvar _PLACEHOLDER_TAG$1 = 'ph';\nvar _PLACEHOLDER_SPANNING_TAG = 'pc';\nvar _XLIFF_TAG = 'xliff';\nvar _SOURCE_TAG$1 = 'source';\nvar _TARGET_TAG$1 = 'target';\nvar _UNIT_TAG$1 = 'unit';\nvar Xliff2 = (function (_super) {\n    __extends(Xliff2, _super);\n    function Xliff2() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xliff2.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ visitor = new _WriteVisitor$1();\n        var /** @type {?} */ units = [];\n        messages.forEach(function (message) {\n            var /** @type {?} */ unit = new Tag(_UNIT_TAG$1, { id: message.id });\n            var /** @type {?} */ notes = new Tag('notes');\n            if (message.description || message.meaning) {\n                if (message.description) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'description' }, [new Text$2(message.description)]));\n                }\n                if (message.meaning) {\n                    notes.children.push(new CR(8), new Tag('note', { category: 'meaning' }, [new Text$2(message.meaning)]));\n                }\n            }\n            message.sources.forEach(function (source) {\n                notes.children.push(new CR(8), new Tag('note', { category: 'location' }, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            notes.children.push(new CR(6));\n            unit.children.push(new CR(6), notes);\n            var /** @type {?} */ segment = new Tag('segment');\n            segment.children.push(new CR(8), new Tag(_SOURCE_TAG$1, {}, visitor.serialize(message.nodes)), new CR(6));\n            unit.children.push(new CR(6), segment, new CR(4));\n            units.push(new CR(4), unit);\n        });\n        var /** @type {?} */ file = new Tag('file', { 'original': 'ng.template', id: 'ngi18n' }, units.concat([new CR(2)]));\n        var /** @type {?} */ xliff = new Tag(_XLIFF_TAG, { version: _VERSION$1, xmlns: _XMLNS$1, srcLang: locale || _DEFAULT_SOURCE_LANG$1 }, [new CR(2), file, new CR()]);\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }), new CR(), xliff, new CR()\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xliff to xml nodes\n        var /** @type {?} */ xliff2Parser = new Xliff2Parser();\n        var _a = xliff2Parser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$1();\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, e = _a.errors;\n            errors.push.apply(errors, e);\n            i18nNodesByMsgId[msgId] = i18nNodes;\n        });\n        if (errors.length) {\n            throw new Error(\"xliff2 parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return decimalDigest(message); };\n    return Xliff2;\n}(Serializer));\nvar _WriteVisitor$1 = (function () {\n    function _WriteVisitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ type = getTypeForTag(ph.tag);\n        if (ph.isVoid) {\n            var /** @type {?} */ tagPh = new Tag(_PLACEHOLDER_TAG$1, {\n                id: (this._nextPlaceholderId++).toString(),\n                equiv: ph.startName,\n                type: type,\n                disp: \"<\" + ph.tag + \"/>\",\n            });\n            return [tagPh];\n        }\n        var /** @type {?} */ tagPc = new Tag(_PLACEHOLDER_SPANNING_TAG, {\n            id: (this._nextPlaceholderId++).toString(),\n            equivStart: ph.startName,\n            equivEnd: ph.closeName,\n            type: type,\n            dispStart: \"<\" + ph.tag + \">\",\n            dispEnd: \"</\" + ph.tag + \">\",\n        });\n        var /** @type {?} */ nodes = [].concat.apply([], ph.children.map(function (node) { return node.visit(_this); }));\n        if (nodes.length) {\n            nodes.forEach(function (node) { return tagPc.children.push(node); });\n        }\n        else {\n            tagPc.children.push(new Text$2(''));\n        }\n        return [tagPc];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, {\n                id: idStr,\n                equiv: ph.name,\n                disp: \"{{\" + ph.value + \"}}\",\n            })];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _WriteVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ cases = Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ');\n        var /** @type {?} */ idStr = (this._nextPlaceholderId++).toString();\n        return [new Tag(_PLACEHOLDER_TAG$1, { id: idStr, equiv: ph.name, disp: \"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + cases + \"}\" })];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _WriteVisitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        this._nextPlaceholderId = 0;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _WriteVisitor;\n}());\nvar Xliff2Parser = (function () {\n    function Xliff2Parser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    Xliff2Parser.prototype.parse = /**\n     * @param {?} xliff\n     * @param {?} url\n     * @return {?}\n     */\n    function (xliff, url) {\n        this._unitMlString = null;\n        this._msgIdToHtml = {};\n        var /** @type {?} */ xml = new XmlParser().parse(xliff, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes, null);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _UNIT_TAG$1:\n                this._unitMlString = null;\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _UNIT_TAG$1 + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                        if (typeof this._unitMlString === 'string') {\n                            this._msgIdToHtml[id] = this._unitMlString;\n                        }\n                        else {\n                            this._addError(element, \"Message \" + id + \" misses a translation\");\n                        }\n                    }\n                }\n                break;\n            case _SOURCE_TAG$1:\n                // ignore source message\n                break;\n            case _TARGET_TAG$1:\n                var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                var /** @type {?} */ innerText = content.slice(innerTextStart, innerTextEnd);\n                this._unitMlString = innerText;\n                break;\n            case _XLIFF_TAG:\n                var /** @type {?} */ localeAttr = element.attrs.find(function (attr) { return attr.name === 'trgLang'; });\n                if (localeAttr) {\n                    this._locale = localeAttr.value;\n                }\n                var /** @type {?} */ versionAttr = element.attrs.find(function (attr) { return attr.name === 'version'; });\n                if (versionAttr) {\n                    var /** @type {?} */ version = versionAttr.value;\n                    if (version !== '2.0') {\n                        this._addError(element, \"The XLIFF file version \" + version + \" is not compatible with XLIFF 2.0 serializer\");\n                    }\n                    else {\n                        visitAll(this, element.children, null);\n                    }\n                }\n                break;\n            default:\n                visitAll(this, element.children, null);\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    Xliff2Parser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    Xliff2Parser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return Xliff2Parser;\n}());\nvar XmlToI18n$1 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] : [].concat.apply([], visitAll(this, xmlIcu.rootNodes));\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, text.sourceSpan); };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        var _this = this;\n        switch (el.name) {\n            case _PLACEHOLDER_TAG$1:\n                var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'equiv'; });\n                if (nameAttr) {\n                    return [new Placeholder('', nameAttr.value, el.sourceSpan)];\n                }\n                this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equiv\\\" attribute\");\n                break;\n            case _PLACEHOLDER_SPANNING_TAG:\n                var /** @type {?} */ startAttr = el.attrs.find(function (attr) { return attr.name === 'equivStart'; });\n                var /** @type {?} */ endAttr = el.attrs.find(function (attr) { return attr.name === 'equivEnd'; });\n                if (!startAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivStart\\\" attribute\");\n                }\n                else if (!endAttr) {\n                    this._addError(el, \"<\" + _PLACEHOLDER_TAG$1 + \"> misses the \\\"equivEnd\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ startId = startAttr.value;\n                    var /** @type {?} */ endId = endAttr.value;\n                    var /** @type {?} */ nodes = [];\n                    return nodes.concat.apply(nodes, [new Placeholder('', startId, el.sourceSpan)].concat(el.children.map(function (node) { return node.visit(_this, null); }), [new Placeholder('', endId, el.sourceSpan)]));\n                }\n                break;\n            default:\n                this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: [].concat.apply([], visitAll(this, icuCase.expression)),\n        };\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(node.sourceSpan, message));\n    };\n    return XmlToI18n;\n}());\n/**\n * @param {?} tag\n * @return {?}\n */\nfunction getTypeForTag(tag) {\n    switch (tag.toLowerCase()) {\n        case 'br':\n        case 'b':\n        case 'i':\n        case 'u':\n            return 'fmt';\n        case 'img':\n            return 'image';\n        case 'a':\n            return 'link';\n        default:\n            return 'other';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _MESSAGES_TAG = 'messagebundle';\nvar _MESSAGE_TAG = 'msg';\nvar _PLACEHOLDER_TAG$2 = 'ph';\nvar _EXEMPLE_TAG = 'ex';\nvar _SOURCE_TAG$2 = 'source';\nvar _DOCTYPE = \"<!ELEMENT messagebundle (msg)*>\\n<!ATTLIST messagebundle class CDATA #IMPLIED>\\n\\n<!ELEMENT msg (#PCDATA|ph|source)*>\\n<!ATTLIST msg id CDATA #IMPLIED>\\n<!ATTLIST msg seq CDATA #IMPLIED>\\n<!ATTLIST msg name CDATA #IMPLIED>\\n<!ATTLIST msg desc CDATA #IMPLIED>\\n<!ATTLIST msg meaning CDATA #IMPLIED>\\n<!ATTLIST msg obsolete (obsolete) #IMPLIED>\\n<!ATTLIST msg xml:space (default|preserve) \\\"default\\\">\\n<!ATTLIST msg is_hidden CDATA #IMPLIED>\\n\\n<!ELEMENT source (#PCDATA)>\\n\\n<!ELEMENT ph (#PCDATA|ex)*>\\n<!ATTLIST ph name CDATA #REQUIRED>\\n\\n<!ELEMENT ex (#PCDATA)>\";\nvar Xmb = (function (_super) {\n    __extends(Xmb, _super);\n    function Xmb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xmb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) {\n        var /** @type {?} */ exampleVisitor = new ExampleVisitor();\n        var /** @type {?} */ visitor = new _Visitor$2();\n        var /** @type {?} */ rootNode = new Tag(_MESSAGES_TAG);\n        messages.forEach(function (message) {\n            var /** @type {?} */ attrs = { id: message.id };\n            if (message.description) {\n                attrs['desc'] = message.description;\n            }\n            if (message.meaning) {\n                attrs['meaning'] = message.meaning;\n            }\n            var /** @type {?} */ sourceTags = [];\n            message.sources.forEach(function (source) {\n                sourceTags.push(new Tag(_SOURCE_TAG$2, {}, [\n                    new Text$2(source.filePath + \":\" + source.startLine + (source.endLine !== source.startLine ? ',' + source.endLine : ''))\n                ]));\n            });\n            rootNode.children.push(new CR(2), new Tag(_MESSAGE_TAG, attrs, sourceTags.concat(visitor.serialize(message.nodes))));\n        });\n        rootNode.children.push(new CR());\n        return serialize([\n            new Declaration({ version: '1.0', encoding: 'UTF-8' }),\n            new CR(),\n            new Doctype(_MESSAGES_TAG, _DOCTYPE),\n            new CR(),\n            exampleVisitor.addDefaultExamples(rootNode),\n            new CR(),\n        ]);\n    };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xmb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        throw new Error('Unsupported');\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xmb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xmb;\n}(Serializer));\nvar _Visitor$2 = (function () {\n    function _Visitor() {\n    }\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return [new Text$2(text.value)]; };\n    /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [];\n        container.children.forEach(function (node) { return nodes.push.apply(nodes, node.visit(_this)); });\n        return nodes;\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ nodes = [new Text$2(\"{\" + icu.expressionPlaceholder + \", \" + icu.type + \", \")];\n        Object.keys(icu.cases).forEach(function (c) {\n            nodes.push.apply(nodes, [new Text$2(c + \" {\")].concat(icu.cases[c].visit(_this), [new Text$2(\"} \")]));\n        });\n        nodes.push(new Text$2(\"}\"));\n        return nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ startEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"<\" + ph.tag + \">\")]);\n        var /** @type {?} */ startTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.startName }, [startEx]);\n        if (ph.isVoid) {\n            // void tags have no children nor closing tags\n            return [startTagPh];\n        }\n        var /** @type {?} */ closeEx = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"</\" + ph.tag + \">\")]);\n        var /** @type {?} */ closeTagPh = new Tag(_PLACEHOLDER_TAG$2, { name: ph.closeName }, [closeEx]);\n        return [startTagPh].concat(this.serialize(ph.children), [closeTagPh]);\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [new Text$2(\"{{\" + ph.value + \"}}\")]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    _Visitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ exTag = new Tag(_EXEMPLE_TAG, {}, [\n            new Text$2(\"{\" + ph.value.expression + \", \" + ph.value.type + \", \" + Object.keys(ph.value.cases).map(function (value) { return value + ' {...}'; }).join(' ') + \"}\")\n        ]);\n        return [new Tag(_PLACEHOLDER_TAG$2, { name: ph.name }, [exTag])];\n    };\n    /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    _Visitor.prototype.serialize = /**\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (nodes) {\n        var _this = this;\n        return [].concat.apply([], nodes.map(function (node) { return node.visit(_this); }));\n    };\n    return _Visitor;\n}());\n/**\n * @param {?} message\n * @return {?}\n */\nfunction digest$1(message) {\n    return decimalDigest(message);\n}\nvar ExampleVisitor = (function () {\n    function ExampleVisitor() {\n    }\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    ExampleVisitor.prototype.addDefaultExamples = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        node.visit(this);\n        return node;\n    };\n    /**\n     * @param {?} tag\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitTag = /**\n     * @param {?} tag\n     * @return {?}\n     */\n    function (tag) {\n        var _this = this;\n        if (tag.name === _PLACEHOLDER_TAG$2) {\n            if (!tag.children || tag.children.length == 0) {\n                var /** @type {?} */ exText = new Text$2(tag.attrs['name'] || '...');\n                tag.children = [new Tag(_EXEMPLE_TAG, {}, [exText])];\n            }\n        }\n        else if (tag.children) {\n            tag.children.forEach(function (node) { return node.visit(_this); });\n        }\n    };\n    /**\n     * @param {?} text\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @return {?}\n     */\n    function (text) { };\n    /**\n     * @param {?} decl\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDeclaration = /**\n     * @param {?} decl\n     * @return {?}\n     */\n    function (decl) { };\n    /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    ExampleVisitor.prototype.visitDoctype = /**\n     * @param {?} doctype\n     * @return {?}\n     */\n    function (doctype) { };\n    return ExampleVisitor;\n}());\n/**\n * @param {?} internalName\n * @return {?}\n */\nfunction toPublicName(internalName) {\n    return internalName.toUpperCase().replace(/[^A-Z0-9_]/g, '_');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _TRANSLATIONS_TAG = 'translationbundle';\nvar _TRANSLATION_TAG = 'translation';\nvar _PLACEHOLDER_TAG$3 = 'ph';\nvar Xtb = (function (_super) {\n    __extends(Xtb, _super);\n    function Xtb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    Xtb.prototype.write = /**\n     * @param {?} messages\n     * @param {?} locale\n     * @return {?}\n     */\n    function (messages, locale) { throw new Error('Unsupported'); };\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    Xtb.prototype.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @return {?}\n     */\n    function (content, url) {\n        // xtb to xml nodes\n        var /** @type {?} */ xtbParser = new XtbParser();\n        var _a = xtbParser.parse(content, url), locale = _a.locale, msgIdToHtml = _a.msgIdToHtml, errors = _a.errors;\n        // xml nodes to i18n nodes\n        var /** @type {?} */ i18nNodesByMsgId = {};\n        var /** @type {?} */ converter = new XmlToI18n$2();\n        // Because we should be able to load xtb files that rely on features not supported by angular,\n        // we need to delay the conversion of html to i18n nodes so that non angular messages are not\n        // converted\n        Object.keys(msgIdToHtml).forEach(function (msgId) {\n            var /** @type {?} */ valueFn = function () {\n                var _a = converter.convert(msgIdToHtml[msgId], url), i18nNodes = _a.i18nNodes, errors = _a.errors;\n                if (errors.length) {\n                    throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n                }\n                return i18nNodes;\n            };\n            createLazyProperty(i18nNodesByMsgId, msgId, valueFn);\n        });\n        if (errors.length) {\n            throw new Error(\"xtb parse errors:\\n\" + errors.join('\\n'));\n        }\n        return { locale: /** @type {?} */ ((locale)), i18nNodesByMsgId: i18nNodesByMsgId };\n    };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.digest = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) { return digest$1(message); };\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Xtb.prototype.createNameMapper = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        return new SimplePlaceholderMapper(message, toPublicName);\n    };\n    return Xtb;\n}(Serializer));\n/**\n * @param {?} messages\n * @param {?} id\n * @param {?} valueFn\n * @return {?}\n */\nfunction createLazyProperty(messages, id, valueFn) {\n    Object.defineProperty(messages, id, {\n        configurable: true,\n        enumerable: true,\n        get: function () {\n            var /** @type {?} */ value = valueFn();\n            Object.defineProperty(messages, id, { enumerable: true, value: value });\n            return value;\n        },\n        set: function (_) { throw new Error('Could not overwrite an XTB translation'); },\n    });\n}\nvar XtbParser = (function () {\n    function XtbParser() {\n        this._locale = null;\n    }\n    /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    XtbParser.prototype.parse = /**\n     * @param {?} xtb\n     * @param {?} url\n     * @return {?}\n     */\n    function (xtb, url) {\n        this._bundleDepth = 0;\n        this._msgIdToHtml = {};\n        // We can not parse the ICU messages at this point as some messages might not originate\n        // from Angular that could not be lex'd.\n        var /** @type {?} */ xml = new XmlParser().parse(xtb, url, false);\n        this._errors = xml.errors;\n        visitAll(this, xml.rootNodes);\n        return {\n            msgIdToHtml: this._msgIdToHtml,\n            errors: this._errors,\n            locale: this._locale,\n        };\n    };\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        switch (element.name) {\n            case _TRANSLATIONS_TAG:\n                this._bundleDepth++;\n                if (this._bundleDepth > 1) {\n                    this._addError(element, \"<\" + _TRANSLATIONS_TAG + \"> elements can not be nested\");\n                }\n                var /** @type {?} */ langAttr = element.attrs.find(function (attr) { return attr.name === 'lang'; });\n                if (langAttr) {\n                    this._locale = langAttr.value;\n                }\n                visitAll(this, element.children, null);\n                this._bundleDepth--;\n                break;\n            case _TRANSLATION_TAG:\n                var /** @type {?} */ idAttr = element.attrs.find(function (attr) { return attr.name === 'id'; });\n                if (!idAttr) {\n                    this._addError(element, \"<\" + _TRANSLATION_TAG + \"> misses the \\\"id\\\" attribute\");\n                }\n                else {\n                    var /** @type {?} */ id = idAttr.value;\n                    if (this._msgIdToHtml.hasOwnProperty(id)) {\n                        this._addError(element, \"Duplicated translations for msg \" + id);\n                    }\n                    else {\n                        var /** @type {?} */ innerTextStart = /** @type {?} */ ((element.startSourceSpan)).end.offset;\n                        var /** @type {?} */ innerTextEnd = /** @type {?} */ ((element.endSourceSpan)).start.offset;\n                        var /** @type {?} */ content = /** @type {?} */ ((element.startSourceSpan)).start.file.content;\n                        var /** @type {?} */ innerText = content.slice(/** @type {?} */ ((innerTextStart)), /** @type {?} */ ((innerTextEnd)));\n                        this._msgIdToHtml[id] = innerText;\n                    }\n                }\n                break;\n            default:\n                this._addError(element, 'Unexpected tag');\n        }\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    XtbParser.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XtbParser.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XtbParser;\n}());\nvar XmlToI18n$2 = (function () {\n    function XmlToI18n() {\n    }\n    /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    XmlToI18n.prototype.convert = /**\n     * @param {?} message\n     * @param {?} url\n     * @return {?}\n     */\n    function (message, url) {\n        var /** @type {?} */ xmlIcu = new XmlParser().parse(message, url, true);\n        this._errors = xmlIcu.errors;\n        var /** @type {?} */ i18nNodes = this._errors.length > 0 || xmlIcu.rootNodes.length == 0 ?\n            [] :\n            visitAll(this, xmlIcu.rootNodes);\n        return {\n            i18nNodes: i18nNodes,\n            errors: this._errors,\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return new Text$1(text.value, /** @type {?} */ ((text.sourceSpan))); };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var /** @type {?} */ caseMap = {};\n        visitAll(this, icu.cases).forEach(function (c) {\n            caseMap[c.value] = new Container(c.nodes, icu.sourceSpan);\n        });\n        return new Icu(icu.switchValue, icu.type, caseMap, icu.sourceSpan);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        return {\n            value: icuCase.value,\n            nodes: visitAll(this, icuCase.expression),\n        };\n    };\n    /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitElement = /**\n     * @param {?} el\n     * @param {?} context\n     * @return {?}\n     */\n    function (el, context) {\n        if (el.name === _PLACEHOLDER_TAG$3) {\n            var /** @type {?} */ nameAttr = el.attrs.find(function (attr) { return attr.name === 'name'; });\n            if (nameAttr) {\n                return new Placeholder('', nameAttr.value, /** @type {?} */ ((el.sourceSpan)));\n            }\n            this._addError(el, \"<\" + _PLACEHOLDER_TAG$3 + \"> misses the \\\"name\\\" attribute\");\n        }\n        else {\n            this._addError(el, \"Unexpected tag\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    XmlToI18n.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { };\n    /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    XmlToI18n.prototype._addError = /**\n     * @param {?} node\n     * @param {?} message\n     * @return {?}\n     */\n    function (node, message) {\n        this._errors.push(new I18nError(/** @type {?} */ ((node.sourceSpan)), message));\n    };\n    return XmlToI18n;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar HtmlParser = (function (_super) {\n    __extends(HtmlParser, _super);\n    function HtmlParser() {\n        return _super.call(this, getHtmlTagDefinition) || this;\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    HtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return _super.prototype.parse.call(this, source, url, parseExpansionForms, interpolationConfig);\n    };\n    return HtmlParser;\n}(Parser$1));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A container for translated messages\n */\nvar TranslationBundle = (function () {\n    function TranslationBundle(_i18nNodesByMsgId, locale, digest, mapperFactory, missingTranslationStrategy, console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        if (missingTranslationStrategy === void 0) { missingTranslationStrategy = MissingTranslationStrategy.Warning; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this.digest = digest;\n        this.mapperFactory = mapperFactory;\n        this._i18nToHtml = new I18nToHtmlVisitor(_i18nNodesByMsgId, locale, digest, /** @type {?} */ ((mapperFactory)), missingTranslationStrategy, console);\n    }\n    // Creates a `TranslationBundle` by parsing the given `content` with the `serializer`.\n    /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    TranslationBundle.load = /**\n     * @param {?} content\n     * @param {?} url\n     * @param {?} serializer\n     * @param {?} missingTranslationStrategy\n     * @param {?=} console\n     * @return {?}\n     */\n    function (content, url, serializer, missingTranslationStrategy, console) {\n        var _a = serializer.load(content, url), locale = _a.locale, i18nNodesByMsgId = _a.i18nNodesByMsgId;\n        var /** @type {?} */ digestFn = function (m) { return serializer.digest(m); };\n        var /** @type {?} */ mapperFactory = function (m) { return /** @type {?} */ ((serializer.createNameMapper(m))); };\n        return new TranslationBundle(i18nNodesByMsgId, locale, digestFn, mapperFactory, missingTranslationStrategy, console);\n    };\n    // Returns the translation as HTML nodes from the given source message.\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.get = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var /** @type {?} */ html = this._i18nToHtml.convert(srcMsg);\n        if (html.errors.length) {\n            throw new Error(html.errors.join('\\n'));\n        }\n        return html.nodes;\n    };\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    TranslationBundle.prototype.has = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) { return this.digest(srcMsg) in this._i18nNodesByMsgId; };\n    return TranslationBundle;\n}());\nvar I18nToHtmlVisitor = (function () {\n    function I18nToHtmlVisitor(_i18nNodesByMsgId, _locale, _digest, _mapperFactory, _missingTranslationStrategy, _console) {\n        if (_i18nNodesByMsgId === void 0) { _i18nNodesByMsgId = {}; }\n        this._i18nNodesByMsgId = _i18nNodesByMsgId;\n        this._locale = _locale;\n        this._digest = _digest;\n        this._mapperFactory = _mapperFactory;\n        this._missingTranslationStrategy = _missingTranslationStrategy;\n        this._console = _console;\n        this._contextStack = [];\n        this._errors = [];\n    }\n    /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.convert = /**\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        this._contextStack.length = 0;\n        this._errors.length = 0;\n        // i18n to text\n        var /** @type {?} */ text = this._convertToText(srcMsg);\n        // text to html\n        var /** @type {?} */ url = srcMsg.nodes[0].sourceSpan.start.file.url;\n        var /** @type {?} */ html = new HtmlParser().parse(text, url, true);\n        return {\n            nodes: html.rootNodes,\n            errors: this._errors.concat(html.errors),\n        };\n    };\n    /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?=} context\n     * @return {?}\n     */\n    function (text, context) { return text.value; };\n    /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitContainer = /**\n     * @param {?} container\n     * @param {?=} context\n     * @return {?}\n     */\n    function (container, context) {\n        var _this = this;\n        return container.children.map(function (n) { return n.visit(_this); }).join('');\n    };\n    /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcu = /**\n     * @param {?} icu\n     * @param {?=} context\n     * @return {?}\n     */\n    function (icu, context) {\n        var _this = this;\n        var /** @type {?} */ cases = Object.keys(icu.cases).map(function (k) { return k + \" {\" + icu.cases[k].visit(_this) + \"}\"; });\n        // TODO(vicb): Once all format switch to using expression placeholders\n        // we should throw when the placeholder is not in the source message\n        var /** @type {?} */ exp = this._srcMsg.placeholders.hasOwnProperty(icu.expression) ?\n            this._srcMsg.placeholders[icu.expression] :\n            icu.expression;\n        return \"{\" + exp + \", \" + icu.type + \", \" + cases.join(' ') + \"}\";\n    };\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var /** @type {?} */ phName = this._mapper(ph.name);\n        if (this._srcMsg.placeholders.hasOwnProperty(phName)) {\n            return this._srcMsg.placeholders[phName];\n        }\n        if (this._srcMsg.placeholderToMessage.hasOwnProperty(phName)) {\n            return this._convertToText(this._srcMsg.placeholderToMessage[phName]);\n        }\n        this._addError(ph, \"Unknown placeholder \\\"\" + ph.name + \"\\\"\");\n        return '';\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        var _this = this;\n        var /** @type {?} */ tag = \"\" + ph.tag;\n        var /** @type {?} */ attrs = Object.keys(ph.attrs).map(function (name) { return name + \"=\\\"\" + ph.attrs[name] + \"\\\"\"; }).join(' ');\n        if (ph.isVoid) {\n            return \"<\" + tag + \" \" + attrs + \"/>\";\n        }\n        var /** @type {?} */ children = ph.children.map(function (c) { return c.visit(_this); }).join('');\n        return \"<\" + tag + \" \" + attrs + \">\" + children + \"</\" + tag + \">\";\n    };\n    // Loaded message contains only placeholders (vs tag and icu placeholders).\n    // However when a translation can not be found, we need to serialize the source message\n    // which can contain tag placeholders\n    /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?=} context\n     * @return {?}\n     */\n    function (ph, context) {\n        // An ICU placeholder references the source message to be serialized\n        return this._convertToText(this._srcMsg.placeholderToMessage[ph.name]);\n    };\n    /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._convertToText = /**\n     * Convert a source message to a translated text string:\n     * - text nodes are replaced with their translation,\n     * - placeholders are replaced with their content,\n     * - ICU nodes are converted to ICU expressions.\n     * @param {?} srcMsg\n     * @return {?}\n     */\n    function (srcMsg) {\n        var _this = this;\n        var /** @type {?} */ id = this._digest(srcMsg);\n        var /** @type {?} */ mapper = this._mapperFactory ? this._mapperFactory(srcMsg) : null;\n        var /** @type {?} */ nodes;\n        this._contextStack.push({ msg: this._srcMsg, mapper: this._mapper });\n        this._srcMsg = srcMsg;\n        if (this._i18nNodesByMsgId.hasOwnProperty(id)) {\n            // When there is a translation use its nodes as the source\n            // And create a mapper to convert serialized placeholder names to internal names\n            nodes = this._i18nNodesByMsgId[id];\n            this._mapper = function (name) { return mapper ? /** @type {?} */ ((mapper.toInternalName(name))) : name; };\n        }\n        else {\n            // When no translation has been found\n            // - report an error / a warning / nothing,\n            // - use the nodes from the original message\n            // - placeholders are already internal and need no mapper\n            if (this._missingTranslationStrategy === MissingTranslationStrategy.Error) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._addError(srcMsg.nodes[0], \"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            else if (this._console &&\n                this._missingTranslationStrategy === MissingTranslationStrategy.Warning) {\n                var /** @type {?} */ ctx = this._locale ? \" for locale \\\"\" + this._locale + \"\\\"\" : '';\n                this._console.warn(\"Missing translation for message \\\"\" + id + \"\\\"\" + ctx);\n            }\n            nodes = srcMsg.nodes;\n            this._mapper = function (name) { return name; };\n        }\n        var /** @type {?} */ text = nodes.map(function (node) { return node.visit(_this); }).join('');\n        var /** @type {?} */ context = /** @type {?} */ ((this._contextStack.pop()));\n        this._srcMsg = context.msg;\n        this._mapper = context.mapper;\n        return text;\n    };\n    /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    I18nToHtmlVisitor.prototype._addError = /**\n     * @param {?} el\n     * @param {?} msg\n     * @return {?}\n     */\n    function (el, msg) {\n        this._errors.push(new I18nError(el.sourceSpan, msg));\n    };\n    return I18nToHtmlVisitor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar I18NHtmlParser = (function () {\n    function I18NHtmlParser(_htmlParser, translations, translationsFormat, missingTranslation, console) {\n        if (missingTranslation === void 0) { missingTranslation = MissingTranslationStrategy.Warning; }\n        this._htmlParser = _htmlParser;\n        if (translations) {\n            var /** @type {?} */ serializer = createSerializer(translationsFormat);\n            this._translationBundle =\n                TranslationBundle.load(translations, 'i18n', serializer, missingTranslation, console);\n        }\n        else {\n            this._translationBundle =\n                new TranslationBundle({}, null, digest, undefined, missingTranslation, console);\n        }\n    }\n    /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    I18NHtmlParser.prototype.parse = /**\n     * @param {?} source\n     * @param {?} url\n     * @param {?=} parseExpansionForms\n     * @param {?=} interpolationConfig\n     * @return {?}\n     */\n    function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        var /** @type {?} */ parseResult = this._htmlParser.parse(source, url, parseExpansionForms, interpolationConfig);\n        if (parseResult.errors.length) {\n            return new ParseTreeResult(parseResult.rootNodes, parseResult.errors);\n        }\n        return mergeTranslations(parseResult.rootNodes, this._translationBundle, interpolationConfig, [], {});\n    };\n    return I18NHtmlParser;\n}());\n/**\n * @param {?=} format\n * @return {?}\n */\nfunction createSerializer(format) {\n    format = (format || 'xlf').toLowerCase();\n    switch (format) {\n        case 'xmb':\n            return new Xmb();\n        case 'xtb':\n            return new Xtb();\n        case 'xliff2':\n        case 'xlf2':\n            return new Xliff2();\n        case 'xliff':\n        case 'xlf':\n        default:\n            return new Xliff();\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar STRIP_SRC_FILE_SUFFIXES = /(\\.ts|\\.d\\.ts|\\.js|\\.jsx|\\.tsx)$/;\nvar GENERATED_FILE = /\\.ngfactory\\.|\\.ngsummary\\./;\nvar JIT_SUMMARY_FILE = /\\.ngsummary\\./;\nvar JIT_SUMMARY_NAME = /NgSummary$/;\n/**\n * @param {?} filePath\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction ngfactoryFilePath(filePath, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(filePath, forceSourceFile);\n    return urlWithSuffix[0] + \".ngfactory\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripGeneratedFileSuffix(filePath) {\n    return filePath.replace(GENERATED_FILE, '.');\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction isGeneratedFile(filePath) {\n    return GENERATED_FILE.test(filePath);\n}\n/**\n * @param {?} path\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction splitTypescriptSuffix(path$$1, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    if (path$$1.endsWith('.d.ts')) {\n        return [path$$1.slice(0, -5), forceSourceFile ? '.ts' : '.d.ts'];\n    }\n    var /** @type {?} */ lastDot = path$$1.lastIndexOf('.');\n    if (lastDot !== -1) {\n        return [path$$1.substring(0, lastDot), path$$1.substring(lastDot)];\n    }\n    return [path$$1, ''];\n}\n/**\n * @param {?} fileName\n * @return {?}\n */\nfunction summaryFileName(fileName) {\n    var /** @type {?} */ fileNameWithoutSuffix = fileName.replace(STRIP_SRC_FILE_SUFFIXES, '');\n    return fileNameWithoutSuffix + \".ngsummary.json\";\n}\n/**\n * @param {?} fileName\n * @param {?=} forceSourceFile\n * @return {?}\n */\nfunction summaryForJitFileName(fileName, forceSourceFile) {\n    if (forceSourceFile === void 0) { forceSourceFile = false; }\n    var /** @type {?} */ urlWithSuffix = splitTypescriptSuffix(stripGeneratedFileSuffix(fileName), forceSourceFile);\n    return urlWithSuffix[0] + \".ngsummary\" + urlWithSuffix[1];\n}\n/**\n * @param {?} filePath\n * @return {?}\n */\nfunction stripSummaryForJitFileSuffix(filePath) {\n    return filePath.replace(JIT_SUMMARY_FILE, '.');\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction summaryForJitName(symbolName) {\n    return symbolName + \"NgSummary\";\n}\n/**\n * @param {?} symbolName\n * @return {?}\n */\nfunction stripSummaryForJitNameSuffix(symbolName) {\n    return symbolName.replace(JIT_SUMMARY_NAME, '');\n}\nvar LOWERED_SYMBOL = /\\u0275\\d+/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction isLoweredSymbol(name) {\n    return LOWERED_SYMBOL.test(name);\n}\n/**\n * @param {?} id\n * @return {?}\n */\nfunction createLoweredSymbol(id) {\n    return \"\\u0275\" + id;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar CORE = '@angular/core';\nvar Identifiers = (function () {\n    function Identifiers() {\n    }\n    Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS = {\n        name: 'ANALYZE_FOR_ENTRY_COMPONENTS',\n        moduleName: CORE,\n    };\n    Identifiers.ElementRef = { name: 'ElementRef', moduleName: CORE };\n    Identifiers.NgModuleRef = { name: 'NgModuleRef', moduleName: CORE };\n    Identifiers.ViewContainerRef = { name: 'ViewContainerRef', moduleName: CORE };\n    Identifiers.ChangeDetectorRef = {\n        name: 'ChangeDetectorRef',\n        moduleName: CORE,\n    };\n    Identifiers.QueryList = { name: 'QueryList', moduleName: CORE };\n    Identifiers.TemplateRef = { name: 'TemplateRef', moduleName: CORE };\n    Identifiers.CodegenComponentFactoryResolver = {\n        name: 'ɵCodegenComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactoryResolver = {\n        name: 'ComponentFactoryResolver',\n        moduleName: CORE,\n    };\n    Identifiers.ComponentFactory = { name: 'ComponentFactory', moduleName: CORE };\n    Identifiers.ComponentRef = { name: 'ComponentRef', moduleName: CORE };\n    Identifiers.NgModuleFactory = { name: 'NgModuleFactory', moduleName: CORE };\n    Identifiers.createModuleFactory = {\n        name: 'ɵcmf',\n        moduleName: CORE,\n    };\n    Identifiers.moduleDef = {\n        name: 'ɵmod',\n        moduleName: CORE,\n    };\n    Identifiers.moduleProviderDef = {\n        name: 'ɵmpd',\n        moduleName: CORE,\n    };\n    Identifiers.RegisterModuleFactoryFn = {\n        name: 'ɵregisterModuleFactory',\n        moduleName: CORE,\n    };\n    Identifiers.Injector = { name: 'Injector', moduleName: CORE };\n    Identifiers.ViewEncapsulation = {\n        name: 'ViewEncapsulation',\n        moduleName: CORE,\n    };\n    Identifiers.ChangeDetectionStrategy = {\n        name: 'ChangeDetectionStrategy',\n        moduleName: CORE,\n    };\n    Identifiers.SecurityContext = {\n        name: 'SecurityContext',\n        moduleName: CORE,\n    };\n    Identifiers.LOCALE_ID = { name: 'LOCALE_ID', moduleName: CORE };\n    Identifiers.TRANSLATIONS_FORMAT = {\n        name: 'TRANSLATIONS_FORMAT',\n        moduleName: CORE,\n    };\n    Identifiers.inlineInterpolate = {\n        name: 'ɵinlineInterpolate',\n        moduleName: CORE,\n    };\n    Identifiers.interpolate = { name: 'ɵinterpolate', moduleName: CORE };\n    Identifiers.EMPTY_ARRAY = { name: 'ɵEMPTY_ARRAY', moduleName: CORE };\n    Identifiers.EMPTY_MAP = { name: 'ɵEMPTY_MAP', moduleName: CORE };\n    Identifiers.Renderer = { name: 'Renderer', moduleName: CORE };\n    Identifiers.viewDef = { name: 'ɵvid', moduleName: CORE };\n    Identifiers.elementDef = { name: 'ɵeld', moduleName: CORE };\n    Identifiers.anchorDef = { name: 'ɵand', moduleName: CORE };\n    Identifiers.textDef = { name: 'ɵted', moduleName: CORE };\n    Identifiers.directiveDef = { name: 'ɵdid', moduleName: CORE };\n    Identifiers.providerDef = { name: 'ɵprd', moduleName: CORE };\n    Identifiers.queryDef = { name: 'ɵqud', moduleName: CORE };\n    Identifiers.pureArrayDef = { name: 'ɵpad', moduleName: CORE };\n    Identifiers.pureObjectDef = { name: 'ɵpod', moduleName: CORE };\n    Identifiers.purePipeDef = { name: 'ɵppd', moduleName: CORE };\n    Identifiers.pipeDef = { name: 'ɵpid', moduleName: CORE };\n    Identifiers.nodeValue = { name: 'ɵnov', moduleName: CORE };\n    Identifiers.ngContentDef = { name: 'ɵncd', moduleName: CORE };\n    Identifiers.unwrapValue = { name: 'ɵunv', moduleName: CORE };\n    Identifiers.createRendererType2 = { name: 'ɵcrt', moduleName: CORE };\n    // type only\n    Identifiers.RendererType2 = {\n        name: 'RendererType2',\n        moduleName: CORE,\n    };\n    // type only\n    Identifiers.ViewDefinition = {\n        name: 'ɵViewDefinition',\n        moduleName: CORE,\n    };\n    Identifiers.createComponentFactory = { name: 'ɵccf', moduleName: CORE };\n    return Identifiers;\n}());\n/**\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForReference(reference) {\n    return { identifier: { reference: reference } };\n}\n/**\n * @param {?} reflector\n * @param {?} reference\n * @return {?}\n */\nfunction createTokenForExternalReference(reflector, reference) {\n    return createTokenForReference(reflector.resolveExternalReference(reference));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar LifecycleHooks = {\n    OnInit: 0,\n    OnDestroy: 1,\n    DoCheck: 2,\n    OnChanges: 3,\n    AfterContentInit: 4,\n    AfterContentChecked: 5,\n    AfterViewInit: 6,\n    AfterViewChecked: 7,\n};\nLifecycleHooks[LifecycleHooks.OnInit] = \"OnInit\";\nLifecycleHooks[LifecycleHooks.OnDestroy] = \"OnDestroy\";\nLifecycleHooks[LifecycleHooks.DoCheck] = \"DoCheck\";\nLifecycleHooks[LifecycleHooks.OnChanges] = \"OnChanges\";\nLifecycleHooks[LifecycleHooks.AfterContentInit] = \"AfterContentInit\";\nLifecycleHooks[LifecycleHooks.AfterContentChecked] = \"AfterContentChecked\";\nLifecycleHooks[LifecycleHooks.AfterViewInit] = \"AfterViewInit\";\nLifecycleHooks[LifecycleHooks.AfterViewChecked] = \"AfterViewChecked\";\nvar LIFECYCLE_HOOKS_VALUES = [\n    LifecycleHooks.OnInit, LifecycleHooks.OnDestroy, LifecycleHooks.DoCheck, LifecycleHooks.OnChanges,\n    LifecycleHooks.AfterContentInit, LifecycleHooks.AfterContentChecked, LifecycleHooks.AfterViewInit,\n    LifecycleHooks.AfterViewChecked\n];\n/**\n * @param {?} reflector\n * @param {?} hook\n * @param {?} token\n * @return {?}\n */\nfunction hasLifecycleHook(reflector, hook, token) {\n    return reflector.hasLifecycleHook(token, getHookName(hook));\n}\n/**\n * @param {?} reflector\n * @param {?} token\n * @return {?}\n */\nfunction getAllLifecycleHooks(reflector, token) {\n    return LIFECYCLE_HOOKS_VALUES.filter(function (hook) { return hasLifecycleHook(reflector, hook, token); });\n}\n/**\n * @param {?} hook\n * @return {?}\n */\nfunction getHookName(hook) {\n    switch (hook) {\n        case LifecycleHooks.OnInit:\n            return 'ngOnInit';\n        case LifecycleHooks.OnDestroy:\n            return 'ngOnDestroy';\n        case LifecycleHooks.DoCheck:\n            return 'ngDoCheck';\n        case LifecycleHooks.OnChanges:\n            return 'ngOnChanges';\n        case LifecycleHooks.AfterContentInit:\n            return 'ngAfterContentInit';\n        case LifecycleHooks.AfterContentChecked:\n            return 'ngAfterContentChecked';\n        case LifecycleHooks.AfterViewInit:\n            return 'ngAfterViewInit';\n        case LifecycleHooks.AfterViewChecked:\n            return 'ngAfterViewChecked';\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SELECTOR_REGEXP = new RegExp('(\\\\:not\\\\()|' +\n    '([-\\\\w]+)|' +\n    '(?:\\\\.([-\\\\w]+))|' +\n    '(?:\\\\[([-.\\\\w*]+)(?:=([\\\"\\']?)([^\\\\]\\\"\\']*)\\\\5)?\\\\])|' +\n    '(\\\\))|' +\n    '(\\\\s*,\\\\s*)', // \",\"\n'g');\n/**\n * A css selector contains an element name,\n * css classes and attribute/value pairs with the purpose\n * of selecting subsets out of them.\n */\nvar CssSelector = (function () {\n    function CssSelector() {\n        this.element = null;\n        this.classNames = [];\n        this.attrs = [];\n        this.notSelectors = [];\n    }\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CssSelector.parse = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ results = [];\n        var /** @type {?} */ _addResult = function (res, cssSel) {\n            if (cssSel.notSelectors.length > 0 && !cssSel.element && cssSel.classNames.length == 0 &&\n                cssSel.attrs.length == 0) {\n                cssSel.element = '*';\n            }\n            res.push(cssSel);\n        };\n        var /** @type {?} */ cssSelector = new CssSelector();\n        var /** @type {?} */ match;\n        var /** @type {?} */ current = cssSelector;\n        var /** @type {?} */ inNot = false;\n        _SELECTOR_REGEXP.lastIndex = 0;\n        while (match = _SELECTOR_REGEXP.exec(selector)) {\n            if (match[1]) {\n                if (inNot) {\n                    throw new Error('Nesting :not is not allowed in a selector');\n                }\n                inNot = true;\n                current = new CssSelector();\n                cssSelector.notSelectors.push(current);\n            }\n            if (match[2]) {\n                current.setElement(match[2]);\n            }\n            if (match[3]) {\n                current.addClassName(match[3]);\n            }\n            if (match[4]) {\n                current.addAttribute(match[4], match[6]);\n            }\n            if (match[7]) {\n                inNot = false;\n                current = cssSelector;\n            }\n            if (match[8]) {\n                if (inNot) {\n                    throw new Error('Multiple selectors in :not are not supported');\n                }\n                _addResult(results, cssSelector);\n                cssSelector = current = new CssSelector();\n            }\n        }\n        _addResult(results, cssSelector);\n        return results;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.isElementSelector = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasElementSelector() && this.classNames.length == 0 && this.attrs.length == 0 &&\n            this.notSelectors.length === 0;\n    };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.hasElementSelector = /**\n     * @return {?}\n     */\n    function () { return !!this.element; };\n    /**\n     * @param {?=} element\n     * @return {?}\n     */\n    CssSelector.prototype.setElement = /**\n     * @param {?=} element\n     * @return {?}\n     */\n    function (element) {\n        if (element === void 0) { element = null; }\n        this.element = element;\n    };\n    /** Gets a template string for an element that matches the selector. */\n    /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    CssSelector.prototype.getMatchingElementTemplate = /**\n     * Gets a template string for an element that matches the selector.\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tagName = this.element || 'div';\n        var /** @type {?} */ classAttr = this.classNames.length > 0 ? \" class=\\\"\" + this.classNames.join(' ') + \"\\\"\" : '';\n        var /** @type {?} */ attrs = '';\n        for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n            var /** @type {?} */ attrName = this.attrs[i];\n            var /** @type {?} */ attrValue = this.attrs[i + 1] !== '' ? \"=\\\"\" + this.attrs[i + 1] + \"\\\"\" : '';\n            attrs += \" \" + attrName + attrValue;\n        }\n        return getHtmlTagDefinition(tagName).isVoid ? \"<\" + tagName + classAttr + attrs + \"/>\" :\n            \"<\" + tagName + classAttr + attrs + \"></\" + tagName + \">\";\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    CssSelector.prototype.addAttribute = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        if (value === void 0) { value = ''; }\n        this.attrs.push(name, value && value.toLowerCase() || '');\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    CssSelector.prototype.addClassName = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { this.classNames.push(name.toLowerCase()); };\n    /**\n     * @return {?}\n     */\n    CssSelector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ res = this.element || '';\n        if (this.classNames) {\n            this.classNames.forEach(function (klass) { return res += \".\" + klass; });\n        }\n        if (this.attrs) {\n            for (var /** @type {?} */ i = 0; i < this.attrs.length; i += 2) {\n                var /** @type {?} */ name_1 = this.attrs[i];\n                var /** @type {?} */ value = this.attrs[i + 1];\n                res += \"[\" + name_1 + (value ? '=' + value : '') + \"]\";\n            }\n        }\n        this.notSelectors.forEach(function (notSelector) { return res += \":not(\" + notSelector + \")\"; });\n        return res;\n    };\n    return CssSelector;\n}());\n/**\n * Reads a list of CssSelectors and allows to calculate which ones\n * are contained in a given CssSelector.\n */\nvar SelectorMatcher = (function () {\n    function SelectorMatcher() {\n        this._elementMap = new Map();\n        this._elementPartialMap = new Map();\n        this._classMap = new Map();\n        this._classPartialMap = new Map();\n        this._attrValueMap = new Map();\n        this._attrValuePartialMap = new Map();\n        this._listContexts = [];\n    }\n    /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    SelectorMatcher.createNotMatcher = /**\n     * @param {?} notSelectors\n     * @return {?}\n     */\n    function (notSelectors) {\n        var /** @type {?} */ notMatcher = new SelectorMatcher();\n        notMatcher.addSelectables(notSelectors, null);\n        return notMatcher;\n    };\n    /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    SelectorMatcher.prototype.addSelectables = /**\n     * @param {?} cssSelectors\n     * @param {?=} callbackCtxt\n     * @return {?}\n     */\n    function (cssSelectors, callbackCtxt) {\n        var /** @type {?} */ listContext = /** @type {?} */ ((null));\n        if (cssSelectors.length > 1) {\n            listContext = new SelectorListContext(cssSelectors);\n            this._listContexts.push(listContext);\n        }\n        for (var /** @type {?} */ i = 0; i < cssSelectors.length; i++) {\n            this._addSelectable(cssSelectors[i], callbackCtxt, listContext);\n        }\n    };\n    /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addSelectable = /**\n     * Add an object that can be found later on by calling `match`.\n     * @param {?} cssSelector A css selector\n     * @param {?} callbackCtxt An opaque object that will be given to the callback of the `match` function\n     * @param {?} listContext\n     * @return {?}\n     */\n    function (cssSelector, callbackCtxt, listContext) {\n        var /** @type {?} */ matcher = this;\n        var /** @type {?} */ element = cssSelector.element;\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        var /** @type {?} */ selectable = new SelectorContext(cssSelector, callbackCtxt, listContext);\n        if (element) {\n            var /** @type {?} */ isTerminal = attrs.length === 0 && classNames.length === 0;\n            if (isTerminal) {\n                this._addTerminal(matcher._elementMap, element, selectable);\n            }\n            else {\n                matcher = this._addPartial(matcher._elementPartialMap, element);\n            }\n        }\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ isTerminal = attrs.length === 0 && i === classNames.length - 1;\n                var /** @type {?} */ className = classNames[i];\n                if (isTerminal) {\n                    this._addTerminal(matcher._classMap, className, selectable);\n                }\n                else {\n                    matcher = this._addPartial(matcher._classPartialMap, className);\n                }\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ isTerminal = i === attrs.length - 2;\n                var /** @type {?} */ name_2 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                if (isTerminal) {\n                    var /** @type {?} */ terminalMap = matcher._attrValueMap;\n                    var /** @type {?} */ terminalValuesMap = terminalMap.get(name_2);\n                    if (!terminalValuesMap) {\n                        terminalValuesMap = new Map();\n                        terminalMap.set(name_2, terminalValuesMap);\n                    }\n                    this._addTerminal(terminalValuesMap, value, selectable);\n                }\n                else {\n                    var /** @type {?} */ partialMap = matcher._attrValuePartialMap;\n                    var /** @type {?} */ partialValuesMap = partialMap.get(name_2);\n                    if (!partialValuesMap) {\n                        partialValuesMap = new Map();\n                        partialMap.set(name_2, partialValuesMap);\n                    }\n                    matcher = this._addPartial(partialValuesMap, value);\n                }\n            }\n        }\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addTerminal = /**\n     * @param {?} map\n     * @param {?} name\n     * @param {?} selectable\n     * @return {?}\n     */\n    function (map, name, selectable) {\n        var /** @type {?} */ terminalList = map.get(name);\n        if (!terminalList) {\n            terminalList = [];\n            map.set(name, terminalList);\n        }\n        terminalList.push(selectable);\n    };\n    /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    SelectorMatcher.prototype._addPartial = /**\n     * @param {?} map\n     * @param {?} name\n     * @return {?}\n     */\n    function (map, name) {\n        var /** @type {?} */ matcher = map.get(name);\n        if (!matcher) {\n            matcher = new SelectorMatcher();\n            map.set(name, matcher);\n        }\n        return matcher;\n    };\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param cssSelector A css selector\n     * @param matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return boolean true if a match was found\n    */\n    /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    SelectorMatcher.prototype.match = /**\n     * Find the objects that have been added via `addSelectable`\n     * whose css selector is contained in the given css selector.\n     * @param {?} cssSelector A css selector\n     * @param {?} matchedCallback This callback will be called with the object handed into `addSelectable`\n     * @return {?} boolean true if a match was found\n     */\n    function (cssSelector, matchedCallback) {\n        var /** @type {?} */ result = false;\n        var /** @type {?} */ element = /** @type {?} */ ((cssSelector.element));\n        var /** @type {?} */ classNames = cssSelector.classNames;\n        var /** @type {?} */ attrs = cssSelector.attrs;\n        for (var /** @type {?} */ i = 0; i < this._listContexts.length; i++) {\n            this._listContexts[i].alreadyMatched = false;\n        }\n        result = this._matchTerminal(this._elementMap, element, cssSelector, matchedCallback) || result;\n        result = this._matchPartial(this._elementPartialMap, element, cssSelector, matchedCallback) ||\n            result;\n        if (classNames) {\n            for (var /** @type {?} */ i = 0; i < classNames.length; i++) {\n                var /** @type {?} */ className = classNames[i];\n                result =\n                    this._matchTerminal(this._classMap, className, cssSelector, matchedCallback) || result;\n                result =\n                    this._matchPartial(this._classPartialMap, className, cssSelector, matchedCallback) ||\n                        result;\n            }\n        }\n        if (attrs) {\n            for (var /** @type {?} */ i = 0; i < attrs.length; i += 2) {\n                var /** @type {?} */ name_3 = attrs[i];\n                var /** @type {?} */ value = attrs[i + 1];\n                var /** @type {?} */ terminalValuesMap = /** @type {?} */ ((this._attrValueMap.get(name_3)));\n                if (value) {\n                    result =\n                        this._matchTerminal(terminalValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchTerminal(terminalValuesMap, value, cssSelector, matchedCallback) || result;\n                var /** @type {?} */ partialValuesMap = /** @type {?} */ ((this._attrValuePartialMap.get(name_3)));\n                if (value) {\n                    result = this._matchPartial(partialValuesMap, '', cssSelector, matchedCallback) || result;\n                }\n                result =\n                    this._matchPartial(partialValuesMap, value, cssSelector, matchedCallback) || result;\n            }\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchTerminal = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ selectables = map.get(name) || [];\n        var /** @type {?} */ starSelectables = /** @type {?} */ ((map.get('*')));\n        if (starSelectables) {\n            selectables = selectables.concat(starSelectables);\n        }\n        if (selectables.length === 0) {\n            return false;\n        }\n        var /** @type {?} */ selectable;\n        var /** @type {?} */ result = false;\n        for (var /** @type {?} */ i = 0; i < selectables.length; i++) {\n            selectable = selectables[i];\n            result = selectable.finalize(cssSelector, matchedCallback) || result;\n        }\n        return result;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    SelectorMatcher.prototype._matchPartial = /**\n     * \\@internal\n     * @param {?} map\n     * @param {?} name\n     * @param {?} cssSelector\n     * @param {?} matchedCallback\n     * @return {?}\n     */\n    function (map, name, cssSelector, matchedCallback) {\n        if (!map || typeof name !== 'string') {\n            return false;\n        }\n        var /** @type {?} */ nestedSelector = map.get(name);\n        if (!nestedSelector) {\n            return false;\n        }\n        // TODO(perf): get rid of recursion and measure again\n        // TODO(perf): don't pass the whole selector into the recursion,\n        // but only the not processed parts\n        return nestedSelector.match(cssSelector, matchedCallback);\n    };\n    return SelectorMatcher;\n}());\nvar SelectorListContext = (function () {\n    function SelectorListContext(selectors) {\n        this.selectors = selectors;\n        this.alreadyMatched = false;\n    }\n    return SelectorListContext;\n}());\nvar SelectorContext = (function () {\n    function SelectorContext(selector, cbContext, listContext) {\n        this.selector = selector;\n        this.cbContext = cbContext;\n        this.listContext = listContext;\n        this.notSelectors = selector.notSelectors;\n    }\n    /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    SelectorContext.prototype.finalize = /**\n     * @param {?} cssSelector\n     * @param {?} callback\n     * @return {?}\n     */\n    function (cssSelector, callback) {\n        var /** @type {?} */ result = true;\n        if (this.notSelectors.length > 0 && (!this.listContext || !this.listContext.alreadyMatched)) {\n            var /** @type {?} */ notMatcher = SelectorMatcher.createNotMatcher(this.notSelectors);\n            result = !notMatcher.match(cssSelector, null);\n        }\n        if (result && callback && (!this.listContext || !this.listContext.alreadyMatched)) {\n            if (this.listContext) {\n                this.listContext.alreadyMatched = true;\n            }\n            callback(this.selector, this.cbContext);\n        }\n        return result;\n    };\n    return SelectorContext;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ERROR_COMPONENT_TYPE = 'ngComponentType';\nvar CompileMetadataResolver = (function () {\n    function CompileMetadataResolver(_config, _htmlParser, _ngModuleResolver, _directiveResolver, _pipeResolver, _summaryResolver, _schemaRegistry, _directiveNormalizer, _console, _staticSymbolCache, _reflector, _errorCollector) {\n        this._config = _config;\n        this._htmlParser = _htmlParser;\n        this._ngModuleResolver = _ngModuleResolver;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._summaryResolver = _summaryResolver;\n        this._schemaRegistry = _schemaRegistry;\n        this._directiveNormalizer = _directiveNormalizer;\n        this._console = _console;\n        this._staticSymbolCache = _staticSymbolCache;\n        this._reflector = _reflector;\n        this._errorCollector = _errorCollector;\n        this._nonNormalizedDirectiveCache = new Map();\n        this._directiveCache = new Map();\n        this._summaryCache = new Map();\n        this._pipeCache = new Map();\n        this._ngModuleCache = new Map();\n        this._ngModuleOfTypes = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getReflector = /**\n     * @return {?}\n     */\n    function () { return this._reflector; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ dirMeta = this._directiveCache.get(type);\n        this._directiveCache.delete(type);\n        this._nonNormalizedDirectiveCache.delete(type);\n        this._summaryCache.delete(type);\n        this._pipeCache.delete(type);\n        this._ngModuleOfTypes.delete(type);\n        // Clear all of the NgModule as they contain transitive information!\n        this._ngModuleCache.clear();\n        if (dirMeta) {\n            this._directiveNormalizer.clearCacheFor(dirMeta);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._directiveCache.clear();\n        this._nonNormalizedDirectiveCache.clear();\n        this._summaryCache.clear();\n        this._pipeCache.clear();\n        this._ngModuleCache.clear();\n        this._ngModuleOfTypes.clear();\n        this._directiveNormalizer.clearCache();\n    };\n    /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._createProxyClass = /**\n     * @param {?} baseType\n     * @param {?} name\n     * @return {?}\n     */\n    function (baseType, name) {\n        var /** @type {?} */ delegate = null;\n        var /** @type {?} */ proxyClass = /** @type {?} */ (function () {\n            if (!delegate) {\n                throw new Error(\"Illegal state: Class \" + name + \" for type \" + stringify(baseType) + \" is not compiled yet!\");\n            }\n            return delegate.apply(this, arguments);\n        });\n        proxyClass.setDelegate = function (d) {\n            delegate = d;\n            (/** @type {?} */ (proxyClass)).prototype = d.prototype;\n        };\n        // Make stringify work correctly\n        (/** @type {?} */ (proxyClass)).overriddenName = name;\n        return proxyClass;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getGeneratedClass = /**\n     * @param {?} dirType\n     * @param {?} name\n     * @return {?}\n     */\n    function (dirType, name) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), name);\n        }\n        else {\n            return this._createProxyClass(dirType, name);\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, viewClassName(dirType, 0));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentViewClass = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        return this.getGeneratedClass(dirType, hostViewClassName(dirType));\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ name = identifierName({ reference: dirType }) + \"_Host\";\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(dirType.filePath, name);\n        }\n        else {\n            var /** @type {?} */ HostClass = /** @type {?} */ (function HostClass() { });\n            HostClass.overriddenName = name;\n            return HostClass;\n        }\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getRendererType = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), rendererTypeName(dirType));\n        }\n        else {\n            // returning an object as proxy,\n            // that we fill later during runtime compilation.\n            return /** @type {?} */ ({});\n        }\n    };\n    /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getComponentFactory = /**\n     * @param {?} selector\n     * @param {?} dirType\n     * @param {?} inputs\n     * @param {?} outputs\n     * @return {?}\n     */\n    function (selector, dirType, inputs, outputs) {\n        if (dirType instanceof StaticSymbol) {\n            return this._staticSymbolCache.get(ngfactoryFilePath(dirType.filePath), componentFactoryName(dirType));\n        }\n        else {\n            var /** @type {?} */ hostView = this.getHostComponentViewClass(dirType);\n            // Note: ngContentSelectors will be filled later once the template is\n            // loaded.\n            var /** @type {?} */ createComponentFactory = this._reflector.resolveExternalReference(Identifiers.createComponentFactory);\n            return createComponentFactory(selector, dirType, /** @type {?} */ (hostView), inputs, outputs, []);\n        }\n    };\n    /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.initComponentFactory = /**\n     * @param {?} factory\n     * @param {?} ngContentSelectors\n     * @return {?}\n     */\n    function (factory, ngContentSelectors) {\n        if (!(factory instanceof StaticSymbol)) {\n            (_a = (/** @type {?} */ (factory)).ngContentSelectors).push.apply(_a, ngContentSelectors);\n        }\n        var _a;\n    };\n    /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadSummary = /**\n     * @param {?} type\n     * @param {?} kind\n     * @return {?}\n     */\n    function (type, kind) {\n        var /** @type {?} */ typeSummary = this._summaryCache.get(type);\n        if (!typeSummary) {\n            var /** @type {?} */ summary = this._summaryResolver.resolveSummary(type);\n            typeSummary = summary ? summary.type : null;\n            this._summaryCache.set(type, typeSummary || null);\n        }\n        return typeSummary && typeSummary.summaryKind === kind ? typeSummary : null;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getHostComponentMetadata = /**\n     * @param {?} compMeta\n     * @param {?=} hostViewType\n     * @return {?}\n     */\n    function (compMeta, hostViewType) {\n        var /** @type {?} */ hostType = this.getHostComponentType(compMeta.type.reference);\n        if (!hostViewType) {\n            hostViewType = this.getHostComponentViewClass(hostType);\n        }\n        // Note: ! is ok here as this method should only be called with normalized directive\n        // metadata, which always fills in the selector.\n        var /** @type {?} */ template = CssSelector.parse(/** @type {?} */ ((compMeta.selector)))[0].getMatchingElementTemplate();\n        var /** @type {?} */ templateUrl = '';\n        var /** @type {?} */ htmlAst = this._htmlParser.parse(template, templateUrl);\n        return CompileDirectiveMetadata.create({\n            isHost: true,\n            type: { reference: hostType, diDeps: [], lifecycleHooks: [] },\n            template: new CompileTemplateMetadata({\n                encapsulation: ViewEncapsulation.None,\n                template: template,\n                templateUrl: templateUrl,\n                htmlAst: htmlAst,\n                styles: [],\n                styleUrls: [],\n                ngContentSelectors: [],\n                animations: [],\n                isInline: true,\n                externalStylesheets: [],\n                interpolation: null,\n                preserveWhitespaces: false,\n            }),\n            exportAs: null,\n            changeDetection: ChangeDetectionStrategy.Default,\n            inputs: [],\n            outputs: [],\n            host: {},\n            isComponent: true,\n            selector: '*',\n            providers: [],\n            viewProviders: [],\n            queries: [],\n            viewQueries: [],\n            componentViewType: hostViewType,\n            rendererType: /** @type {?} */ ({ id: '__Host__', encapsulation: ViewEncapsulation.None, styles: [], data: {} }),\n            entryComponents: [],\n            componentFactory: null\n        });\n    };\n    /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadDirectiveMetadata = /**\n     * @param {?} ngModuleType\n     * @param {?} directiveType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (ngModuleType, directiveType, isSync) {\n        var _this = this;\n        if (this._directiveCache.has(directiveType)) {\n            return null;\n        }\n        directiveType = resolveForwardRef(directiveType);\n        var _a = /** @type {?} */ ((this.getNonNormalizedDirectiveMetadata(directiveType))), annotation = _a.annotation, metadata = _a.metadata;\n        var /** @type {?} */ createDirectiveMetadata = function (templateMetadata) {\n            var /** @type {?} */ normalizedDirMeta = new CompileDirectiveMetadata({\n                isHost: false,\n                type: metadata.type,\n                isComponent: metadata.isComponent,\n                selector: metadata.selector,\n                exportAs: metadata.exportAs,\n                changeDetection: metadata.changeDetection,\n                inputs: metadata.inputs,\n                outputs: metadata.outputs,\n                hostListeners: metadata.hostListeners,\n                hostProperties: metadata.hostProperties,\n                hostAttributes: metadata.hostAttributes,\n                providers: metadata.providers,\n                viewProviders: metadata.viewProviders,\n                queries: metadata.queries,\n                viewQueries: metadata.viewQueries,\n                entryComponents: metadata.entryComponents,\n                componentViewType: metadata.componentViewType,\n                rendererType: metadata.rendererType,\n                componentFactory: metadata.componentFactory,\n                template: templateMetadata\n            });\n            if (templateMetadata) {\n                _this.initComponentFactory(/** @type {?} */ ((metadata.componentFactory)), templateMetadata.ngContentSelectors);\n            }\n            _this._directiveCache.set(directiveType, normalizedDirMeta);\n            _this._summaryCache.set(directiveType, normalizedDirMeta.toSummary());\n            return null;\n        };\n        if (metadata.isComponent) {\n            var /** @type {?} */ template = /** @type {?} */ ((metadata.template));\n            var /** @type {?} */ templateMeta = this._directiveNormalizer.normalizeTemplate({\n                ngModuleType: ngModuleType,\n                componentType: directiveType,\n                moduleUrl: this._reflector.componentModuleUrl(directiveType, annotation),\n                encapsulation: template.encapsulation,\n                template: template.template,\n                templateUrl: template.templateUrl,\n                styles: template.styles,\n                styleUrls: template.styleUrls,\n                animations: template.animations,\n                interpolation: template.interpolation,\n                preserveWhitespaces: template.preserveWhitespaces\n            });\n            if (isPromise(templateMeta) && isSync) {\n                this._reportError(componentStillLoadingError(directiveType), directiveType);\n                return null;\n            }\n            return SyncAsync.then(templateMeta, createDirectiveMetadata);\n        }\n        else {\n            // directive\n            createDirectiveMetadata(null);\n            return null;\n        }\n    };\n    /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNonNormalizedDirectiveMetadata = /**\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var _this = this;\n        directiveType = resolveForwardRef(directiveType);\n        if (!directiveType) {\n            return null;\n        }\n        var /** @type {?} */ cacheEntry = this._nonNormalizedDirectiveCache.get(directiveType);\n        if (cacheEntry) {\n            return cacheEntry;\n        }\n        var /** @type {?} */ dirMeta = this._directiveResolver.resolve(directiveType, false);\n        if (!dirMeta) {\n            return null;\n        }\n        var /** @type {?} */ nonNormalizedTemplateMetadata = /** @type {?} */ ((undefined));\n        if (createComponent.isTypeOf(dirMeta)) {\n            // component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            assertArrayOfStrings('styles', compMeta.styles);\n            assertArrayOfStrings('styleUrls', compMeta.styleUrls);\n            assertInterpolationSymbols('interpolation', compMeta.interpolation);\n            var /** @type {?} */ animations = compMeta.animations;\n            nonNormalizedTemplateMetadata = new CompileTemplateMetadata({\n                encapsulation: noUndefined(compMeta.encapsulation),\n                template: noUndefined(compMeta.template),\n                templateUrl: noUndefined(compMeta.templateUrl),\n                htmlAst: null,\n                styles: compMeta.styles || [],\n                styleUrls: compMeta.styleUrls || [],\n                animations: animations || [],\n                interpolation: noUndefined(compMeta.interpolation),\n                isInline: !!compMeta.template,\n                externalStylesheets: [],\n                ngContentSelectors: [],\n                preserveWhitespaces: noUndefined(dirMeta.preserveWhitespaces),\n            });\n        }\n        var /** @type {?} */ changeDetectionStrategy = /** @type {?} */ ((null));\n        var /** @type {?} */ viewProviders = [];\n        var /** @type {?} */ entryComponentMetadata = [];\n        var /** @type {?} */ selector = dirMeta.selector;\n        if (createComponent.isTypeOf(dirMeta)) {\n            // Component\n            var /** @type {?} */ compMeta = /** @type {?} */ (dirMeta);\n            changeDetectionStrategy = /** @type {?} */ ((compMeta.changeDetection));\n            if (compMeta.viewProviders) {\n                viewProviders = this._getProvidersMetadata(compMeta.viewProviders, entryComponentMetadata, \"viewProviders for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n            }\n            if (compMeta.entryComponents) {\n                entryComponentMetadata = flattenAndDedupeArray(compMeta.entryComponents)\n                    .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); })\n                    .concat(entryComponentMetadata);\n            }\n            if (!selector) {\n                selector = this._schemaRegistry.getDefaultComponentElementName();\n            }\n        }\n        else {\n            // Directive\n            if (!selector) {\n                this._reportError(syntaxError(\"Directive \" + stringifyType(directiveType) + \" has no selector, please add it!\"), directiveType);\n                selector = 'error';\n            }\n        }\n        var /** @type {?} */ providers = [];\n        if (dirMeta.providers != null) {\n            providers = this._getProvidersMetadata(dirMeta.providers, entryComponentMetadata, \"providers for \\\"\" + stringifyType(directiveType) + \"\\\"\", [], directiveType);\n        }\n        var /** @type {?} */ queries = [];\n        var /** @type {?} */ viewQueries = [];\n        if (dirMeta.queries != null) {\n            queries = this._getQueriesMetadata(dirMeta.queries, false, directiveType);\n            viewQueries = this._getQueriesMetadata(dirMeta.queries, true, directiveType);\n        }\n        var /** @type {?} */ metadata = CompileDirectiveMetadata.create({\n            isHost: false,\n            selector: selector,\n            exportAs: noUndefined(dirMeta.exportAs),\n            isComponent: !!nonNormalizedTemplateMetadata,\n            type: this._getTypeMetadata(directiveType),\n            template: nonNormalizedTemplateMetadata,\n            changeDetection: changeDetectionStrategy,\n            inputs: dirMeta.inputs || [],\n            outputs: dirMeta.outputs || [],\n            host: dirMeta.host || {},\n            providers: providers || [],\n            viewProviders: viewProviders || [],\n            queries: queries || [],\n            viewQueries: viewQueries || [],\n            entryComponents: entryComponentMetadata,\n            componentViewType: nonNormalizedTemplateMetadata ? this.getComponentViewClass(directiveType) :\n                null,\n            rendererType: nonNormalizedTemplateMetadata ? this.getRendererType(directiveType) : null,\n            componentFactory: null\n        });\n        if (nonNormalizedTemplateMetadata) {\n            metadata.componentFactory =\n                this.getComponentFactory(selector, directiveType, metadata.inputs, metadata.outputs);\n        }\n        cacheEntry = { metadata: metadata, annotation: dirMeta };\n        this._nonNormalizedDirectiveCache.set(directiveType, cacheEntry);\n        return cacheEntry;\n    };\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveMetadata = /**\n     * Gets the metadata for the given directive.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (directiveType) {\n        var /** @type {?} */ dirMeta = /** @type {?} */ ((this._directiveCache.get(directiveType)));\n        if (!dirMeta) {\n            this._reportError(syntaxError(\"Illegal state: getDirectiveMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Directive \" + stringifyType(directiveType) + \".\"), directiveType);\n        }\n        return dirMeta;\n    };\n    /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getDirectiveSummary = /**\n     * @param {?} dirType\n     * @return {?}\n     */\n    function (dirType) {\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (!dirSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for directive \" + stringifyType(dirType) + \".\"), dirType);\n        }\n        return dirSummary;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isDirective = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Directive) ||\n            this._directiveResolver.isDirective(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.Pipe) ||\n            this._pipeResolver.isPipe(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return !!this._loadSummary(type, CompileSummaryKind.NgModule) ||\n            this._ngModuleResolver.isNgModule(type);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleSummary = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ moduleSummary = /** @type {?} */ (this._loadSummary(moduleType, CompileSummaryKind.NgModule));\n        if (!moduleSummary) {\n            var /** @type {?} */ moduleMeta = this.getNgModuleMetadata(moduleType, false);\n            moduleSummary = moduleMeta ? moduleMeta.toSummary() : null;\n            if (moduleSummary) {\n                this._summaryCache.set(moduleType, moduleSummary);\n            }\n        }\n        return moduleSummary;\n    };\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     */\n    /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.loadNgModuleDirectiveAndPipeMetadata = /**\n     * Loads the declared directives and pipes of an NgModule.\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, isSync, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModule = this.getNgModuleMetadata(moduleType, throwIfNotFound);\n        var /** @type {?} */ loading = [];\n        if (ngModule) {\n            ngModule.declaredDirectives.forEach(function (id) {\n                var /** @type {?} */ promise = _this.loadDirectiveMetadata(moduleType, id.reference, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            ngModule.declaredPipes.forEach(function (id) { return _this._loadPipeMetadata(id.reference); });\n        }\n        return Promise.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getNgModuleMetadata = /**\n     * @param {?} moduleType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (moduleType, throwIfNotFound) {\n        var _this = this;\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        moduleType = resolveForwardRef(moduleType);\n        var /** @type {?} */ compileMeta = this._ngModuleCache.get(moduleType);\n        if (compileMeta) {\n            return compileMeta;\n        }\n        var /** @type {?} */ meta = this._ngModuleResolver.resolve(moduleType, throwIfNotFound);\n        if (!meta) {\n            return null;\n        }\n        var /** @type {?} */ declaredDirectives = [];\n        var /** @type {?} */ exportedNonModuleIdentifiers = [];\n        var /** @type {?} */ declaredPipes = [];\n        var /** @type {?} */ importedModules = [];\n        var /** @type {?} */ exportedModules = [];\n        var /** @type {?} */ providers = [];\n        var /** @type {?} */ entryComponents = [];\n        var /** @type {?} */ bootstrapComponents = [];\n        var /** @type {?} */ schemas = [];\n        if (meta.imports) {\n            flattenAndDedupeArray(meta.imports).forEach(function (importedType) {\n                var /** @type {?} */ importedModuleType = /** @type {?} */ ((undefined));\n                if (isValidType(importedType)) {\n                    importedModuleType = importedType;\n                }\n                else if (importedType && importedType.ngModule) {\n                    var /** @type {?} */ moduleWithProviders = importedType;\n                    importedModuleType = moduleWithProviders.ngModule;\n                    if (moduleWithProviders.providers) {\n                        providers.push.apply(providers, _this._getProvidersMetadata(moduleWithProviders.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(importedModuleType) + \"'\", [], importedType));\n                    }\n                }\n                if (importedModuleType) {\n                    if (_this._checkSelfImport(moduleType, importedModuleType))\n                        return;\n                    var /** @type {?} */ importedModuleSummary = _this.getNgModuleSummary(importedModuleType);\n                    if (!importedModuleSummary) {\n                        _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(importedType) + \" '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'. Please add a @NgModule annotation.\"), moduleType);\n                        return;\n                    }\n                    importedModules.push(importedModuleSummary);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(importedType) + \"' imported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n            });\n        }\n        if (meta.exports) {\n            flattenAndDedupeArray(meta.exports).forEach(function (exportedType) {\n                if (!isValidType(exportedType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(exportedType) + \"' exported by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ exportedModuleSummary = _this.getNgModuleSummary(exportedType);\n                if (exportedModuleSummary) {\n                    exportedModules.push(exportedModuleSummary);\n                }\n                else {\n                    exportedNonModuleIdentifiers.push(_this._getIdentifierMetadata(exportedType));\n                }\n            });\n        }\n        // Note: This will be modified later, so we rely on\n        // getting a new instance every time!\n        var /** @type {?} */ transitiveModule = this._getTransitiveNgModuleMetadata(importedModules, exportedModules);\n        if (meta.declarations) {\n            flattenAndDedupeArray(meta.declarations).forEach(function (declaredType) {\n                if (!isValidType(declaredType)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                var /** @type {?} */ declaredIdentifier = _this._getIdentifierMetadata(declaredType);\n                if (_this.isDirective(declaredType)) {\n                    transitiveModule.addDirective(declaredIdentifier);\n                    declaredDirectives.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else if (_this.isPipe(declaredType)) {\n                    transitiveModule.addPipe(declaredIdentifier);\n                    transitiveModule.pipes.push(declaredIdentifier);\n                    declaredPipes.push(declaredIdentifier);\n                    _this._addTypeToModule(declaredType, moduleType);\n                }\n                else {\n                    _this._reportError(syntaxError(\"Unexpected \" + _this._getTypeDescriptor(declaredType) + \" '\" + stringifyType(declaredType) + \"' declared by the module '\" + stringifyType(moduleType) + \"'. Please add a @Pipe/@Directive/@Component annotation.\"), moduleType);\n                    return;\n                }\n            });\n        }\n        var /** @type {?} */ exportedDirectives = [];\n        var /** @type {?} */ exportedPipes = [];\n        exportedNonModuleIdentifiers.forEach(function (exportedId) {\n            if (transitiveModule.directivesSet.has(exportedId.reference)) {\n                exportedDirectives.push(exportedId);\n                transitiveModule.addExportedDirective(exportedId);\n            }\n            else if (transitiveModule.pipesSet.has(exportedId.reference)) {\n                exportedPipes.push(exportedId);\n                transitiveModule.addExportedPipe(exportedId);\n            }\n            else {\n                _this._reportError(syntaxError(\"Can't export \" + _this._getTypeDescriptor(exportedId.reference) + \" \" + stringifyType(exportedId.reference) + \" from \" + stringifyType(moduleType) + \" as it was neither declared nor imported!\"), moduleType);\n                return;\n            }\n        });\n        // The providers of the module have to go last\n        // so that they overwrite any other provider we already added.\n        if (meta.providers) {\n            providers.push.apply(providers, this._getProvidersMetadata(meta.providers, entryComponents, \"provider for the NgModule '\" + stringifyType(moduleType) + \"'\", [], moduleType));\n        }\n        if (meta.entryComponents) {\n            entryComponents.push.apply(entryComponents, flattenAndDedupeArray(meta.entryComponents)\n                .map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type))); }));\n        }\n        if (meta.bootstrap) {\n            flattenAndDedupeArray(meta.bootstrap).forEach(function (type) {\n                if (!isValidType(type)) {\n                    _this._reportError(syntaxError(\"Unexpected value '\" + stringifyType(type) + \"' used in the bootstrap property of module '\" + stringifyType(moduleType) + \"'\"), moduleType);\n                    return;\n                }\n                bootstrapComponents.push(_this._getIdentifierMetadata(type));\n            });\n        }\n        entryComponents.push.apply(entryComponents, bootstrapComponents.map(function (type) { return /** @type {?} */ ((_this._getEntryComponentMetadata(type.reference))); }));\n        if (meta.schemas) {\n            schemas.push.apply(schemas, flattenAndDedupeArray(meta.schemas));\n        }\n        compileMeta = new CompileNgModuleMetadata({\n            type: this._getTypeMetadata(moduleType),\n            providers: providers,\n            entryComponents: entryComponents,\n            bootstrapComponents: bootstrapComponents,\n            schemas: schemas,\n            declaredDirectives: declaredDirectives,\n            exportedDirectives: exportedDirectives,\n            declaredPipes: declaredPipes,\n            exportedPipes: exportedPipes,\n            importedModules: importedModules,\n            exportedModules: exportedModules,\n            transitiveModule: transitiveModule,\n            id: meta.id || null,\n        });\n        entryComponents.forEach(function (id) { return transitiveModule.addEntryComponent(id); });\n        providers.forEach(function (provider) { return transitiveModule.addProvider(provider, /** @type {?} */ ((compileMeta)).type); });\n        transitiveModule.addModule(compileMeta.type);\n        this._ngModuleCache.set(moduleType, compileMeta);\n        return compileMeta;\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._checkSelfImport = /**\n     * @param {?} moduleType\n     * @param {?} importedModuleType\n     * @return {?}\n     */\n    function (moduleType, importedModuleType) {\n        if (moduleType === importedModuleType) {\n            this._reportError(syntaxError(\"'\" + stringifyType(moduleType) + \"' module can't import itself\"), moduleType);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeDescriptor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        if (this.isDirective(type)) {\n            return 'directive';\n        }\n        if (this.isPipe(type)) {\n            return 'pipe';\n        }\n        if (this.isNgModule(type)) {\n            return 'module';\n        }\n        if ((/** @type {?} */ (type)).provide) {\n            return 'provider';\n        }\n        return 'value';\n    };\n    /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._addTypeToModule = /**\n     * @param {?} type\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (type, moduleType) {\n        var /** @type {?} */ oldModule = this._ngModuleOfTypes.get(type);\n        if (oldModule && oldModule !== moduleType) {\n            this._reportError(syntaxError(\"Type \" + stringifyType(type) + \" is part of the declarations of 2 modules: \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \"! \" +\n                (\"Please consider moving \" + stringifyType(type) + \" to a higher module that imports \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \". \") +\n                (\"You can also create a new NgModule that exports and includes \" + stringifyType(type) + \" then import that NgModule in \" + stringifyType(oldModule) + \" and \" + stringifyType(moduleType) + \".\")), moduleType);\n            return;\n        }\n        this._ngModuleOfTypes.set(type, moduleType);\n    };\n    /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTransitiveNgModuleMetadata = /**\n     * @param {?} importedModules\n     * @param {?} exportedModules\n     * @return {?}\n     */\n    function (importedModules, exportedModules) {\n        // collect `providers` / `entryComponents` from all imported and all exported modules\n        var /** @type {?} */ result = new TransitiveCompileNgModuleMetadata();\n        var /** @type {?} */ modulesByToken = new Map();\n        importedModules.concat(exportedModules).forEach(function (modSummary) {\n            modSummary.modules.forEach(function (mod) { return result.addModule(mod); });\n            modSummary.entryComponents.forEach(function (comp) { return result.addEntryComponent(comp); });\n            var /** @type {?} */ addedTokens = new Set();\n            modSummary.providers.forEach(function (entry) {\n                var /** @type {?} */ tokenRef = tokenReference(entry.provider.token);\n                var /** @type {?} */ prevModules = modulesByToken.get(tokenRef);\n                if (!prevModules) {\n                    prevModules = new Set();\n                    modulesByToken.set(tokenRef, prevModules);\n                }\n                var /** @type {?} */ moduleRef = entry.module.reference;\n                // Note: the providers of one module may still contain multiple providers\n                // per token (e.g. for multi providers), and we need to preserve these.\n                if (addedTokens.has(tokenRef) || !prevModules.has(moduleRef)) {\n                    prevModules.add(moduleRef);\n                    addedTokens.add(tokenRef);\n                    result.addProvider(entry.provider, entry.module);\n                }\n            });\n        });\n        exportedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addExportedDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addExportedPipe(id); });\n        });\n        importedModules.forEach(function (modSummary) {\n            modSummary.exportedDirectives.forEach(function (id) { return result.addDirective(id); });\n            modSummary.exportedPipes.forEach(function (id) { return result.addPipe(id); });\n        });\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getIdentifierMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        type = resolveForwardRef(type);\n        return { reference: type };\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.isInjectable = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this._reflector.annotations(type);\n        return annotations.some(function (ann) { return createInjectable.isTypeOf(ann); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getInjectableSummary = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        return {\n            summaryKind: CompileSummaryKind.Injectable,\n            type: this._getTypeMetadata(type, null, false)\n        };\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getInjectableMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (type, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        var /** @type {?} */ typeSummary = this._loadSummary(type, CompileSummaryKind.Injectable);\n        if (typeSummary) {\n            return typeSummary.type;\n        }\n        return this._getTypeMetadata(type, dependencies);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTypeMetadata = /**\n     * @param {?} type\n     * @param {?=} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (type, dependencies, throwOnUnknownDeps) {\n        if (dependencies === void 0) { dependencies = null; }\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ identifier = this._getIdentifierMetadata(type);\n        return {\n            reference: identifier.reference,\n            diDeps: this._getDependenciesMetadata(identifier.reference, dependencies, throwOnUnknownDeps),\n            lifecycleHooks: getAllLifecycleHooks(this._reflector, identifier.reference),\n        };\n    };\n    /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getFactoryMetadata = /**\n     * @param {?} factory\n     * @param {?=} dependencies\n     * @return {?}\n     */\n    function (factory, dependencies) {\n        if (dependencies === void 0) { dependencies = null; }\n        factory = resolveForwardRef(factory);\n        return { reference: factory, diDeps: this._getDependenciesMetadata(factory, dependencies) };\n    };\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     */\n    /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeMetadata = /**\n     * Gets the metadata for the given pipe.\n     * This assumes `loadNgModuleDirectiveAndPipeMetadata` has been called first.\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            this._reportError(syntaxError(\"Illegal state: getPipeMetadata can only be called after loadNgModuleDirectiveAndPipeMetadata for a module that declares it. Pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeMeta || null;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getPipeSummary = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeSummary = /** @type {?} */ (this._loadSummary(pipeType, CompileSummaryKind.Pipe));\n        if (!pipeSummary) {\n            this._reportError(syntaxError(\"Illegal state: Could not load the summary for pipe \" + stringifyType(pipeType) + \".\"), pipeType);\n        }\n        return pipeSummary;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getOrLoadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        var /** @type {?} */ pipeMeta = this._pipeCache.get(pipeType);\n        if (!pipeMeta) {\n            pipeMeta = this._loadPipeMetadata(pipeType);\n        }\n        return pipeMeta;\n    };\n    /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._loadPipeMetadata = /**\n     * @param {?} pipeType\n     * @return {?}\n     */\n    function (pipeType) {\n        pipeType = resolveForwardRef(pipeType);\n        var /** @type {?} */ pipeAnnotation = /** @type {?} */ ((this._pipeResolver.resolve(pipeType)));\n        var /** @type {?} */ pipeMeta = new CompilePipeMetadata({\n            type: this._getTypeMetadata(pipeType),\n            name: pipeAnnotation.name,\n            pure: !!pipeAnnotation.pure\n        });\n        this._pipeCache.set(pipeType, pipeMeta);\n        this._summaryCache.set(pipeType, pipeMeta.toSummary());\n        return pipeMeta;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getDependenciesMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} dependencies\n     * @param {?=} throwOnUnknownDeps\n     * @return {?}\n     */\n    function (typeOrFunc, dependencies, throwOnUnknownDeps) {\n        var _this = this;\n        if (throwOnUnknownDeps === void 0) { throwOnUnknownDeps = true; }\n        var /** @type {?} */ hasUnknownDeps = false;\n        var /** @type {?} */ params = dependencies || this._reflector.parameters(typeOrFunc) || [];\n        var /** @type {?} */ dependenciesMetadata = params.map(function (param) {\n            var /** @type {?} */ isAttribute = false;\n            var /** @type {?} */ isHost = false;\n            var /** @type {?} */ isSelf = false;\n            var /** @type {?} */ isSkipSelf = false;\n            var /** @type {?} */ isOptional = false;\n            var /** @type {?} */ token = null;\n            if (Array.isArray(param)) {\n                param.forEach(function (paramEntry) {\n                    if (createHost.isTypeOf(paramEntry)) {\n                        isHost = true;\n                    }\n                    else if (createSelf.isTypeOf(paramEntry)) {\n                        isSelf = true;\n                    }\n                    else if (createSkipSelf.isTypeOf(paramEntry)) {\n                        isSkipSelf = true;\n                    }\n                    else if (createOptional.isTypeOf(paramEntry)) {\n                        isOptional = true;\n                    }\n                    else if (createAttribute.isTypeOf(paramEntry)) {\n                        isAttribute = true;\n                        token = paramEntry.attributeName;\n                    }\n                    else if (createInject.isTypeOf(paramEntry)) {\n                        token = paramEntry.token;\n                    }\n                    else if (createInjectionToken.isTypeOf(paramEntry) || paramEntry instanceof StaticSymbol) {\n                        token = paramEntry;\n                    }\n                    else if (isValidType(paramEntry) && token == null) {\n                        token = paramEntry;\n                    }\n                });\n            }\n            else {\n                token = param;\n            }\n            if (token == null) {\n                hasUnknownDeps = true;\n                return /** @type {?} */ ((null));\n            }\n            return {\n                isAttribute: isAttribute,\n                isHost: isHost,\n                isSelf: isSelf,\n                isSkipSelf: isSkipSelf,\n                isOptional: isOptional,\n                token: _this._getTokenMetadata(token)\n            };\n        });\n        if (hasUnknownDeps) {\n            var /** @type {?} */ depsTokens = dependenciesMetadata.map(function (dep) { return dep ? stringifyType(dep.token) : '?'; }).join(', ');\n            var /** @type {?} */ message = \"Can't resolve all parameters for \" + stringifyType(typeOrFunc) + \": (\" + depsTokens + \").\";\n            if (throwOnUnknownDeps || this._config.strictInjectionParameters) {\n                this._reportError(syntaxError(message), typeOrFunc);\n            }\n            else {\n                this._console.warn(\"Warning: \" + message + \" This will become an error in Angular v6.x\");\n            }\n        }\n        return dependenciesMetadata;\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getTokenMetadata = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        token = resolveForwardRef(token);\n        var /** @type {?} */ compileToken;\n        if (typeof token === 'string') {\n            compileToken = { value: token };\n        }\n        else {\n            compileToken = { identifier: { reference: token } };\n        }\n        return compileToken;\n    };\n    /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getProvidersMetadata = /**\n     * @param {?} providers\n     * @param {?} targetEntryComponents\n     * @param {?=} debugInfo\n     * @param {?=} compileProviders\n     * @param {?=} type\n     * @return {?}\n     */\n    function (providers, targetEntryComponents, debugInfo, compileProviders, type) {\n        var _this = this;\n        if (compileProviders === void 0) { compileProviders = []; }\n        providers.forEach(function (provider, providerIdx) {\n            if (Array.isArray(provider)) {\n                _this._getProvidersMetadata(provider, targetEntryComponents, debugInfo, compileProviders);\n            }\n            else {\n                provider = resolveForwardRef(provider);\n                var /** @type {?} */ providerMeta = /** @type {?} */ ((undefined));\n                if (provider && typeof provider === 'object' && provider.hasOwnProperty('provide')) {\n                    _this._validateProvider(provider);\n                    providerMeta = new ProviderMeta(provider.provide, provider);\n                }\n                else if (isValidType(provider)) {\n                    providerMeta = new ProviderMeta(provider, { useClass: provider });\n                }\n                else if (provider === void 0) {\n                    _this._reportError(syntaxError(\"Encountered undefined provider! Usually this means you have a circular dependencies (might be caused by using 'barrel' index.ts files.\"));\n                    return;\n                }\n                else {\n                    var /** @type {?} */ providersInfo = (/** @type {?} */ (providers.reduce(function (soFar, seenProvider, seenProviderIdx) {\n                        if (seenProviderIdx < providerIdx) {\n                            soFar.push(\"\" + stringifyType(seenProvider));\n                        }\n                        else if (seenProviderIdx == providerIdx) {\n                            soFar.push(\"?\" + stringifyType(seenProvider) + \"?\");\n                        }\n                        else if (seenProviderIdx == providerIdx + 1) {\n                            soFar.push('...');\n                        }\n                        return soFar;\n                    }, [])))\n                        .join(', ');\n                    _this._reportError(syntaxError(\"Invalid \" + (debugInfo ? debugInfo : 'provider') + \" - only instances of Provider and Type are allowed, got: [\" + providersInfo + \"]\"), type);\n                    return;\n                }\n                if (providerMeta.token ===\n                    _this._reflector.resolveExternalReference(Identifiers.ANALYZE_FOR_ENTRY_COMPONENTS)) {\n                    targetEntryComponents.push.apply(targetEntryComponents, _this._getEntryComponentsFromProvider(providerMeta, type));\n                }\n                else {\n                    compileProviders.push(_this.getProviderMetadata(providerMeta));\n                }\n            }\n        });\n        return compileProviders;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._validateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.hasOwnProperty('useClass') && provider.useClass == null) {\n            this._reportError(syntaxError(\"Invalid provider for \" + stringifyType(provider.provide) + \". useClass cannot be \" + provider.useClass + \".\\n           Usually it happens when:\\n           1. There's a circular dependency (might be caused by using index.ts (barrel) files).\\n           2. Class was used before it was declared. Use forwardRef in this case.\"));\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentsFromProvider = /**\n     * @param {?} provider\n     * @param {?=} type\n     * @return {?}\n     */\n    function (provider, type) {\n        var _this = this;\n        var /** @type {?} */ components = [];\n        var /** @type {?} */ collectedIdentifiers = [];\n        if (provider.useFactory || provider.useExisting || provider.useClass) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports useValue!\"), type);\n            return [];\n        }\n        if (!provider.multi) {\n            this._reportError(syntaxError(\"The ANALYZE_FOR_ENTRY_COMPONENTS token only supports 'multi = true'!\"), type);\n            return [];\n        }\n        extractIdentifiers(provider.useValue, collectedIdentifiers);\n        collectedIdentifiers.forEach(function (identifier) {\n            var /** @type {?} */ entry = _this._getEntryComponentMetadata(identifier.reference, false);\n            if (entry) {\n                components.push(entry);\n            }\n        });\n        return components;\n    };\n    /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getEntryComponentMetadata = /**\n     * @param {?} dirType\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (dirType, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ dirMeta = this.getNonNormalizedDirectiveMetadata(dirType);\n        if (dirMeta && dirMeta.metadata.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirMeta.metadata.componentFactory)) };\n        }\n        var /** @type {?} */ dirSummary = /** @type {?} */ (this._loadSummary(dirType, CompileSummaryKind.Directive));\n        if (dirSummary && dirSummary.isComponent) {\n            return { componentType: dirType, componentFactory: /** @type {?} */ ((dirSummary.componentFactory)) };\n        }\n        if (throwIfNotFound) {\n            throw syntaxError(dirType.name + \" cannot be used as an entry component.\");\n        }\n        return null;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype.getProviderMetadata = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        var /** @type {?} */ compileDeps = /** @type {?} */ ((undefined));\n        var /** @type {?} */ compileTypeMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ compileFactoryMetadata = /** @type {?} */ ((null));\n        var /** @type {?} */ token = this._getTokenMetadata(provider.token);\n        if (provider.useClass) {\n            compileTypeMetadata = this._getInjectableMetadata(provider.useClass, provider.dependencies);\n            compileDeps = compileTypeMetadata.diDeps;\n            if (provider.token === provider.useClass) {\n                // use the compileTypeMetadata as it contains information about lifecycleHooks...\n                token = { identifier: compileTypeMetadata };\n            }\n        }\n        else if (provider.useFactory) {\n            compileFactoryMetadata = this._getFactoryMetadata(provider.useFactory, provider.dependencies);\n            compileDeps = compileFactoryMetadata.diDeps;\n        }\n        return {\n            token: token,\n            useClass: compileTypeMetadata,\n            useValue: provider.useValue,\n            useFactory: compileFactoryMetadata,\n            useExisting: provider.useExisting ? this._getTokenMetadata(provider.useExisting) : undefined,\n            deps: compileDeps,\n            multi: provider.multi\n        };\n    };\n    /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueriesMetadata = /**\n     * @param {?} queries\n     * @param {?} isViewQuery\n     * @param {?} directiveType\n     * @return {?}\n     */\n    function (queries, isViewQuery, directiveType) {\n        var _this = this;\n        var /** @type {?} */ res = [];\n        Object.keys(queries).forEach(function (propertyName) {\n            var /** @type {?} */ query = queries[propertyName];\n            if (query.isViewQuery === isViewQuery) {\n                res.push(_this._getQueryMetadata(query, propertyName, directiveType));\n            }\n        });\n        return res;\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._queryVarBindings = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) { return selector.split(/\\s*,\\s*/); };\n    /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._getQueryMetadata = /**\n     * @param {?} q\n     * @param {?} propertyName\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (q, propertyName, typeOrFunc) {\n        var _this = this;\n        var /** @type {?} */ selectors;\n        if (typeof q.selector === 'string') {\n            selectors =\n                this._queryVarBindings(q.selector).map(function (varName) { return _this._getTokenMetadata(varName); });\n        }\n        else {\n            if (!q.selector) {\n                this._reportError(syntaxError(\"Can't construct a query for the property \\\"\" + propertyName + \"\\\" of \\\"\" + stringifyType(typeOrFunc) + \"\\\" since the query selector wasn't defined.\"), typeOrFunc);\n                selectors = [];\n            }\n            else {\n                selectors = [this._getTokenMetadata(q.selector)];\n            }\n        }\n        return {\n            selectors: selectors,\n            first: q.first,\n            descendants: q.descendants, propertyName: propertyName,\n            read: q.read ? this._getTokenMetadata(q.read) : /** @type {?} */ ((null))\n        };\n    };\n    /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    CompileMetadataResolver.prototype._reportError = /**\n     * @param {?} error\n     * @param {?=} type\n     * @param {?=} otherType\n     * @return {?}\n     */\n    function (error, type, otherType) {\n        if (this._errorCollector) {\n            this._errorCollector(error, type);\n            if (otherType) {\n                this._errorCollector(error, otherType);\n            }\n        }\n        else {\n            throw error;\n        }\n    };\n    return CompileMetadataResolver;\n}());\n/**\n * @param {?} tree\n * @param {?=} out\n * @return {?}\n */\nfunction flattenArray(tree, out) {\n    if (out === void 0) { out = []; }\n    if (tree) {\n        for (var /** @type {?} */ i = 0; i < tree.length; i++) {\n            var /** @type {?} */ item = resolveForwardRef(tree[i]);\n            if (Array.isArray(item)) {\n                flattenArray(item, out);\n            }\n            else {\n                out.push(item);\n            }\n        }\n    }\n    return out;\n}\n/**\n * @param {?} array\n * @return {?}\n */\nfunction dedupeArray(array) {\n    if (array) {\n        return Array.from(new Set(array));\n    }\n    return [];\n}\n/**\n * @param {?} tree\n * @return {?}\n */\nfunction flattenAndDedupeArray(tree) {\n    return dedupeArray(flattenArray(tree));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isValidType(value) {\n    return (value instanceof StaticSymbol) || (value instanceof Type);\n}\n/**\n * @param {?} value\n * @param {?} targetIdentifiers\n * @return {?}\n */\nfunction extractIdentifiers(value, targetIdentifiers) {\n    visitValue(value, new _CompileValueConverter(), targetIdentifiers);\n}\nvar _CompileValueConverter = (function (_super) {\n    __extends(_CompileValueConverter, _super);\n    function _CompileValueConverter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    _CompileValueConverter.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} targetIdentifiers\n     * @return {?}\n     */\n    function (value, targetIdentifiers) {\n        targetIdentifiers.push({ reference: value });\n    };\n    return _CompileValueConverter;\n}(ValueTransformer));\n/**\n * @param {?} type\n * @return {?}\n */\nfunction stringifyType(type) {\n    if (type instanceof StaticSymbol) {\n        return type.name + \" in \" + type.filePath;\n    }\n    else {\n        return stringify(type);\n    }\n}\n/**\n * Indicates that a component is still being loaded in a synchronous compile.\n * @param {?} compType\n * @return {?}\n */\nfunction componentStillLoadingError(compType) {\n    var /** @type {?} */ error = Error(\"Can't compile synchronously as \" + stringify(compType) + \" is still being loaded!\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT_TYPE] = compType;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar TypeModifier = {\n    Const: 0,\n};\nTypeModifier[TypeModifier.Const] = \"Const\";\n/**\n * @abstract\n */\nvar Type$1 = (function () {\n    function Type(modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Type.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Type;\n}());\n/** @enum {number} */\nvar BuiltinTypeName = {\n    Dynamic: 0,\n    Bool: 1,\n    String: 2,\n    Int: 3,\n    Number: 4,\n    Function: 5,\n    Inferred: 6,\n};\nBuiltinTypeName[BuiltinTypeName.Dynamic] = \"Dynamic\";\nBuiltinTypeName[BuiltinTypeName.Bool] = \"Bool\";\nBuiltinTypeName[BuiltinTypeName.String] = \"String\";\nBuiltinTypeName[BuiltinTypeName.Int] = \"Int\";\nBuiltinTypeName[BuiltinTypeName.Number] = \"Number\";\nBuiltinTypeName[BuiltinTypeName.Function] = \"Function\";\nBuiltinTypeName[BuiltinTypeName.Inferred] = \"Inferred\";\nvar BuiltinType = (function (_super) {\n    __extends(BuiltinType, _super);\n    function BuiltinType(name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BuiltinType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBuiltintType(this, context);\n    };\n    return BuiltinType;\n}(Type$1));\nvar ExpressionType = (function (_super) {\n    __extends(ExpressionType, _super);\n    function ExpressionType(value, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionType(this, context);\n    };\n    return ExpressionType;\n}(Type$1));\nvar ArrayType = (function (_super) {\n    __extends(ArrayType, _super);\n    function ArrayType(of, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.of = of;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ArrayType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitArrayType(this, context);\n    };\n    return ArrayType;\n}(Type$1));\nvar MapType = (function (_super) {\n    __extends(MapType, _super);\n    function MapType(valueType, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers) || this;\n        _this.valueType = valueType || null;\n        return _this;\n    }\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    MapType.prototype.visitType = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) { return visitor.visitMapType(this, context); };\n    return MapType;\n}(Type$1));\nvar DYNAMIC_TYPE = new BuiltinType(BuiltinTypeName.Dynamic);\nvar INFERRED_TYPE = new BuiltinType(BuiltinTypeName.Inferred);\nvar BOOL_TYPE = new BuiltinType(BuiltinTypeName.Bool);\nvar INT_TYPE = new BuiltinType(BuiltinTypeName.Int);\nvar NUMBER_TYPE = new BuiltinType(BuiltinTypeName.Number);\nvar STRING_TYPE = new BuiltinType(BuiltinTypeName.String);\nvar FUNCTION_TYPE = new BuiltinType(BuiltinTypeName.Function);\n/**\n * @record\n */\n\n/** @enum {number} */\nvar BinaryOperator = {\n    Equals: 0,\n    NotEquals: 1,\n    Identical: 2,\n    NotIdentical: 3,\n    Minus: 4,\n    Plus: 5,\n    Divide: 6,\n    Multiply: 7,\n    Modulo: 8,\n    And: 9,\n    Or: 10,\n    Lower: 11,\n    LowerEquals: 12,\n    Bigger: 13,\n    BiggerEquals: 14,\n};\nBinaryOperator[BinaryOperator.Equals] = \"Equals\";\nBinaryOperator[BinaryOperator.NotEquals] = \"NotEquals\";\nBinaryOperator[BinaryOperator.Identical] = \"Identical\";\nBinaryOperator[BinaryOperator.NotIdentical] = \"NotIdentical\";\nBinaryOperator[BinaryOperator.Minus] = \"Minus\";\nBinaryOperator[BinaryOperator.Plus] = \"Plus\";\nBinaryOperator[BinaryOperator.Divide] = \"Divide\";\nBinaryOperator[BinaryOperator.Multiply] = \"Multiply\";\nBinaryOperator[BinaryOperator.Modulo] = \"Modulo\";\nBinaryOperator[BinaryOperator.And] = \"And\";\nBinaryOperator[BinaryOperator.Or] = \"Or\";\nBinaryOperator[BinaryOperator.Lower] = \"Lower\";\nBinaryOperator[BinaryOperator.LowerEquals] = \"LowerEquals\";\nBinaryOperator[BinaryOperator.Bigger] = \"Bigger\";\nBinaryOperator[BinaryOperator.BiggerEquals] = \"BiggerEquals\";\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction nullSafeIsEquivalent(base, other) {\n    if (base == null || other == null) {\n        return base == other;\n    }\n    return base.isEquivalent(other);\n}\n/**\n * @template T\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction areAllEquivalent(base, other) {\n    var /** @type {?} */ len = base.length;\n    if (len !== other.length) {\n        return false;\n    }\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        if (!base[i].isEquivalent(other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @abstract\n */\nvar Expression = (function () {\n    function Expression(type, sourceSpan) {\n        this.type = type || null;\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.prop = /**\n     * @param {?} name\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, sourceSpan) {\n        return new ReadPropExpr(this, name, null, sourceSpan);\n    };\n    /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.key = /**\n     * @param {?} index\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (index, type, sourceSpan) {\n        return new ReadKeyExpr(this, index, type, sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callMethod = /**\n     * @param {?} name\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (name, params, sourceSpan) {\n        return new InvokeMethodExpr(this, name, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.callFn = /**\n     * @param {?} params\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, sourceSpan) {\n        return new InvokeFunctionExpr(this, params, null, sourceSpan);\n    };\n    /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.instantiate = /**\n     * @param {?} params\n     * @param {?=} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (params, type, sourceSpan) {\n        return new InstantiateExpr(this, params, type, sourceSpan);\n    };\n    /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.conditional = /**\n     * @param {?} trueCase\n     * @param {?=} falseCase\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        return new ConditionalExpr(this, trueCase, falseCase, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.equals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Equals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.identical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Identical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.notIdentical = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.NotIdentical, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.minus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Minus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.plus = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Plus, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.divide = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Divide, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.multiply = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Multiply, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.modulo = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Modulo, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.and = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.And, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.or = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Or, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lower = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Lower, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.lowerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.LowerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.bigger = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.Bigger, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.biggerEquals = /**\n     * @param {?} rhs\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (rhs, sourceSpan) {\n        return new BinaryOperatorExpr(BinaryOperator.BiggerEquals, this, rhs, null, sourceSpan);\n    };\n    /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.isBlank = /**\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (sourceSpan) {\n        // Note: We use equals by purpose here to compare to null and undefined in JS.\n        // We use the typed null to allow strictNullChecks to narrow types.\n        return this.equals(TYPED_NULL_EXPR, sourceSpan);\n    };\n    /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    Expression.prototype.cast = /**\n     * @param {?} type\n     * @param {?=} sourceSpan\n     * @return {?}\n     */\n    function (type, sourceSpan) {\n        return new CastExpr(this, type, sourceSpan);\n    };\n    /**\n     * @return {?}\n     */\n    Expression.prototype.toStmt = /**\n     * @return {?}\n     */\n    function () { return new ExpressionStatement(this, null); };\n    return Expression;\n}());\n/** @enum {number} */\nvar BuiltinVar = {\n    This: 0,\n    Super: 1,\n    CatchError: 2,\n    CatchStack: 3,\n};\nBuiltinVar[BuiltinVar.This] = \"This\";\nBuiltinVar[BuiltinVar.Super] = \"Super\";\nBuiltinVar[BuiltinVar.CatchError] = \"CatchError\";\nBuiltinVar[BuiltinVar.CatchStack] = \"CatchStack\";\nvar ReadVarExpr = (function (_super) {\n    __extends(ReadVarExpr, _super);\n    function ReadVarExpr(name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        if (typeof name === 'string') {\n            _this.name = name;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (name);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadVarExpr && this.name === e.name && this.builtin === e.builtin;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadVarExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadVarExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        if (!this.name) {\n            throw new Error(\"Built in variable \" + this.builtin + \" can not be assigned to.\");\n        }\n        return new WriteVarExpr(this.name, value, null, this.sourceSpan);\n    };\n    return ReadVarExpr;\n}(Expression));\nvar WriteVarExpr = (function (_super) {\n    __extends(WriteVarExpr, _super);\n    function WriteVarExpr(name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteVarExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteVarExpr && this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteVarExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteVarExpr(this, context);\n    };\n    /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    WriteVarExpr.prototype.toDeclStmt = /**\n     * @param {?=} type\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (type, modifiers) {\n        return new DeclareVarStmt(this.name, this.value, type, modifiers, this.sourceSpan);\n    };\n    return WriteVarExpr;\n}(Expression));\nvar WriteKeyExpr = (function (_super) {\n    __extends(WriteKeyExpr, _super);\n    function WriteKeyExpr(receiver, index, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WriteKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index) && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WriteKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWriteKeyExpr(this, context);\n    };\n    return WriteKeyExpr;\n}(Expression));\nvar WritePropExpr = (function (_super) {\n    __extends(WritePropExpr, _super);\n    function WritePropExpr(receiver, name, value, type, sourceSpan) {\n        var _this = _super.call(this, type || value.type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    WritePropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof WritePropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    WritePropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitWritePropExpr(this, context);\n    };\n    return WritePropExpr;\n}(Expression));\n/** @enum {number} */\nvar BuiltinMethod = {\n    ConcatArray: 0,\n    SubscribeObservable: 1,\n    Bind: 2,\n};\nBuiltinMethod[BuiltinMethod.ConcatArray] = \"ConcatArray\";\nBuiltinMethod[BuiltinMethod.SubscribeObservable] = \"SubscribeObservable\";\nBuiltinMethod[BuiltinMethod.Bind] = \"Bind\";\nvar InvokeMethodExpr = (function (_super) {\n    __extends(InvokeMethodExpr, _super);\n    function InvokeMethodExpr(receiver, method, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.args = args;\n        if (typeof method === 'string') {\n            _this.name = method;\n            _this.builtin = null;\n        }\n        else {\n            _this.name = null;\n            _this.builtin = /** @type {?} */ (method);\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeMethodExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name && this.builtin === e.builtin && areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeMethodExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeMethodExpr(this, context);\n    };\n    return InvokeMethodExpr;\n}(Expression));\nvar InvokeFunctionExpr = (function (_super) {\n    __extends(InvokeFunctionExpr, _super);\n    function InvokeFunctionExpr(fn, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.fn = fn;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InvokeFunctionExpr && this.fn.isEquivalent(e.fn) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InvokeFunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInvokeFunctionExpr(this, context);\n    };\n    return InvokeFunctionExpr;\n}(Expression));\nvar InstantiateExpr = (function (_super) {\n    __extends(InstantiateExpr, _super);\n    function InstantiateExpr(classExpr, args, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.classExpr = classExpr;\n        _this.args = args;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    InstantiateExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof InstantiateExpr && this.classExpr.isEquivalent(e.classExpr) &&\n            areAllEquivalent(this.args, e.args);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    InstantiateExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitInstantiateExpr(this, context);\n    };\n    return InstantiateExpr;\n}(Expression));\nvar LiteralExpr = (function (_super) {\n    __extends(LiteralExpr, _super);\n    function LiteralExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralExpr && this.value === e.value;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralExpr(this, context);\n    };\n    return LiteralExpr;\n}(Expression));\nvar ExternalExpr = (function (_super) {\n    __extends(ExternalExpr, _super);\n    function ExternalExpr(value, type, typeParams, sourceSpan) {\n        if (typeParams === void 0) { typeParams = null; }\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        _this.typeParams = typeParams;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ExternalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ExternalExpr && this.value.name === e.value.name &&\n            this.value.moduleName === e.value.moduleName && this.value.runtime === e.value.runtime;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExternalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExternalExpr(this, context);\n    };\n    return ExternalExpr;\n}(Expression));\nvar ExternalReference = (function () {\n    function ExternalReference(moduleName, name, runtime) {\n        this.moduleName = moduleName;\n        this.name = name;\n        this.runtime = runtime;\n    }\n    return ExternalReference;\n}());\nvar ConditionalExpr = (function (_super) {\n    __extends(ConditionalExpr, _super);\n    function ConditionalExpr(condition, trueCase, falseCase, type, sourceSpan) {\n        if (falseCase === void 0) { falseCase = null; }\n        var _this = _super.call(this, type || trueCase.type, sourceSpan) || this;\n        _this.condition = condition;\n        _this.falseCase = falseCase;\n        _this.trueCase = trueCase;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ConditionalExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ConditionalExpr && this.condition.isEquivalent(e.condition) &&\n            this.trueCase.isEquivalent(e.trueCase) && nullSafeIsEquivalent(this.falseCase, e.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ConditionalExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitConditionalExpr(this, context);\n    };\n    return ConditionalExpr;\n}(Expression));\nvar NotExpr = (function (_super) {\n    __extends(NotExpr, _super);\n    function NotExpr(condition, sourceSpan) {\n        var _this = _super.call(this, BOOL_TYPE, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    NotExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof NotExpr && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    NotExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitNotExpr(this, context);\n    };\n    return NotExpr;\n}(Expression));\nvar AssertNotNull = (function (_super) {\n    __extends(AssertNotNull, _super);\n    function AssertNotNull(condition, sourceSpan) {\n        var _this = _super.call(this, condition.type, sourceSpan) || this;\n        _this.condition = condition;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    AssertNotNull.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof AssertNotNull && this.condition.isEquivalent(e.condition);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    AssertNotNull.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitAssertNotNullExpr(this, context);\n    };\n    return AssertNotNull;\n}(Expression));\nvar CastExpr = (function (_super) {\n    __extends(CastExpr, _super);\n    function CastExpr(value, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CastExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CastExpr && this.value.isEquivalent(e.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CastExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCastExpr(this, context);\n    };\n    return CastExpr;\n}(Expression));\nvar FnParam = (function () {\n    function FnParam(name, type) {\n        if (type === void 0) { type = null; }\n        this.name = name;\n        this.type = type;\n    }\n    /**\n     * @param {?} param\n     * @return {?}\n     */\n    FnParam.prototype.isEquivalent = /**\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) { return this.name === param.name; };\n    return FnParam;\n}());\nvar FunctionExpr = (function (_super) {\n    __extends(FunctionExpr, _super);\n    function FunctionExpr(params, statements, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.params = params;\n        _this.statements = statements;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    FunctionExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof FunctionExpr && areAllEquivalent(this.params, e.params) &&\n            areAllEquivalent(this.statements, e.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    FunctionExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitFunctionExpr(this, context);\n    };\n    /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    FunctionExpr.prototype.toDeclStmt = /**\n     * @param {?} name\n     * @param {?=} modifiers\n     * @return {?}\n     */\n    function (name, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        return new DeclareFunctionStmt(name, this.params, this.statements, this.type, modifiers, this.sourceSpan);\n    };\n    return FunctionExpr;\n}(Expression));\nvar BinaryOperatorExpr = (function (_super) {\n    __extends(BinaryOperatorExpr, _super);\n    function BinaryOperatorExpr(operator, lhs, rhs, type, sourceSpan) {\n        var _this = _super.call(this, type || lhs.type, sourceSpan) || this;\n        _this.operator = operator;\n        _this.rhs = rhs;\n        _this.lhs = lhs;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof BinaryOperatorExpr && this.operator === e.operator &&\n            this.lhs.isEquivalent(e.lhs) && this.rhs.isEquivalent(e.rhs);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    BinaryOperatorExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitBinaryOperatorExpr(this, context);\n    };\n    return BinaryOperatorExpr;\n}(Expression));\nvar ReadPropExpr = (function (_super) {\n    __extends(ReadPropExpr, _super);\n    function ReadPropExpr(receiver, name, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadPropExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadPropExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.name === e.name;\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadPropExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadPropExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadPropExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WritePropExpr(this.receiver, this.name, value, null, this.sourceSpan);\n    };\n    return ReadPropExpr;\n}(Expression));\nvar ReadKeyExpr = (function (_super) {\n    __extends(ReadKeyExpr, _super);\n    function ReadKeyExpr(receiver, index, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.receiver = receiver;\n        _this.index = index;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof ReadKeyExpr && this.receiver.isEquivalent(e.receiver) &&\n            this.index.isEquivalent(e.index);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReadKeyExpr(this, context);\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    ReadKeyExpr.prototype.set = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        return new WriteKeyExpr(this.receiver, this.index, value, null, this.sourceSpan);\n    };\n    return ReadKeyExpr;\n}(Expression));\nvar LiteralArrayExpr = (function (_super) {\n    __extends(LiteralArrayExpr, _super);\n    function LiteralArrayExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralArrayExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralArrayExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralArrayExpr(this, context);\n    };\n    return LiteralArrayExpr;\n}(Expression));\nvar LiteralMapEntry = (function () {\n    function LiteralMapEntry(key, value, quoted) {\n        this.key = key;\n        this.value = value;\n        this.quoted = quoted;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapEntry.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return this.key === e.key && this.value.isEquivalent(e.value);\n    };\n    return LiteralMapEntry;\n}());\nvar LiteralMapExpr = (function (_super) {\n    __extends(LiteralMapExpr, _super);\n    function LiteralMapExpr(entries, type, sourceSpan) {\n        var _this = _super.call(this, type, sourceSpan) || this;\n        _this.entries = entries;\n        _this.valueType = null;\n        if (type) {\n            _this.valueType = type.valueType;\n        }\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof LiteralMapExpr && areAllEquivalent(this.entries, e.entries);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    LiteralMapExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitLiteralMapExpr(this, context);\n    };\n    return LiteralMapExpr;\n}(Expression));\nvar CommaExpr = (function (_super) {\n    __extends(CommaExpr, _super);\n    function CommaExpr(parts, sourceSpan) {\n        var _this = _super.call(this, parts[parts.length - 1].type, sourceSpan) || this;\n        _this.parts = parts;\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    CommaExpr.prototype.isEquivalent = /**\n     * @param {?} e\n     * @return {?}\n     */\n    function (e) {\n        return e instanceof CommaExpr && areAllEquivalent(this.parts, e.parts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommaExpr.prototype.visitExpression = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommaExpr(this, context);\n    };\n    return CommaExpr;\n}(Expression));\n/**\n * @record\n */\n\nvar THIS_EXPR = new ReadVarExpr(BuiltinVar.This, null, null);\nvar SUPER_EXPR = new ReadVarExpr(BuiltinVar.Super, null, null);\nvar CATCH_ERROR_VAR = new ReadVarExpr(BuiltinVar.CatchError, null, null);\nvar CATCH_STACK_VAR = new ReadVarExpr(BuiltinVar.CatchStack, null, null);\nvar NULL_EXPR = new LiteralExpr(null, null, null);\nvar TYPED_NULL_EXPR = new LiteralExpr(null, INFERRED_TYPE, null);\n/** @enum {number} */\nvar StmtModifier = {\n    Final: 0,\n    Private: 1,\n    Exported: 2,\n};\nStmtModifier[StmtModifier.Final] = \"Final\";\nStmtModifier[StmtModifier.Private] = \"Private\";\nStmtModifier[StmtModifier.Exported] = \"Exported\";\n/**\n * @abstract\n */\nvar Statement = (function () {\n    function Statement(modifiers, sourceSpan) {\n        this.modifiers = modifiers || [];\n        this.sourceSpan = sourceSpan || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    Statement.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return Statement;\n}());\nvar DeclareVarStmt = (function (_super) {\n    __extends(DeclareVarStmt, _super);\n    function DeclareVarStmt(name, value, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.value = value;\n        _this.type = type || value.type;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareVarStmt && this.name === stmt.name &&\n            this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareVarStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareVarStmt(this, context);\n    };\n    return DeclareVarStmt;\n}(Statement));\nvar DeclareFunctionStmt = (function (_super) {\n    __extends(DeclareFunctionStmt, _super);\n    function DeclareFunctionStmt(name, params, statements, type, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.statements = statements;\n        _this.type = type || null;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof DeclareFunctionStmt && areAllEquivalent(this.params, stmt.params) &&\n            areAllEquivalent(this.statements, stmt.statements);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    DeclareFunctionStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareFunctionStmt(this, context);\n    };\n    return DeclareFunctionStmt;\n}(Statement));\nvar ExpressionStatement = (function (_super) {\n    __extends(ExpressionStatement, _super);\n    function ExpressionStatement(expr, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.expr = expr;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ExpressionStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ExpressionStatement && this.expr.isEquivalent(stmt.expr);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ExpressionStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitExpressionStmt(this, context);\n    };\n    return ExpressionStatement;\n}(Statement));\nvar ReturnStatement = (function (_super) {\n    __extends(ReturnStatement, _super);\n    function ReturnStatement(value, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.value = value;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ReturnStatement.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ReturnStatement && this.value.isEquivalent(stmt.value);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ReturnStatement.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitReturnStmt(this, context);\n    };\n    return ReturnStatement;\n}(Statement));\nvar AbstractClassPart = (function () {\n    function AbstractClassPart(type, modifiers) {\n        this.modifiers = modifiers;\n        if (!modifiers) {\n            this.modifiers = [];\n        }\n        this.type = type || null;\n    }\n    /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    AbstractClassPart.prototype.hasModifier = /**\n     * @param {?} modifier\n     * @return {?}\n     */\n    function (modifier) { return /** @type {?} */ ((this.modifiers)).indexOf(modifier) !== -1; };\n    return AbstractClassPart;\n}());\nvar ClassField = (function (_super) {\n    __extends(ClassField, _super);\n    function ClassField(name, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        return _this;\n    }\n    /**\n     * @param {?} f\n     * @return {?}\n     */\n    ClassField.prototype.isEquivalent = /**\n     * @param {?} f\n     * @return {?}\n     */\n    function (f) { return this.name === f.name; };\n    return ClassField;\n}(AbstractClassPart));\nvar ClassMethod = (function (_super) {\n    __extends(ClassMethod, _super);\n    function ClassMethod(name, params, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.params = params;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassMethod.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassMethod;\n}(AbstractClassPart));\nvar ClassGetter = (function (_super) {\n    __extends(ClassGetter, _super);\n    function ClassGetter(name, body, type, modifiers) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, type, modifiers) || this;\n        _this.name = name;\n        _this.body = body;\n        return _this;\n    }\n    /**\n     * @param {?} m\n     * @return {?}\n     */\n    ClassGetter.prototype.isEquivalent = /**\n     * @param {?} m\n     * @return {?}\n     */\n    function (m) {\n        return this.name === m.name && areAllEquivalent(this.body, m.body);\n    };\n    return ClassGetter;\n}(AbstractClassPart));\nvar ClassStmt = (function (_super) {\n    __extends(ClassStmt, _super);\n    function ClassStmt(name, parent, fields, getters, constructorMethod, methods, modifiers, sourceSpan) {\n        if (modifiers === void 0) { modifiers = null; }\n        var _this = _super.call(this, modifiers, sourceSpan) || this;\n        _this.name = name;\n        _this.parent = parent;\n        _this.fields = fields;\n        _this.getters = getters;\n        _this.constructorMethod = constructorMethod;\n        _this.methods = methods;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ClassStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof ClassStmt && this.name === stmt.name &&\n            nullSafeIsEquivalent(this.parent, stmt.parent) &&\n            areAllEquivalent(this.fields, stmt.fields) &&\n            areAllEquivalent(this.getters, stmt.getters) &&\n            this.constructorMethod.isEquivalent(stmt.constructorMethod) &&\n            areAllEquivalent(this.methods, stmt.methods);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ClassStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitDeclareClassStmt(this, context);\n    };\n    return ClassStmt;\n}(Statement));\nvar IfStmt = (function (_super) {\n    __extends(IfStmt, _super);\n    function IfStmt(condition, trueCase, falseCase, sourceSpan) {\n        if (falseCase === void 0) { falseCase = []; }\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.condition = condition;\n        _this.trueCase = trueCase;\n        _this.falseCase = falseCase;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    IfStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof IfStmt && this.condition.isEquivalent(stmt.condition) &&\n            areAllEquivalent(this.trueCase, stmt.trueCase) &&\n            areAllEquivalent(this.falseCase, stmt.falseCase);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    IfStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitIfStmt(this, context);\n    };\n    return IfStmt;\n}(Statement));\nvar CommentStmt = (function (_super) {\n    __extends(CommentStmt, _super);\n    function CommentStmt(comment, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.comment = comment;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    CommentStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) { return stmt instanceof CommentStmt; };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    CommentStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitCommentStmt(this, context);\n    };\n    return CommentStmt;\n}(Statement));\nvar TryCatchStmt = (function (_super) {\n    __extends(TryCatchStmt, _super);\n    function TryCatchStmt(bodyStmts, catchStmts, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.bodyStmts = bodyStmts;\n        _this.catchStmts = catchStmts;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    TryCatchStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && areAllEquivalent(this.bodyStmts, stmt.bodyStmts) &&\n            areAllEquivalent(this.catchStmts, stmt.catchStmts);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    TryCatchStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitTryCatchStmt(this, context);\n    };\n    return TryCatchStmt;\n}(Statement));\nvar ThrowStmt = (function (_super) {\n    __extends(ThrowStmt, _super);\n    function ThrowStmt(error, sourceSpan) {\n        var _this = _super.call(this, null, sourceSpan) || this;\n        _this.error = error;\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    ThrowStmt.prototype.isEquivalent = /**\n     * @param {?} stmt\n     * @return {?}\n     */\n    function (stmt) {\n        return stmt instanceof TryCatchStmt && this.error.isEquivalent(stmt.error);\n    };\n    /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    ThrowStmt.prototype.visitStatement = /**\n     * @param {?} visitor\n     * @param {?} context\n     * @return {?}\n     */\n    function (visitor, context) {\n        return visitor.visitThrowStmt(this, context);\n    };\n    return ThrowStmt;\n}(Statement));\n/**\n * @record\n */\n\nvar AstTransformer$1 = (function () {\n    function AstTransformer() {\n    }\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) { return expr; };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteVarExpr(expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WriteKeyExpr(expr.receiver.visitExpression(this, context), expr.index.visitExpression(this, context), expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        return this.transformExpr(new WritePropExpr(expr.receiver.visitExpression(this, context), expr.name, expr.value.visitExpression(this, context), expr.type, expr.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ method = ast.builtin || ast.name;\n        return this.transformExpr(new InvokeMethodExpr(ast.receiver.visitExpression(this, context), /** @type {?} */ ((method)), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InvokeFunctionExpr(ast.fn.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new InstantiateExpr(ast.classExpr.visitExpression(this, context), this.visitAllExpressions(ast.args, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return this.transformExpr(ast, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ConditionalExpr(ast.condition.visitExpression(this, context), ast.trueCase.visitExpression(this, context), /** @type {?} */ ((ast.falseCase)).visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new NotExpr(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new AssertNotNull(ast.condition.visitExpression(this, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CastExpr(ast.value.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new FunctionExpr(ast.params, this.visitAllStatements(ast.statements, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new BinaryOperatorExpr(ast.operator, ast.lhs.visitExpression(this, context), ast.rhs.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadPropExpr(ast.receiver.visitExpression(this, context), ast.name, ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new ReadKeyExpr(ast.receiver.visitExpression(this, context), ast.index.visitExpression(this, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new LiteralArrayExpr(this.visitAllExpressions(ast.entries, context), ast.type, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ entries = ast.entries.map(function (entry) {\n            return new LiteralMapEntry(entry.key, entry.value.visitExpression(_this, context), entry.quoted);\n        });\n        var /** @type {?} */ mapType = new MapType(ast.valueType, null);\n        return this.transformExpr(new LiteralMapExpr(entries, mapType, ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.transformExpr(new CommaExpr(this.visitAllExpressions(ast.parts, context), ast.sourceSpan), context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        return exprs.map(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareVarStmt(stmt.name, stmt.value.visitExpression(this, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new DeclareFunctionStmt(stmt.name, stmt.params, this.visitAllStatements(stmt.statements, context), stmt.type, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ExpressionStatement(stmt.expr.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ReturnStatement(stmt.value.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        var /** @type {?} */ parent = /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        var /** @type {?} */ getters = stmt.getters.map(function (getter) {\n            return new ClassGetter(getter.name, _this.visitAllStatements(getter.body, context), getter.type, getter.modifiers);\n        });\n        var /** @type {?} */ ctorMethod = stmt.constructorMethod &&\n            new ClassMethod(stmt.constructorMethod.name, stmt.constructorMethod.params, this.visitAllStatements(stmt.constructorMethod.body, context), stmt.constructorMethod.type, stmt.constructorMethod.modifiers);\n        var /** @type {?} */ methods = stmt.methods.map(function (method) {\n            return new ClassMethod(method.name, method.params, _this.visitAllStatements(method.body, context), method.type, method.modifiers);\n        });\n        return this.transformStmt(new ClassStmt(stmt.name, parent, stmt.fields, getters, ctorMethod, methods, stmt.modifiers, stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new IfStmt(stmt.condition.visitExpression(this, context), this.visitAllStatements(stmt.trueCase, context), this.visitAllStatements(stmt.falseCase, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new TryCatchStmt(this.visitAllStatements(stmt.bodyStmts, context), this.visitAllStatements(stmt.catchStmts, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(new ThrowStmt(stmt.error.visitExpression(this, context), stmt.sourceSpan), context);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        return this.transformStmt(stmt, context);\n    };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    AstTransformer.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        return stmts.map(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return AstTransformer;\n}());\nvar RecursiveAstVisitor$1 = (function () {\n    function RecursiveAstVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitType = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { return ast; };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpression = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.type) {\n            ast.type.visitType(this, context);\n        }\n        return ast;\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) {\n        type.value.visitExpression(this, context);\n        return this.visitType(type, context);\n    };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} context\n     * @return {?}\n     */\n    function (type, context) { return this.visitType(type, context); };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.fn.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.classExpr.visitExpression(this, context);\n        this.visitAllExpressions(ast.args, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        if (ast.typeParams) {\n            ast.typeParams.forEach(function (type) { return type.visitType(_this, context); });\n        }\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        ast.trueCase.visitExpression(this, context); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.condition.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.value.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllStatements(ast.statements, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.lhs.visitExpression(this, context);\n        ast.rhs.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        ast.receiver.visitExpression(this, context);\n        ast.index.visitExpression(this, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.entries, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        ast.entries.forEach(function (entry) { return entry.value.visitExpression(_this, context); });\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitAllExpressions(ast.parts, context);\n        return this.visitExpression(ast, context);\n    };\n    /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllExpressions = /**\n     * @param {?} exprs\n     * @param {?} context\n     * @return {?}\n     */\n    function (exprs, context) {\n        var _this = this;\n        exprs.forEach(function (expr) { return expr.visitExpression(_this, context); });\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.statements, context);\n        if (stmt.type) {\n            stmt.type.visitType(this, context);\n        }\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.expr.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.value.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        var _this = this;\n        /** @type {?} */ ((stmt.parent)).visitExpression(this, context);\n        stmt.getters.forEach(function (getter) { return _this.visitAllStatements(getter.body, context); });\n        if (stmt.constructorMethod) {\n            this.visitAllStatements(stmt.constructorMethod.body, context);\n        }\n        stmt.methods.forEach(function (method) { return _this.visitAllStatements(method.body, context); });\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.condition.visitExpression(this, context);\n        this.visitAllStatements(stmt.trueCase, context);\n        this.visitAllStatements(stmt.falseCase, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        this.visitAllStatements(stmt.bodyStmts, context);\n        this.visitAllStatements(stmt.catchStmts, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        stmt.error.visitExpression(this, context);\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) { return stmt; };\n    /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    RecursiveAstVisitor.prototype.visitAllStatements = /**\n     * @param {?} stmts\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmts, context) {\n        var _this = this;\n        stmts.forEach(function (stmt) { return stmt.visitStatement(_this, context); });\n    };\n    return RecursiveAstVisitor;\n}());\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction findReadVarNames(stmts) {\n    var /** @type {?} */ visitor = new _ReadVarVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.varNames;\n}\nvar _ReadVarVisitor = (function (_super) {\n    __extends(_ReadVarVisitor, _super);\n    function _ReadVarVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.varNames = new Set();\n        return _this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested functions\n        return stmt;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        // Don't descend into nested classes\n        return stmt;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _ReadVarVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        if (ast.name) {\n            this.varNames.add(ast.name);\n        }\n        return null;\n    };\n    return _ReadVarVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmts\n * @return {?}\n */\nfunction collectExternalReferences(stmts) {\n    var /** @type {?} */ visitor = new _FindExternalReferencesVisitor();\n    visitor.visitAllStatements(stmts, null);\n    return visitor.externalReferences;\n}\nvar _FindExternalReferencesVisitor = (function (_super) {\n    __extends(_FindExternalReferencesVisitor, _super);\n    function _FindExternalReferencesVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.externalReferences = [];\n        return _this;\n    }\n    /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    _FindExternalReferencesVisitor.prototype.visitExternalExpr = /**\n     * @param {?} e\n     * @param {?} context\n     * @return {?}\n     */\n    function (e, context) {\n        this.externalReferences.push(e.value);\n        return _super.prototype.visitExternalExpr.call(this, e, context);\n    };\n    return _FindExternalReferencesVisitor;\n}(RecursiveAstVisitor$1));\n/**\n * @param {?} stmt\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToStatementIfNeeded(stmt, sourceSpan) {\n    if (!sourceSpan) {\n        return stmt;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return stmt.visitStatement(transformer, null);\n}\n/**\n * @param {?} expr\n * @param {?} sourceSpan\n * @return {?}\n */\nfunction applySourceSpanToExpressionIfNeeded(expr, sourceSpan) {\n    if (!sourceSpan) {\n        return expr;\n    }\n    var /** @type {?} */ transformer = new _ApplySourceSpanTransformer(sourceSpan);\n    return expr.visitExpression(transformer, null);\n}\nvar _ApplySourceSpanTransformer = (function (_super) {\n    __extends(_ApplySourceSpanTransformer, _super);\n    function _ApplySourceSpanTransformer(sourceSpan) {\n        var _this = _super.call(this) || this;\n        _this.sourceSpan = sourceSpan;\n        return _this;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype._clone = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) {\n        var /** @type {?} */ clone = Object.create(obj.constructor.prototype);\n        for (var /** @type {?} */ prop in obj) {\n            clone[prop] = obj[prop];\n        }\n        return clone;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformExpr = /**\n     * @param {?} expr\n     * @param {?} context\n     * @return {?}\n     */\n    function (expr, context) {\n        if (!expr.sourceSpan) {\n            expr = this._clone(expr);\n            expr.sourceSpan = this.sourceSpan;\n        }\n        return expr;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    _ApplySourceSpanTransformer.prototype.transformStmt = /**\n     * @param {?} stmt\n     * @param {?} context\n     * @return {?}\n     */\n    function (stmt, context) {\n        if (!stmt.sourceSpan) {\n            stmt = this._clone(stmt);\n            stmt.sourceSpan = this.sourceSpan;\n        }\n        return stmt;\n    };\n    return _ApplySourceSpanTransformer;\n}(AstTransformer$1));\n/**\n * @param {?} name\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction variable(name, type, sourceSpan) {\n    return new ReadVarExpr(name, type, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction importExpr(id, typeParams, sourceSpan) {\n    if (typeParams === void 0) { typeParams = null; }\n    return new ExternalExpr(id, null, typeParams, sourceSpan);\n}\n/**\n * @param {?} id\n * @param {?=} typeParams\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction importType(id, typeParams, typeModifiers) {\n    if (typeParams === void 0) { typeParams = null; }\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return id != null ? expressionType(importExpr(id, typeParams, null), typeModifiers) : null;\n}\n/**\n * @param {?} expr\n * @param {?=} typeModifiers\n * @return {?}\n */\nfunction expressionType(expr, typeModifiers) {\n    if (typeModifiers === void 0) { typeModifiers = null; }\n    return new ExpressionType(expr, typeModifiers);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literalArr(values, type, sourceSpan) {\n    return new LiteralArrayExpr(values, type, sourceSpan);\n}\n/**\n * @param {?} values\n * @param {?=} type\n * @return {?}\n */\nfunction literalMap(values, type) {\n    if (type === void 0) { type = null; }\n    return new LiteralMapExpr(values.map(function (e) { return new LiteralMapEntry(e.key, e.value, e.quoted); }), type, null);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction not(expr, sourceSpan) {\n    return new NotExpr(expr, sourceSpan);\n}\n/**\n * @param {?} expr\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction assertNotNull(expr, sourceSpan) {\n    return new AssertNotNull(expr, sourceSpan);\n}\n/**\n * @param {?} params\n * @param {?} body\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction fn(params, body, type, sourceSpan) {\n    return new FunctionExpr(params, body, type, sourceSpan);\n}\n/**\n * @param {?} value\n * @param {?=} type\n * @param {?=} sourceSpan\n * @return {?}\n */\nfunction literal(value, type, sourceSpan) {\n    return new LiteralExpr(value, type, sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ProviderError = (function (_super) {\n    __extends(ProviderError, _super);\n    function ProviderError(message, span) {\n        return _super.call(this, span, message) || this;\n    }\n    return ProviderError;\n}(ParseError));\n/**\n * @record\n */\n\nvar ProviderViewContext = (function () {\n    function ProviderViewContext(reflector, component) {\n        var _this = this;\n        this.reflector = reflector;\n        this.component = component;\n        this.errors = [];\n        this.viewQueries = _getViewQueries(component);\n        this.viewProviders = new Map();\n        component.viewProviders.forEach(function (provider) {\n            if (_this.viewProviders.get(tokenReference(provider.token)) == null) {\n                _this.viewProviders.set(tokenReference(provider.token), true);\n            }\n        });\n    }\n    return ProviderViewContext;\n}());\nvar ProviderElementContext = (function () {\n    function ProviderElementContext(viewContext, _parent, _isViewRoot, _directiveAsts, attrs, refs, isTemplate, contentQueryStartId, _sourceSpan) {\n        var _this = this;\n        this.viewContext = viewContext;\n        this._parent = _parent;\n        this._isViewRoot = _isViewRoot;\n        this._directiveAsts = _directiveAsts;\n        this._sourceSpan = _sourceSpan;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._queriedTokens = new Map();\n        this.transformedHasViewContainer = false;\n        this._attrs = {};\n        attrs.forEach(function (attrAst) { return _this._attrs[attrAst.name] = attrAst.value; });\n        var /** @type {?} */ directivesMeta = _directiveAsts.map(function (directiveAst) { return directiveAst.directive; });\n        this._allProviders =\n            _resolveProvidersFromDirectives(directivesMeta, _sourceSpan, viewContext.errors);\n        this._contentQueries = _getContentQueries(contentQueryStartId, directivesMeta);\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._addQueryReadsTo(provider.token, provider.token, _this._queriedTokens);\n        });\n        if (isTemplate) {\n            var /** @type {?} */ templateRefId = createTokenForExternalReference(this.viewContext.reflector, Identifiers.TemplateRef);\n            this._addQueryReadsTo(templateRefId, templateRefId, this._queriedTokens);\n        }\n        refs.forEach(function (refAst) {\n            var /** @type {?} */ defaultQueryValue = refAst.value ||\n                createTokenForExternalReference(_this.viewContext.reflector, Identifiers.ElementRef);\n            _this._addQueryReadsTo({ value: refAst.name }, defaultQueryValue, _this._queriedTokens);\n        });\n        if (this._queriedTokens.get(this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef))) {\n            this.transformedHasViewContainer = true;\n        }\n        // create the providers that we know are eager first\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            var /** @type {?} */ eager = provider.eager || _this._queriedTokens.get(tokenReference(provider.token));\n            if (eager) {\n                _this._getOrCreateLocalProvider(provider.providerType, provider.token, true);\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ProviderElementContext.prototype.afterElement = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        // collect lazy providers\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.providerType, provider.token, false);\n        });\n    };\n    Object.defineProperty(ProviderElementContext.prototype, \"transformProviders\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Note: Maps keep their insertion order.\n            var /** @type {?} */ lazyProviders = [];\n            var /** @type {?} */ eagerProviders = [];\n            this._transformedProviders.forEach(function (provider) {\n                if (provider.eager) {\n                    eagerProviders.push(provider);\n                }\n                else {\n                    lazyProviders.push(provider);\n                }\n            });\n            return lazyProviders.concat(eagerProviders);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"transformedDirectiveAsts\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ sortedProviderTypes = this.transformProviders.map(function (provider) { return provider.token.identifier; });\n            var /** @type {?} */ sortedDirectives = this._directiveAsts.slice();\n            sortedDirectives.sort(function (dir1, dir2) {\n                return sortedProviderTypes.indexOf(dir1.directive.type) -\n                    sortedProviderTypes.indexOf(dir2.directive.type);\n            });\n            return sortedDirectives;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProviderElementContext.prototype, \"queryMatches\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ allMatches = [];\n            this._queriedTokens.forEach(function (matches) { allMatches.push.apply(allMatches, matches); });\n            return allMatches;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    ProviderElementContext.prototype._addQueryReadsTo = /**\n     * @param {?} token\n     * @param {?} defaultValue\n     * @param {?} queryReadTokens\n     * @return {?}\n     */\n    function (token, defaultValue, queryReadTokens) {\n        this._getQueriesFor(token).forEach(function (query) {\n            var /** @type {?} */ queryValue = query.meta.read || defaultValue;\n            var /** @type {?} */ tokenRef = tokenReference(queryValue);\n            var /** @type {?} */ queryMatches = queryReadTokens.get(tokenRef);\n            if (!queryMatches) {\n                queryMatches = [];\n                queryReadTokens.set(tokenRef, queryMatches);\n            }\n            queryMatches.push({ queryId: query.queryId, value: queryValue });\n        });\n    };\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getQueriesFor = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        var /** @type {?} */ result = [];\n        var /** @type {?} */ currentEl = this;\n        var /** @type {?} */ distance = 0;\n        var /** @type {?} */ queries;\n        while (currentEl !== null) {\n            queries = currentEl._contentQueries.get(tokenReference(token));\n            if (queries) {\n                result.push.apply(result, queries.filter(function (query) { return query.meta.descendants || distance <= 1; }));\n            }\n            if (currentEl._directiveAsts.length > 0) {\n                distance++;\n            }\n            currentEl = currentEl._parent;\n        }\n        queries = this.viewContext.viewQueries.get(tokenReference(token));\n        if (queries) {\n            result.push.apply(result, queries);\n        }\n        return result;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getOrCreateLocalProvider = /**\n     * @param {?} requestingProviderType\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (requestingProviderType, token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider || ((requestingProviderType === ProviderAstType.Directive ||\n            requestingProviderType === ProviderAstType.PublicService) &&\n            resolvedProvider.providerType === ProviderAstType.PrivateService) ||\n            ((requestingProviderType === ProviderAstType.PrivateService ||\n                requestingProviderType === ProviderAstType.PublicService) &&\n                resolvedProvider.providerType === ProviderAstType.Builtin)) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this.viewContext.errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), this._sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, { token: provider.useExisting }, eager)));\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return /** @type {?} */ ((_this._getDependency(resolvedProvider.providerType, dep, eager))); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getLocalDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        if (dep.isAttribute) {\n            var /** @type {?} */ attrValue = this._attrs[/** @type {?} */ ((dep.token)).value];\n            return { isValue: true, value: attrValue == null ? null : attrValue };\n        }\n        if (dep.token != null) {\n            // access builtints\n            if ((requestingProviderType === ProviderAstType.Directive ||\n                requestingProviderType === ProviderAstType.Component)) {\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.Renderer) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ElementRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.ChangeDetectorRef) ||\n                    tokenReference(dep.token) ===\n                        this.viewContext.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                    return dep;\n                }\n                if (tokenReference(dep.token) ===\n                    this.viewContext.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                    (/** @type {?} */ (this)).transformedHasViewContainer = true;\n                }\n            }\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.viewContext.reflector.resolveExternalReference(Identifiers.Injector)) {\n                return dep;\n            }\n            // access providers\n            if (this._getOrCreateLocalProvider(requestingProviderType, dep.token, eager) != null) {\n                return dep;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    ProviderElementContext.prototype._getDependency = /**\n     * @param {?} requestingProviderType\n     * @param {?} dep\n     * @param {?=} eager\n     * @return {?}\n     */\n    function (requestingProviderType, dep, eager) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ currElement = this;\n        var /** @type {?} */ currEager = eager;\n        var /** @type {?} */ result = null;\n        if (!dep.isSkipSelf) {\n            result = this._getLocalDependency(requestingProviderType, dep, eager);\n        }\n        if (dep.isSelf) {\n            if (!result && dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n        }\n        else {\n            // check parent elements\n            while (!result && currElement._parent) {\n                var /** @type {?} */ prevElement = currElement;\n                currElement = currElement._parent;\n                if (prevElement._isViewRoot) {\n                    currEager = false;\n                }\n                result = currElement._getLocalDependency(ProviderAstType.PublicService, dep, currEager);\n            }\n            // check @Host restriction\n            if (!result) {\n                if (!dep.isHost || this.viewContext.component.isHost ||\n                    this.viewContext.component.type.reference === tokenReference(/** @type {?} */ ((dep.token))) ||\n                    this.viewContext.viewProviders.get(tokenReference(/** @type {?} */ ((dep.token)))) != null) {\n                    result = dep;\n                }\n                else {\n                    result = dep.isOptional ? result = { isValue: true, value: null } : null;\n                }\n            }\n        }\n        if (!result) {\n            this.viewContext.errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), this._sourceSpan));\n        }\n        return result;\n    };\n    return ProviderElementContext;\n}());\nvar NgModuleProviderAnalyzer = (function () {\n    function NgModuleProviderAnalyzer(reflector, ngModule, extraProviders, sourceSpan) {\n        var _this = this;\n        this.reflector = reflector;\n        this._transformedProviders = new Map();\n        this._seenProviders = new Map();\n        this._errors = [];\n        this._allProviders = new Map();\n        ngModule.transitiveModule.modules.forEach(function (ngModuleType) {\n            var /** @type {?} */ ngModuleProvider = { token: { identifier: ngModuleType }, useClass: ngModuleType };\n            _resolveProviders([ngModuleProvider], ProviderAstType.PublicService, true, sourceSpan, _this._errors, _this._allProviders);\n        });\n        _resolveProviders(ngModule.transitiveModule.providers.map(function (entry) { return entry.provider; }).concat(extraProviders), ProviderAstType.PublicService, false, sourceSpan, this._errors, this._allProviders);\n    }\n    /**\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype.parse = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        Array.from(this._allProviders.values()).forEach(function (provider) {\n            _this._getOrCreateLocalProvider(provider.token, provider.eager);\n        });\n        if (this._errors.length > 0) {\n            var /** @type {?} */ errorString = this._errors.join('\\n');\n            throw new Error(\"Provider parse errors:\\n\" + errorString);\n        }\n        // Note: Maps keep their insertion order.\n        var /** @type {?} */ lazyProviders = [];\n        var /** @type {?} */ eagerProviders = [];\n        this._transformedProviders.forEach(function (provider) {\n            if (provider.eager) {\n                eagerProviders.push(provider);\n            }\n            else {\n                lazyProviders.push(provider);\n            }\n        });\n        return lazyProviders.concat(eagerProviders);\n    };\n    /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getOrCreateLocalProvider = /**\n     * @param {?} token\n     * @param {?} eager\n     * @return {?}\n     */\n    function (token, eager) {\n        var _this = this;\n        var /** @type {?} */ resolvedProvider = this._allProviders.get(tokenReference(token));\n        if (!resolvedProvider) {\n            return null;\n        }\n        var /** @type {?} */ transformedProviderAst = this._transformedProviders.get(tokenReference(token));\n        if (transformedProviderAst) {\n            return transformedProviderAst;\n        }\n        if (this._seenProviders.get(tokenReference(token)) != null) {\n            this._errors.push(new ProviderError(\"Cannot instantiate cyclic dependency! \" + tokenName(token), resolvedProvider.sourceSpan));\n            return null;\n        }\n        this._seenProviders.set(tokenReference(token), true);\n        var /** @type {?} */ transformedProviders = resolvedProvider.providers.map(function (provider) {\n            var /** @type {?} */ transformedUseValue = provider.useValue;\n            var /** @type {?} */ transformedUseExisting = /** @type {?} */ ((provider.useExisting));\n            var /** @type {?} */ transformedDeps = /** @type {?} */ ((undefined));\n            if (provider.useExisting != null) {\n                var /** @type {?} */ existingDiDep = _this._getDependency({ token: provider.useExisting }, eager, resolvedProvider.sourceSpan);\n                if (existingDiDep.token != null) {\n                    transformedUseExisting = existingDiDep.token;\n                }\n                else {\n                    transformedUseExisting = /** @type {?} */ ((null));\n                    transformedUseValue = existingDiDep.value;\n                }\n            }\n            else if (provider.useFactory) {\n                var /** @type {?} */ deps = provider.deps || provider.useFactory.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            else if (provider.useClass) {\n                var /** @type {?} */ deps = provider.deps || provider.useClass.diDeps;\n                transformedDeps =\n                    deps.map(function (dep) { return _this._getDependency(dep, eager, resolvedProvider.sourceSpan); });\n            }\n            return _transformProvider(provider, {\n                useExisting: transformedUseExisting,\n                useValue: transformedUseValue,\n                deps: transformedDeps\n            });\n        });\n        transformedProviderAst =\n            _transformProviderAst(resolvedProvider, { eager: eager, providers: transformedProviders });\n        this._transformedProviders.set(tokenReference(token), transformedProviderAst);\n        return transformedProviderAst;\n    };\n    /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    NgModuleProviderAnalyzer.prototype._getDependency = /**\n     * @param {?} dep\n     * @param {?=} eager\n     * @param {?=} requestorSourceSpan\n     * @return {?}\n     */\n    function (dep, eager, requestorSourceSpan) {\n        if (eager === void 0) { eager = false; }\n        var /** @type {?} */ foundLocal = false;\n        if (!dep.isSkipSelf && dep.token != null) {\n            // access the injector\n            if (tokenReference(dep.token) ===\n                this.reflector.resolveExternalReference(Identifiers.Injector) ||\n                tokenReference(dep.token) ===\n                    this.reflector.resolveExternalReference(Identifiers.ComponentFactoryResolver)) {\n                foundLocal = true;\n                // access providers\n            }\n            else if (this._getOrCreateLocalProvider(dep.token, eager) != null) {\n                foundLocal = true;\n            }\n        }\n        var /** @type {?} */ result = dep;\n        if (dep.isSelf && !foundLocal) {\n            if (dep.isOptional) {\n                result = { isValue: true, value: null };\n            }\n            else {\n                this._errors.push(new ProviderError(\"No provider for \" + tokenName((/** @type {?} */ ((dep.token)))), requestorSourceSpan));\n            }\n        }\n        return result;\n    };\n    return NgModuleProviderAnalyzer;\n}());\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProvider(provider, _a) {\n    var useExisting = _a.useExisting, useValue = _a.useValue, deps = _a.deps;\n    return {\n        token: provider.token,\n        useClass: provider.useClass,\n        useExisting: useExisting,\n        useFactory: provider.useFactory,\n        useValue: useValue,\n        deps: deps,\n        multi: provider.multi\n    };\n}\n/**\n * @param {?} provider\n * @param {?} __1\n * @return {?}\n */\nfunction _transformProviderAst(provider, _a) {\n    var eager = _a.eager, providers = _a.providers;\n    return new ProviderAst(provider.token, provider.multiProvider, provider.eager || eager, providers, provider.providerType, provider.lifecycleHooks, provider.sourceSpan);\n}\n/**\n * @param {?} directives\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @return {?}\n */\nfunction _resolveProvidersFromDirectives(directives, sourceSpan, targetErrors) {\n    var /** @type {?} */ providersByToken = new Map();\n    directives.forEach(function (directive) {\n        var /** @type {?} */ dirProvider = { token: { identifier: directive.type }, useClass: directive.type };\n        _resolveProviders([dirProvider], directive.isComponent ? ProviderAstType.Component : ProviderAstType.Directive, true, sourceSpan, targetErrors, providersByToken);\n    });\n    // Note: directives need to be able to overwrite providers of a component!\n    var /** @type {?} */ directivesWithComponentFirst = directives.filter(function (dir) { return dir.isComponent; }).concat(directives.filter(function (dir) { return !dir.isComponent; }));\n    directivesWithComponentFirst.forEach(function (directive) {\n        _resolveProviders(directive.providers, ProviderAstType.PublicService, false, sourceSpan, targetErrors, providersByToken);\n        _resolveProviders(directive.viewProviders, ProviderAstType.PrivateService, false, sourceSpan, targetErrors, providersByToken);\n    });\n    return providersByToken;\n}\n/**\n * @param {?} providers\n * @param {?} providerType\n * @param {?} eager\n * @param {?} sourceSpan\n * @param {?} targetErrors\n * @param {?} targetProvidersByToken\n * @return {?}\n */\nfunction _resolveProviders(providers, providerType, eager, sourceSpan, targetErrors, targetProvidersByToken) {\n    providers.forEach(function (provider) {\n        var /** @type {?} */ resolvedProvider = targetProvidersByToken.get(tokenReference(provider.token));\n        if (resolvedProvider != null && !!resolvedProvider.multiProvider !== !!provider.multi) {\n            targetErrors.push(new ProviderError(\"Mixing multi and non multi provider is not possible for token \" + tokenName(resolvedProvider.token), sourceSpan));\n        }\n        if (!resolvedProvider) {\n            var /** @type {?} */ lifecycleHooks = provider.token.identifier &&\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks ?\n                (/** @type {?} */ (provider.token.identifier)).lifecycleHooks :\n                [];\n            var /** @type {?} */ isUseValue = !(provider.useClass || provider.useExisting || provider.useFactory);\n            resolvedProvider = new ProviderAst(provider.token, !!provider.multi, eager || isUseValue, [provider], providerType, lifecycleHooks, sourceSpan);\n            targetProvidersByToken.set(tokenReference(provider.token), resolvedProvider);\n        }\n        else {\n            if (!provider.multi) {\n                resolvedProvider.providers.length = 0;\n            }\n            resolvedProvider.providers.push(provider);\n        }\n    });\n}\n/**\n * @param {?} component\n * @return {?}\n */\nfunction _getViewQueries(component) {\n    // Note: queries start with id 1 so we can use the number in a Bloom filter!\n    var /** @type {?} */ viewQueryId = 1;\n    var /** @type {?} */ viewQueries = new Map();\n    if (component.viewQueries) {\n        component.viewQueries.forEach(function (query) { return _addQueryToTokenMap(viewQueries, { meta: query, queryId: viewQueryId++ }); });\n    }\n    return viewQueries;\n}\n/**\n * @param {?} contentQueryStartId\n * @param {?} directives\n * @return {?}\n */\nfunction _getContentQueries(contentQueryStartId, directives) {\n    var /** @type {?} */ contentQueryId = contentQueryStartId;\n    var /** @type {?} */ contentQueries = new Map();\n    directives.forEach(function (directive, directiveIndex) {\n        if (directive.queries) {\n            directive.queries.forEach(function (query) { return _addQueryToTokenMap(contentQueries, { meta: query, queryId: contentQueryId++ }); });\n        }\n    });\n    return contentQueries;\n}\n/**\n * @param {?} map\n * @param {?} query\n * @return {?}\n */\nfunction _addQueryToTokenMap(map, query) {\n    query.meta.selectors.forEach(function (token) {\n        var /** @type {?} */ entry = map.get(tokenReference(token));\n        if (!entry) {\n            entry = [];\n            map.set(tokenReference(token), entry);\n        }\n        entry.push(query);\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar QUOTED_KEYS = '$quoted$';\n/**\n * @param {?} ctx\n * @param {?} value\n * @param {?=} type\n * @return {?}\n */\nfunction convertValueToOutputAst(ctx, value, type) {\n    if (type === void 0) { type = null; }\n    return visitValue(value, new _ValueOutputAstTransformer(ctx), type);\n}\nvar _ValueOutputAstTransformer = (function () {\n    function _ValueOutputAstTransformer(ctx) {\n        this.ctx = ctx;\n    }\n    /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitArray = /**\n     * @param {?} arr\n     * @param {?} type\n     * @return {?}\n     */\n    function (arr, type) {\n        var _this = this;\n        return literalArr(arr.map(function (value) { return visitValue(value, _this, null); }), type);\n    };\n    /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} type\n     * @return {?}\n     */\n    function (map, type) {\n        var _this = this;\n        var /** @type {?} */ entries = [];\n        var /** @type {?} */ quotedSet = new Set(map && map[QUOTED_KEYS]);\n        Object.keys(map).forEach(function (key) {\n            entries.push(new LiteralMapEntry(key, visitValue(map[key], _this, null), quotedSet.has(key)));\n        });\n        return new LiteralMapExpr(entries, type);\n    };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitPrimitive = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) { return literal(value, type); };\n    /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    _ValueOutputAstTransformer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} type\n     * @return {?}\n     */\n    function (value, type) {\n        if (value instanceof Expression) {\n            return value;\n        }\n        else {\n            return this.ctx.importExpr(value);\n        }\n    };\n    return _ValueOutputAstTransformer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ctx\n * @param {?} providerAst\n * @return {?}\n */\nfunction providerDef(ctx, providerAst) {\n    var /** @type {?} */ flags = 0;\n    if (!providerAst.eager) {\n        flags |= 4096 /* LazyProvider */;\n    }\n    if (providerAst.providerType === ProviderAstType.PrivateService) {\n        flags |= 8192 /* PrivateProvider */;\n    }\n    providerAst.lifecycleHooks.forEach(function (lifecycleHook) {\n        // for regular providers, we only support ngOnDestroy\n        if (lifecycleHook === LifecycleHooks.OnDestroy ||\n            providerAst.providerType === ProviderAstType.Directive ||\n            providerAst.providerType === ProviderAstType.Component) {\n            flags |= lifecycleHookToNodeFlag(lifecycleHook);\n        }\n    });\n    var _a = providerAst.multiProvider ?\n        multiProviderDef(ctx, flags, providerAst.providers) :\n        singleProviderDef(ctx, flags, providerAst.providerType, providerAst.providers[0]), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return {\n        providerExpr: providerExpr,\n        flags: providerFlags, depsExpr: depsExpr,\n        tokenExpr: tokenExpr(ctx, providerAst.token),\n    };\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providers\n * @return {?}\n */\nfunction multiProviderDef(ctx, flags, providers) {\n    var /** @type {?} */ allDepDefs = [];\n    var /** @type {?} */ allParams = [];\n    var /** @type {?} */ exprs = providers.map(function (provider, providerIndex) {\n        var /** @type {?} */ expr;\n        if (provider.useClass) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useClass.diDeps);\n            expr = ctx.importExpr(provider.useClass.reference).instantiate(depExprs);\n        }\n        else if (provider.useFactory) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, provider.deps || provider.useFactory.diDeps);\n            expr = ctx.importExpr(provider.useFactory.reference).callFn(depExprs);\n        }\n        else if (provider.useExisting) {\n            var /** @type {?} */ depExprs = convertDeps(providerIndex, [{ token: provider.useExisting }]);\n            expr = depExprs[0];\n        }\n        else {\n            expr = convertValueToOutputAst(ctx, provider.useValue);\n        }\n        return expr;\n    });\n    var /** @type {?} */ providerExpr = fn(allParams, [new ReturnStatement(literalArr(exprs))], INFERRED_TYPE);\n    return {\n        providerExpr: providerExpr,\n        flags: flags | 1024 /* TypeFactoryProvider */,\n        depsExpr: literalArr(allDepDefs)\n    };\n    /**\n     * @param {?} providerIndex\n     * @param {?} deps\n     * @return {?}\n     */\n    function convertDeps(providerIndex, deps) {\n        return deps.map(function (dep, depIndex) {\n            var /** @type {?} */ paramName = \"p\" + providerIndex + \"_\" + depIndex;\n            allParams.push(new FnParam(paramName, DYNAMIC_TYPE));\n            allDepDefs.push(depDef(ctx, dep));\n            return variable(paramName);\n        });\n    }\n}\n/**\n * @param {?} ctx\n * @param {?} flags\n * @param {?} providerType\n * @param {?} providerMeta\n * @return {?}\n */\nfunction singleProviderDef(ctx, flags, providerType, providerMeta) {\n    var /** @type {?} */ providerExpr;\n    var /** @type {?} */ deps;\n    if (providerType === ProviderAstType.Directive || providerType === ProviderAstType.Component) {\n        providerExpr = ctx.importExpr(/** @type {?} */ ((providerMeta.useClass)).reference);\n        flags |= 16384 /* TypeDirective */;\n        deps = providerMeta.deps || /** @type {?} */ ((providerMeta.useClass)).diDeps;\n    }\n    else {\n        if (providerMeta.useClass) {\n            providerExpr = ctx.importExpr(providerMeta.useClass.reference);\n            flags |= 512 /* TypeClassProvider */;\n            deps = providerMeta.deps || providerMeta.useClass.diDeps;\n        }\n        else if (providerMeta.useFactory) {\n            providerExpr = ctx.importExpr(providerMeta.useFactory.reference);\n            flags |= 1024 /* TypeFactoryProvider */;\n            deps = providerMeta.deps || providerMeta.useFactory.diDeps;\n        }\n        else if (providerMeta.useExisting) {\n            providerExpr = NULL_EXPR;\n            flags |= 2048 /* TypeUseExistingProvider */;\n            deps = [{ token: providerMeta.useExisting }];\n        }\n        else {\n            providerExpr = convertValueToOutputAst(ctx, providerMeta.useValue);\n            flags |= 256 /* TypeValueProvider */;\n            deps = [];\n        }\n    }\n    var /** @type {?} */ depsExpr = literalArr(deps.map(function (dep) { return depDef(ctx, dep); }));\n    return { providerExpr: providerExpr, flags: flags, depsExpr: depsExpr };\n}\n/**\n * @param {?} ctx\n * @param {?} tokenMeta\n * @return {?}\n */\nfunction tokenExpr(ctx, tokenMeta) {\n    return tokenMeta.identifier ? ctx.importExpr(tokenMeta.identifier.reference) :\n        literal(tokenMeta.value);\n}\n/**\n * @param {?} ctx\n * @param {?} dep\n * @return {?}\n */\nfunction depDef(ctx, dep) {\n    // Note: the following fields have already been normalized out by provider_analyzer:\n    // - isAttribute, isSelf, isHost\n    var /** @type {?} */ expr = dep.isValue ? convertValueToOutputAst(ctx, dep.value) : tokenExpr(ctx, /** @type {?} */ ((dep.token)));\n    var /** @type {?} */ flags = 0;\n    if (dep.isSkipSelf) {\n        flags |= 1 /* SkipSelf */;\n    }\n    if (dep.isOptional) {\n        flags |= 2 /* Optional */;\n    }\n    if (dep.isValue) {\n        flags |= 8 /* Value */;\n    }\n    return flags === 0 /* None */ ? expr : literalArr([literal(flags), expr]);\n}\n/**\n * @param {?} lifecycleHook\n * @return {?}\n */\nfunction lifecycleHookToNodeFlag(lifecycleHook) {\n    var /** @type {?} */ nodeFlag = 0;\n    switch (lifecycleHook) {\n        case LifecycleHooks.AfterContentChecked:\n            nodeFlag = 2097152 /* AfterContentChecked */;\n            break;\n        case LifecycleHooks.AfterContentInit:\n            nodeFlag = 1048576 /* AfterContentInit */;\n            break;\n        case LifecycleHooks.AfterViewChecked:\n            nodeFlag = 8388608 /* AfterViewChecked */;\n            break;\n        case LifecycleHooks.AfterViewInit:\n            nodeFlag = 4194304 /* AfterViewInit */;\n            break;\n        case LifecycleHooks.DoCheck:\n            nodeFlag = 262144 /* DoCheck */;\n            break;\n        case LifecycleHooks.OnChanges:\n            nodeFlag = 524288 /* OnChanges */;\n            break;\n        case LifecycleHooks.OnDestroy:\n            nodeFlag = 131072 /* OnDestroy */;\n            break;\n        case LifecycleHooks.OnInit:\n            nodeFlag = 65536 /* OnInit */;\n            break;\n    }\n    return nodeFlag;\n}\n/**\n * @param {?} reflector\n * @param {?} ctx\n * @param {?} flags\n * @param {?} entryComponents\n * @return {?}\n */\nfunction componentFactoryResolverProviderDef(reflector, ctx, flags, entryComponents) {\n    var /** @type {?} */ entryComponentFactories = entryComponents.map(function (entryComponent) { return ctx.importExpr(entryComponent.componentFactory); });\n    var /** @type {?} */ token = createTokenForExternalReference(reflector, Identifiers.ComponentFactoryResolver);\n    var /** @type {?} */ classMeta = {\n        diDeps: [\n            { isValue: true, value: literalArr(entryComponentFactories) },\n            { token: token, isSkipSelf: true, isOptional: true },\n            { token: createTokenForExternalReference(reflector, Identifiers.NgModuleRef) },\n        ],\n        lifecycleHooks: [],\n        reference: reflector.resolveExternalReference(Identifiers.CodegenComponentFactoryResolver)\n    };\n    var _a = singleProviderDef(ctx, flags, ProviderAstType.PrivateService, {\n        token: token,\n        multi: false,\n        useClass: classMeta,\n    }), providerExpr = _a.providerExpr, providerFlags = _a.flags, depsExpr = _a.depsExpr;\n    return { providerExpr: providerExpr, flags: providerFlags, depsExpr: depsExpr, tokenExpr: tokenExpr(ctx, token) };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NgModuleCompileResult = (function () {\n    function NgModuleCompileResult(ngModuleFactoryVar) {\n        this.ngModuleFactoryVar = ngModuleFactoryVar;\n    }\n    return NgModuleCompileResult;\n}());\nvar LOG_VAR = variable('_l');\nvar NgModuleCompiler = (function () {\n    function NgModuleCompiler(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.compile = /**\n     * @param {?} ctx\n     * @param {?} ngModuleMeta\n     * @param {?} extraProviders\n     * @return {?}\n     */\n    function (ctx, ngModuleMeta, extraProviders) {\n        var /** @type {?} */ sourceSpan = typeSourceSpan('NgModule', ngModuleMeta.type);\n        var /** @type {?} */ entryComponentFactories = ngModuleMeta.transitiveModule.entryComponents;\n        var /** @type {?} */ bootstrapComponents = ngModuleMeta.bootstrapComponents;\n        var /** @type {?} */ providerParser = new NgModuleProviderAnalyzer(this.reflector, ngModuleMeta, extraProviders, sourceSpan);\n        var /** @type {?} */ providerDefs = [componentFactoryResolverProviderDef(this.reflector, ctx, 0 /* None */, entryComponentFactories)]\n            .concat(providerParser.parse().map(function (provider) { return providerDef(ctx, provider); }))\n            .map(function (_a) {\n            var providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            return importExpr(Identifiers.moduleProviderDef).callFn([\n                literal(flags), tokenExpr, providerExpr, depsExpr\n            ]);\n        });\n        var /** @type {?} */ ngModuleDef = importExpr(Identifiers.moduleDef).callFn([literalArr(providerDefs)]);\n        var /** @type {?} */ ngModuleDefFactory = fn([new FnParam(/** @type {?} */ ((LOG_VAR.name)))], [new ReturnStatement(ngModuleDef)], INFERRED_TYPE);\n        var /** @type {?} */ ngModuleFactoryVar = identifierName(ngModuleMeta.type) + \"NgFactory\";\n        this._createNgModuleFactory(ctx, ngModuleMeta.type.reference, importExpr(Identifiers.createModuleFactory).callFn([\n            ctx.importExpr(ngModuleMeta.type.reference),\n            literalArr(bootstrapComponents.map(function (id) { return ctx.importExpr(id.reference); })),\n            ngModuleDefFactory\n        ]));\n        if (ngModuleMeta.id) {\n            var /** @type {?} */ registerFactoryStmt = importExpr(Identifiers.RegisterModuleFactoryFn)\n                .callFn([literal(ngModuleMeta.id), variable(ngModuleFactoryVar)])\n                .toStmt();\n            ctx.statements.push(registerFactoryStmt);\n        }\n        return new NgModuleCompileResult(ngModuleFactoryVar);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    NgModuleCompiler.prototype.createStub = /**\n     * @param {?} ctx\n     * @param {?} ngModuleReference\n     * @return {?}\n     */\n    function (ctx, ngModuleReference) {\n        this._createNgModuleFactory(ctx, ngModuleReference, NULL_EXPR);\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    NgModuleCompiler.prototype._createNgModuleFactory = /**\n     * @param {?} ctx\n     * @param {?} reference\n     * @param {?} value\n     * @return {?}\n     */\n    function (ctx, reference, value) {\n        var /** @type {?} */ ngModuleFactoryVar = identifierName({ reference: reference }) + \"NgFactory\";\n        var /** @type {?} */ ngModuleFactoryStmt = variable(ngModuleFactoryVar)\n            .set(value)\n            .toDeclStmt(importType(Identifiers.NgModuleFactory, [/** @type {?} */ ((expressionType(ctx.importExpr(reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]);\n        ctx.statements.push(ngModuleFactoryStmt);\n    };\n    return NgModuleCompiler;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolves types to {\\@link NgModule}.\n */\nvar NgModuleResolver = (function () {\n    function NgModuleResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    NgModuleResolver.prototype.isNgModule = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this._reflector.annotations(type).some(createNgModule.isTypeOf); };\n    /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    NgModuleResolver.prototype.resolve = /**\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ ngModuleMeta = findLast(this._reflector.annotations(type), createNgModule.isTypeOf);\n        if (ngModuleMeta) {\n            return ngModuleMeta;\n        }\n        else {\n            if (throwIfNotFound) {\n                throw new Error(\"No NgModule metadata found for '\" + stringify(type) + \"'.\");\n            }\n            return null;\n        }\n    };\n    return NgModuleResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\nvar VERSION$1$1 = 3;\nvar JS_B64_PREFIX = '# sourceMappingURL=data:application/json;base64,';\nvar SourceMapGenerator = (function () {\n    function SourceMapGenerator(file) {\n        if (file === void 0) { file = null; }\n        this.file = file;\n        this.sourcesContent = new Map();\n        this.lines = [];\n        this.lastCol0 = 0;\n        this.hasMappings = false;\n    }\n    // The content is `null` when the content is expected to be loaded using the URL\n    /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addSource = /**\n     * @param {?} url\n     * @param {?=} content\n     * @return {?}\n     */\n    function (url, content) {\n        if (content === void 0) { content = null; }\n        if (!this.sourcesContent.has(url)) {\n            this.sourcesContent.set(url, content);\n        }\n        return this;\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addLine = /**\n     * @return {?}\n     */\n    function () {\n        this.lines.push([]);\n        this.lastCol0 = 0;\n        return this;\n    };\n    /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.addMapping = /**\n     * @param {?} col0\n     * @param {?=} sourceUrl\n     * @param {?=} sourceLine0\n     * @param {?=} sourceCol0\n     * @return {?}\n     */\n    function (col0, sourceUrl, sourceLine0, sourceCol0) {\n        if (!this.currentLine) {\n            throw new Error(\"A line must be added before mappings can be added\");\n        }\n        if (sourceUrl != null && !this.sourcesContent.has(sourceUrl)) {\n            throw new Error(\"Unknown source file \\\"\" + sourceUrl + \"\\\"\");\n        }\n        if (col0 == null) {\n            throw new Error(\"The column in the generated code must be provided\");\n        }\n        if (col0 < this.lastCol0) {\n            throw new Error(\"Mapping should be added in output order\");\n        }\n        if (sourceUrl && (sourceLine0 == null || sourceCol0 == null)) {\n            throw new Error(\"The source location must be provided when a source url is provided\");\n        }\n        this.hasMappings = true;\n        this.lastCol0 = col0;\n        this.currentLine.push({ col0: col0, sourceUrl: sourceUrl, sourceLine0: sourceLine0, sourceCol0: sourceCol0 });\n        return this;\n    };\n    Object.defineProperty(SourceMapGenerator.prototype, \"currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.lines.slice(-1)[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJSON = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!this.hasMappings) {\n            return null;\n        }\n        var /** @type {?} */ sourcesIndex = new Map();\n        var /** @type {?} */ sources = [];\n        var /** @type {?} */ sourcesContent = [];\n        Array.from(this.sourcesContent.keys()).forEach(function (url, i) {\n            sourcesIndex.set(url, i);\n            sources.push(url);\n            sourcesContent.push(_this.sourcesContent.get(url) || null);\n        });\n        var /** @type {?} */ mappings = '';\n        var /** @type {?} */ lastCol0 = 0;\n        var /** @type {?} */ lastSourceIndex = 0;\n        var /** @type {?} */ lastSourceLine0 = 0;\n        var /** @type {?} */ lastSourceCol0 = 0;\n        this.lines.forEach(function (segments) {\n            lastCol0 = 0;\n            mappings += segments\n                .map(function (segment) {\n                // zero-based starting column of the line in the generated code\n                var /** @type {?} */ segAsStr = toBase64VLQ(segment.col0 - lastCol0);\n                lastCol0 = segment.col0;\n                if (segment.sourceUrl != null) {\n                    // zero-based index into the “sources” list\n                    segAsStr +=\n                        toBase64VLQ(/** @type {?} */ ((sourcesIndex.get(segment.sourceUrl))) - lastSourceIndex);\n                    lastSourceIndex = /** @type {?} */ ((sourcesIndex.get(segment.sourceUrl)));\n                    // the zero-based starting line in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceLine0)) - lastSourceLine0);\n                    lastSourceLine0 = /** @type {?} */ ((segment.sourceLine0));\n                    // the zero-based starting column in the original source\n                    segAsStr += toBase64VLQ(/** @type {?} */ ((segment.sourceCol0)) - lastSourceCol0);\n                    lastSourceCol0 = /** @type {?} */ ((segment.sourceCol0));\n                }\n                return segAsStr;\n            })\n                .join(',');\n            mappings += ';';\n        });\n        mappings = mappings.slice(0, -1);\n        return {\n            'file': this.file || '',\n            'version': VERSION$1$1,\n            'sourceRoot': '',\n            'sources': sources,\n            'sourcesContent': sourcesContent,\n            'mappings': mappings,\n        };\n    };\n    /**\n     * @return {?}\n     */\n    SourceMapGenerator.prototype.toJsComment = /**\n     * @return {?}\n     */\n    function () {\n        return this.hasMappings ? '//' + JS_B64_PREFIX + toBase64String(JSON.stringify(this, null, 0)) :\n            '';\n    };\n    return SourceMapGenerator;\n}());\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64String(value) {\n    var /** @type {?} */ b64 = '';\n    value = utf8Encode(value);\n    for (var /** @type {?} */ i = 0; i < value.length;) {\n        var /** @type {?} */ i1 = value.charCodeAt(i++);\n        var /** @type {?} */ i2 = value.charCodeAt(i++);\n        var /** @type {?} */ i3 = value.charCodeAt(i++);\n        b64 += toBase64Digit(i1 >> 2);\n        b64 += toBase64Digit(((i1 & 3) << 4) | (isNaN(i2) ? 0 : i2 >> 4));\n        b64 += isNaN(i2) ? '=' : toBase64Digit(((i2 & 15) << 2) | (i3 >> 6));\n        b64 += isNaN(i2) || isNaN(i3) ? '=' : toBase64Digit(i3 & 63);\n    }\n    return b64;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64VLQ(value) {\n    value = value < 0 ? ((-value) << 1) + 1 : value << 1;\n    var /** @type {?} */ out = '';\n    do {\n        var /** @type {?} */ digit = value & 31;\n        value = value >> 5;\n        if (value > 0) {\n            digit = digit | 32;\n        }\n        out += toBase64Digit(digit);\n    } while (value > 0);\n    return out;\n}\nvar B64_DIGITS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toBase64Digit(value) {\n    if (value < 0 || value >= 64) {\n        throw new Error(\"Can only encode value in the range [0, 63]\");\n    }\n    return B64_DIGITS[value];\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar _SINGLE_QUOTE_ESCAPE_STRING_RE = /'|\\\\|\\n|\\r|\\$/g;\nvar _LEGAL_IDENTIFIER_RE = /^[$A-Z_][0-9A-Z_$]*$/i;\nvar _INDENT_WITH = '  ';\nvar CATCH_ERROR_VAR$1 = variable('error', null, null);\nvar CATCH_STACK_VAR$1 = variable('stack', null, null);\n/**\n * @record\n */\n\nvar _EmittedLine = (function () {\n    function _EmittedLine(indent) {\n        this.indent = indent;\n        this.partsLength = 0;\n        this.parts = [];\n        this.srcSpans = [];\n    }\n    return _EmittedLine;\n}());\nvar EmitterVisitorContext = (function () {\n    function EmitterVisitorContext(_indent) {\n        this._indent = _indent;\n        this._classes = [];\n        this._preambleLineCount = 0;\n        this._lines = [new _EmittedLine(_indent)];\n    }\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.createRoot = /**\n     * @return {?}\n     */\n    function () { return new EmitterVisitorContext(0); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"_currentLine\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._lines[this._lines.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.println = /**\n     * @param {?=} from\n     * @param {?=} lastPart\n     * @return {?}\n     */\n    function (from, lastPart) {\n        if (lastPart === void 0) { lastPart = ''; }\n        this.print(from || null, lastPart, true);\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineIsEmpty = /**\n     * @return {?}\n     */\n    function () { return this._currentLine.parts.length === 0; };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.lineLength = /**\n     * @return {?}\n     */\n    function () {\n        return this._currentLine.indent * _INDENT_WITH.length + this._currentLine.partsLength;\n    };\n    /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.print = /**\n     * @param {?} from\n     * @param {?} part\n     * @param {?=} newLine\n     * @return {?}\n     */\n    function (from, part, newLine) {\n        if (newLine === void 0) { newLine = false; }\n        if (part.length > 0) {\n            this._currentLine.parts.push(part);\n            this._currentLine.partsLength += part.length;\n            this._currentLine.srcSpans.push(from && from.sourceSpan || null);\n        }\n        if (newLine) {\n            this._lines.push(new _EmittedLine(this._indent));\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.removeEmptyLastLine = /**\n     * @return {?}\n     */\n    function () {\n        if (this.lineIsEmpty()) {\n            this._lines.pop();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.incIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent++;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.decIndent = /**\n     * @return {?}\n     */\n    function () {\n        this._indent--;\n        if (this.lineIsEmpty()) {\n            this._currentLine.indent = this._indent;\n        }\n    };\n    /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.pushClass = /**\n     * @param {?} clazz\n     * @return {?}\n     */\n    function (clazz) { this._classes.push(clazz); };\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.popClass = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((this._classes.pop())); };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"currentClass\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._classes.length > 0 ? this._classes[this._classes.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSource = /**\n     * @return {?}\n     */\n    function () {\n        return this.sourceLines\n            .map(function (l) { return l.parts.length > 0 ? _createIndent(l.indent) + l.parts.join('') : ''; })\n            .join('\\n');\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.toSourceMapGenerator = /**\n     * @param {?} genFilePath\n     * @param {?=} startsAtLine\n     * @return {?}\n     */\n    function (genFilePath, startsAtLine) {\n        if (startsAtLine === void 0) { startsAtLine = 0; }\n        var /** @type {?} */ map = new SourceMapGenerator(genFilePath);\n        var /** @type {?} */ firstOffsetMapped = false;\n        var /** @type {?} */ mapFirstOffsetIfNeeded = function () {\n            if (!firstOffsetMapped) {\n                // Add a single space so that tools won't try to load the file from disk.\n                // Note: We are using virtual urls like `ng:///`, so we have to\n                // provide a content here.\n                map.addSource(genFilePath, ' ').addMapping(0, genFilePath, 0, 0);\n                firstOffsetMapped = true;\n            }\n        };\n        for (var /** @type {?} */ i = 0; i < startsAtLine; i++) {\n            map.addLine();\n            mapFirstOffsetIfNeeded();\n        }\n        this.sourceLines.forEach(function (line, lineIdx) {\n            map.addLine();\n            var /** @type {?} */ spans = line.srcSpans;\n            var /** @type {?} */ parts = line.parts;\n            var /** @type {?} */ col0 = line.indent * _INDENT_WITH.length;\n            var /** @type {?} */ spanIdx = 0;\n            // skip leading parts without source spans\n            while (spanIdx < spans.length && !spans[spanIdx]) {\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n            }\n            if (spanIdx < spans.length && lineIdx === 0 && col0 === 0) {\n                firstOffsetMapped = true;\n            }\n            else {\n                mapFirstOffsetIfNeeded();\n            }\n            while (spanIdx < spans.length) {\n                var /** @type {?} */ span = /** @type {?} */ ((spans[spanIdx]));\n                var /** @type {?} */ source = span.start.file;\n                var /** @type {?} */ sourceLine = span.start.line;\n                var /** @type {?} */ sourceCol = span.start.col;\n                map.addSource(source.url, source.content)\n                    .addMapping(col0, source.url, sourceLine, sourceCol);\n                col0 += parts[spanIdx].length;\n                spanIdx++;\n                // assign parts without span or the same span to the previous segment\n                while (spanIdx < spans.length && (span === spans[spanIdx] || !spans[spanIdx])) {\n                    col0 += parts[spanIdx].length;\n                    spanIdx++;\n                }\n            }\n        });\n        return map;\n    };\n    /**\n     * @param {?} count\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.setPreambleLineCount = /**\n     * @param {?} count\n     * @return {?}\n     */\n    function (count) { return this._preambleLineCount = count; };\n    /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    EmitterVisitorContext.prototype.spanOf = /**\n     * @param {?} line\n     * @param {?} column\n     * @return {?}\n     */\n    function (line, column) {\n        var /** @type {?} */ emittedLine = this._lines[line - this._preambleLineCount];\n        if (emittedLine) {\n            var /** @type {?} */ columnsLeft = column - _createIndent(emittedLine.indent).length;\n            for (var /** @type {?} */ partIndex = 0; partIndex < emittedLine.parts.length; partIndex++) {\n                var /** @type {?} */ part = emittedLine.parts[partIndex];\n                if (part.length > columnsLeft) {\n                    return emittedLine.srcSpans[partIndex];\n                }\n                columnsLeft -= part.length;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(EmitterVisitorContext.prototype, \"sourceLines\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            if (this._lines.length && this._lines[this._lines.length - 1].parts.length === 0) {\n                return this._lines.slice(0, -1);\n            }\n            return this._lines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EmitterVisitorContext;\n}());\n/**\n * @abstract\n */\nvar AbstractEmitterVisitor = (function () {\n    function AbstractEmitterVisitor(_escapeDollarInStrings) {\n        this._escapeDollarInStrings = _escapeDollarInStrings;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        stmt.expr.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"return \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, ';');\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"if (\");\n        stmt.condition.visitExpression(this, ctx);\n        ctx.print(stmt, \") {\");\n        var /** @type {?} */ hasElseCase = stmt.falseCase != null && stmt.falseCase.length > 0;\n        if (stmt.trueCase.length <= 1 && !hasElseCase) {\n            ctx.print(stmt, \" \");\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.removeEmptyLastLine();\n            ctx.print(stmt, \" \");\n        }\n        else {\n            ctx.println();\n            ctx.incIndent();\n            this.visitAllStatements(stmt.trueCase, ctx);\n            ctx.decIndent();\n            if (hasElseCase) {\n                ctx.println(stmt, \"} else {\");\n                ctx.incIndent();\n                this.visitAllStatements(stmt.falseCase, ctx);\n                ctx.decIndent();\n            }\n        }\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"throw \");\n        stmt.error.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ lines = stmt.comment.split('\\n');\n        lines.forEach(function (line) { ctx.println(stmt, \"// \" + line); });\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        ctx.print(expr, expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \"[\");\n        expr.index.visitExpression(this, ctx);\n        ctx.print(expr, \"] = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ lineWasEmpty = ctx.lineIsEmpty();\n        if (!lineWasEmpty) {\n            ctx.print(expr, '(');\n        }\n        expr.receiver.visitExpression(this, ctx);\n        ctx.print(expr, \".\" + expr.name + \" = \");\n        expr.value.visitExpression(this, ctx);\n        if (!lineWasEmpty) {\n            ctx.print(expr, ')');\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ name = expr.name;\n        if (expr.builtin != null) {\n            name = this.getBuiltinMethodName(expr.builtin);\n            if (name == null) {\n                // some builtins just mean to skip the call.\n                return null;\n            }\n        }\n        ctx.print(expr, \".\" + name + \"(\");\n        this.visitAllExpressions(expr.args, ctx, \",\");\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        expr.fn.visitExpression(this, ctx);\n        ctx.print(expr, \"(\");\n        this.visitAllExpressions(expr.args, ctx, ',');\n        ctx.print(expr, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    varName = 'super';\n                    break;\n                case BuiltinVar.This:\n                    varName = 'this';\n                    break;\n                case BuiltinVar.CatchError:\n                    varName = /** @type {?} */ ((CATCH_ERROR_VAR$1.name));\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = /** @type {?} */ ((CATCH_STACK_VAR$1.name));\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        ctx.print(ast, varName);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        ast.classExpr.visitExpression(this, ctx);\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (typeof value === 'string') {\n            ctx.print(ast, escapeIdentifier(value, this._escapeDollarInStrings));\n        }\n        else {\n            ctx.print(ast, \"\" + value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        ast.condition.visitExpression(this, ctx);\n        ctx.print(ast, '? ');\n        ast.trueCase.visitExpression(this, ctx);\n        ctx.print(ast, ': '); /** @type {?} */\n        ((ast.falseCase)).visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '!');\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.condition.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ opStr;\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                opStr = '==';\n                break;\n            case BinaryOperator.Identical:\n                opStr = '===';\n                break;\n            case BinaryOperator.NotEquals:\n                opStr = '!=';\n                break;\n            case BinaryOperator.NotIdentical:\n                opStr = '!==';\n                break;\n            case BinaryOperator.And:\n                opStr = '&&';\n                break;\n            case BinaryOperator.Or:\n                opStr = '||';\n                break;\n            case BinaryOperator.Plus:\n                opStr = '+';\n                break;\n            case BinaryOperator.Minus:\n                opStr = '-';\n                break;\n            case BinaryOperator.Divide:\n                opStr = '/';\n                break;\n            case BinaryOperator.Multiply:\n                opStr = '*';\n                break;\n            case BinaryOperator.Modulo:\n                opStr = '%';\n                break;\n            case BinaryOperator.Lower:\n                opStr = '<';\n                break;\n            case BinaryOperator.LowerEquals:\n                opStr = '<=';\n                break;\n            case BinaryOperator.Bigger:\n                opStr = '>';\n                break;\n            case BinaryOperator.BiggerEquals:\n                opStr = '>=';\n                break;\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n        ctx.print(ast, \"(\");\n        ast.lhs.visitExpression(this, ctx);\n        ctx.print(ast, \" \" + opStr + \" \");\n        ast.rhs.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \".\");\n        ctx.print(ast, ast.name);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.receiver.visitExpression(this, ctx);\n        ctx.print(ast, \"[\");\n        ast.index.visitExpression(this, ctx);\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"[\");\n        this.visitAllExpressions(ast.entries, ctx, ',');\n        ctx.print(ast, \"]\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        ctx.print(ast, \"{\");\n        this.visitAllObjects(function (entry) {\n            ctx.print(ast, escapeIdentifier(entry.key, _this._escapeDollarInStrings, entry.quoted) + \":\");\n            entry.value.visitExpression(_this, ctx);\n        }, ast.entries, ctx, ',');\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, '(');\n        this.visitAllExpressions(ast.parts, ctx, ',');\n        ctx.print(ast, ')');\n        return null;\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (expressions, ctx, separator) {\n        var _this = this;\n        this.visitAllObjects(function (expr) { return expr.visitExpression(_this, ctx); }, expressions, ctx, separator);\n    };\n    /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllObjects = /**\n     * @template T\n     * @param {?} handler\n     * @param {?} expressions\n     * @param {?} ctx\n     * @param {?} separator\n     * @return {?}\n     */\n    function (handler, expressions, ctx, separator) {\n        var /** @type {?} */ incrementedIndent = false;\n        for (var /** @type {?} */ i = 0; i < expressions.length; i++) {\n            if (i > 0) {\n                if (ctx.lineLength() > 80) {\n                    ctx.print(null, separator, true);\n                    if (!incrementedIndent) {\n                        // continuation are marked with double indent.\n                        ctx.incIndent();\n                        ctx.incIndent();\n                        incrementedIndent = true;\n                    }\n                }\n                else {\n                    ctx.print(null, separator, false);\n                }\n            }\n            handler(expressions[i]);\n        }\n        if (incrementedIndent) {\n            // continuation are marked with double indent.\n            ctx.decIndent();\n            ctx.decIndent();\n        }\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractEmitterVisitor.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        var _this = this;\n        statements.forEach(function (stmt) { return stmt.visitStatement(_this, ctx); });\n    };\n    return AbstractEmitterVisitor;\n}());\n/**\n * @param {?} input\n * @param {?} escapeDollar\n * @param {?=} alwaysQuote\n * @return {?}\n */\nfunction escapeIdentifier(input, escapeDollar, alwaysQuote) {\n    if (alwaysQuote === void 0) { alwaysQuote = true; }\n    if (input == null) {\n        return null;\n    }\n    var /** @type {?} */ body = input.replace(_SINGLE_QUOTE_ESCAPE_STRING_RE, function () {\n        var match = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            match[_i] = arguments[_i];\n        }\n        if (match[0] == '$') {\n            return escapeDollar ? '\\\\$' : '$';\n        }\n        else if (match[0] == '\\n') {\n            return '\\\\n';\n        }\n        else if (match[0] == '\\r') {\n            return '\\\\r';\n        }\n        else {\n            return \"\\\\\" + match[0];\n        }\n    });\n    var /** @type {?} */ requiresQuotes = alwaysQuote || !_LEGAL_IDENTIFIER_RE.test(body);\n    return requiresQuotes ? \"'\" + body + \"'\" : body;\n}\n/**\n * @param {?} count\n * @return {?}\n */\nfunction _createIndent(count) {\n    var /** @type {?} */ res = '';\n    for (var /** @type {?} */ i = 0; i < count; i++) {\n        res += _INDENT_WITH;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction debugOutputAstAsTypeScript(ast) {\n    var /** @type {?} */ converter = new _TsEmitterVisitor();\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    var /** @type {?} */ asts = Array.isArray(ast) ? ast : [ast];\n    asts.forEach(function (ast) {\n        if (ast instanceof Statement) {\n            ast.visitStatement(converter, ctx);\n        }\n        else if (ast instanceof Expression) {\n            ast.visitExpression(converter, ctx);\n        }\n        else if (ast instanceof Type$1) {\n            ast.visitType(converter, ctx);\n        }\n        else {\n            throw new Error(\"Don't know how to print debug info for \" + ast);\n        }\n    });\n    return ctx.toSource();\n}\nvar TypeScriptEmitter = (function () {\n    function TypeScriptEmitter() {\n    }\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatementsAndContext = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @param {?=} emitSourceMaps\n     * @param {?=} referenceFilter\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble, emitSourceMaps, referenceFilter) {\n        if (preamble === void 0) { preamble = ''; }\n        if (emitSourceMaps === void 0) { emitSourceMaps = true; }\n        var /** @type {?} */ converter = new _TsEmitterVisitor(referenceFilter);\n        var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n        converter.visitAllStatements(stmts, ctx);\n        var /** @type {?} */ preambleLines = preamble ? preamble.split('\\n') : [];\n        converter.reexports.forEach(function (reexports, exportedModuleName) {\n            var /** @type {?} */ reexportsCode = reexports.map(function (reexport) { return reexport.name + \" as \" + reexport.as; }).join(',');\n            preambleLines.push(\"export {\" + reexportsCode + \"} from '\" + exportedModuleName + \"';\");\n        });\n        converter.importsWithPrefixes.forEach(function (prefix, importedModuleName) {\n            // Note: can't write the real word for import as it screws up system.js auto detection...\n            preambleLines.push(\"imp\" +\n                (\"ort * as \" + prefix + \" from '\" + importedModuleName + \"';\"));\n        });\n        var /** @type {?} */ sm = emitSourceMaps ?\n            ctx.toSourceMapGenerator(genFilePath, preambleLines.length).toJsComment() :\n            '';\n        var /** @type {?} */ lines = preambleLines.concat([ctx.toSource(), sm]);\n        if (sm) {\n            // always add a newline at the end, as some tools have bugs without it.\n            lines.push('');\n        }\n        ctx.setPreambleLineCount(preambleLines.length);\n        return { sourceText: lines.join('\\n'), context: ctx };\n    };\n    /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    TypeScriptEmitter.prototype.emitStatements = /**\n     * @param {?} genFilePath\n     * @param {?} stmts\n     * @param {?=} preamble\n     * @return {?}\n     */\n    function (genFilePath, stmts, preamble) {\n        if (preamble === void 0) { preamble = ''; }\n        return this.emitStatementsAndContext(genFilePath, stmts, preamble).sourceText;\n    };\n    return TypeScriptEmitter;\n}());\nvar _TsEmitterVisitor = (function (_super) {\n    __extends(_TsEmitterVisitor, _super);\n    function _TsEmitterVisitor(referenceFilter) {\n        var _this = _super.call(this, false) || this;\n        _this.referenceFilter = referenceFilter;\n        _this.typeExpression = 0;\n        _this.importsWithPrefixes = new Map();\n        _this.reexports = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitType = /**\n     * @param {?} t\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (t, ctx, defaultType) {\n        if (defaultType === void 0) { defaultType = 'any'; }\n        if (t) {\n            this.typeExpression++;\n            t.visitType(this, ctx);\n            this.typeExpression--;\n        }\n        else {\n            ctx.print(null, defaultType);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = ast.value;\n        if (value == null && ast.type != INFERRED_TYPE) {\n            ctx.print(ast, \"(\" + value + \" as any)\");\n            return null;\n        }\n        return _super.prototype.visitLiteralExpr.call(this, ast, ctx);\n    };\n    // Temporary workaround to support strictNullCheck enabled consumers of ngc emit.\n    // In SNC mode, [] have the type never[], so we cast here to any[].\n    // TODO: narrow the cast to a more explicit type, or use a pattern that does not\n    // start with [].concat. see https://github.com/angular/angular/pull/11846\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.entries.length === 0) {\n            ctx.print(ast, '(');\n        }\n        var /** @type {?} */ result = _super.prototype.visitLiteralArrayExpr.call(this, ast, ctx);\n        if (ast.entries.length === 0) {\n            ctx.print(ast, ' as any[])');\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        this._visitIdentifier(ast.value, ast.typeParams, ctx);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result = _super.prototype.visitAssertNotNullExpr.call(this, ast, ctx);\n        ctx.print(ast, '!');\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported) && stmt.value instanceof ExternalExpr &&\n            !stmt.type) {\n            // check for a reexport\n            var _a = stmt.value.value, name_1 = _a.name, moduleName = _a.moduleName;\n            if (moduleName) {\n                var /** @type {?} */ reexports = this.reexports.get(moduleName);\n                if (!reexports) {\n                    reexports = [];\n                    this.reexports.set(moduleName, reexports);\n                }\n                reexports.push({ name: /** @type {?} */ ((name_1)), as: stmt.name });\n                return null;\n            }\n        }\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        if (stmt.hasModifier(StmtModifier.Final)) {\n            ctx.print(stmt, \"const\");\n        }\n        else {\n            ctx.print(stmt, \"var\");\n        }\n        ctx.print(stmt, \" \" + stmt.name);\n        this._printColonType(stmt.type, ctx);\n        ctx.print(stmt, \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(<\"); /** @type {?} */\n        ((ast.type)).visitType(this, ctx);\n        ctx.print(ast, \">\");\n        ast.value.visitExpression(this, ctx);\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"new \");\n        this.typeExpression++;\n        ast.classExpr.visitExpression(this, ctx);\n        this.typeExpression--;\n        ctx.print(ast, \"(\");\n        this.visitAllExpressions(ast.args, ctx, ',');\n        ctx.print(ast, \")\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"class \" + stmt.name);\n        if (stmt.parent != null) {\n            ctx.print(stmt, \" extends \");\n            this.typeExpression++;\n            stmt.parent.visitExpression(this, ctx);\n            this.typeExpression--;\n        }\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        stmt.fields.forEach(function (field) { return _this._visitClassField(field, ctx); });\n        if (stmt.constructorMethod != null) {\n            this._visitClassConstructor(stmt, ctx);\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(method, ctx); });\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassField = /**\n     * @param {?} field\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (field, ctx) {\n        if (field.hasModifier(StmtModifier.Private)) {\n            // comment out as a workaround for #10967\n            ctx.print(null, \"/*private*/ \");\n        }\n        ctx.print(null, field.name);\n        this._printColonType(field.type, ctx);\n        ctx.println(null, \";\");\n    };\n    /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (getter, ctx) {\n        if (getter.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, \"get \" + getter.name + \"()\");\n        this._printColonType(getter.type, ctx);\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(getter.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"constructor(\");\n        this._visitParams(stmt.constructorMethod.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.constructorMethod.body, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (method, ctx) {\n        if (method.hasModifier(StmtModifier.Private)) {\n            ctx.print(null, \"private \");\n        }\n        ctx.print(null, method.name + \"(\");\n        this._visitParams(method.params, ctx);\n        ctx.print(null, \")\");\n        this._printColonType(method.type, ctx, 'void');\n        ctx.println(null, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(method.body, ctx);\n        ctx.decIndent();\n        ctx.println(null, \"}\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"(\");\n        this._visitParams(ast.params, ctx);\n        ctx.print(ast, \")\");\n        this._printColonType(ast.type, ctx, 'void');\n        ctx.println(ast, \" => {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.print(stmt, \"export \");\n        }\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.print(stmt, \")\");\n        this._printColonType(stmt.type, ctx, 'void');\n        ctx.println(stmt, \" {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack', null)).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitBuiltintType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        var /** @type {?} */ typeStr;\n        switch (type.name) {\n            case BuiltinTypeName.Bool:\n                typeStr = 'boolean';\n                break;\n            case BuiltinTypeName.Dynamic:\n                typeStr = 'any';\n                break;\n            case BuiltinTypeName.Function:\n                typeStr = 'Function';\n                break;\n            case BuiltinTypeName.Number:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.Int:\n                typeStr = 'number';\n                break;\n            case BuiltinTypeName.String:\n                typeStr = 'string';\n                break;\n            default:\n                throw new Error(\"Unsupported builtin type \" + type.name);\n        }\n        ctx.print(null, typeStr);\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitExpressionType = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitArrayType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        this.visitType(type.of, ctx);\n        ctx.print(null, \"[]\");\n        return null;\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.visitMapType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (type, ctx) {\n        ctx.print(null, \"{[key: string]:\");\n        this.visitType(type.valueType, ctx);\n        ctx.print(null, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        var _this = this;\n        this.visitAllObjects(function (param) {\n            ctx.print(null, param.name);\n            _this._printColonType(param.type, ctx);\n        }, params, ctx, ',');\n    };\n    /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._visitIdentifier = /**\n     * @param {?} value\n     * @param {?} typeParams\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (value, typeParams, ctx) {\n        var _this = this;\n        var name = value.name, moduleName = value.moduleName;\n        if (this.referenceFilter && this.referenceFilter(value)) {\n            ctx.print(null, '(null as any)');\n            return;\n        }\n        if (moduleName) {\n            var /** @type {?} */ prefix = this.importsWithPrefixes.get(moduleName);\n            if (prefix == null) {\n                prefix = \"i\" + this.importsWithPrefixes.size;\n                this.importsWithPrefixes.set(moduleName, prefix);\n            }\n            ctx.print(null, prefix + \".\");\n        }\n        ctx.print(null, /** @type {?} */ ((name)));\n        if (this.typeExpression > 0) {\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedParameters = typeParams || [];\n            if (suppliedParameters.length > 0) {\n                ctx.print(null, \"<\");\n                this.visitAllObjects(function (type) { return type.visitType(_this, ctx); }, /** @type {?} */ ((typeParams)), ctx, ',');\n                ctx.print(null, \">\");\n            }\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    _TsEmitterVisitor.prototype._printColonType = /**\n     * @param {?} type\n     * @param {?} ctx\n     * @param {?=} defaultType\n     * @return {?}\n     */\n    function (type, ctx, defaultType) {\n        if (type !== INFERRED_TYPE) {\n            ctx.print(null, ':');\n            this.visitType(type, ctx, defaultType);\n        }\n    };\n    return _TsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Resolve a `Type` for {\\@link Pipe}.\n *\n * This interface can be overridden by the application developer to create custom behavior.\n *\n * See {\\@link Compiler}\n */\nvar PipeResolver = (function () {\n    function PipeResolver(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    PipeResolver.prototype.isPipe = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ typeMetadata = this._reflector.annotations(resolveForwardRef(type));\n        return typeMetadata && typeMetadata.some(createPipe.isTypeOf);\n    };\n    /**\n     * Return {@link Pipe} for a given `Type`.\n     */\n    /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    PipeResolver.prototype.resolve = /**\n     * Return {\\@link Pipe} for a given `Type`.\n     * @param {?} type\n     * @param {?=} throwIfNotFound\n     * @return {?}\n     */\n    function (type, throwIfNotFound) {\n        if (throwIfNotFound === void 0) { throwIfNotFound = true; }\n        var /** @type {?} */ metas = this._reflector.annotations(resolveForwardRef(type));\n        if (metas) {\n            var /** @type {?} */ annotation = findLast(metas, createPipe.isTypeOf);\n            if (annotation) {\n                return annotation;\n            }\n        }\n        if (throwIfNotFound) {\n            throw new Error(\"No Pipe decorator found on \" + stringify(type));\n        }\n        return null;\n    };\n    return PipeResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Map from tagName|propertyName SecurityContext. Properties applying to all tags use '*'.\n */\nvar SECURITY_SCHEMA = {};\n/**\n * @param {?} ctx\n * @param {?} specs\n * @return {?}\n */\nfunction registerContext(ctx, specs) {\n    for (var _i = 0, specs_1 = specs; _i < specs_1.length; _i++) {\n        var spec = specs_1[_i];\n        SECURITY_SCHEMA[spec.toLowerCase()] = ctx;\n    }\n}\n// Case is insignificant below, all element and attribute names are lower-cased for lookup.\nregisterContext(SecurityContext.HTML, [\n    'iframe|srcdoc',\n    '*|innerHTML',\n    '*|outerHTML',\n]);\nregisterContext(SecurityContext.STYLE, ['*|style']);\n// NB: no SCRIPT contexts here, they are never allowed due to the parser stripping them.\nregisterContext(SecurityContext.URL, [\n    '*|formAction', 'area|href', 'area|ping', 'audio|src', 'a|href',\n    'a|ping', 'blockquote|cite', 'body|background', 'del|cite', 'form|action',\n    'img|src', 'img|srcset', 'input|src', 'ins|cite', 'q|cite',\n    'source|src', 'source|srcset', 'track|src', 'video|poster', 'video|src',\n]);\nregisterContext(SecurityContext.RESOURCE_URL, [\n    'applet|code',\n    'applet|codebase',\n    'base|href',\n    'embed|src',\n    'frame|src',\n    'head|profile',\n    'html|manifest',\n    'iframe|src',\n    'link|href',\n    'media|src',\n    'object|codebase',\n    'object|data',\n    'script|src',\n]);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @abstract\n */\nvar ElementSchemaRegistry = (function () {\n    function ElementSchemaRegistry() {\n    }\n    return ElementSchemaRegistry;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BOOLEAN$1 = 'boolean';\nvar NUMBER$1 = 'number';\nvar STRING$1 = 'string';\nvar OBJECT$1 = 'object';\n/**\n * This array represents the DOM schema. It encodes inheritance, properties, and events.\n *\n * ## Overview\n *\n * Each line represents one kind of element. The `element_inheritance` and properties are joined\n * using `element_inheritance|properties` syntax.\n *\n * ## Element Inheritance\n *\n * The `element_inheritance` can be further subdivided as `element1,element2,...^parentElement`.\n * Here the individual elements are separated by `,` (commas). Every element in the list\n * has identical properties.\n *\n * An `element` may inherit additional properties from `parentElement` If no `^parentElement` is\n * specified then `\"\"` (blank) element is assumed.\n *\n * NOTE: The blank element inherits from root `[Element]` element, the super element of all\n * elements.\n *\n * NOTE an element prefix such as `:svg:` has no special meaning to the schema.\n *\n * ## Properties\n *\n * Each element has a set of properties separated by `,` (commas). Each property can be prefixed\n * by a special character designating its type:\n *\n * - (no prefix): property is a string.\n * - `*`: property represents an event.\n * - `!`: property is a boolean.\n * - `#`: property is a number.\n * - `%`: property is an object.\n *\n * ## Query\n *\n * The class creates an internal squas representation which allows to easily answer the query of\n * if a given property exist on a given element.\n *\n * NOTE: We don't yet support querying for types or events.\n * NOTE: This schema is auto extracted from `schema_extractor.ts` located in the test folder,\n *       see dom_element_schema_registry_spec.ts\n */\nvar SCHEMA$1 = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar _ATTR_TO_PROP = {\n    'class': 'className',\n    'for': 'htmlFor',\n    'formaction': 'formAction',\n    'innerHtml': 'innerHTML',\n    'readonly': 'readOnly',\n    'tabindex': 'tabIndex',\n};\nvar DomElementSchemaRegistry = (function (_super) {\n    __extends(DomElementSchemaRegistry, _super);\n    function DomElementSchemaRegistry() {\n        var _this = _super.call(this) || this;\n        _this._schema = {};\n        SCHEMA$1.forEach(function (encodedType) {\n            var /** @type {?} */ type = {};\n            var _a = encodedType.split('|'), strType = _a[0], strProperties = _a[1];\n            var /** @type {?} */ properties = strProperties.split(',');\n            var _b = strType.split('^'), typeNames = _b[0], superName = _b[1];\n            typeNames.split(',').forEach(function (tag) { return _this._schema[tag.toLowerCase()] = type; });\n            var /** @type {?} */ superType = superName && _this._schema[superName.toLowerCase()];\n            if (superType) {\n                Object.keys(superType).forEach(function (prop) { type[prop] = superType[prop]; });\n            }\n            properties.forEach(function (property) {\n                if (property.length > 0) {\n                    switch (property[0]) {\n                        case '*':\n                            // We don't yet support events.\n                            // If ever allowing to bind to events, GO THROUGH A SECURITY REVIEW, allowing events\n                            // will\n                            // almost certainly introduce bad XSS vulnerabilities.\n                            // type[property.substring(1)] = EVENT;\n                            break;\n                        case '!':\n                            type[property.substring(1)] = BOOLEAN$1;\n                            break;\n                        case '#':\n                            type[property.substring(1)] = NUMBER$1;\n                            break;\n                        case '%':\n                            type[property.substring(1)] = OBJECT$1;\n                            break;\n                        default:\n                            type[property] = STRING$1;\n                    }\n                }\n            });\n        });\n        return _this;\n    }\n    /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasProperty = /**\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, propName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return false;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Can't tell now as we don't know which properties a custom element will get\n                // once it is instantiated\n                return true;\n            }\n        }\n        var /** @type {?} */ elementProperties = this._schema[tagName.toLowerCase()] || this._schema['unknown'];\n        return !!elementProperties[propName];\n    };\n    /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.hasElement = /**\n     * @param {?} tagName\n     * @param {?} schemaMetas\n     * @return {?}\n     */\n    function (tagName, schemaMetas) {\n        if (schemaMetas.some(function (schema) { return schema.name === NO_ERRORS_SCHEMA.name; })) {\n            return true;\n        }\n        if (tagName.indexOf('-') > -1) {\n            if (isNgContainer(tagName) || isNgContent(tagName)) {\n                return true;\n            }\n            if (schemaMetas.some(function (schema) { return schema.name === CUSTOM_ELEMENTS_SCHEMA.name; })) {\n                // Allow any custom elements\n                return true;\n            }\n        }\n        return !!this._schema[tagName.toLowerCase()];\n    };\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     */\n    /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.securityContext = /**\n     * securityContext returns the security context for the given property on the given DOM tag.\n     *\n     * Tag and property name are statically known and cannot change at runtime, i.e. it is not\n     * possible to bind a value into a changing attribute or tag name.\n     *\n     * The filtering is white list based. All attributes in the schema above are assumed to have the\n     * 'NONE' security context, i.e. that they are safe inert string values. Only specific well known\n     * attack vectors are assigned their appropriate context.\n     * @param {?} tagName\n     * @param {?} propName\n     * @param {?} isAttribute\n     * @return {?}\n     */\n    function (tagName, propName, isAttribute) {\n        if (isAttribute) {\n            // NB: For security purposes, use the mapped property name, not the attribute name.\n            propName = this.getMappedPropName(propName);\n        }\n        // Make sure comparisons are case insensitive, so that case differences between attribute and\n        // property names do not have a security impact.\n        tagName = tagName.toLowerCase();\n        propName = propName.toLowerCase();\n        var /** @type {?} */ ctx = SECURITY_SCHEMA[tagName + '|' + propName];\n        if (ctx) {\n            return ctx;\n        }\n        ctx = SECURITY_SCHEMA['*|' + propName];\n        return ctx ? ctx : SecurityContext.NONE;\n    };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getMappedPropName = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) { return _ATTR_TO_PROP[propName] || propName; };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.getDefaultComponentElementName = /**\n     * @return {?}\n     */\n    function () { return 'ng-component'; };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateProperty = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event property '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\") +\n                (\"\\nIf '\" + name + \"' is a directive input, make sure the directive is imported by the\") +\n                \" current module.\";\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.validateAttribute = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name.toLowerCase().startsWith('on')) {\n            var /** @type {?} */ msg = \"Binding to event attribute '\" + name + \"' is disallowed for security reasons, \" +\n                (\"please use (\" + name.slice(2) + \")=...\");\n            return { error: true, msg: msg };\n        }\n        else {\n            return { error: false };\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.allKnownElementNames = /**\n     * @return {?}\n     */\n    function () { return Object.keys(this._schema); };\n    /**\n     * @param {?} propName\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleProperty = /**\n     * @param {?} propName\n     * @return {?}\n     */\n    function (propName) {\n        return dashCaseToCamelCase(propName);\n    };\n    /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    DomElementSchemaRegistry.prototype.normalizeAnimationStyleValue = /**\n     * @param {?} camelCaseProp\n     * @param {?} userProvidedProp\n     * @param {?} val\n     * @return {?}\n     */\n    function (camelCaseProp, userProvidedProp, val) {\n        var /** @type {?} */ unit = '';\n        var /** @type {?} */ strVal = val.toString().trim();\n        var /** @type {?} */ errorMsg = /** @type {?} */ ((null));\n        if (_isPixelDimensionStyle(camelCaseProp) && val !== 0 && val !== '0') {\n            if (typeof val === 'number') {\n                unit = 'px';\n            }\n            else {\n                var /** @type {?} */ valAndSuffixMatch = val.match(/^[+-]?[\\d\\.]+([a-z]*)$/);\n                if (valAndSuffixMatch && valAndSuffixMatch[1].length == 0) {\n                    errorMsg = \"Please provide a CSS unit value for \" + userProvidedProp + \":\" + val;\n                }\n            }\n        }\n        return { error: errorMsg, value: strVal + unit };\n    };\n    return DomElementSchemaRegistry;\n}(ElementSchemaRegistry));\n/**\n * @param {?} prop\n * @return {?}\n */\nfunction _isPixelDimensionStyle(prop) {\n    switch (prop) {\n        case 'width':\n        case 'height':\n        case 'minWidth':\n        case 'minHeight':\n        case 'maxWidth':\n        case 'maxHeight':\n        case 'left':\n        case 'top':\n        case 'bottom':\n        case 'right':\n        case 'fontSize':\n        case 'outlineWidth':\n        case 'outlineOffset':\n        case 'paddingTop':\n        case 'paddingLeft':\n        case 'paddingBottom':\n        case 'paddingRight':\n        case 'marginTop':\n        case 'marginLeft':\n        case 'marginBottom':\n        case 'marginRight':\n        case 'borderRadius':\n        case 'borderWidth':\n        case 'borderTopWidth':\n        case 'borderLeftWidth':\n        case 'borderRightWidth':\n        case 'borderBottomWidth':\n        case 'textIndent':\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ShadowCss = (function () {\n    function ShadowCss() {\n        this.strictStyling = true;\n    }\n    /*\n    * Shim some cssText with the given selector. Returns cssText that can\n    * be included in the document via WebComponents.ShadowCSS.addCssToDocument(css).\n    *\n    * When strictStyling is true:\n    * - selector is the attribute added to all elements inside the host,\n    * - hostSelector is the attribute added to the host itself.\n    */\n    /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype.shimCssText = /**\n     * @param {?} cssText\n     * @param {?} selector\n     * @param {?=} hostSelector\n     * @return {?}\n     */\n    function (cssText, selector, hostSelector) {\n        if (hostSelector === void 0) { hostSelector = ''; }\n        var /** @type {?} */ sourceMappingUrl = extractSourceMappingUrl(cssText);\n        cssText = stripComments(cssText);\n        cssText = this._insertDirectives(cssText);\n        return this._scopeCssText(cssText, selector, hostSelector) + sourceMappingUrl;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertDirectives = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        cssText = this._insertPolyfillDirectivesInCssText(cssText);\n        return this._insertPolyfillRulesInCssText(cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillDirectivesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentNextSelectorRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            return m[2] + '{';\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillRulesInCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        return cssText.replace(_cssContentRuleRe, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            var /** @type {?} */ rule = m[0].replace(m[1], '').replace(m[2], '');\n            return m[4] + rule;\n        });\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeCssText = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var /** @type {?} */ unscopedRules = this._extractUnscopedRulesFromCssText(cssText);\n        // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n        cssText = this._insertPolyfillHostInCssText(cssText);\n        cssText = this._convertColonHost(cssText);\n        cssText = this._convertColonHostContext(cssText);\n        cssText = this._convertShadowDOMSelectors(cssText);\n        if (scopeSelector) {\n            cssText = this._scopeSelectors(cssText, scopeSelector, hostSelector);\n        }\n        cssText = cssText + '\\n' + unscopedRules;\n        return cssText.trim();\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._extractUnscopedRulesFromCssText = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        // Difference with webcomponents.js: does not handle comments\n        var /** @type {?} */ r = '';\n        var /** @type {?} */ m;\n        _cssContentUnscopedRuleRe.lastIndex = 0;\n        while ((m = _cssContentUnscopedRuleRe.exec(cssText)) !== null) {\n            var /** @type {?} */ rule = m[0].replace(m[2], '').replace(m[1], m[4]);\n            r += rule + '\\n\\n';\n        }\n        return r;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHost = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonHostContext = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    ShadowCss.prototype._convertColonRule = /**\n     * @param {?} cssText\n     * @param {?} regExp\n     * @param {?} partReplacer\n     * @return {?}\n     */\n    function (cssText, regExp, partReplacer) {\n        // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n        return cssText.replace(regExp, function () {\n            var m = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                m[_i] = arguments[_i];\n            }\n            if (m[2]) {\n                var /** @type {?} */ parts = m[2].split(',');\n                var /** @type {?} */ r = [];\n                for (var /** @type {?} */ i = 0; i < parts.length; i++) {\n                    var /** @type {?} */ p = parts[i].trim();\n                    if (!p)\n                        break;\n                    r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n                }\n                return r.join(',');\n            }\n            else {\n                return _polyfillHostNoCombinator + m[3];\n            }\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostContextPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        if (part.indexOf(_polyfillHost) > -1) {\n            return this._colonHostPartReplacer(host, part, suffix);\n        }\n        else {\n            return host + part + suffix + ', ' + part + ' ' + host + suffix;\n        }\n    };\n    /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    ShadowCss.prototype._colonHostPartReplacer = /**\n     * @param {?} host\n     * @param {?} part\n     * @param {?} suffix\n     * @return {?}\n     */\n    function (host, part, suffix) {\n        return host + part.replace(_polyfillHost, '') + suffix;\n    };\n    /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    ShadowCss.prototype._convertShadowDOMSelectors = /**\n     * @param {?} cssText\n     * @return {?}\n     */\n    function (cssText) {\n        return _shadowDOMSelectorsRe.reduce(function (result, pattern) { return result.replace(pattern, ' '); }, cssText);\n    };\n    /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelectors = /**\n     * @param {?} cssText\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (cssText, scopeSelector, hostSelector) {\n        var _this = this;\n        return processRules(cssText, function (rule) {\n            var /** @type {?} */ selector = rule.selector;\n            var /** @type {?} */ content = rule.content;\n            if (rule.selector[0] != '@') {\n                selector =\n                    _this._scopeSelector(rule.selector, scopeSelector, hostSelector, _this.strictStyling);\n            }\n            else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') ||\n                rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n                content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector);\n            }\n            return new CssRule(selector, content);\n        });\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    ShadowCss.prototype._scopeSelector = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @param {?} strict\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector, strict) {\n        var _this = this;\n        return selector.split(',')\n            .map(function (part) { return part.trim().split(_shadowDeepSelectors); })\n            .map(function (deepParts) {\n            var shallowPart = deepParts[0], otherParts = deepParts.slice(1);\n            var /** @type {?} */ applyScope = function (shallowPart) {\n                if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n                    return strict ?\n                        _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector) :\n                        _this._applySelectorScope(shallowPart, scopeSelector, hostSelector);\n                }\n                else {\n                    return shallowPart;\n                }\n            };\n            return [applyScope(shallowPart)].concat(otherParts).join(' ');\n        })\n            .join(', ');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._selectorNeedsScoping = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector) {\n        var /** @type {?} */ re = this._makeScopeMatcher(scopeSelector);\n        return !re.test(selector);\n    };\n    /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._makeScopeMatcher = /**\n     * @param {?} scopeSelector\n     * @return {?}\n     */\n    function (scopeSelector) {\n        var /** @type {?} */ lre = /\\[/g;\n        var /** @type {?} */ rre = /\\]/g;\n        scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n        return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // Difference from webcomponents.js: scopeSelector could not be an array\n        return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applySimpleSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n        _polyfillHostRe.lastIndex = 0;\n        if (_polyfillHostRe.test(selector)) {\n            var /** @type {?} */ replaceBy_1 = this.strictStyling ? \"[\" + hostSelector + \"]\" : scopeSelector;\n            return selector\n                .replace(_polyfillHostNoCombinatorRe, function (hnc, selector) {\n                return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n                    return before + replaceBy_1 + colon + after;\n                });\n            })\n                .replace(_polyfillHostRe, replaceBy_1 + ' ');\n        }\n        return scopeSelector + ' ' + selector;\n    };\n    /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    ShadowCss.prototype._applyStrictSelectorScope = /**\n     * @param {?} selector\n     * @param {?} scopeSelector\n     * @param {?} hostSelector\n     * @return {?}\n     */\n    function (selector, scopeSelector, hostSelector) {\n        var _this = this;\n        var /** @type {?} */ isRe = /\\[is=([^\\]]*)\\]/g;\n        scopeSelector = scopeSelector.replace(isRe, function (_) {\n            var parts = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                parts[_i - 1] = arguments[_i];\n            }\n            return parts[0];\n        });\n        var /** @type {?} */ attrName = '[' + scopeSelector + ']';\n        var /** @type {?} */ _scopeSelectorPart = function (p) {\n            var /** @type {?} */ scopedP = p.trim();\n            if (!scopedP) {\n                return '';\n            }\n            if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n                scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n            }\n            else {\n                // remove :host since it should be unnecessary\n                var /** @type {?} */ t = p.replace(_polyfillHostRe, '');\n                if (t.length > 0) {\n                    var /** @type {?} */ matches = t.match(/([^:]*)(:*)(.*)/);\n                    if (matches) {\n                        scopedP = matches[1] + attrName + matches[2] + matches[3];\n                    }\n                }\n            }\n            return scopedP;\n        };\n        var /** @type {?} */ safeContent = new SafeSelector(selector);\n        selector = safeContent.content();\n        var /** @type {?} */ scopedSelector = '';\n        var /** @type {?} */ startIndex = 0;\n        var /** @type {?} */ res;\n        var /** @type {?} */ sep = /( |>|\\+|~(?!=))\\s*/g;\n        var /** @type {?} */ scopeAfter = selector.indexOf(_polyfillHostNoCombinator);\n        while ((res = sep.exec(selector)) !== null) {\n            var /** @type {?} */ separator = res[1];\n            var /** @type {?} */ part = selector.slice(startIndex, res.index).trim();\n            // if a selector appears before :host-context it should not be shimmed as it\n            // matches on ancestor elements and not on elements in the host's shadow\n            var /** @type {?} */ scopedPart = startIndex >= scopeAfter ? _scopeSelectorPart(part) : part;\n            scopedSelector += scopedPart + \" \" + separator + \" \";\n            startIndex = sep.lastIndex;\n        }\n        scopedSelector += _scopeSelectorPart(selector.substring(startIndex));\n        // replace the placeholders with their original values\n        return safeContent.restore(scopedSelector);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ShadowCss.prototype._insertPolyfillHostInCssText = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        return selector.replace(_colonHostContextRe, _polyfillHostContext)\n            .replace(_colonHostRe, _polyfillHost);\n    };\n    return ShadowCss;\n}());\nvar SafeSelector = (function () {\n    function SafeSelector(selector) {\n        var _this = this;\n        this.placeholders = [];\n        this.index = 0;\n        // Replaces attribute selectors with placeholders.\n        // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n        selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(keep);\n            _this.index++;\n            return replaceBy;\n        });\n        // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n        // WS and \"+\" would otherwise be interpreted as selector separators.\n        this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n            var /** @type {?} */ replaceBy = \"__ph-\" + _this.index + \"__\";\n            _this.placeholders.push(exp);\n            _this.index++;\n            return pseudo + replaceBy;\n        });\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    SafeSelector.prototype.restore = /**\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        var _this = this;\n        return content.replace(/__ph-(\\d+)__/g, function (ph, index) { return _this.placeholders[+index]; });\n    };\n    /**\n     * @return {?}\n     */\n    SafeSelector.prototype.content = /**\n     * @return {?}\n     */\n    function () { return this._content; };\n    return SafeSelector;\n}());\nvar _cssContentNextSelectorRe = /polyfill-next-selector[^}]*content:[\\s]*?(['\"])(.*?)\\1[;\\s]*}([^{]*?){/gim;\nvar _cssContentRuleRe = /(polyfill-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _cssContentUnscopedRuleRe = /(polyfill-unscoped-rule)[^}]*(content:[\\s]*(['\"])(.*?)\\3)[;\\s]*[^}]*}/gim;\nvar _polyfillHost = '-shadowcsshost';\n// note: :host-context pre-processed to -shadowcsshostcontext.\nvar _polyfillHostContext = '-shadowcsscontext';\nvar _parenSuffix = ')(?:\\\\((' +\n    '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' +\n    ')\\\\))?([^,{]*)';\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [\n    /::shadow/g,\n    /::content/g,\n    /\\/shadow-deep\\//g,\n    /\\/shadow\\//g,\n];\n// The deep combinator is deprecated in the CSS spec\n// Support for `>>>`, `deep`, `::ng-deep` is then also deprecated and will be removed in the future.\n// see https://github.com/angular/angular/pull/17677\nvar _shadowDeepSelectors = /(?:>>>)|(?:\\/deep\\/)|(?:::ng-deep)/g;\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction stripComments(input) {\n    return input.replace(_commentRe, '');\n}\n// all comments except inline source mapping\nvar _sourceMappingUrlRe = /\\/\\*\\s*#\\s*sourceMappingURL=[\\s\\S]+?\\*\\//;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction extractSourceMappingUrl(input) {\n    var /** @type {?} */ matcher = input.match(_sourceMappingUrlRe);\n    return matcher ? matcher[0] : '';\n}\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\nvar CssRule = (function () {\n    function CssRule(selector, content) {\n        this.selector = selector;\n        this.content = content;\n    }\n    return CssRule;\n}());\n/**\n * @param {?} input\n * @param {?} ruleCallback\n * @return {?}\n */\nfunction processRules(input, ruleCallback) {\n    var /** @type {?} */ inputWithEscapedBlocks = escapeBlocks(input);\n    var /** @type {?} */ nextBlockIndex = 0;\n    return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        var /** @type {?} */ selector = m[2];\n        var /** @type {?} */ content = '';\n        var /** @type {?} */ suffix = m[4];\n        var /** @type {?} */ contentPrefix = '';\n        if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n            content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n            suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n            contentPrefix = '{';\n        }\n        var /** @type {?} */ rule = ruleCallback(new CssRule(selector, content));\n        return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n    });\n}\nvar StringWithEscapedBlocks = (function () {\n    function StringWithEscapedBlocks(escapedString, blocks) {\n        this.escapedString = escapedString;\n        this.blocks = blocks;\n    }\n    return StringWithEscapedBlocks;\n}());\n/**\n * @param {?} input\n * @return {?}\n */\nfunction escapeBlocks(input) {\n    var /** @type {?} */ inputParts = input.split(_curlyRe);\n    var /** @type {?} */ resultParts = [];\n    var /** @type {?} */ escapedBlocks = [];\n    var /** @type {?} */ bracketCount = 0;\n    var /** @type {?} */ currentBlockParts = [];\n    for (var /** @type {?} */ partIndex = 0; partIndex < inputParts.length; partIndex++) {\n        var /** @type {?} */ part = inputParts[partIndex];\n        if (part == CLOSE_CURLY) {\n            bracketCount--;\n        }\n        if (bracketCount > 0) {\n            currentBlockParts.push(part);\n        }\n        else {\n            if (currentBlockParts.length > 0) {\n                escapedBlocks.push(currentBlockParts.join(''));\n                resultParts.push(BLOCK_PLACEHOLDER);\n                currentBlockParts = [];\n            }\n            resultParts.push(part);\n        }\n        if (part == OPEN_CURLY) {\n            bracketCount++;\n        }\n    }\n    if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n    }\n    return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPONENT_VARIABLE = '%COMP%';\nvar HOST_ATTR = \"_nghost-\" + COMPONENT_VARIABLE;\nvar CONTENT_ATTR = \"_ngcontent-\" + COMPONENT_VARIABLE;\nvar StylesCompileDependency = (function () {\n    function StylesCompileDependency(name, moduleUrl, setValue) {\n        this.name = name;\n        this.moduleUrl = moduleUrl;\n        this.setValue = setValue;\n    }\n    return StylesCompileDependency;\n}());\nvar CompiledStylesheet = (function () {\n    function CompiledStylesheet(outputCtx, stylesVar, dependencies, isShimmed, meta) {\n        this.outputCtx = outputCtx;\n        this.stylesVar = stylesVar;\n        this.dependencies = dependencies;\n        this.isShimmed = isShimmed;\n        this.meta = meta;\n    }\n    return CompiledStylesheet;\n}());\nvar StyleCompiler = (function () {\n    function StyleCompiler(_urlResolver) {\n        this._urlResolver = _urlResolver;\n        this._shadowCss = new ShadowCss();\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @return {?}\n     */\n    function (outputCtx, comp) {\n        var /** @type {?} */ template = /** @type {?} */ ((comp.template));\n        return this._compileStyles(outputCtx, comp, new CompileStylesheetMetadata({\n            styles: template.styles,\n            styleUrls: template.styleUrls,\n            moduleUrl: identifierModuleUrl(comp.type)\n        }), this.needsStyleShim(comp), true);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype.compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?=} shim\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim) {\n        if (shim === void 0) { shim = this.needsStyleShim(comp); }\n        return this._compileStyles(outputCtx, comp, stylesheet, shim, false);\n    };\n    /**\n     * @param {?} comp\n     * @return {?}\n     */\n    StyleCompiler.prototype.needsStyleShim = /**\n     * @param {?} comp\n     * @return {?}\n     */\n    function (comp) {\n        return /** @type {?} */ ((comp.template)).encapsulation === ViewEncapsulation.Emulated;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    StyleCompiler.prototype._compileStyles = /**\n     * @param {?} outputCtx\n     * @param {?} comp\n     * @param {?} stylesheet\n     * @param {?} shim\n     * @param {?} isComponentStylesheet\n     * @return {?}\n     */\n    function (outputCtx, comp, stylesheet, shim, isComponentStylesheet) {\n        var _this = this;\n        var /** @type {?} */ styleExpressions = stylesheet.styles.map(function (plainStyle) { return literal(_this._shimIfNeeded(plainStyle, shim)); });\n        var /** @type {?} */ dependencies = [];\n        stylesheet.styleUrls.forEach(function (styleUrl) {\n            var /** @type {?} */ exprIndex = styleExpressions.length;\n            // Note: This placeholder will be filled later.\n            styleExpressions.push(/** @type {?} */ ((null)));\n            dependencies.push(new StylesCompileDependency(getStylesVarName(null), styleUrl, function (value) { return styleExpressions[exprIndex] = outputCtx.importExpr(value); }));\n        });\n        // styles variable contains plain strings and arrays of other styles arrays (recursive),\n        // so we set its type to dynamic.\n        var /** @type {?} */ stylesVar = getStylesVarName(isComponentStylesheet ? comp : null);\n        var /** @type {?} */ stmt = variable(stylesVar)\n            .set(literalArr(styleExpressions, new ArrayType(DYNAMIC_TYPE, [TypeModifier.Const])))\n            .toDeclStmt(null, isComponentStylesheet ? [StmtModifier.Final] : [\n            StmtModifier.Final, StmtModifier.Exported\n        ]);\n        outputCtx.statements.push(stmt);\n        return new CompiledStylesheet(outputCtx, stylesVar, dependencies, shim, stylesheet);\n    };\n    /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    StyleCompiler.prototype._shimIfNeeded = /**\n     * @param {?} style\n     * @param {?} shim\n     * @return {?}\n     */\n    function (style, shim) {\n        return shim ? this._shadowCss.shimCssText(style, CONTENT_ATTR, HOST_ATTR) : style;\n    };\n    return StyleCompiler;\n}());\n/**\n * @param {?} component\n * @return {?}\n */\nfunction getStylesVarName(component) {\n    var /** @type {?} */ result = \"styles\";\n    if (component) {\n        result += \"_\" + identifierName(component.type);\n    }\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar PRESERVE_WS_ATTR_NAME = 'ngPreserveWhitespaces';\nvar SKIP_WS_TRIM_TAGS = new Set(['pre', 'template', 'textarea', 'script', 'style']);\n// Equivalent to \\s with \\u00a0 (non-breaking space) excluded.\n// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp\nvar WS_CHARS = ' \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff';\nvar NO_WS_REGEXP = new RegExp(\"[^\" + WS_CHARS + \"]\");\nvar WS_REPLACE_REGEXP = new RegExp(\"[\" + WS_CHARS + \"]{2,}\", 'g');\n/**\n * @param {?} attrs\n * @return {?}\n */\nfunction hasPreserveWhitespacesAttr(attrs) {\n    return attrs.some(function (attr) { return attr.name === PRESERVE_WS_ATTR_NAME; });\n}\n/**\n * Angular Dart introduced &ngsp; as a placeholder for non-removable space, see:\n * https://github.com/dart-lang/angular/blob/0bb611387d29d65b5af7f9d2515ab571fd3fbee4/_tests/test/compiler/preserve_whitespace_test.dart#L25-L32\n * In Angular Dart &ngsp; is converted to the 0xE500 PUA (Private Use Areas) unicode character\n * and later on replaced by a space. We are re-implementing the same idea here.\n * @param {?} value\n * @return {?}\n */\nfunction replaceNgsp(value) {\n    // lexer is replacing the &ngsp; pseudo-entity with NGSP_UNICODE\n    return value.replace(new RegExp(NGSP_UNICODE, 'g'), ' ');\n}\n/**\n * This visitor can walk HTML parse tree and remove / trim text nodes using the following rules:\n * - consider spaces, tabs and new lines as whitespace characters;\n * - drop text nodes consisting of whitespace characters only;\n * - for all other text nodes replace consecutive whitespace characters with one space;\n * - convert &ngsp; pseudo-entity to a single space;\n *\n * Removal and trimming of whitespaces have positive performance impact (less code to generate\n * while compiling templates, faster view creation). At the same time it can be \"destructive\"\n * in some cases (whitespaces can influence layout). Because of the potential of breaking layout\n * this visitor is not activated by default in Angular 5 and people need to explicitly opt-in for\n * whitespace removal. The default option for whitespace removal will be revisited in Angular 6\n * and might be changed to \"on\" by default.\n */\nvar WhitespaceVisitor = (function () {\n    function WhitespaceVisitor() {\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        if (SKIP_WS_TRIM_TAGS.has(element.name) || hasPreserveWhitespacesAttr(element.attrs)) {\n            // don't descent into elements where we need to preserve whitespaces\n            // but still visit all attributes to eliminate one used as a market to preserve WS\n            return new Element(element.name, visitAll(this, element.attrs), element.children, element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n        }\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return attribute.name !== PRESERVE_WS_ATTR_NAME ? attribute : null;\n    };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) {\n        var /** @type {?} */ isNotBlank = text.value.match(NO_WS_REGEXP);\n        if (isNotBlank) {\n            return new Text(replaceNgsp(text.value).replace(WS_REPLACE_REGEXP, ' '), text.sourceSpan);\n        }\n        return null;\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    WhitespaceVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return WhitespaceVisitor;\n}());\n/**\n * @param {?} htmlAstWithErrors\n * @return {?}\n */\nfunction removeWhitespaces(htmlAstWithErrors) {\n    return new ParseTreeResult(visitAll(new WhitespaceVisitor(), htmlAstWithErrors.rootNodes), htmlAstWithErrors.errors);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// http://cldr.unicode.org/index/cldr-spec/plural-rules\nvar PLURAL_CASES = ['zero', 'one', 'two', 'few', 'many', 'other'];\n/**\n * Expands special forms into elements.\n *\n * For example,\n *\n * ```\n * { messages.length, plural,\n *   =0 {zero}\n *   =1 {one}\n *   other {more than one}\n * }\n * ```\n *\n * will be expanded into\n *\n * ```\n * <ng-container [ngPlural]=\"messages.length\">\n *   <ng-template ngPluralCase=\"=0\">zero</ng-template>\n *   <ng-template ngPluralCase=\"=1\">one</ng-template>\n *   <ng-template ngPluralCase=\"other\">more than one</ng-template>\n * </ng-container>\n * ```\n * @param {?} nodes\n * @return {?}\n */\nfunction expandNodes(nodes) {\n    var /** @type {?} */ expander = new _Expander();\n    return new ExpansionResult(visitAll(expander, nodes), expander.isExpanded, expander.errors);\n}\nvar ExpansionResult = (function () {\n    function ExpansionResult(nodes, expanded, errors) {\n        this.nodes = nodes;\n        this.expanded = expanded;\n        this.errors = errors;\n    }\n    return ExpansionResult;\n}());\nvar ExpansionError = (function (_super) {\n    __extends(ExpansionError, _super);\n    function ExpansionError(span, errorMsg) {\n        return _super.call(this, span, errorMsg) || this;\n    }\n    return ExpansionError;\n}(ParseError));\n/**\n * Expand expansion forms (plural, select) to directives\n *\n * \\@internal\n */\nvar _Expander = (function () {\n    function _Expander() {\n        this.isExpanded = false;\n        this.errors = [];\n    }\n    /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} context\n     * @return {?}\n     */\n    function (element, context) {\n        return new Element(element.name, element.attrs, visitAll(this, element.children), element.sourceSpan, element.startSourceSpan, element.endSourceSpan);\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) { return attribute; };\n    /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} context\n     * @return {?}\n     */\n    function (text, context) { return text; };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return comment; };\n    /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansion = /**\n     * @param {?} icu\n     * @param {?} context\n     * @return {?}\n     */\n    function (icu, context) {\n        this.isExpanded = true;\n        return icu.type == 'plural' ? _expandPluralForm(icu, this.errors) :\n            _expandDefaultForm(icu, this.errors);\n    };\n    /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    _Expander.prototype.visitExpansionCase = /**\n     * @param {?} icuCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (icuCase, context) {\n        throw new Error('Should not be reached');\n    };\n    return _Expander;\n}());\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandPluralForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        if (PLURAL_CASES.indexOf(c.value) == -1 && !c.value.match(/^=\\d+$/)) {\n            errors.push(new ExpansionError(c.valueSourceSpan, \"Plural cases should be \\\"=<number>\\\" or one of \" + PLURAL_CASES.join(\", \")));\n        }\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        return new Element(\"ng-template\", [new Attribute$1('ngPluralCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngPlural]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n/**\n * @param {?} ast\n * @param {?} errors\n * @return {?}\n */\nfunction _expandDefaultForm(ast, errors) {\n    var /** @type {?} */ children = ast.cases.map(function (c) {\n        var /** @type {?} */ expansionResult = expandNodes(c.expression);\n        errors.push.apply(errors, expansionResult.errors);\n        if (c.value === 'other') {\n            // other is the default case when no values match\n            return new Element(\"ng-template\", [new Attribute$1('ngSwitchDefault', '', c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n        }\n        return new Element(\"ng-template\", [new Attribute$1('ngSwitchCase', \"\" + c.value, c.valueSourceSpan)], expansionResult.nodes, c.sourceSpan, c.sourceSpan, c.sourceSpan);\n    });\n    var /** @type {?} */ switchAttr = new Attribute$1('[ngSwitch]', ast.switchValue, ast.switchValueSourceSpan);\n    return new Element('ng-container', [switchAttr], children, ast.sourceSpan, ast.sourceSpan, ast.sourceSpan);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar PROPERTY_PARTS_SEPARATOR = '.';\nvar ATTRIBUTE_PREFIX = 'attr';\nvar CLASS_PREFIX = 'class';\nvar STYLE_PREFIX = 'style';\nvar ANIMATE_PROP_PREFIX = 'animate-';\n/** @enum {number} */\nvar BoundPropertyType = {\n    DEFAULT: 0,\n    LITERAL_ATTR: 1,\n    ANIMATION: 2,\n};\nBoundPropertyType[BoundPropertyType.DEFAULT] = \"DEFAULT\";\nBoundPropertyType[BoundPropertyType.LITERAL_ATTR] = \"LITERAL_ATTR\";\nBoundPropertyType[BoundPropertyType.ANIMATION] = \"ANIMATION\";\n/**\n * Represents a parsed property.\n */\nvar BoundProperty = (function () {\n    function BoundProperty(name, expression, type, sourceSpan) {\n        this.name = name;\n        this.expression = expression;\n        this.type = type;\n        this.sourceSpan = sourceSpan;\n        this.isLiteral = this.type === BoundPropertyType.LITERAL_ATTR;\n        this.isAnimation = this.type === BoundPropertyType.ANIMATION;\n    }\n    return BoundProperty;\n}());\n/**\n * Parses bindings in templates and in the directive host area.\n */\nvar BindingParser = (function () {\n    function BindingParser(_exprParser, _interpolationConfig, _schemaRegistry, pipes, _targetErrors) {\n        var _this = this;\n        this._exprParser = _exprParser;\n        this._interpolationConfig = _interpolationConfig;\n        this._schemaRegistry = _schemaRegistry;\n        this._targetErrors = _targetErrors;\n        this.pipesByName = new Map();\n        this._usedPipes = new Map();\n        pipes.forEach(function (pipe) { return _this.pipesByName.set(pipe.name, pipe); });\n    }\n    /**\n     * @return {?}\n     */\n    BindingParser.prototype.getUsedPipes = /**\n     * @return {?}\n     */\n    function () { return Array.from(this._usedPipes.values()); };\n    /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostPropertyAsts = /**\n     * @param {?} dirMeta\n     * @param {?} elementSelector\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, elementSelector, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostProperties) {\n            var /** @type {?} */ boundProps_1 = [];\n            Object.keys(dirMeta.hostProperties).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostProperties[propName];\n                if (typeof expression === 'string') {\n                    _this.parsePropertyBinding(propName, expression, true, sourceSpan, [], boundProps_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host property binding \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return boundProps_1.map(function (prop) { return _this.createElementPropertyAst(elementSelector, prop); });\n        }\n        return null;\n    };\n    /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.createDirectiveHostEventAsts = /**\n     * @param {?} dirMeta\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (dirMeta, sourceSpan) {\n        var _this = this;\n        if (dirMeta.hostListeners) {\n            var /** @type {?} */ targetEventAsts_1 = [];\n            Object.keys(dirMeta.hostListeners).forEach(function (propName) {\n                var /** @type {?} */ expression = dirMeta.hostListeners[propName];\n                if (typeof expression === 'string') {\n                    _this.parseEvent(propName, expression, sourceSpan, [], targetEventAsts_1);\n                }\n                else {\n                    _this._reportError(\"Value of the host listener \\\"\" + propName + \"\\\" needs to be a string representing an expression but got \\\"\" + expression + \"\\\" (\" + typeof expression + \")\", sourceSpan);\n                }\n            });\n            return targetEventAsts_1;\n        }\n        return null;\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype.parseInterpolation = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = /** @type {?} */ ((this._exprParser.parseInterpolation(value, sourceInfo, this._interpolationConfig)));\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    BindingParser.prototype.parseInlineTemplateBinding = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan, targetMatchableAttrs, targetProps, targetVars) {\n        var /** @type {?} */ bindings = this._parseTemplateBindings(prefixToken, value, sourceSpan);\n        for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n            var /** @type {?} */ binding = bindings[i];\n            if (binding.keyIsVar) {\n                targetVars.push(new VariableAst(binding.key, binding.name, sourceSpan));\n            }\n            else if (binding.expression) {\n                this._parsePropertyAst(binding.key, binding.expression, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n            else {\n                targetMatchableAttrs.push([binding.key, '']);\n                this.parseLiteralAttr(binding.key, null, sourceSpan, targetMatchableAttrs, targetProps);\n            }\n        }\n    };\n    /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseTemplateBindings = /**\n     * @param {?} prefixToken\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (prefixToken, value, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ bindingsResult = this._exprParser.parseTemplateBindings(prefixToken, value, sourceInfo);\n            this._reportExpressionParserErrors(bindingsResult.errors, sourceSpan);\n            bindingsResult.templateBindings.forEach(function (binding) {\n                if (binding.expression) {\n                    _this._checkPipes(binding.expression, sourceSpan);\n                }\n            });\n            bindingsResult.warnings.forEach(function (warning) { _this._reportError(warning, sourceSpan, ParseErrorLevel.WARNING); });\n            return bindingsResult.templateBindings;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return [];\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parseLiteralAttr = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        if (_isAnimationLabel(name)) {\n            name = name.substring(1);\n            if (value) {\n                this._reportError(\"Assigning animation triggers via @prop=\\\"exp\\\" attributes with an expression is invalid.\" +\n                    \" Use property bindings (e.g. [@prop]=\\\"exp\\\") or use an attribute without a value (e.g. @prop) instead.\", sourceSpan, ParseErrorLevel.ERROR);\n            }\n            this._parseAnimation(name, value, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            targetProps.push(new BoundProperty(name, this._exprParser.wrapLiteralPrimitive(value, ''), BoundPropertyType.LITERAL_ATTR, sourceSpan));\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyBinding = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} isHost\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, isHost, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ isAnimationProp = false;\n        if (name.startsWith(ANIMATE_PROP_PREFIX)) {\n            isAnimationProp = true;\n            name = name.substring(ANIMATE_PROP_PREFIX.length);\n        }\n        else if (_isAnimationLabel(name)) {\n            isAnimationProp = true;\n            name = name.substring(1);\n        }\n        if (isAnimationProp) {\n            this._parseAnimation(name, expression, sourceSpan, targetMatchableAttrs, targetProps);\n        }\n        else {\n            this._parsePropertyAst(name, this._parseBinding(expression, isHost, sourceSpan), sourceSpan, targetMatchableAttrs, targetProps);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype.parsePropertyInterpolation = /**\n     * @param {?} name\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, value, sourceSpan, targetMatchableAttrs, targetProps) {\n        var /** @type {?} */ expr = this.parseInterpolation(value, sourceSpan);\n        if (expr) {\n            this._parsePropertyAst(name, expr, sourceSpan, targetMatchableAttrs, targetProps);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parsePropertyAst = /**\n     * @param {?} name\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, ast, sourceSpan, targetMatchableAttrs, targetProps) {\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.DEFAULT, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimation = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetProps) {\n        // This will occur when a @trigger is not paired with an expression.\n        // For animations it is valid to not have an expression since */void\n        // states will be applied by angular when the element is attached/detached\n        var /** @type {?} */ ast = this._parseBinding(expression || 'undefined', false, sourceSpan);\n        targetMatchableAttrs.push([name, /** @type {?} */ ((ast.source))]);\n        targetProps.push(new BoundProperty(name, ast, BoundPropertyType.ANIMATION, sourceSpan));\n    };\n    /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseBinding = /**\n     * @param {?} value\n     * @param {?} isHostBinding\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, isHostBinding, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = isHostBinding ?\n                this._exprParser.parseSimpleBinding(value, sourceInfo, this._interpolationConfig) :\n                this._exprParser.parseBinding(value, sourceInfo, this._interpolationConfig);\n            if (ast)\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    BindingParser.prototype.createElementPropertyAst = /**\n     * @param {?} elementSelector\n     * @param {?} boundProp\n     * @return {?}\n     */\n    function (elementSelector, boundProp) {\n        if (boundProp.isAnimation) {\n            return new BoundElementPropertyAst(boundProp.name, PropertyBindingType.Animation, SecurityContext.NONE, boundProp.expression, null, boundProp.sourceSpan);\n        }\n        var /** @type {?} */ unit = null;\n        var /** @type {?} */ bindingType = /** @type {?} */ ((undefined));\n        var /** @type {?} */ boundPropertyName = null;\n        var /** @type {?} */ parts = boundProp.name.split(PROPERTY_PARTS_SEPARATOR);\n        var /** @type {?} */ securityContexts = /** @type {?} */ ((undefined));\n        // Check check for special cases (prefix style, attr, class)\n        if (parts.length > 1) {\n            if (parts[0] == ATTRIBUTE_PREFIX) {\n                boundPropertyName = parts[1];\n                this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, true);\n                securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, true);\n                var /** @type {?} */ nsSeparatorIdx = boundPropertyName.indexOf(':');\n                if (nsSeparatorIdx > -1) {\n                    var /** @type {?} */ ns = boundPropertyName.substring(0, nsSeparatorIdx);\n                    var /** @type {?} */ name_1 = boundPropertyName.substring(nsSeparatorIdx + 1);\n                    boundPropertyName = mergeNsAndName(ns, name_1);\n                }\n                bindingType = PropertyBindingType.Attribute;\n            }\n            else if (parts[0] == CLASS_PREFIX) {\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Class;\n                securityContexts = [SecurityContext.NONE];\n            }\n            else if (parts[0] == STYLE_PREFIX) {\n                unit = parts.length > 2 ? parts[2] : null;\n                boundPropertyName = parts[1];\n                bindingType = PropertyBindingType.Style;\n                securityContexts = [SecurityContext.STYLE];\n            }\n        }\n        // If not a special case, use the full property name\n        if (boundPropertyName === null) {\n            boundPropertyName = this._schemaRegistry.getMappedPropName(boundProp.name);\n            securityContexts = calcPossibleSecurityContexts(this._schemaRegistry, elementSelector, boundPropertyName, false);\n            bindingType = PropertyBindingType.Property;\n            this._validatePropertyOrAttributeName(boundPropertyName, boundProp.sourceSpan, false);\n        }\n        return new BoundElementPropertyAst(boundPropertyName, bindingType, securityContexts[0], boundProp.expression, unit, boundProp.sourceSpan);\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype.parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        if (_isAnimationLabel(name)) {\n            name = name.substr(1);\n            this._parseAnimationEvent(name, expression, sourceSpan, targetEvents);\n        }\n        else {\n            this._parseEvent(name, expression, sourceSpan, targetMatchableAttrs, targetEvents);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseAnimationEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetEvents) {\n        var /** @type {?} */ matches = splitAtPeriod(name, [name, '']);\n        var /** @type {?} */ eventName = matches[0];\n        var /** @type {?} */ phase = matches[1].toLowerCase();\n        if (phase) {\n            switch (phase) {\n                case 'start':\n                case 'done':\n                    var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n                    targetEvents.push(new BoundEventAst(eventName, null, phase, ast, sourceSpan));\n                    break;\n                default:\n                    this._reportError(\"The provided animation output phase value \\\"\" + phase + \"\\\" for \\\"@\" + eventName + \"\\\" is not supported (use start or done)\", sourceSpan);\n                    break;\n            }\n        }\n        else {\n            this._reportError(\"The animation trigger output event (@\" + eventName + \") is missing its phase value name (start or done are currently supported)\", sourceSpan);\n        }\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    BindingParser.prototype._parseEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        // long format: 'target: eventName'\n        var _a = splitAtColon(name, [/** @type {?} */ ((null)), name]), target = _a[0], eventName = _a[1];\n        var /** @type {?} */ ast = this._parseAction(expression, sourceSpan);\n        targetMatchableAttrs.push([/** @type {?} */ ((name)), /** @type {?} */ ((ast.source))]);\n        targetEvents.push(new BoundEventAst(eventName, target, null, ast, sourceSpan));\n        // Don't detect directives for event names for now,\n        // so don't add the event name to the matchableAttrs\n    };\n    /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._parseAction = /**\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (value, sourceSpan) {\n        var /** @type {?} */ sourceInfo = sourceSpan.start.toString();\n        try {\n            var /** @type {?} */ ast = this._exprParser.parseAction(value, sourceInfo, this._interpolationConfig);\n            if (ast) {\n                this._reportExpressionParserErrors(ast.errors, sourceSpan);\n            }\n            if (!ast || ast.ast instanceof EmptyExpr) {\n                this._reportError(\"Empty expressions are not allowed\", sourceSpan);\n                return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n            }\n            this._checkPipes(ast, sourceSpan);\n            return ast;\n        }\n        catch (/** @type {?} */ e) {\n            this._reportError(\"\" + e, sourceSpan);\n            return this._exprParser.wrapLiteralPrimitive('ERROR', sourceInfo);\n        }\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    BindingParser.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._reportExpressionParserErrors = /**\n     * @param {?} errors\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (errors, sourceSpan) {\n        for (var _i = 0, errors_1 = errors; _i < errors_1.length; _i++) {\n            var error = errors_1[_i];\n            this._reportError(error.message, sourceSpan);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    BindingParser.prototype._checkPipes = /**\n     * @param {?} ast\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (ast, sourceSpan) {\n        var _this = this;\n        if (ast) {\n            var /** @type {?} */ collector = new PipeCollector();\n            ast.visit(collector);\n            collector.pipes.forEach(function (ast, pipeName) {\n                var /** @type {?} */ pipeMeta = _this.pipesByName.get(pipeName);\n                if (!pipeMeta) {\n                    _this._reportError(\"The pipe '\" + pipeName + \"' could not be found\", new ParseSourceSpan(sourceSpan.start.moveBy(ast.span.start), sourceSpan.start.moveBy(ast.span.end)));\n                }\n                else {\n                    _this._usedPipes.set(pipeName, pipeMeta);\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    BindingParser.prototype._validatePropertyOrAttributeName = /**\n     * @param {?} propName the name of the property / attribute\n     * @param {?} sourceSpan\n     * @param {?} isAttr true when binding to an attribute\n     * @return {?}\n     */\n    function (propName, sourceSpan, isAttr) {\n        var /** @type {?} */ report = isAttr ? this._schemaRegistry.validateAttribute(propName) :\n            this._schemaRegistry.validateProperty(propName);\n        if (report.error) {\n            this._reportError(/** @type {?} */ ((report.msg)), sourceSpan, ParseErrorLevel.ERROR);\n        }\n    };\n    return BindingParser;\n}());\nvar PipeCollector = (function (_super) {\n    __extends(PipeCollector, _super);\n    function PipeCollector() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.pipes = new Map();\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    PipeCollector.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.pipes.set(ast.name, ast);\n        ast.exp.visit(this);\n        this.visitAll(ast.args, context);\n        return null;\n    };\n    return PipeCollector;\n}(RecursiveAstVisitor));\n/**\n * @param {?} name\n * @return {?}\n */\nfunction _isAnimationLabel(name) {\n    return name[0] == '@';\n}\n/**\n * @param {?} registry\n * @param {?} selector\n * @param {?} propName\n * @param {?} isAttribute\n * @return {?}\n */\nfunction calcPossibleSecurityContexts(registry, selector, propName, isAttribute) {\n    var /** @type {?} */ ctxs = [];\n    CssSelector.parse(selector).forEach(function (selector) {\n        var /** @type {?} */ elementNames = selector.element ? [selector.element] : registry.allKnownElementNames();\n        var /** @type {?} */ notElementNames = new Set(selector.notSelectors.filter(function (selector) { return selector.isElementSelector(); })\n            .map(function (selector) { return selector.element; }));\n        var /** @type {?} */ possibleElementNames = elementNames.filter(function (elementName) { return !notElementNames.has(elementName); });\n        ctxs.push.apply(ctxs, possibleElementNames.map(function (elementName) { return registry.securityContext(elementName, propName, isAttribute); }));\n    });\n    return ctxs.length === 0 ? [SecurityContext.NONE] : Array.from(new Set(ctxs)).sort();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BIND_NAME_REGEXP = /^(?:(?:(?:(bind-)|(let-)|(ref-|#)|(on-)|(bindon-)|(@))(.+))|\\[\\(([^\\)]+)\\)\\]|\\[([^\\]]+)\\]|\\(([^\\)]+)\\))$/;\n// Group 1 = \"bind-\"\nvar KW_BIND_IDX = 1;\n// Group 2 = \"let-\"\nvar KW_LET_IDX = 2;\n// Group 3 = \"ref-/#\"\nvar KW_REF_IDX = 3;\n// Group 4 = \"on-\"\nvar KW_ON_IDX = 4;\n// Group 5 = \"bindon-\"\nvar KW_BINDON_IDX = 5;\n// Group 6 = \"@\"\nvar KW_AT_IDX = 6;\n// Group 7 = the identifier after \"bind-\", \"let-\", \"ref-/#\", \"on-\", \"bindon-\" or \"@\"\nvar IDENT_KW_IDX = 7;\n// Group 8 = identifier inside [()]\nvar IDENT_BANANA_BOX_IDX = 8;\n// Group 9 = identifier inside []\nvar IDENT_PROPERTY_IDX = 9;\n// Group 10 = identifier inside ()\nvar IDENT_EVENT_IDX = 10;\n// deprecated in 4.x\nvar TEMPLATE_ELEMENT = 'template';\n// deprecated in 4.x\nvar TEMPLATE_ATTR = 'template';\nvar TEMPLATE_ATTR_PREFIX$1 = '*';\nvar CLASS_ATTR = 'class';\nvar TEXT_CSS_SELECTOR = CssSelector.parse('*')[0];\nvar TEMPLATE_ELEMENT_DEPRECATION_WARNING = 'The <template> element is deprecated. Use <ng-template> instead';\nvar TEMPLATE_ATTR_DEPRECATION_WARNING = 'The template attribute is deprecated. Use an ng-template element instead.';\nvar warningCounts = {};\n/**\n * @param {?} warnings\n * @return {?}\n */\nfunction warnOnlyOnce(warnings) {\n    return function (error) {\n        if (warnings.indexOf(error.msg) !== -1) {\n            warningCounts[error.msg] = (warningCounts[error.msg] || 0) + 1;\n            return warningCounts[error.msg] <= 1;\n        }\n        return true;\n    };\n}\nvar TemplateParseError = (function (_super) {\n    __extends(TemplateParseError, _super);\n    function TemplateParseError(message, span, level) {\n        return _super.call(this, span, message, level) || this;\n    }\n    return TemplateParseError;\n}(ParseError));\nvar TemplateParseResult = (function () {\n    function TemplateParseResult(templateAst, usedPipes, errors) {\n        this.templateAst = templateAst;\n        this.usedPipes = usedPipes;\n        this.errors = errors;\n    }\n    return TemplateParseResult;\n}());\nvar TemplateParser = (function () {\n    function TemplateParser(_config, _reflector, _exprParser, _schemaRegistry, _htmlParser, _console, transforms) {\n        this._config = _config;\n        this._reflector = _reflector;\n        this._exprParser = _exprParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._htmlParser = _htmlParser;\n        this._console = _console;\n        this.transforms = transforms;\n    }\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.parse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ result = this.tryParse(component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces);\n        var /** @type {?} */ warnings = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.WARNING; }).filter(warnOnlyOnce([TEMPLATE_ATTR_DEPRECATION_WARNING, TEMPLATE_ELEMENT_DEPRECATION_WARNING]));\n        var /** @type {?} */ errors = /** @type {?} */ ((result.errors)).filter(function (error) { return error.level === ParseErrorLevel.ERROR; });\n        if (warnings.length > 0) {\n            this._console.warn(\"Template parse warnings:\\n\" + warnings.join('\\n'));\n        }\n        if (errors.length > 0) {\n            var /** @type {?} */ errorString = errors.join('\\n');\n            throw syntaxError(\"Template parse errors:\\n\" + errorString, errors);\n        }\n        return { template: /** @type {?} */ ((result.templateAst)), pipes: /** @type {?} */ ((result.usedPipes)) };\n    };\n    /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParse = /**\n     * @param {?} component\n     * @param {?} template\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @param {?} templateUrl\n     * @param {?} preserveWhitespaces\n     * @return {?}\n     */\n    function (component, template, directives, pipes, schemas, templateUrl, preserveWhitespaces) {\n        var /** @type {?} */ htmlParseResult = typeof template === 'string' ? /** @type {?} */ ((this._htmlParser)).parse(template, templateUrl, true, this.getInterpolationConfig(component)) :\n            template;\n        if (!preserveWhitespaces) {\n            htmlParseResult = removeWhitespaces(htmlParseResult);\n        }\n        return this.tryParseHtml(this.expandHtml(htmlParseResult), component, directives, pipes, schemas);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    TemplateParser.prototype.tryParseHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?} component\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} schemas\n     * @return {?}\n     */\n    function (htmlAstWithErrors, component, directives, pipes, schemas) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        var /** @type {?} */ usedPipes = [];\n        if (htmlAstWithErrors.rootNodes.length > 0) {\n            var /** @type {?} */ uniqDirectives = removeSummaryDuplicates(directives);\n            var /** @type {?} */ uniqPipes = removeSummaryDuplicates(pipes);\n            var /** @type {?} */ providerViewContext = new ProviderViewContext(this._reflector, component);\n            var /** @type {?} */ interpolationConfig = /** @type {?} */ ((undefined));\n            if (component.template && component.template.interpolation) {\n                interpolationConfig = {\n                    start: component.template.interpolation[0],\n                    end: component.template.interpolation[1]\n                };\n            }\n            var /** @type {?} */ bindingParser = new BindingParser(this._exprParser, /** @type {?} */ ((interpolationConfig)), this._schemaRegistry, uniqPipes, errors);\n            var /** @type {?} */ parseVisitor = new TemplateParseVisitor(this._reflector, this._config, providerViewContext, uniqDirectives, bindingParser, this._schemaRegistry, schemas, errors);\n            result = visitAll(parseVisitor, htmlAstWithErrors.rootNodes, EMPTY_ELEMENT_CONTEXT);\n            errors.push.apply(errors, providerViewContext.errors);\n            usedPipes.push.apply(usedPipes, bindingParser.getUsedPipes());\n        }\n        else {\n            result = [];\n        }\n        this._assertNoReferenceDuplicationOnTemplate(result, errors);\n        if (errors.length > 0) {\n            return new TemplateParseResult(result, usedPipes, errors);\n        }\n        if (this.transforms) {\n            this.transforms.forEach(function (transform) { result = templateVisitAll(transform, result); });\n        }\n        return new TemplateParseResult(result, usedPipes, errors);\n    };\n    /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    TemplateParser.prototype.expandHtml = /**\n     * @param {?} htmlAstWithErrors\n     * @param {?=} forced\n     * @return {?}\n     */\n    function (htmlAstWithErrors, forced) {\n        if (forced === void 0) { forced = false; }\n        var /** @type {?} */ errors = htmlAstWithErrors.errors;\n        if (errors.length == 0 || forced) {\n            // Transform ICU messages to angular directives\n            var /** @type {?} */ expandedHtmlAst = expandNodes(htmlAstWithErrors.rootNodes);\n            errors.push.apply(errors, expandedHtmlAst.errors);\n            htmlAstWithErrors = new ParseTreeResult(expandedHtmlAst.nodes, errors);\n        }\n        return htmlAstWithErrors;\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    TemplateParser.prototype.getInterpolationConfig = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        if (component.template) {\n            return InterpolationConfig.fromArray(component.template.interpolation);\n        }\n        return undefined;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    TemplateParser.prototype._assertNoReferenceDuplicationOnTemplate = /**\n     * \\@internal\n     * @param {?} result\n     * @param {?} errors\n     * @return {?}\n     */\n    function (result, errors) {\n        var /** @type {?} */ existingReferences = [];\n        result.filter(function (element) { return !!(/** @type {?} */ (element)).references; })\n            .forEach(function (element) {\n            return (/** @type {?} */ (element)).references.forEach(function (reference) {\n                var /** @type {?} */ name = reference.name;\n                if (existingReferences.indexOf(name) < 0) {\n                    existingReferences.push(name);\n                }\n                else {\n                    var /** @type {?} */ error = new TemplateParseError(\"Reference \\\"#\" + name + \"\\\" is defined several times\", reference.sourceSpan, ParseErrorLevel.ERROR);\n                    errors.push(error);\n                }\n            });\n        });\n    };\n    return TemplateParser;\n}());\nvar TemplateParseVisitor = (function () {\n    function TemplateParseVisitor(reflector, config, providerViewContext, directives, _bindingParser, _schemaRegistry, _schemas, _targetErrors) {\n        var _this = this;\n        this.reflector = reflector;\n        this.config = config;\n        this.providerViewContext = providerViewContext;\n        this._bindingParser = _bindingParser;\n        this._schemaRegistry = _schemaRegistry;\n        this._schemas = _schemas;\n        this._targetErrors = _targetErrors;\n        this.selectorMatcher = new SelectorMatcher();\n        this.directivesIndex = new Map();\n        this.ngContentCount = 0;\n        // Note: queries start with id 1 so we can use the number in a Bloom filter!\n        this.contentQueryStartId = providerViewContext.component.viewQueries.length + 1;\n        directives.forEach(function (directive, index) {\n            var /** @type {?} */ selector = CssSelector.parse(/** @type {?} */ ((directive.selector)));\n            _this.selectorMatcher.addSelectables(selector, directive);\n            _this.directivesIndex.set(directive, index);\n        });\n    }\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return null; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return null; };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        var /** @type {?} */ valueNoNgsp = replaceNgsp(text.value);\n        var /** @type {?} */ expr = this._bindingParser.parseInterpolation(valueNoNgsp, /** @type {?} */ ((text.sourceSpan)));\n        return expr ? new BoundTextAst(expr, ngContentIndex, /** @type {?} */ ((text.sourceSpan))) :\n            new TextAst(valueNoNgsp, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype.visitElement = /**\n     * @param {?} element\n     * @param {?} parent\n     * @return {?}\n     */\n    function (element, parent) {\n        var _this = this;\n        var /** @type {?} */ queryStartIndex = this.contentQueryStartId;\n        var /** @type {?} */ nodeName = element.name;\n        var /** @type {?} */ preparsedElement = preparseElement(element);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE) {\n            // Skipping <script> for security reasons\n            // Skipping <style> as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        if (preparsedElement.type === PreparsedElementType.STYLESHEET &&\n            isStyleUrlResolvable(preparsedElement.hrefAttr)) {\n            // Skipping stylesheets with either relative urls or package scheme as we already processed\n            // them in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ matchableAttrs = [];\n        var /** @type {?} */ elementOrDirectiveProps = [];\n        var /** @type {?} */ elementOrDirectiveRefs = [];\n        var /** @type {?} */ elementVars = [];\n        var /** @type {?} */ events = [];\n        var /** @type {?} */ templateElementOrDirectiveProps = [];\n        var /** @type {?} */ templateMatchableAttrs = [];\n        var /** @type {?} */ templateElementVars = [];\n        var /** @type {?} */ hasInlineTemplates = false;\n        var /** @type {?} */ attrs = [];\n        var /** @type {?} */ isTemplateElement = isTemplate(element, this.config.enableLegacyTemplate, function (m, span) { return _this._reportError(m, span, ParseErrorLevel.WARNING); });\n        element.attrs.forEach(function (attr) {\n            var /** @type {?} */ hasBinding = _this._parseAttr(isTemplateElement, attr, matchableAttrs, elementOrDirectiveProps, events, elementOrDirectiveRefs, elementVars);\n            var /** @type {?} */ templateBindingsSource;\n            var /** @type {?} */ prefixToken;\n            var /** @type {?} */ normalizedName = _this._normalizeAttributeName(attr.name);\n            if (_this.config.enableLegacyTemplate && normalizedName == TEMPLATE_ATTR) {\n                _this._reportError(TEMPLATE_ATTR_DEPRECATION_WARNING, attr.sourceSpan, ParseErrorLevel.WARNING);\n                templateBindingsSource = attr.value;\n            }\n            else if (normalizedName.startsWith(TEMPLATE_ATTR_PREFIX$1)) {\n                templateBindingsSource = attr.value;\n                prefixToken = normalizedName.substring(TEMPLATE_ATTR_PREFIX$1.length) + ':';\n            }\n            var /** @type {?} */ hasTemplateBinding = templateBindingsSource != null;\n            if (hasTemplateBinding) {\n                if (hasInlineTemplates) {\n                    _this._reportError(\"Can't have multiple template bindings on one element. Use only one attribute named 'template' or prefixed with *\", attr.sourceSpan);\n                }\n                hasInlineTemplates = true;\n                _this._bindingParser.parseInlineTemplateBinding(/** @type {?} */ ((prefixToken)), /** @type {?} */ ((templateBindingsSource)), attr.sourceSpan, templateMatchableAttrs, templateElementOrDirectiveProps, templateElementVars);\n            }\n            if (!hasBinding && !hasTemplateBinding) {\n                // don't include the bindings as attributes as well in the AST\n                attrs.push(_this.visitAttribute(attr, null));\n                matchableAttrs.push([attr.name, attr.value]);\n            }\n        });\n        var /** @type {?} */ elementCssSelector = createElementCssSelector$1(nodeName, matchableAttrs);\n        var _a = this._parseDirectives(this.selectorMatcher, elementCssSelector), directiveMetas = _a.directives, matchElement = _a.matchElement;\n        var /** @type {?} */ references = [];\n        var /** @type {?} */ boundDirectivePropNames = new Set();\n        var /** @type {?} */ directiveAsts = this._createDirectiveAsts(isTemplateElement, element.name, directiveMetas, elementOrDirectiveProps, elementOrDirectiveRefs, /** @type {?} */ ((element.sourceSpan)), references, boundDirectivePropNames);\n        var /** @type {?} */ elementProps = this._createElementPropertyAsts(element.name, elementOrDirectiveProps, boundDirectivePropNames);\n        var /** @type {?} */ isViewRoot = parent.isTemplateElement || hasInlineTemplates;\n        var /** @type {?} */ providerContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), isViewRoot, directiveAsts, attrs, references, isTemplateElement, queryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n        var /** @type {?} */ children = visitAll(preparsedElement.nonBindable ? NON_BINDABLE_VISITOR : this, element.children, ElementContext.create(isTemplateElement, directiveAsts, isTemplateElement ? /** @type {?} */ ((parent.providerContext)) : providerContext));\n        providerContext.afterElement();\n        // Override the actual selector when the `ngProjectAs` attribute is provided\n        var /** @type {?} */ projectionSelector = preparsedElement.projectAs != null ?\n            CssSelector.parse(preparsedElement.projectAs)[0] :\n            elementCssSelector;\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(projectionSelector)));\n        var /** @type {?} */ parsedElement;\n        if (preparsedElement.type === PreparsedElementType.NG_CONTENT) {\n            if (element.children && !element.children.every(_isEmptyTextNode)) {\n                this._reportError(\"<ng-content> element cannot have content.\", /** @type {?} */ ((element.sourceSpan)));\n            }\n            parsedElement = new NgContentAst(this.ngContentCount++, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else if (isTemplateElement) {\n            this._assertAllEventsPublishedByDirectives(directiveAsts, events);\n            this._assertNoComponentsNorElementBindingsOnTemplate(directiveAsts, elementProps, /** @type {?} */ ((element.sourceSpan)));\n            parsedElement = new EmbeddedTemplateAst(attrs, events, references, elementVars, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? /** @type {?} */ ((null)) : ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        else {\n            this._assertElementExists(matchElement, element);\n            this._assertOnlyOneComponent(directiveAsts, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ ngContentIndex_1 = hasInlineTemplates ? null : parent.findNgContentIndex(projectionSelector);\n            parsedElement = new ElementAst(nodeName, attrs, elementProps, events, references, providerContext.transformedDirectiveAsts, providerContext.transformProviders, providerContext.transformedHasViewContainer, providerContext.queryMatches, children, hasInlineTemplates ? null : ngContentIndex_1, element.sourceSpan, element.endSourceSpan || null);\n        }\n        if (hasInlineTemplates) {\n            var /** @type {?} */ templateQueryStartIndex = this.contentQueryStartId;\n            var /** @type {?} */ templateSelector = createElementCssSelector$1(TEMPLATE_ELEMENT, templateMatchableAttrs);\n            var templateDirectiveMetas = this._parseDirectives(this.selectorMatcher, templateSelector).directives;\n            var /** @type {?} */ templateBoundDirectivePropNames = new Set();\n            var /** @type {?} */ templateDirectiveAsts = this._createDirectiveAsts(true, element.name, templateDirectiveMetas, templateElementOrDirectiveProps, [], /** @type {?} */ ((element.sourceSpan)), [], templateBoundDirectivePropNames);\n            var /** @type {?} */ templateElementProps = this._createElementPropertyAsts(element.name, templateElementOrDirectiveProps, templateBoundDirectivePropNames);\n            this._assertNoComponentsNorElementBindingsOnTemplate(templateDirectiveAsts, templateElementProps, /** @type {?} */ ((element.sourceSpan)));\n            var /** @type {?} */ templateProviderContext = new ProviderElementContext(this.providerViewContext, /** @type {?} */ ((parent.providerContext)), parent.isTemplateElement, templateDirectiveAsts, [], [], true, templateQueryStartIndex, /** @type {?} */ ((element.sourceSpan)));\n            templateProviderContext.afterElement();\n            parsedElement = new EmbeddedTemplateAst([], [], [], templateElementVars, templateProviderContext.transformedDirectiveAsts, templateProviderContext.transformProviders, templateProviderContext.transformedHasViewContainer, templateProviderContext.queryMatches, [parsedElement], ngContentIndex, /** @type {?} */ ((element.sourceSpan)));\n        }\n        return parsedElement;\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAttr = /**\n     * @param {?} isTemplateElement\n     * @param {?} attr\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetProps\n     * @param {?} targetEvents\n     * @param {?} targetRefs\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (isTemplateElement, attr, targetMatchableAttrs, targetProps, targetEvents, targetRefs, targetVars) {\n        var /** @type {?} */ name = this._normalizeAttributeName(attr.name);\n        var /** @type {?} */ value = attr.value;\n        var /** @type {?} */ srcSpan = attr.sourceSpan;\n        var /** @type {?} */ bindParts = name.match(BIND_NAME_REGEXP);\n        var /** @type {?} */ hasBinding = false;\n        if (bindParts !== null) {\n            hasBinding = true;\n            if (bindParts[KW_BIND_IDX] != null) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[KW_LET_IDX]) {\n                if (isTemplateElement) {\n                    var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                    this._parseVariable(identifier, value, srcSpan, targetVars);\n                }\n                else {\n                    this._reportError(\"\\\"let-\\\" is only supported on ng-template elements.\", srcSpan);\n                }\n            }\n            else if (bindParts[KW_REF_IDX]) {\n                var /** @type {?} */ identifier = bindParts[IDENT_KW_IDX];\n                this._parseReference(identifier, value, srcSpan, targetRefs);\n            }\n            else if (bindParts[KW_ON_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_BINDON_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_KW_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_KW_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[KW_AT_IDX]) {\n                this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_BANANA_BOX_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_BANANA_BOX_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n                this._parseAssignmentEvent(bindParts[IDENT_BANANA_BOX_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n            else if (bindParts[IDENT_PROPERTY_IDX]) {\n                this._bindingParser.parsePropertyBinding(bindParts[IDENT_PROPERTY_IDX], value, false, srcSpan, targetMatchableAttrs, targetProps);\n            }\n            else if (bindParts[IDENT_EVENT_IDX]) {\n                this._bindingParser.parseEvent(bindParts[IDENT_EVENT_IDX], value, srcSpan, targetMatchableAttrs, targetEvents);\n            }\n        }\n        else {\n            hasBinding = this._bindingParser.parsePropertyInterpolation(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        if (!hasBinding) {\n            this._bindingParser.parseLiteralAttr(name, value, srcSpan, targetMatchableAttrs, targetProps);\n        }\n        return hasBinding;\n    };\n    /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._normalizeAttributeName = /**\n     * @param {?} attrName\n     * @return {?}\n     */\n    function (attrName) {\n        return /^data-/i.test(attrName) ? attrName.substring(5) : attrName;\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseVariable = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetVars\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetVars) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in variable names\", sourceSpan);\n        }\n        targetVars.push(new VariableAst(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseReference = /**\n     * @param {?} identifier\n     * @param {?} value\n     * @param {?} sourceSpan\n     * @param {?} targetRefs\n     * @return {?}\n     */\n    function (identifier, value, sourceSpan, targetRefs) {\n        if (identifier.indexOf('-') > -1) {\n            this._reportError(\"\\\"-\\\" is not allowed in reference names\", sourceSpan);\n        }\n        targetRefs.push(new ElementOrDirectiveRef(identifier, value, sourceSpan));\n    };\n    /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseAssignmentEvent = /**\n     * @param {?} name\n     * @param {?} expression\n     * @param {?} sourceSpan\n     * @param {?} targetMatchableAttrs\n     * @param {?} targetEvents\n     * @return {?}\n     */\n    function (name, expression, sourceSpan, targetMatchableAttrs, targetEvents) {\n        this._bindingParser.parseEvent(name + \"Change\", expression + \"=$event\", sourceSpan, targetMatchableAttrs, targetEvents);\n    };\n    /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._parseDirectives = /**\n     * @param {?} selectorMatcher\n     * @param {?} elementCssSelector\n     * @return {?}\n     */\n    function (selectorMatcher, elementCssSelector) {\n        var _this = this;\n        // Need to sort the directives so that we get consistent results throughout,\n        // as selectorMatcher uses Maps inside.\n        // Also deduplicate directives as they might match more than one time!\n        var /** @type {?} */ directives = new Array(this.directivesIndex.size);\n        // Whether any directive selector matches on the element name\n        var /** @type {?} */ matchElement = false;\n        selectorMatcher.match(elementCssSelector, function (selector, directive) {\n            directives[/** @type {?} */ ((_this.directivesIndex.get(directive)))] = directive;\n            matchElement = matchElement || selector.hasElementSelector();\n        });\n        return {\n            directives: directives.filter(function (dir) { return !!dir; }),\n            matchElement: matchElement,\n        };\n    };\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectiveAsts = /**\n     * @param {?} isTemplateElement\n     * @param {?} elementName\n     * @param {?} directives\n     * @param {?} props\n     * @param {?} elementOrDirectiveRefs\n     * @param {?} elementSourceSpan\n     * @param {?} targetReferences\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (isTemplateElement, elementName, directives, props, elementOrDirectiveRefs, elementSourceSpan, targetReferences, targetBoundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ matchedReferences = new Set();\n        var /** @type {?} */ component = /** @type {?} */ ((null));\n        var /** @type {?} */ directiveAsts = directives.map(function (directive) {\n            var /** @type {?} */ sourceSpan = new ParseSourceSpan(elementSourceSpan.start, elementSourceSpan.end, \"Directive \" + identifierName(directive.type));\n            if (directive.isComponent) {\n                component = directive;\n            }\n            var /** @type {?} */ directiveProperties = [];\n            var /** @type {?} */ hostProperties = /** @type {?} */ ((_this._bindingParser.createDirectiveHostPropertyAsts(directive, elementName, sourceSpan)));\n            // Note: We need to check the host properties here as well,\n            // as we don't know the element name in the DirectiveWrapperCompiler yet.\n            hostProperties = _this._checkPropertiesInSchema(elementName, hostProperties);\n            var /** @type {?} */ hostEvents = /** @type {?} */ ((_this._bindingParser.createDirectiveHostEventAsts(directive, sourceSpan)));\n            _this._createDirectivePropertyAsts(directive.inputs, props, directiveProperties, targetBoundDirectivePropNames);\n            elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n                if ((elOrDirRef.value.length === 0 && directive.isComponent) ||\n                    (elOrDirRef.isReferenceToDirective(directive))) {\n                    targetReferences.push(new ReferenceAst(elOrDirRef.name, createTokenForReference(directive.type.reference), elOrDirRef.sourceSpan));\n                    matchedReferences.add(elOrDirRef.name);\n                }\n            });\n            var /** @type {?} */ contentQueryStartId = _this.contentQueryStartId;\n            _this.contentQueryStartId += directive.queries.length;\n            return new DirectiveAst(directive, directiveProperties, hostProperties, hostEvents, contentQueryStartId, sourceSpan);\n        });\n        elementOrDirectiveRefs.forEach(function (elOrDirRef) {\n            if (elOrDirRef.value.length > 0) {\n                if (!matchedReferences.has(elOrDirRef.name)) {\n                    _this._reportError(\"There is no directive with \\\"exportAs\\\" set to \\\"\" + elOrDirRef.value + \"\\\"\", elOrDirRef.sourceSpan);\n                }\n            }\n            else if (!component) {\n                var /** @type {?} */ refToken = /** @type {?} */ ((null));\n                if (isTemplateElement) {\n                    refToken = createTokenForExternalReference(_this.reflector, Identifiers.TemplateRef);\n                }\n                targetReferences.push(new ReferenceAst(elOrDirRef.name, refToken, elOrDirRef.sourceSpan));\n            }\n        });\n        return directiveAsts;\n    };\n    /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createDirectivePropertyAsts = /**\n     * @param {?} directiveProperties\n     * @param {?} boundProps\n     * @param {?} targetBoundDirectiveProps\n     * @param {?} targetBoundDirectivePropNames\n     * @return {?}\n     */\n    function (directiveProperties, boundProps, targetBoundDirectiveProps, targetBoundDirectivePropNames) {\n        if (directiveProperties) {\n            var /** @type {?} */ boundPropsByName_1 = new Map();\n            boundProps.forEach(function (boundProp) {\n                var /** @type {?} */ prevValue = boundPropsByName_1.get(boundProp.name);\n                if (!prevValue || prevValue.isLiteral) {\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    // give [a]=\"b\" a higher precedence than a=\"b\" on the same element\n                    boundPropsByName_1.set(boundProp.name, boundProp);\n                }\n            });\n            Object.keys(directiveProperties).forEach(function (dirProp) {\n                var /** @type {?} */ elProp = directiveProperties[dirProp];\n                var /** @type {?} */ boundProp = boundPropsByName_1.get(elProp);\n                // Bindings are optional, so this binding only needs to be set up if an expression is given.\n                if (boundProp) {\n                    targetBoundDirectivePropNames.add(boundProp.name);\n                    if (!isEmptyExpression(boundProp.expression)) {\n                        targetBoundDirectiveProps.push(new BoundDirectivePropertyAst(dirProp, boundProp.name, boundProp.expression, boundProp.sourceSpan));\n                    }\n                }\n            });\n        }\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._createElementPropertyAsts = /**\n     * @param {?} elementName\n     * @param {?} props\n     * @param {?} boundDirectivePropNames\n     * @return {?}\n     */\n    function (elementName, props, boundDirectivePropNames) {\n        var _this = this;\n        var /** @type {?} */ boundElementProps = [];\n        props.forEach(function (prop) {\n            if (!prop.isLiteral && !boundDirectivePropNames.has(prop.name)) {\n                boundElementProps.push(_this._bindingParser.createElementPropertyAst(elementName, prop));\n            }\n        });\n        return this._checkPropertiesInSchema(elementName, boundElementProps);\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectives = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return directives.filter(function (directive) { return directive.directive.isComponent; });\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._findComponentDirectiveNames = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        return this._findComponentDirectives(directives)\n            .map(function (directive) { return /** @type {?} */ ((identifierName(directive.directive.type))); });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertOnlyOneComponent = /**\n     * @param {?} directives\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, sourceSpan) {\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 1) {\n            this._reportError(\"More than one component matched on this element.\\n\" +\n                \"Make sure that only one component's selector can match a given element.\\n\" +\n                (\"Conflicting components: \" + componentTypeNames.join(',')), sourceSpan);\n        }\n    };\n    /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertElementExists = /**\n     * Make sure that non-angular tags conform to the schemas.\n     *\n     * Note: An element is considered an angular tag when at least one directive selector matches the\n     * tag name.\n     *\n     * @param {?} matchElement Whether any directive has matched on the tag name\n     * @param {?} element the html element\n     * @return {?}\n     */\n    function (matchElement, element) {\n        var /** @type {?} */ elName = element.name.replace(/^:xhtml:/, '');\n        if (!matchElement && !this._schemaRegistry.hasElement(elName, this._schemas)) {\n            var /** @type {?} */ errorMsg = \"'\" + elName + \"' is not a known element:\\n\";\n            errorMsg +=\n                \"1. If '\" + elName + \"' is an Angular component, then verify that it is part of this module.\\n\";\n            if (elName.indexOf('-') > -1) {\n                errorMsg +=\n                    \"2. If '\" + elName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\";\n            }\n            else {\n                errorMsg +=\n                    \"2. To allow any element add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n            }\n            this._reportError(errorMsg, /** @type {?} */ ((element.sourceSpan)));\n        }\n    };\n    /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertNoComponentsNorElementBindingsOnTemplate = /**\n     * @param {?} directives\n     * @param {?} elementProps\n     * @param {?} sourceSpan\n     * @return {?}\n     */\n    function (directives, elementProps, sourceSpan) {\n        var _this = this;\n        var /** @type {?} */ componentTypeNames = this._findComponentDirectiveNames(directives);\n        if (componentTypeNames.length > 0) {\n            this._reportError(\"Components on an embedded template: \" + componentTypeNames.join(','), sourceSpan);\n        }\n        elementProps.forEach(function (prop) {\n            _this._reportError(\"Property binding \" + prop.name + \" not used by any directive on an embedded template. Make sure that the property name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", sourceSpan);\n        });\n    };\n    /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._assertAllEventsPublishedByDirectives = /**\n     * @param {?} directives\n     * @param {?} events\n     * @return {?}\n     */\n    function (directives, events) {\n        var _this = this;\n        var /** @type {?} */ allDirectiveEvents = new Set();\n        directives.forEach(function (directive) {\n            Object.keys(directive.directive.outputs).forEach(function (k) {\n                var /** @type {?} */ eventName = directive.directive.outputs[k];\n                allDirectiveEvents.add(eventName);\n            });\n        });\n        events.forEach(function (event) {\n            if (event.target != null || !allDirectiveEvents.has(event.name)) {\n                _this._reportError(\"Event binding \" + event.fullName + \" not emitted by any directive on an embedded template. Make sure that the event name is spelled correctly and all directives are listed in the \\\"@NgModule.declarations\\\".\", event.sourceSpan);\n            }\n        });\n    };\n    /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._checkPropertiesInSchema = /**\n     * @param {?} elementName\n     * @param {?} boundProps\n     * @return {?}\n     */\n    function (elementName, boundProps) {\n        var _this = this;\n        // Note: We can't filter out empty expressions before this method,\n        // as we still want to validate them!\n        return boundProps.filter(function (boundProp) {\n            if (boundProp.type === PropertyBindingType.Property &&\n                !_this._schemaRegistry.hasProperty(elementName, boundProp.name, _this._schemas)) {\n                var /** @type {?} */ errorMsg = \"Can't bind to '\" + boundProp.name + \"' since it isn't a known property of '\" + elementName + \"'.\";\n                if (elementName.startsWith('ng-')) {\n                    errorMsg +=\n                        \"\\n1. If '\" + boundProp.name + \"' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.\" +\n                            \"\\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                else if (elementName.indexOf('-') > -1) {\n                    errorMsg +=\n                        \"\\n1. If '\" + elementName + \"' is an Angular component and it has '\" + boundProp.name + \"' input, then verify that it is part of this module.\" +\n                            (\"\\n2. If '\" + elementName + \"' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the '@NgModule.schemas' of this component to suppress this message.\") +\n                            \"\\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component.\";\n                }\n                _this._reportError(errorMsg, boundProp.sourceSpan);\n            }\n            return !isEmptyExpression(boundProp.value);\n        });\n    };\n    /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    TemplateParseVisitor.prototype._reportError = /**\n     * @param {?} message\n     * @param {?} sourceSpan\n     * @param {?=} level\n     * @return {?}\n     */\n    function (message, sourceSpan, level) {\n        if (level === void 0) { level = ParseErrorLevel.ERROR; }\n        this._targetErrors.push(new ParseError(sourceSpan, message, level));\n    };\n    return TemplateParseVisitor;\n}());\nvar NonBindableVisitor = (function () {\n    function NonBindableVisitor() {\n    }\n    /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} parent\n     * @return {?}\n     */\n    function (ast, parent) {\n        var /** @type {?} */ preparsedElement = preparseElement(ast);\n        if (preparsedElement.type === PreparsedElementType.SCRIPT ||\n            preparsedElement.type === PreparsedElementType.STYLE ||\n            preparsedElement.type === PreparsedElementType.STYLESHEET) {\n            // Skipping <script> for security reasons\n            // Skipping <style> and stylesheets as we already processed them\n            // in the StyleCompiler\n            return null;\n        }\n        var /** @type {?} */ attrNameAndValues = ast.attrs.map(function (attr) { return [attr.name, attr.value]; });\n        var /** @type {?} */ selector = createElementCssSelector$1(ast.name, attrNameAndValues);\n        var /** @type {?} */ ngContentIndex = parent.findNgContentIndex(selector);\n        var /** @type {?} */ children = visitAll(this, ast.children, EMPTY_ELEMENT_CONTEXT);\n        return new ElementAst(ast.name, visitAll(this, ast.attrs), [], [], [], [], [], false, [], children, ngContentIndex, ast.sourceSpan, ast.endSourceSpan);\n    };\n    /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitComment = /**\n     * @param {?} comment\n     * @param {?} context\n     * @return {?}\n     */\n    function (comment, context) { return null; };\n    /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitAttribute = /**\n     * @param {?} attribute\n     * @param {?} context\n     * @return {?}\n     */\n    function (attribute, context) {\n        return new AttrAst(attribute.name, attribute.value, attribute.sourceSpan);\n    };\n    /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitText = /**\n     * @param {?} text\n     * @param {?} parent\n     * @return {?}\n     */\n    function (text, parent) {\n        var /** @type {?} */ ngContentIndex = /** @type {?} */ ((parent.findNgContentIndex(TEXT_CSS_SELECTOR)));\n        return new TextAst(text.value, ngContentIndex, /** @type {?} */ ((text.sourceSpan)));\n    };\n    /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansion = /**\n     * @param {?} expansion\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansion, context) { return expansion; };\n    /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    NonBindableVisitor.prototype.visitExpansionCase = /**\n     * @param {?} expansionCase\n     * @param {?} context\n     * @return {?}\n     */\n    function (expansionCase, context) { return expansionCase; };\n    return NonBindableVisitor;\n}());\n/**\n * A reference to an element or directive in a template. E.g., the reference in this template:\n *\n * <div #myMenu=\"coolMenu\">\n *\n * would be {name: 'myMenu', value: 'coolMenu', sourceSpan: ...}\n */\nvar ElementOrDirectiveRef = (function () {\n    function ElementOrDirectiveRef(name, value, sourceSpan) {\n        this.name = name;\n        this.value = value;\n        this.sourceSpan = sourceSpan;\n    }\n    /** Gets whether this is a reference to the given directive. */\n    /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    ElementOrDirectiveRef.prototype.isReferenceToDirective = /**\n     * Gets whether this is a reference to the given directive.\n     * @param {?} directive\n     * @return {?}\n     */\n    function (directive) {\n        return splitExportAs(directive.exportAs).indexOf(this.value) !== -1;\n    };\n    return ElementOrDirectiveRef;\n}());\n/**\n * Splits a raw, potentially comma-delimted `exportAs` value into an array of names.\n * @param {?} exportAs\n * @return {?}\n */\nfunction splitExportAs(exportAs) {\n    return exportAs ? exportAs.split(',').map(function (e) { return e.trim(); }) : [];\n}\n/**\n * @param {?} classAttrValue\n * @return {?}\n */\nfunction splitClasses(classAttrValue) {\n    return classAttrValue.trim().split(/\\s+/g);\n}\nvar ElementContext = (function () {\n    function ElementContext(isTemplateElement, _ngContentIndexMatcher, _wildcardNgContentIndex, providerContext) {\n        this.isTemplateElement = isTemplateElement;\n        this._ngContentIndexMatcher = _ngContentIndexMatcher;\n        this._wildcardNgContentIndex = _wildcardNgContentIndex;\n        this.providerContext = providerContext;\n    }\n    /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    ElementContext.create = /**\n     * @param {?} isTemplateElement\n     * @param {?} directives\n     * @param {?} providerContext\n     * @return {?}\n     */\n    function (isTemplateElement, directives, providerContext) {\n        var /** @type {?} */ matcher = new SelectorMatcher();\n        var /** @type {?} */ wildcardNgContentIndex = /** @type {?} */ ((null));\n        var /** @type {?} */ component = directives.find(function (directive) { return directive.directive.isComponent; });\n        if (component) {\n            var /** @type {?} */ ngContentSelectors = /** @type {?} */ ((component.directive.template)).ngContentSelectors;\n            for (var /** @type {?} */ i = 0; i < ngContentSelectors.length; i++) {\n                var /** @type {?} */ selector = ngContentSelectors[i];\n                if (selector === '*') {\n                    wildcardNgContentIndex = i;\n                }\n                else {\n                    matcher.addSelectables(CssSelector.parse(ngContentSelectors[i]), i);\n                }\n            }\n        }\n        return new ElementContext(isTemplateElement, matcher, wildcardNgContentIndex, providerContext);\n    };\n    /**\n     * @param {?} selector\n     * @return {?}\n     */\n    ElementContext.prototype.findNgContentIndex = /**\n     * @param {?} selector\n     * @return {?}\n     */\n    function (selector) {\n        var /** @type {?} */ ngContentIndices = [];\n        this._ngContentIndexMatcher.match(selector, function (selector, ngContentIndex) { ngContentIndices.push(ngContentIndex); });\n        ngContentIndices.sort();\n        if (this._wildcardNgContentIndex != null) {\n            ngContentIndices.push(this._wildcardNgContentIndex);\n        }\n        return ngContentIndices.length > 0 ? ngContentIndices[0] : null;\n    };\n    return ElementContext;\n}());\n/**\n * @param {?} elementName\n * @param {?} attributes\n * @return {?}\n */\nfunction createElementCssSelector$1(elementName, attributes) {\n    var /** @type {?} */ cssSelector = new CssSelector();\n    var /** @type {?} */ elNameNoNs = splitNsName(elementName)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var /** @type {?} */ i = 0; i < attributes.length; i++) {\n        var /** @type {?} */ attrName = attributes[i][0];\n        var /** @type {?} */ attrNameNoNs = splitNsName(attrName)[1];\n        var /** @type {?} */ attrValue = attributes[i][1];\n        cssSelector.addAttribute(attrNameNoNs, attrValue);\n        if (attrName.toLowerCase() == CLASS_ATTR) {\n            var /** @type {?} */ classes = splitClasses(attrValue);\n            classes.forEach(function (className) { return cssSelector.addClassName(className); });\n        }\n    }\n    return cssSelector;\n}\nvar EMPTY_ELEMENT_CONTEXT = new ElementContext(true, new SelectorMatcher(), null, null);\nvar NON_BINDABLE_VISITOR = new NonBindableVisitor();\n/**\n * @param {?} node\n * @return {?}\n */\nfunction _isEmptyTextNode(node) {\n    return node instanceof Text && node.value.trim().length == 0;\n}\n/**\n * @template T\n * @param {?} items\n * @return {?}\n */\nfunction removeSummaryDuplicates(items) {\n    var /** @type {?} */ map = new Map();\n    items.forEach(function (item) {\n        if (!map.get(item.type.reference)) {\n            map.set(item.type.reference, item);\n        }\n    });\n    return Array.from(map.values());\n}\n/**\n * @param {?} ast\n * @return {?}\n */\nfunction isEmptyExpression(ast) {\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    return ast instanceof EmptyExpr;\n}\n/**\n * @param {?} el\n * @param {?} enableLegacyTemplate\n * @param {?} reportDeprecation\n * @return {?}\n */\nfunction isTemplate(el, enableLegacyTemplate, reportDeprecation) {\n    if (isNgTemplate(el.name))\n        return true;\n    var /** @type {?} */ tagNoNs = splitNsName(el.name)[1];\n    // `<template>` is HTML and case insensitive\n    if (tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n        if (enableLegacyTemplate && tagNoNs.toLowerCase() === TEMPLATE_ELEMENT) {\n            reportDeprecation(TEMPLATE_ELEMENT_DEPRECATION_WARNING, /** @type {?} */ ((el.sourceSpan)));\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventHandlerVars = (function () {\n    function EventHandlerVars() {\n    }\n    EventHandlerVars.event = variable('$event');\n    return EventHandlerVars;\n}());\n/**\n * @record\n */\n\nvar ConvertActionBindingResult = (function () {\n    function ConvertActionBindingResult(stmts, allowDefault) {\n        this.stmts = stmts;\n        this.allowDefault = allowDefault;\n    }\n    return ConvertActionBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression is\n * used in an action binding (e.g. an event handler).\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} action\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertActionBinding(localResolver, implicitReceiver, action, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ actionWithoutBuiltins = convertPropertyBindingBuiltins({\n        createLiteralArrayConverter: function (argCount) {\n            // Note: no caching for literal arrays in actions.\n            return function (args) { return literalArr(args); };\n        },\n        createLiteralMapConverter: function (keys) {\n            // Note: no caching for literal maps in actions.\n            return function (values) {\n                var /** @type {?} */ entries = keys.map(function (k, i) {\n                    return ({\n                        key: k.key,\n                        value: values[i],\n                        quoted: k.quoted,\n                    });\n                });\n                return literalMap(entries);\n            };\n        },\n        createPipeConverter: function (name) {\n            throw new Error(\"Illegal State: Actions are not allowed to contain pipes. Pipe: \" + name);\n        }\n    }, action);\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ actionStmts = [];\n    flattenStatements(actionWithoutBuiltins.visit(visitor, _Mode.Statement), actionStmts);\n    prependTemporaryDecls(visitor.temporaryCount, bindingId, actionStmts);\n    var /** @type {?} */ lastIndex = actionStmts.length - 1;\n    var /** @type {?} */ preventDefaultVar = /** @type {?} */ ((null));\n    if (lastIndex >= 0) {\n        var /** @type {?} */ lastStatement = actionStmts[lastIndex];\n        var /** @type {?} */ returnExpr = convertStmtIntoExpression(lastStatement);\n        if (returnExpr) {\n            // Note: We need to cast the result of the method call to dynamic,\n            // as it might be a void method!\n            preventDefaultVar = createPreventDefaultVar(bindingId);\n            actionStmts[lastIndex] =\n                preventDefaultVar.set(returnExpr.cast(DYNAMIC_TYPE).notIdentical(literal(false)))\n                    .toDeclStmt(null, [StmtModifier.Final]);\n        }\n    }\n    return new ConvertActionBindingResult(actionStmts, preventDefaultVar);\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertPropertyBindingBuiltins(converterFactory, ast) {\n    return convertBuiltins(converterFactory, ast);\n}\nvar ConvertPropertyBindingResult = (function () {\n    function ConvertPropertyBindingResult(stmts, currValExpr) {\n        this.stmts = stmts;\n        this.currValExpr = currValExpr;\n    }\n    return ConvertPropertyBindingResult;\n}());\n/**\n * Converts the given expression AST into an executable output AST, assuming the expression\n * is used in property binding. The expression has to be preprocessed via\n * `convertPropertyBindingBuiltins`.\n * @param {?} localResolver\n * @param {?} implicitReceiver\n * @param {?} expressionWithoutBuiltins\n * @param {?} bindingId\n * @return {?}\n */\nfunction convertPropertyBinding(localResolver, implicitReceiver, expressionWithoutBuiltins, bindingId) {\n    if (!localResolver) {\n        localResolver = new DefaultLocalResolver();\n    }\n    var /** @type {?} */ currValExpr = createCurrValueExpr(bindingId);\n    var /** @type {?} */ stmts = [];\n    var /** @type {?} */ visitor = new _AstToIrVisitor(localResolver, implicitReceiver, bindingId);\n    var /** @type {?} */ outputExpr = expressionWithoutBuiltins.visit(visitor, _Mode.Expression);\n    if (visitor.temporaryCount) {\n        for (var /** @type {?} */ i = 0; i < visitor.temporaryCount; i++) {\n            stmts.push(temporaryDeclaration(bindingId, i));\n        }\n    }\n    stmts.push(currValExpr.set(outputExpr).toDeclStmt(null, [StmtModifier.Final]));\n    return new ConvertPropertyBindingResult(stmts, currValExpr);\n}\n/**\n * @param {?} converterFactory\n * @param {?} ast\n * @return {?}\n */\nfunction convertBuiltins(converterFactory, ast) {\n    var /** @type {?} */ visitor = new _BuiltinAstConverter(converterFactory);\n    return ast.visit(visitor);\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryName(bindingId, temporaryNumber) {\n    return \"tmp_\" + bindingId + \"_\" + temporaryNumber;\n}\n/**\n * @param {?} bindingId\n * @param {?} temporaryNumber\n * @return {?}\n */\nfunction temporaryDeclaration(bindingId, temporaryNumber) {\n    return new DeclareVarStmt(temporaryName(bindingId, temporaryNumber), NULL_EXPR);\n}\n/**\n * @param {?} temporaryCount\n * @param {?} bindingId\n * @param {?} statements\n * @return {?}\n */\nfunction prependTemporaryDecls(temporaryCount, bindingId, statements) {\n    for (var /** @type {?} */ i = temporaryCount - 1; i >= 0; i--) {\n        statements.unshift(temporaryDeclaration(bindingId, i));\n    }\n}\n/** @enum {number} */\nvar _Mode = {\n    Statement: 0,\n    Expression: 1,\n};\n_Mode[_Mode.Statement] = \"Statement\";\n_Mode[_Mode.Expression] = \"Expression\";\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureStatementMode(mode, ast) {\n    if (mode !== _Mode.Statement) {\n        throw new Error(\"Expected a statement, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} ast\n * @return {?}\n */\nfunction ensureExpressionMode(mode, ast) {\n    if (mode !== _Mode.Expression) {\n        throw new Error(\"Expected an expression, but saw \" + ast);\n    }\n}\n/**\n * @param {?} mode\n * @param {?} expr\n * @return {?}\n */\nfunction convertToStatementIfNeeded(mode, expr) {\n    if (mode === _Mode.Statement) {\n        return expr.toStmt();\n    }\n    else {\n        return expr;\n    }\n}\nvar _BuiltinAstConverter = (function (_super) {\n    __extends(_BuiltinAstConverter, _super);\n    function _BuiltinAstConverter(_converterFactory) {\n        var _this = _super.call(this) || this;\n        _this._converterFactory = _converterFactory;\n        return _this;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = [ast.exp].concat(ast.args).map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createPipeConverter(ast.name, args.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.expressions.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralArrayConverter(ast.expressions.length));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    _BuiltinAstConverter.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ args = ast.values.map(function (ast) { return ast.visit(_this, context); });\n        return new BuiltinFunctionCall(ast.span, args, this._converterFactory.createLiteralMapConverter(ast.keys));\n    };\n    return _BuiltinAstConverter;\n}(AstTransformer));\nvar _AstToIrVisitor = (function () {\n    function _AstToIrVisitor(_localResolver, _implicitReceiver, bindingId) {\n        this._localResolver = _localResolver;\n        this._implicitReceiver = _implicitReceiver;\n        this.bindingId = bindingId;\n        this._nodeMap = new Map();\n        this._resultMap = new Map();\n        this._currentTemporary = 0;\n        this.temporaryCount = 0;\n    }\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitBinary = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ op;\n        switch (ast.operation) {\n            case '+':\n                op = BinaryOperator.Plus;\n                break;\n            case '-':\n                op = BinaryOperator.Minus;\n                break;\n            case '*':\n                op = BinaryOperator.Multiply;\n                break;\n            case '/':\n                op = BinaryOperator.Divide;\n                break;\n            case '%':\n                op = BinaryOperator.Modulo;\n                break;\n            case '&&':\n                op = BinaryOperator.And;\n                break;\n            case '||':\n                op = BinaryOperator.Or;\n                break;\n            case '==':\n                op = BinaryOperator.Equals;\n                break;\n            case '!=':\n                op = BinaryOperator.NotEquals;\n                break;\n            case '===':\n                op = BinaryOperator.Identical;\n                break;\n            case '!==':\n                op = BinaryOperator.NotIdentical;\n                break;\n            case '<':\n                op = BinaryOperator.Lower;\n                break;\n            case '>':\n                op = BinaryOperator.Bigger;\n                break;\n            case '<=':\n                op = BinaryOperator.LowerEquals;\n                break;\n            case '>=':\n                op = BinaryOperator.BiggerEquals;\n                break;\n            default:\n                throw new Error(\"Unsupported operation \" + ast.operation);\n        }\n        return convertToStatementIfNeeded(mode, new BinaryOperatorExpr(op, this._visit(ast.left, _Mode.Expression), this._visit(ast.right, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitChain = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureStatementMode(mode, ast);\n        return this.visitAll(ast.expressions, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitConditional = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ value = this._visit(ast.condition, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, value.conditional(this._visit(ast.trueExp, _Mode.Expression), this._visit(ast.falseExp, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPipe = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal state: Pipes should have been converted into functions. Pipe: \" + ast.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitFunctionCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ convertedArgs = this.visitAll(ast.args, _Mode.Expression);\n        var /** @type {?} */ fnResult;\n        if (ast instanceof BuiltinFunctionCall) {\n            fnResult = ast.converter(convertedArgs);\n        }\n        else {\n            fnResult = this._visit(/** @type {?} */ ((ast.target)), _Mode.Expression).callFn(convertedArgs);\n        }\n        return convertToStatementIfNeeded(mode, fnResult);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitImplicitReceiver = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        return this._implicitReceiver;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitInterpolation = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        ensureExpressionMode(mode, ast);\n        var /** @type {?} */ args = [literal(ast.expressions.length)];\n        for (var /** @type {?} */ i = 0; i < ast.strings.length - 1; i++) {\n            args.push(literal(ast.strings[i]));\n            args.push(this._visit(ast.expressions[i], _Mode.Expression));\n        }\n        args.push(literal(ast.strings[ast.strings.length - 1]));\n        return ast.expressions.length <= 9 ?\n            importExpr(Identifiers.inlineInterpolate).callFn(args) :\n            importExpr(Identifiers.interpolate).callFn([args[0], literalArr(args.slice(1))]);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            return convertToStatementIfNeeded(mode, this._visit(ast.obj, _Mode.Expression).key(this._visit(ast.key, _Mode.Expression)));\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitKeyedWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ obj = this._visit(ast.obj, _Mode.Expression);\n        var /** @type {?} */ key = this._visit(ast.key, _Mode.Expression);\n        var /** @type {?} */ value = this._visit(ast.value, _Mode.Expression);\n        return convertToStatementIfNeeded(mode, obj.key(key).set(value));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralArray = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal arrays should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralMap = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Illegal State: literal maps should have been converted into functions\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitLiteralPrimitive = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, literal(ast.value));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this._localResolver.getLocal(name); };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ args = this.visitAll(ast.args, _Mode.Expression);\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                var /** @type {?} */ varExpr = this._getLocal(ast.name);\n                if (varExpr) {\n                    result = varExpr.callFn(args);\n                }\n            }\n            if (result == null) {\n                result = receiver.callMethod(ast.name, args);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPrefixNot = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, not(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitNonNullAssert = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return convertToStatementIfNeeded(mode, assertNotNull(this._visit(ast.expression, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ leftMostSafe = this.leftMostSafeNode(ast);\n        if (leftMostSafe) {\n            return this.convertSafeAccess(ast, leftMostSafe, mode);\n        }\n        else {\n            var /** @type {?} */ result = null;\n            var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n            if (receiver === this._implicitReceiver) {\n                result = this._getLocal(ast.name);\n            }\n            if (result == null) {\n                result = receiver.prop(ast.name);\n            }\n            return convertToStatementIfNeeded(mode, result);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitPropertyWrite = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ receiver = this._visit(ast.receiver, _Mode.Expression);\n        if (receiver === this._implicitReceiver) {\n            var /** @type {?} */ varExpr = this._getLocal(ast.name);\n            if (varExpr) {\n                throw new Error('Cannot assign to a reference or variable!');\n            }\n        }\n        return convertToStatementIfNeeded(mode, receiver.prop(ast.name).set(this._visit(ast.value, _Mode.Expression)));\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafePropertyRead = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitSafeMethodCall = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        return this.convertSafeAccess(ast, this.leftMostSafeNode(ast), mode);\n    };\n    /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitAll = /**\n     * @param {?} asts\n     * @param {?} mode\n     * @return {?}\n     */\n    function (asts, mode) {\n        var _this = this;\n        return asts.map(function (ast) { return _this._visit(ast, mode); });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.visitQuote = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        throw new Error(\"Quotes are not supported for evaluation!\\n        Statement: \" + ast.uninterpretedExpression + \" located at \" + ast.location);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype._visit = /**\n     * @param {?} ast\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, mode) {\n        var /** @type {?} */ result = this._resultMap.get(ast);\n        if (result)\n            return result;\n        return (this._nodeMap.get(ast) || ast).visit(this, mode);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.convertSafeAccess = /**\n     * @param {?} ast\n     * @param {?} leftMostSafe\n     * @param {?} mode\n     * @return {?}\n     */\n    function (ast, leftMostSafe, mode) {\n        // If the expression contains a safe access node on the left it needs to be converted to\n        // an expression that guards the access to the member by checking the receiver for blank. As\n        // execution proceeds from left to right, the left most part of the expression must be guarded\n        // first but, because member access is left associative, the right side of the expression is at\n        // the top of the AST. The desired result requires lifting a copy of the the left part of the\n        // expression up to test it for blank before generating the unguarded version.\n        // Consider, for example the following expression: a?.b.c?.d.e\n        // This results in the ast:\n        //         .\n        //        / \\\n        //       ?.   e\n        //      /  \\\n        //     .    d\n        //    / \\\n        //   ?.  c\n        //  /  \\\n        // a    b\n        // The following tree should be generated:\n        //\n        //        /---- ? ----\\\n        //       /      |      \\\n        //     a   /--- ? ---\\  null\n        //        /     |     \\\n        //       .      .     null\n        //      / \\    / \\\n        //     .  c   .   e\n        //    / \\    / \\\n        //   a   b  ,   d\n        //         / \\\n        //        .   c\n        //       / \\\n        //      a   b\n        //\n        // Notice that the first guard condition is the left hand of the left most safe access node\n        // which comes in as leftMostSafe to this routine.\n        var /** @type {?} */ guardedExpression = this._visit(leftMostSafe.receiver, _Mode.Expression);\n        var /** @type {?} */ temporary = /** @type {?} */ ((undefined));\n        if (this.needsTemporary(leftMostSafe.receiver)) {\n            // If the expression has method calls or pipes then we need to save the result into a\n            // temporary variable to avoid calling stateful or impure code more than once.\n            temporary = this.allocateTemporary();\n            // Preserve the result in the temporary variable\n            guardedExpression = temporary.set(guardedExpression);\n            // Ensure all further references to the guarded expression refer to the temporary instead.\n            this._resultMap.set(leftMostSafe.receiver, temporary);\n        }\n        var /** @type {?} */ condition = guardedExpression.isBlank();\n        // Convert the ast to an unguarded access to the receiver's member. The map will substitute\n        // leftMostNode with its unguarded version in the call to `this.visit()`.\n        if (leftMostSafe instanceof SafeMethodCall) {\n            this._nodeMap.set(leftMostSafe, new MethodCall(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name, leftMostSafe.args));\n        }\n        else {\n            this._nodeMap.set(leftMostSafe, new PropertyRead(leftMostSafe.span, leftMostSafe.receiver, leftMostSafe.name));\n        }\n        // Recursively convert the node now without the guarded member access.\n        var /** @type {?} */ access = this._visit(ast, _Mode.Expression);\n        // Remove the mapping. This is not strictly required as the converter only traverses each node\n        // once but is safer if the conversion is changed to traverse the nodes more than once.\n        this._nodeMap.delete(leftMostSafe);\n        // If we allocated a temporary, release it.\n        if (temporary) {\n            this.releaseTemporary(temporary);\n        }\n        // Produce the conditional\n        return convertToStatementIfNeeded(mode, condition.conditional(literal(null), access));\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.leftMostSafeNode = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.obj); },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver); },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return null; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.receiver) || ast; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.receiver) || ast;\n            }\n        });\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.needsTemporary = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        var /** @type {?} */ visit = function (visitor, ast) {\n            return ast && (_this._nodeMap.get(ast) || ast).visit(visitor);\n        };\n        var /** @type {?} */ visitSome = function (visitor, ast) {\n            return ast.some(function (ast) { return visit(visitor, ast); });\n        };\n        return ast.visit({\n            visitBinary: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.left) || visit(this, ast.right); },\n            visitChain: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitConditional: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) {\n                return visit(this, ast.condition) || visit(this, ast.trueExp) ||\n                    visit(this, ast.falseExp);\n            },\n            visitFunctionCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitImplicitReceiver: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitInterpolation: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visitSome(this, ast.expressions); },\n            visitKeyedRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitKeyedWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitLiteralArray: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralMap: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitLiteralPrimitive: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPipe: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitPrefixNot: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitNonNullAssert: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return visit(this, ast.expression); },\n            visitPropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitPropertyWrite: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitQuote: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; },\n            visitSafeMethodCall: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return true; },\n            visitSafePropertyRead: /**\n             * @param {?} ast\n             * @return {?}\n             */\n            function (ast) { return false; }\n        });\n    };\n    /**\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.allocateTemporary = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tempNumber = this._currentTemporary++;\n        this.temporaryCount = Math.max(this._currentTemporary, this.temporaryCount);\n        return new ReadVarExpr(temporaryName(this.bindingId, tempNumber));\n    };\n    /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    _AstToIrVisitor.prototype.releaseTemporary = /**\n     * @param {?} temporary\n     * @return {?}\n     */\n    function (temporary) {\n        this._currentTemporary--;\n        if (temporary.name != temporaryName(this.bindingId, this._currentTemporary)) {\n            throw new Error(\"Temporary \" + temporary.name + \" released out of order\");\n        }\n    };\n    return _AstToIrVisitor;\n}());\n/**\n * @param {?} arg\n * @param {?} output\n * @return {?}\n */\nfunction flattenStatements(arg, output) {\n    if (Array.isArray(arg)) {\n        (/** @type {?} */ (arg)).forEach(function (entry) { return flattenStatements(entry, output); });\n    }\n    else {\n        output.push(arg);\n    }\n}\nvar DefaultLocalResolver = (function () {\n    function DefaultLocalResolver() {\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    DefaultLocalResolver.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name === EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        return null;\n    };\n    return DefaultLocalResolver;\n}());\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createCurrValueExpr(bindingId) {\n    return variable(\"currVal_\" + bindingId); // fix syntax highlighting: `\n}\n/**\n * @param {?} bindingId\n * @return {?}\n */\nfunction createPreventDefaultVar(bindingId) {\n    return variable(\"pd_\" + bindingId);\n}\n/**\n * @param {?} stmt\n * @return {?}\n */\nfunction convertStmtIntoExpression(stmt) {\n    if (stmt instanceof ExpressionStatement) {\n        return stmt.expr;\n    }\n    else if (stmt instanceof ReturnStatement) {\n        return stmt.value;\n    }\n    return null;\n}\nvar BuiltinFunctionCall = (function (_super) {\n    __extends(BuiltinFunctionCall, _super);\n    function BuiltinFunctionCall(span, args, converter) {\n        var _this = _super.call(this, span, null, args) || this;\n        _this.args = args;\n        _this.converter = converter;\n        return _this;\n    }\n    return BuiltinFunctionCall;\n}(FunctionCall));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generates code that is used to type check templates.\n */\nvar TypeCheckCompiler = (function () {\n    function TypeCheckCompiler(options, reflector) {\n        this.options = options;\n        this.reflector = reflector;\n    }\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     */\n    /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    TypeCheckCompiler.prototype.compileComponent = /**\n     * Important notes:\n     * - This must not produce new `import` statements, but only refer to types outside\n     *   of the file via the variables provided via externalReferenceVars.\n     *   This allows Typescript to reuse the old program's structure as no imports have changed.\n     * - This must not produce any exports, as this would pollute the .d.ts file\n     *   and also violate the point above.\n     * @param {?} componentId\n     * @param {?} component\n     * @param {?} template\n     * @param {?} usedPipes\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (componentId, component, template, usedPipes, externalReferenceVars) {\n        var _this = this;\n        var /** @type {?} */ pipes = new Map();\n        usedPipes.forEach(function (p) { return pipes.set(p.name, p.type.reference); });\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder(_this.options, _this.reflector, externalReferenceVars, parent, component.type.reference, component.isHost, embeddedViewIndex, pipes, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        return visitor.build(componentId);\n    };\n    return TypeCheckCompiler;\n}());\nvar DYNAMIC_VAR_NAME = '_any';\nvar ViewBuilder = (function () {\n    function ViewBuilder(options, reflector, externalReferenceVars, parent, component, isHostComponent, embeddedViewIndex, pipes, viewBuilderFactory) {\n        this.options = options;\n        this.reflector = reflector;\n        this.externalReferenceVars = externalReferenceVars;\n        this.parent = parent;\n        this.component = component;\n        this.isHostComponent = isHostComponent;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.pipes = pipes;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.refOutputVars = new Map();\n        this.variables = [];\n        this.children = [];\n        this.updates = [];\n        this.actions = [];\n    }\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ViewBuilder.prototype.getOutputVar = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ varName;\n        if (type === this.component && this.isHostComponent) {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        else if (type instanceof StaticSymbol) {\n            varName = this.externalReferenceVars.get(type);\n        }\n        else {\n            varName = DYNAMIC_VAR_NAME;\n        }\n        if (!varName) {\n            throw new Error(\"Illegal State: referring to a type without a variable \" + JSON.stringify(type));\n        }\n        return varName;\n    };\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        this.variables = variables;\n        templateVisitAll(this, astNodes);\n    };\n    /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?} componentId\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (componentId, targetStatements) {\n        var _this = this;\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(componentId, targetStatements); });\n        var /** @type {?} */ viewStmts = [variable(DYNAMIC_VAR_NAME).set(NULL_EXPR).toDeclStmt(DYNAMIC_TYPE)];\n        var /** @type {?} */ bindingCount = 0;\n        this.updates.forEach(function (expression) {\n            var _a = _this.preprocessUpdateExpression(expression), sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var _b = convertPropertyBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n            stmts.push(new ExpressionStatement(currValExpr));\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        this.actions.forEach(function (_a) {\n            var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n            var /** @type {?} */ bindingId = \"\" + bindingCount++;\n            var /** @type {?} */ nameResolver = context === _this.component ? _this : null;\n            var stmts = convertActionBinding(nameResolver, variable(_this.getOutputVar(context)), value, bindingId).stmts;\n            viewStmts.push.apply(viewStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n        });\n        var /** @type {?} */ viewName = \"_View_\" + componentId + \"_\" + this.embeddedViewIndex;\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(viewName, [], viewStmts);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        inter.expressions.forEach(function (expr) {\n            return _this.updates.push({ context: _this.component, value: expr, sourceSpan: ast.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        this.visitElementOrTemplate(ast);\n        // Note: The old view compiler used to use an `any` type\n        // for the context in any embedded view.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n            this.children.push(childVisitor);\n            childVisitor.visitAll(ast.variables, ast.children);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        this.visitElementOrTemplate(ast);\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        ast.inputs.forEach(function (inputAst) {\n            _this.updates.push({ context: _this.component, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n        });\n        templateVisitAll(this, ast.children);\n    };\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementOrTemplate = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) {\n        var _this = this;\n        ast.directives.forEach(function (dirAst) { _this.visitDirective(dirAst); });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ outputVarType = /** @type {?} */ ((null));\n            // Note: The old view compiler used to use an `any` type\n            // for directives exposed via `exportAs`.\n            // We keep this behaivor behind a flag for now.\n            if (ref.value && ref.value.identifier && _this.options.fullTemplateTypeCheck) {\n                outputVarType = ref.value.identifier.reference;\n            }\n            else {\n                outputVarType = BuiltinTypeName.Dynamic;\n            }\n            _this.refOutputVars.set(ref.name, outputVarType);\n        });\n        ast.outputs.forEach(function (outputAst) {\n            _this.actions.push({ context: _this.component, value: outputAst.handler, sourceSpan: outputAst.sourceSpan });\n        });\n    };\n    /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} dirAst\n     * @return {?}\n     */\n    function (dirAst) {\n        var _this = this;\n        var /** @type {?} */ dirType = dirAst.directive.type.reference;\n        dirAst.inputs.forEach(function (input) {\n            return _this.updates.push({ context: _this.component, value: input.value, sourceSpan: input.sourceSpan });\n        });\n        // Note: The old view compiler used to use an `any` type\n        // for expressions in host properties / events.\n        // We keep this behaivor behind a flag for now.\n        if (this.options.fullTemplateTypeCheck) {\n            dirAst.hostProperties.forEach(function (inputAst) {\n                return _this.updates.push({ context: dirType, value: inputAst.value, sourceSpan: inputAst.sourceSpan });\n            });\n            dirAst.hostEvents.forEach(function (hostEventAst) {\n                return _this.actions.push({\n                    context: dirType,\n                    value: hostEventAst.handler,\n                    sourceSpan: hostEventAst.sourceSpan\n                });\n            });\n        }\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return variable(this.getOutputVar(BuiltinTypeName.Dynamic));\n        }\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent) {\n            var /** @type {?} */ outputVarType = void 0;\n            // check references\n            outputVarType = currBuilder.refOutputVars.get(name);\n            if (outputVarType == null) {\n                // check variables\n                var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n                if (varAst) {\n                    outputVarType = BuiltinTypeName.Dynamic;\n                }\n            }\n            if (outputVarType != null) {\n                return variable(this.getOutputVar(outputVarType));\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.pipeOutputVar = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ pipe = this.pipes.get(name);\n        if (!pipe) {\n            throw new Error(\"Illegal State: Could not find pipe \" + name + \" in template of \" + this.component);\n        }\n        return this.getOutputVar(pipe);\n    };\n    /**\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype.preprocessUpdateExpression = /**\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return function (args) {\n                        var /** @type {?} */ arr = literalArr(args);\n                        // Note: The old view compiler used to use an `any` type\n                        // for arrays.\n                        return _this.options.fullTemplateTypeCheck ? arr : arr.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createLiteralMapConverter: function (keys) {\n                    return function (values) {\n                        var /** @type {?} */ entries = keys.map(function (k, i) {\n                            return ({\n                                key: k.key,\n                                value: values[i],\n                                quoted: k.quoted,\n                            });\n                        });\n                        var /** @type {?} */ map = literalMap(entries);\n                        // Note: The old view compiler used to use an `any` type\n                        // for maps.\n                        return _this.options.fullTemplateTypeCheck ? map : map.cast(DYNAMIC_TYPE);\n                    };\n                },\n                createPipeConverter: function (name, argCount) {\n                    return function (args) {\n                        // Note: The old view compiler used to use an `any` type\n                        // for pipes.\n                        var /** @type {?} */ pipeExpr = _this.options.fullTemplateTypeCheck ?\n                            variable(_this.pipeOutputVar(name)) :\n                            variable(_this.getOutputVar(BuiltinTypeName.Dynamic));\n                        return pipeExpr.callMethod('transform', args);\n                    };\n                },\n            }, expression.value)\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CLASS_ATTR$1 = 'class';\nvar STYLE_ATTR = 'style';\nvar IMPLICIT_TEMPLATE_VAR = '\\$implicit';\nvar ViewCompileResult = (function () {\n    function ViewCompileResult(viewClassVar, rendererTypeVar) {\n        this.viewClassVar = viewClassVar;\n        this.rendererTypeVar = rendererTypeVar;\n    }\n    return ViewCompileResult;\n}());\nvar ViewCompiler = (function () {\n    function ViewCompiler(_reflector) {\n        this._reflector = _reflector;\n    }\n    /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    ViewCompiler.prototype.compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} component\n     * @param {?} template\n     * @param {?} styles\n     * @param {?} usedPipes\n     * @return {?}\n     */\n    function (outputCtx, component, template, styles, usedPipes) {\n        var _this = this;\n        var /** @type {?} */ embeddedViewCount = 0;\n        var /** @type {?} */ staticQueryIds = findStaticQueryIds(template);\n        var /** @type {?} */ renderComponentVarName = /** @type {?} */ ((undefined));\n        if (!component.isHost) {\n            var /** @type {?} */ template_1 = /** @type {?} */ ((component.template));\n            var /** @type {?} */ customRenderData = [];\n            if (template_1.animations && template_1.animations.length) {\n                customRenderData.push(new LiteralMapEntry('animation', convertValueToOutputAst(outputCtx, template_1.animations), true));\n            }\n            var /** @type {?} */ renderComponentVar = variable(rendererTypeName(component.type.reference));\n            renderComponentVarName = /** @type {?} */ ((renderComponentVar.name));\n            outputCtx.statements.push(renderComponentVar\n                .set(importExpr(Identifiers.createRendererType2).callFn([new LiteralMapExpr([\n                    new LiteralMapEntry('encapsulation', literal(template_1.encapsulation), false),\n                    new LiteralMapEntry('styles', styles, false),\n                    new LiteralMapEntry('data', new LiteralMapExpr(customRenderData), false)\n                ])]))\n                .toDeclStmt(importType(Identifiers.RendererType2), [StmtModifier.Final, StmtModifier.Exported]));\n        }\n        var /** @type {?} */ viewBuilderFactory = function (parent) {\n            var /** @type {?} */ embeddedViewIndex = embeddedViewCount++;\n            return new ViewBuilder$1(_this._reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory);\n        };\n        var /** @type {?} */ visitor = viewBuilderFactory(null);\n        visitor.visitAll([], template);\n        (_a = outputCtx.statements).push.apply(_a, visitor.build());\n        return new ViewCompileResult(visitor.viewName, renderComponentVarName);\n        var _a;\n    };\n    return ViewCompiler;\n}());\nvar LOG_VAR$1 = variable('_l');\nvar VIEW_VAR = variable('_v');\nvar CHECK_VAR = variable('_ck');\nvar COMP_VAR = variable('_co');\nvar EVENT_NAME_VAR = variable('en');\nvar ALLOW_DEFAULT_VAR = variable(\"ad\");\nvar ViewBuilder$1 = (function () {\n    function ViewBuilder(reflector, outputCtx, parent, component, embeddedViewIndex, usedPipes, staticQueryIds, viewBuilderFactory) {\n        this.reflector = reflector;\n        this.outputCtx = outputCtx;\n        this.parent = parent;\n        this.component = component;\n        this.embeddedViewIndex = embeddedViewIndex;\n        this.usedPipes = usedPipes;\n        this.staticQueryIds = staticQueryIds;\n        this.viewBuilderFactory = viewBuilderFactory;\n        this.nodes = [];\n        this.purePipeNodeIndices = Object.create(null);\n        this.refNodeIndices = Object.create(null);\n        this.variables = [];\n        this.children = [];\n        // TODO(tbosch): The old view compiler used to use an `any` type\n        // for the context in any embedded view. We keep this behaivor for now\n        // to be able to introduce the new view compiler without too many errors.\n        this.compType = this.embeddedViewIndex > 0 ?\n            DYNAMIC_TYPE :\n            /** @type {?} */ ((expressionType(outputCtx.importExpr(this.component.type.reference))));\n        this.viewName = viewClassName(this.component.type.reference, this.embeddedViewIndex);\n    }\n    /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAll = /**\n     * @param {?} variables\n     * @param {?} astNodes\n     * @return {?}\n     */\n    function (variables, astNodes) {\n        var _this = this;\n        this.variables = variables;\n        // create the pipes for the pure pipes immediately, so that we know their indices.\n        if (!this.parent) {\n            this.usedPipes.forEach(function (pipe) {\n                if (pipe.pure) {\n                    _this.purePipeNodeIndices[pipe.name] = _this._createPipe(null, pipe);\n                }\n            });\n        }\n        if (!this.parent) {\n            var /** @type {?} */ queryIds_1 = staticViewQueryIds(this.staticQueryIds);\n            this.component.viewQueries.forEach(function (query, queryIndex) {\n                // Note: queries start with id 1 so we can use the number in a Bloom filter!\n                var /** @type {?} */ queryId = queryIndex + 1;\n                var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n                var /** @type {?} */ flags = 134217728 /* TypeViewQuery */ | calcStaticDynamicQueryFlags(queryIds_1, queryId, query.first);\n                _this.nodes.push(function () {\n                    return ({\n                        sourceSpan: null,\n                        nodeFlags: flags,\n                        nodeDef: importExpr(Identifiers.queryDef).callFn([\n                            literal(flags), literal(queryId),\n                            new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                        ])\n                    });\n                });\n            });\n        }\n        templateVisitAll(this, astNodes);\n        if (this.parent && (astNodes.length === 0 || needsAdditionalRootNode(astNodes))) {\n            // if the view is an embedded view, then we need to add an additional root node in some cases\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: null,\n                    nodeFlags: 1 /* TypeElement */,\n                    nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                        literal(0 /* None */), NULL_EXPR, NULL_EXPR, literal(0)\n                    ])\n                });\n            });\n        }\n    };\n    /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    ViewBuilder.prototype.build = /**\n     * @param {?=} targetStatements\n     * @return {?}\n     */\n    function (targetStatements) {\n        if (targetStatements === void 0) { targetStatements = []; }\n        this.children.forEach(function (child) { return child.build(targetStatements); });\n        var _a = this._createNodeExpressions(), updateRendererStmts = _a.updateRendererStmts, updateDirectivesStmts = _a.updateDirectivesStmts, nodeDefExprs = _a.nodeDefExprs;\n        var /** @type {?} */ updateRendererFn = this._createUpdateFn(updateRendererStmts);\n        var /** @type {?} */ updateDirectivesFn = this._createUpdateFn(updateDirectivesStmts);\n        var /** @type {?} */ viewFlags = 0;\n        if (!this.parent && this.component.changeDetection === ChangeDetectionStrategy.OnPush) {\n            viewFlags |= 2 /* OnPush */;\n        }\n        var /** @type {?} */ viewFactory = new DeclareFunctionStmt(this.viewName, [new FnParam(/** @type {?} */ ((LOG_VAR$1.name)))], [new ReturnStatement(importExpr(Identifiers.viewDef).callFn([\n                literal(viewFlags),\n                literalArr(nodeDefExprs),\n                updateDirectivesFn,\n                updateRendererFn,\n            ]))], importType(Identifiers.ViewDefinition), this.embeddedViewIndex === 0 ? [StmtModifier.Exported] : []);\n        targetStatements.push(viewFactory);\n        return targetStatements;\n    };\n    /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    ViewBuilder.prototype._createUpdateFn = /**\n     * @param {?} updateStmts\n     * @return {?}\n     */\n    function (updateStmts) {\n        var /** @type {?} */ updateFn;\n        if (updateStmts.length > 0) {\n            var /** @type {?} */ preStmts = [];\n            if (!this.component.isHost && findReadVarNames(updateStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            updateFn = fn([\n                new FnParam(/** @type {?} */ ((CHECK_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE)\n            ], preStmts.concat(updateStmts), INFERRED_TYPE);\n        }\n        else {\n            updateFn = NULL_EXPR;\n        }\n        return updateFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitNgContent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // ngContentDef(ngContentIndex: number, index: number): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 8 /* TypeNgContent */,\n                nodeDef: importExpr(Identifiers.ngContentDef).callFn([\n                    literal(ast.ngContentIndex), literal(ast.index)\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        // Static text nodes have no check function\n        var /** @type {?} */ checkIndex = -1;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr([literal(ast.value)]),\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitBoundText = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var /** @type {?} */ astWithSource = /** @type {?} */ (ast.value);\n        var /** @type {?} */ inter = /** @type {?} */ (astWithSource.ast);\n        var /** @type {?} */ updateRendererExpressions = inter.expressions.map(function (expr, bindingIndex) {\n            return _this._preprocessUpdateExpression({ nodeIndex: nodeIndex, bindingIndex: bindingIndex, sourceSpan: ast.sourceSpan, context: COMP_VAR, value: expr });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 2 /* TypeText */,\n                nodeDef: importExpr(Identifiers.textDef).callFn([\n                    literal(checkIndex),\n                    literal(ast.ngContentIndex),\n                    literalArr(inter.strings.map(function (s) { return literal(s); })),\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEmbeddedTemplate = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array\n        this.nodes.push(/** @type {?} */ ((null)));\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, queryMatchesExpr = _a.queryMatchesExpr, hostEvents = _a.hostEvents;\n        var /** @type {?} */ childVisitor = this.viewBuilderFactory(this);\n        this.children.push(childVisitor);\n        childVisitor.visitAll(ast.variables, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        // anchorDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], ngContentIndex: number,\n        //   childCount: number, handleEventFn?: ElementHandleEventFn, templateFactory?:\n        //   ViewDefinitionFactory): NodeDef;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.anchorDef).callFn([\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    variable(childVisitor.viewName),\n                ])\n            });\n        };\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElement = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        // Using a null element name creates an anchor.\n        var /** @type {?} */ elName = isNgContainer(ast.name) ? null : ast.name;\n        var _a = this._visitElementOrTemplate(nodeIndex, ast), flags = _a.flags, usedEvents = _a.usedEvents, queryMatchesExpr = _a.queryMatchesExpr, dirHostBindings = _a.hostBindings, hostEvents = _a.hostEvents;\n        var /** @type {?} */ inputDefs = [];\n        var /** @type {?} */ updateRendererExpressions = [];\n        var /** @type {?} */ outputDefs = [];\n        if (elName) {\n            var /** @type {?} */ hostBindings = ast.inputs\n                .map(function (inputAst) {\n                return ({\n                    context: /** @type {?} */ (COMP_VAR),\n                    inputAst: inputAst,\n                    dirAst: /** @type {?} */ (null),\n                });\n            })\n                .concat(dirHostBindings);\n            if (hostBindings.length) {\n                updateRendererExpressions =\n                    hostBindings.map(function (hostBinding, bindingIndex) {\n                        return _this._preprocessUpdateExpression({\n                            context: hostBinding.context,\n                            nodeIndex: nodeIndex,\n                            bindingIndex: bindingIndex,\n                            sourceSpan: hostBinding.inputAst.sourceSpan,\n                            value: hostBinding.inputAst.value\n                        });\n                    });\n                inputDefs = hostBindings.map(function (hostBinding) { return elementBindingDef(hostBinding.inputAst, hostBinding.dirAst); });\n            }\n            outputDefs = usedEvents.map(function (_a) {\n                var target = _a[0], eventName = _a[1];\n                return literalArr([literal(target), literal(eventName)]);\n            });\n        }\n        templateVisitAll(this, ast.children);\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var /** @type {?} */ compAst = ast.directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        var /** @type {?} */ compRendererType = /** @type {?} */ (NULL_EXPR);\n        var /** @type {?} */ compView = /** @type {?} */ (NULL_EXPR);\n        if (compAst) {\n            compView = this.outputCtx.importExpr(compAst.directive.componentViewType);\n            compRendererType = this.outputCtx.importExpr(compAst.directive.rendererType);\n        }\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: ast.sourceSpan,\n                nodeFlags: 1 /* TypeElement */ | flags,\n                nodeDef: importExpr(Identifiers.elementDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchesExpr,\n                    literal(ast.ngContentIndex),\n                    literal(childCount),\n                    literal(elName),\n                    elName ? fixedAttrsDef(ast) : NULL_EXPR,\n                    inputDefs.length ? literalArr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? literalArr(outputDefs) : NULL_EXPR,\n                    _this._createElementHandleEventFn(nodeIndex, hostEvents),\n                    compView,\n                    compRendererType,\n                ]),\n                updateRenderer: updateRendererExpressions\n            });\n        };\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitElementOrTemplate = /**\n     * @param {?} nodeIndex\n     * @param {?} ast\n     * @return {?}\n     */\n    function (nodeIndex, ast) {\n        var _this = this;\n        var /** @type {?} */ flags = 0;\n        if (ast.hasViewContainer) {\n            flags |= 16777216 /* EmbeddedViews */;\n        }\n        var /** @type {?} */ usedEvents = new Map();\n        ast.outputs.forEach(function (event) {\n            var _a = elementEventNameAndTarget(event, null), name = _a.name, target = _a.target;\n            usedEvents.set(elementEventFullName(target, name), [target, name]);\n        });\n        ast.directives.forEach(function (dirAst) {\n            dirAst.hostEvents.forEach(function (event) {\n                var _a = elementEventNameAndTarget(event, dirAst), name = _a.name, target = _a.target;\n                usedEvents.set(elementEventFullName(target, name), [target, name]);\n            });\n        });\n        var /** @type {?} */ hostBindings = [];\n        var /** @type {?} */ hostEvents = [];\n        this._visitComponentFactoryResolverProvider(ast.directives);\n        ast.providers.forEach(function (providerAst, providerIndex) {\n            var /** @type {?} */ dirAst = /** @type {?} */ ((undefined));\n            var /** @type {?} */ dirIndex = /** @type {?} */ ((undefined));\n            ast.directives.forEach(function (localDirAst, i) {\n                if (localDirAst.directive.type.reference === tokenReference(providerAst.token)) {\n                    dirAst = localDirAst;\n                    dirIndex = i;\n                }\n            });\n            if (dirAst) {\n                var _a = _this._visitDirective(providerAst, dirAst, dirIndex, nodeIndex, ast.references, ast.queryMatches, usedEvents, /** @type {?} */ ((_this.staticQueryIds.get(/** @type {?} */ (ast))))), dirHostBindings = _a.hostBindings, dirHostEvents = _a.hostEvents;\n                hostBindings.push.apply(hostBindings, dirHostBindings);\n                hostEvents.push.apply(hostEvents, dirHostEvents);\n            }\n            else {\n                _this._visitProvider(providerAst, ast.queryMatches);\n            }\n        });\n        var /** @type {?} */ queryMatchExprs = [];\n        ast.queryMatches.forEach(function (match) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ElementRef)) {\n                valueType = 0 /* ElementRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.ViewContainerRef)) {\n                valueType = 3 /* ViewContainerRef */;\n            }\n            else if (tokenReference(match.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(valueType)]));\n            }\n        });\n        ast.references.forEach(function (ref) {\n            var /** @type {?} */ valueType = /** @type {?} */ ((undefined));\n            if (!ref.value) {\n                valueType = 1 /* RenderElement */;\n            }\n            else if (tokenReference(ref.value) ===\n                _this.reflector.resolveExternalReference(Identifiers.TemplateRef)) {\n                valueType = 2 /* TemplateRef */;\n            }\n            if (valueType != null) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(valueType)]));\n            }\n        });\n        ast.outputs.forEach(function (outputAst) {\n            hostEvents.push({ context: COMP_VAR, eventAst: outputAst, dirAst: /** @type {?} */ ((null)) });\n        });\n        return {\n            flags: flags,\n            usedEvents: Array.from(usedEvents.values()),\n            queryMatchesExpr: queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n            hostBindings: hostBindings,\n            hostEvents: hostEvents\n        };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitDirective = /**\n     * @param {?} providerAst\n     * @param {?} dirAst\n     * @param {?} directiveIndex\n     * @param {?} elementNodeIndex\n     * @param {?} refs\n     * @param {?} queryMatches\n     * @param {?} usedEvents\n     * @param {?} queryIds\n     * @return {?}\n     */\n    function (providerAst, dirAst, directiveIndex, elementNodeIndex, refs, queryMatches, usedEvents, queryIds) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // reserve the space in the nodeDefs array so we can add children\n        this.nodes.push(/** @type {?} */ ((null)));\n        dirAst.directive.queries.forEach(function (query, queryIndex) {\n            var /** @type {?} */ queryId = dirAst.contentQueryStartId + queryIndex;\n            var /** @type {?} */ flags = 67108864 /* TypeContentQuery */ | calcStaticDynamicQueryFlags(queryIds, queryId, query.first);\n            var /** @type {?} */ bindingType = query.first ? 0 /* First */ : 1;\n            _this.nodes.push(function () {\n                return ({\n                    sourceSpan: dirAst.sourceSpan,\n                    nodeFlags: flags,\n                    nodeDef: importExpr(Identifiers.queryDef).callFn([\n                        literal(flags), literal(queryId),\n                        new LiteralMapExpr([new LiteralMapEntry(query.propertyName, literal(bindingType), false)])\n                    ]),\n                });\n            });\n        });\n        // Note: the operation below might also create new nodeDefs,\n        // but we don't want them to be a child of a directive,\n        // as they might be a provider/pipe on their own.\n        // I.e. we only allow queries as children of directives nodes.\n        var /** @type {?} */ childCount = this.nodes.length - nodeIndex - 1;\n        var _a = this._visitProviderOrDirective(providerAst, queryMatches), flags = _a.flags, queryMatchExprs = _a.queryMatchExprs, providerExpr = _a.providerExpr, depsExpr = _a.depsExpr;\n        refs.forEach(function (ref) {\n            if (ref.value && tokenReference(ref.value) === tokenReference(providerAst.token)) {\n                _this.refNodeIndices[ref.name] = nodeIndex;\n                queryMatchExprs.push(literalArr([literal(ref.name), literal(4 /* Provider */)]));\n            }\n        });\n        if (dirAst.directive.isComponent) {\n            flags |= 32768 /* Component */;\n        }\n        var /** @type {?} */ inputDefs = dirAst.inputs.map(function (inputAst, inputIndex) {\n            var /** @type {?} */ mapValue = literalArr([literal(inputIndex), literal(inputAst.directiveName)]);\n            // Note: it's important to not quote the key so that we can capture renames by minifiers!\n            return new LiteralMapEntry(inputAst.directiveName, mapValue, false);\n        });\n        var /** @type {?} */ outputDefs = [];\n        var /** @type {?} */ dirMeta = dirAst.directive;\n        Object.keys(dirMeta.outputs).forEach(function (propName) {\n            var /** @type {?} */ eventName = dirMeta.outputs[propName];\n            if (usedEvents.has(eventName)) {\n                // Note: it's important to not quote the key so that we can capture renames by minifiers!\n                outputDefs.push(new LiteralMapEntry(propName, literal(eventName), false));\n            }\n        });\n        var /** @type {?} */ updateDirectiveExpressions = [];\n        if (dirAst.inputs.length || (flags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0) {\n            updateDirectiveExpressions =\n                dirAst.inputs.map(function (input, bindingIndex) {\n                    return _this._preprocessUpdateExpression({\n                        nodeIndex: nodeIndex,\n                        bindingIndex: bindingIndex,\n                        sourceSpan: input.sourceSpan,\n                        context: COMP_VAR,\n                        value: input.value\n                    });\n                });\n        }\n        var /** @type {?} */ dirContextExpr = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n        var /** @type {?} */ hostBindings = dirAst.hostProperties.map(function (inputAst) {\n            return ({\n                context: dirContextExpr,\n                dirAst: dirAst,\n                inputAst: inputAst,\n            });\n        });\n        var /** @type {?} */ hostEvents = dirAst.hostEvents.map(function (hostEventAst) {\n            return ({\n                context: dirContextExpr,\n                eventAst: hostEventAst, dirAst: dirAst,\n            });\n        });\n        // Check index is the same as the node index during compilation\n        // They might only differ at runtime\n        var /** @type {?} */ checkIndex = nodeIndex;\n        this.nodes[nodeIndex] = function () {\n            return ({\n                sourceSpan: dirAst.sourceSpan,\n                nodeFlags: 16384 /* TypeDirective */ | flags,\n                nodeDef: importExpr(Identifiers.directiveDef).callFn([\n                    literal(checkIndex),\n                    literal(flags),\n                    queryMatchExprs.length ? literalArr(queryMatchExprs) : NULL_EXPR,\n                    literal(childCount),\n                    providerExpr,\n                    depsExpr,\n                    inputDefs.length ? new LiteralMapExpr(inputDefs) : NULL_EXPR,\n                    outputDefs.length ? new LiteralMapExpr(outputDefs) : NULL_EXPR,\n                ]),\n                updateDirectives: updateDirectiveExpressions,\n                directive: dirAst.directive.type,\n            });\n        };\n        return { hostBindings: hostBindings, hostEvents: hostEvents };\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProvider = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        this._addProviderNode(this._visitProviderOrDirective(providerAst, queryMatches));\n    };\n    /**\n     * @param {?} directives\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitComponentFactoryResolverProvider = /**\n     * @param {?} directives\n     * @return {?}\n     */\n    function (directives) {\n        var /** @type {?} */ componentDirMeta = directives.find(function (dirAst) { return dirAst.directive.isComponent; });\n        if (componentDirMeta && componentDirMeta.directive.entryComponents.length) {\n            var _a = componentFactoryResolverProviderDef(this.reflector, this.outputCtx, 8192 /* PrivateProvider */, componentDirMeta.directive.entryComponents), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, flags = _a.flags, tokenExpr = _a.tokenExpr;\n            this._addProviderNode({\n                providerExpr: providerExpr,\n                depsExpr: depsExpr,\n                flags: flags,\n                tokenExpr: tokenExpr,\n                queryMatchExprs: [],\n                sourceSpan: componentDirMeta.sourceSpan\n            });\n        }\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ViewBuilder.prototype._addProviderNode = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        // providerDef(\n        //   flags: NodeFlags, matchedQueries: [string, QueryValueType][], token:any,\n        //   value: any, deps: ([DepFlags, any] | any)[]): NodeDef;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: data.sourceSpan,\n                nodeFlags: data.flags,\n                nodeDef: importExpr(Identifiers.providerDef).callFn([\n                    literal(data.flags),\n                    data.queryMatchExprs.length ? literalArr(data.queryMatchExprs) : NULL_EXPR,\n                    data.tokenExpr, data.providerExpr, data.depsExpr\n                ])\n            });\n        });\n    };\n    /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    ViewBuilder.prototype._visitProviderOrDirective = /**\n     * @param {?} providerAst\n     * @param {?} queryMatches\n     * @return {?}\n     */\n    function (providerAst, queryMatches) {\n        var /** @type {?} */ flags = 0;\n        var /** @type {?} */ queryMatchExprs = [];\n        queryMatches.forEach(function (match) {\n            if (tokenReference(match.value) === tokenReference(providerAst.token)) {\n                queryMatchExprs.push(literalArr([literal(match.queryId), literal(4 /* Provider */)]));\n            }\n        });\n        var _a = providerDef(this.outputCtx, providerAst), providerExpr = _a.providerExpr, depsExpr = _a.depsExpr, providerFlags = _a.flags, tokenExpr = _a.tokenExpr;\n        return {\n            flags: flags | providerFlags,\n            queryMatchExprs: queryMatchExprs,\n            providerExpr: providerExpr,\n            depsExpr: depsExpr,\n            tokenExpr: tokenExpr,\n            sourceSpan: providerAst.sourceSpan\n        };\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ViewBuilder.prototype.getLocal = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        if (name == EventHandlerVars.event.name) {\n            return EventHandlerVars.event;\n        }\n        var /** @type {?} */ currViewExpr = VIEW_VAR;\n        for (var /** @type {?} */ currBuilder = this; currBuilder; currBuilder = currBuilder.parent,\n            currViewExpr = currViewExpr.prop('parent').cast(DYNAMIC_TYPE)) {\n            // check references\n            var /** @type {?} */ refNodeIndex = currBuilder.refNodeIndices[name];\n            if (refNodeIndex != null) {\n                return importExpr(Identifiers.nodeValue).callFn([currViewExpr, literal(refNodeIndex)]);\n            }\n            // check variables\n            var /** @type {?} */ varAst = currBuilder.variables.find(function (varAst) { return varAst.name === name; });\n            if (varAst) {\n                var /** @type {?} */ varValue = varAst.value || IMPLICIT_TEMPLATE_VAR;\n                return currViewExpr.prop('context').prop(varValue);\n            }\n        }\n        return null;\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralArrayConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (sourceSpan, argCount) {\n        if (argCount === 0) {\n            var /** @type {?} */ valueExpr_1 = importExpr(Identifiers.EMPTY_ARRAY);\n            return function () { return valueExpr_1; };\n        }\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 32 /* TypePureArray */,\n                nodeDef: importExpr(Identifiers.pureArrayDef).callFn([\n                    literal(checkIndex),\n                    literal(argCount),\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    ViewBuilder.prototype._createLiteralMapConverter = /**\n     * @param {?} sourceSpan\n     * @param {?} keys\n     * @return {?}\n     */\n    function (sourceSpan, keys) {\n        if (keys.length === 0) {\n            var /** @type {?} */ valueExpr_2 = importExpr(Identifiers.EMPTY_MAP);\n            return function () { return valueExpr_2; };\n        }\n        var /** @type {?} */ map = literalMap(keys.map(function (e, i) { return (__assign({}, e, { value: literal(i) })); }));\n        var /** @type {?} */ checkIndex = this.nodes.length;\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 64 /* TypePureObject */,\n                nodeDef: importExpr(Identifiers.pureObjectDef).callFn([\n                    literal(checkIndex),\n                    map,\n                ])\n            });\n        });\n        return function (args) { return callCheckStmt(checkIndex, args); };\n    };\n    /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipeConverter = /**\n     * @param {?} expression\n     * @param {?} name\n     * @param {?} argCount\n     * @return {?}\n     */\n    function (expression, name, argCount) {\n        var /** @type {?} */ pipe = /** @type {?} */ ((this.usedPipes.find(function (pipeSummary) { return pipeSummary.name === name; })));\n        if (pipe.pure) {\n            var /** @type {?} */ checkIndex_1 = this.nodes.length;\n            this.nodes.push(function () {\n                return ({\n                    sourceSpan: expression.sourceSpan,\n                    nodeFlags: 128 /* TypePurePipe */,\n                    nodeDef: importExpr(Identifiers.purePipeDef).callFn([\n                        literal(checkIndex_1),\n                        literal(argCount),\n                    ])\n                });\n            });\n            // find underlying pipe in the component view\n            var /** @type {?} */ compViewExpr = VIEW_VAR;\n            var /** @type {?} */ compBuilder = this;\n            while (compBuilder.parent) {\n                compBuilder = compBuilder.parent;\n                compViewExpr = compViewExpr.prop('parent').cast(DYNAMIC_TYPE);\n            }\n            var /** @type {?} */ pipeNodeIndex = compBuilder.purePipeNodeIndices[name];\n            var /** @type {?} */ pipeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([compViewExpr, literal(pipeNodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, callCheckStmt(checkIndex_1, [pipeValueExpr_1].concat(args)));\n            };\n        }\n        else {\n            var /** @type {?} */ nodeIndex = this._createPipe(expression.sourceSpan, pipe);\n            var /** @type {?} */ nodeValueExpr_1 = importExpr(Identifiers.nodeValue).callFn([VIEW_VAR, literal(nodeIndex)]);\n            return function (args) {\n                return callUnwrapValue(expression.nodeIndex, expression.bindingIndex, nodeValueExpr_1.callMethod('transform', args));\n            };\n        }\n    };\n    /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    ViewBuilder.prototype._createPipe = /**\n     * @param {?} sourceSpan\n     * @param {?} pipe\n     * @return {?}\n     */\n    function (sourceSpan, pipe) {\n        var _this = this;\n        var /** @type {?} */ nodeIndex = this.nodes.length;\n        var /** @type {?} */ flags = 0;\n        pipe.type.lifecycleHooks.forEach(function (lifecycleHook) {\n            // for pipes, we only support ngOnDestroy\n            if (lifecycleHook === LifecycleHooks.OnDestroy) {\n                flags |= lifecycleHookToNodeFlag(lifecycleHook);\n            }\n        });\n        var /** @type {?} */ depExprs = pipe.type.diDeps.map(function (diDep) { return depDef(_this.outputCtx, diDep); });\n        // function pipeDef(\n        //   flags: NodeFlags, ctor: any, deps: ([DepFlags, any] | any)[]): NodeDef\n        this.nodes.push(function () {\n            return ({\n                sourceSpan: sourceSpan,\n                nodeFlags: 16 /* TypePipe */,\n                nodeDef: importExpr(Identifiers.pipeDef).callFn([\n                    literal(flags), _this.outputCtx.importExpr(pipe.type.reference), literalArr(depExprs)\n                ])\n            });\n        });\n        return nodeIndex;\n    };\n    /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    ViewBuilder.prototype._preprocessUpdateExpression = /**\n     * For the AST in `UpdateExpression.value`:\n     * - create nodes for pipes, literal arrays and, literal maps,\n     * - update the AST to replace pipes, literal arrays and, literal maps with calls to check fn.\n     *\n     * WARNING: This might create new nodeDefs (for pipes and literal arrays and literal maps)!\n     * @param {?} expression\n     * @return {?}\n     */\n    function (expression) {\n        var _this = this;\n        return {\n            nodeIndex: expression.nodeIndex,\n            bindingIndex: expression.bindingIndex,\n            sourceSpan: expression.sourceSpan,\n            context: expression.context,\n            value: convertPropertyBindingBuiltins({\n                createLiteralArrayConverter: function (argCount) {\n                    return _this._createLiteralArrayConverter(expression.sourceSpan, argCount);\n                },\n                createLiteralMapConverter: function (keys) {\n                    return _this._createLiteralMapConverter(expression.sourceSpan, keys);\n                },\n                createPipeConverter: function (name, argCount) {\n                    return _this._createPipeConverter(expression, name, argCount);\n                }\n            }, expression.value)\n        };\n    };\n    /**\n     * @return {?}\n     */\n    ViewBuilder.prototype._createNodeExpressions = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ updateBindingCount = 0;\n        var /** @type {?} */ updateRendererStmts = [];\n        var /** @type {?} */ updateDirectivesStmts = [];\n        var /** @type {?} */ nodeDefExprs = this.nodes.map(function (factory, nodeIndex) {\n            var _a = factory(), nodeDef = _a.nodeDef, nodeFlags = _a.nodeFlags, updateDirectives = _a.updateDirectives, updateRenderer = _a.updateRenderer, sourceSpan = _a.sourceSpan;\n            if (updateRenderer) {\n                updateRendererStmts.push.apply(updateRendererStmts, createUpdateStatements(nodeIndex, sourceSpan, updateRenderer, false));\n            }\n            if (updateDirectives) {\n                updateDirectivesStmts.push.apply(updateDirectivesStmts, createUpdateStatements(nodeIndex, sourceSpan, updateDirectives, (nodeFlags & (262144 /* DoCheck */ | 65536 /* OnInit */)) > 0));\n            }\n            // We use a comma expression to call the log function before\n            // the nodeDef function, but still use the result of the nodeDef function\n            // as the value.\n            // Note: We only add the logger to elements / text nodes,\n            // so we don't generate too much code.\n            var /** @type {?} */ logWithNodeDef = nodeFlags & 3 /* CatRenderNode */ ?\n                new CommaExpr([LOG_VAR$1.callFn([]).callFn([]), nodeDef]) :\n                nodeDef;\n            return applySourceSpanToExpressionIfNeeded(logWithNodeDef, sourceSpan);\n        });\n        return { updateRendererStmts: updateRendererStmts, updateDirectivesStmts: updateDirectivesStmts, nodeDefExprs: nodeDefExprs };\n        /**\n         * @param {?} nodeIndex\n         * @param {?} sourceSpan\n         * @param {?} expressions\n         * @param {?} allowEmptyExprs\n         * @return {?}\n         */\n        function createUpdateStatements(nodeIndex, sourceSpan, expressions, allowEmptyExprs) {\n            var /** @type {?} */ updateStmts = [];\n            var /** @type {?} */ exprs = expressions.map(function (_a) {\n                var sourceSpan = _a.sourceSpan, context = _a.context, value = _a.value;\n                var /** @type {?} */ bindingId = \"\" + updateBindingCount++;\n                var /** @type {?} */ nameResolver = context === COMP_VAR ? self : null;\n                var _b = convertPropertyBinding(nameResolver, context, value, bindingId), stmts = _b.stmts, currValExpr = _b.currValExpr;\n                updateStmts.push.apply(updateStmts, stmts.map(function (stmt) { return applySourceSpanToStatementIfNeeded(stmt, sourceSpan); }));\n                return applySourceSpanToExpressionIfNeeded(currValExpr, sourceSpan);\n            });\n            if (expressions.length || allowEmptyExprs) {\n                updateStmts.push(applySourceSpanToStatementIfNeeded(callCheckStmt(nodeIndex, exprs).toStmt(), sourceSpan));\n            }\n            return updateStmts;\n        }\n    };\n    /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    ViewBuilder.prototype._createElementHandleEventFn = /**\n     * @param {?} nodeIndex\n     * @param {?} handlers\n     * @return {?}\n     */\n    function (nodeIndex, handlers) {\n        var _this = this;\n        var /** @type {?} */ handleEventStmts = [];\n        var /** @type {?} */ handleEventBindingCount = 0;\n        handlers.forEach(function (_a) {\n            var context = _a.context, eventAst = _a.eventAst, dirAst = _a.dirAst;\n            var /** @type {?} */ bindingId = \"\" + handleEventBindingCount++;\n            var /** @type {?} */ nameResolver = context === COMP_VAR ? _this : null;\n            var _b = convertActionBinding(nameResolver, context, eventAst.handler, bindingId), stmts = _b.stmts, allowDefault = _b.allowDefault;\n            var /** @type {?} */ trueStmts = stmts;\n            if (allowDefault) {\n                trueStmts.push(ALLOW_DEFAULT_VAR.set(allowDefault.and(ALLOW_DEFAULT_VAR)).toStmt());\n            }\n            var _c = elementEventNameAndTarget(eventAst, dirAst), eventTarget = _c.target, eventName = _c.name;\n            var /** @type {?} */ fullEventName = elementEventFullName(eventTarget, eventName);\n            handleEventStmts.push(applySourceSpanToStatementIfNeeded(new IfStmt(literal(fullEventName).identical(EVENT_NAME_VAR), trueStmts), eventAst.sourceSpan));\n        });\n        var /** @type {?} */ handleEventFn;\n        if (handleEventStmts.length > 0) {\n            var /** @type {?} */ preStmts = [ALLOW_DEFAULT_VAR.set(literal(true)).toDeclStmt(BOOL_TYPE)];\n            if (!this.component.isHost && findReadVarNames(handleEventStmts).has(/** @type {?} */ ((COMP_VAR.name)))) {\n                preStmts.push(COMP_VAR.set(VIEW_VAR.prop('component')).toDeclStmt(this.compType));\n            }\n            handleEventFn = fn([\n                new FnParam(/** @type {?} */ ((VIEW_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EVENT_NAME_VAR.name)), INFERRED_TYPE),\n                new FnParam(/** @type {?} */ ((EventHandlerVars.event.name)), INFERRED_TYPE)\n            ], preStmts.concat(handleEventStmts, [new ReturnStatement(ALLOW_DEFAULT_VAR)]), INFERRED_TYPE);\n        }\n        else {\n            handleEventFn = NULL_EXPR;\n        }\n        return handleEventFn;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirective = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitDirectiveProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitReference = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitVariable = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitEvent = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitElementProperty = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    ViewBuilder.prototype.visitAttr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) { };\n    return ViewBuilder;\n}());\n/**\n * @param {?} astNodes\n * @return {?}\n */\nfunction needsAdditionalRootNode(astNodes) {\n    var /** @type {?} */ lastAstNode = astNodes[astNodes.length - 1];\n    if (lastAstNode instanceof EmbeddedTemplateAst) {\n        return lastAstNode.hasViewContainer;\n    }\n    if (lastAstNode instanceof ElementAst) {\n        if (isNgContainer(lastAstNode.name) && lastAstNode.children.length) {\n            return needsAdditionalRootNode(lastAstNode.children);\n        }\n        return lastAstNode.hasViewContainer;\n    }\n    return lastAstNode instanceof NgContentAst;\n}\n/**\n * @param {?} inputAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementBindingDef(inputAst, dirAst) {\n    switch (inputAst.type) {\n        case PropertyBindingType.Attribute:\n            return literalArr([\n                literal(1 /* TypeElementAttribute */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Property:\n            return literalArr([\n                literal(8 /* TypeProperty */), literal(inputAst.name),\n                literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Animation:\n            var /** @type {?} */ bindingType = 8 /* TypeProperty */ |\n                (dirAst && dirAst.directive.isComponent ? 32 /* SyntheticHostProperty */ :\n                    16 /* SyntheticProperty */);\n            return literalArr([\n                literal(bindingType), literal('@' + inputAst.name), literal(inputAst.securityContext)\n            ]);\n        case PropertyBindingType.Class:\n            return literalArr([literal(2 /* TypeElementClass */), literal(inputAst.name), NULL_EXPR]);\n        case PropertyBindingType.Style:\n            return literalArr([\n                literal(4 /* TypeElementStyle */), literal(inputAst.name), literal(inputAst.unit)\n            ]);\n    }\n}\n/**\n * @param {?} elementAst\n * @return {?}\n */\nfunction fixedAttrsDef(elementAst) {\n    var /** @type {?} */ mapResult = Object.create(null);\n    elementAst.attrs.forEach(function (attrAst) { mapResult[attrAst.name] = attrAst.value; });\n    elementAst.directives.forEach(function (dirAst) {\n        Object.keys(dirAst.directive.hostAttributes).forEach(function (name) {\n            var /** @type {?} */ value = dirAst.directive.hostAttributes[name];\n            var /** @type {?} */ prevValue = mapResult[name];\n            mapResult[name] = prevValue != null ? mergeAttributeValue(name, prevValue, value) : value;\n        });\n    });\n    // Note: We need to sort to get a defined output order\n    // for tests and for caching generated artifacts...\n    return literalArr(Object.keys(mapResult).sort().map(function (attrName) { return literalArr([literal(attrName), literal(mapResult[attrName])]); }));\n}\n/**\n * @param {?} attrName\n * @param {?} attrValue1\n * @param {?} attrValue2\n * @return {?}\n */\nfunction mergeAttributeValue(attrName, attrValue1, attrValue2) {\n    if (attrName == CLASS_ATTR$1 || attrName == STYLE_ATTR) {\n        return attrValue1 + \" \" + attrValue2;\n    }\n    else {\n        return attrValue2;\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} exprs\n * @return {?}\n */\nfunction callCheckStmt(nodeIndex, exprs) {\n    if (exprs.length > 10) {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(1 /* Dynamic */), literalArr(exprs)]);\n    }\n    else {\n        return CHECK_VAR.callFn([VIEW_VAR, literal(nodeIndex), literal(0 /* Inline */)].concat(exprs));\n    }\n}\n/**\n * @param {?} nodeIndex\n * @param {?} bindingIdx\n * @param {?} expr\n * @return {?}\n */\nfunction callUnwrapValue(nodeIndex, bindingIdx, expr) {\n    return importExpr(Identifiers.unwrapValue).callFn([\n        VIEW_VAR, literal(nodeIndex), literal(bindingIdx), expr\n    ]);\n}\n/**\n * @param {?} nodes\n * @param {?=} result\n * @return {?}\n */\nfunction findStaticQueryIds(nodes, result) {\n    if (result === void 0) { result = new Map(); }\n    nodes.forEach(function (node) {\n        var /** @type {?} */ staticQueryIds = new Set();\n        var /** @type {?} */ dynamicQueryIds = new Set();\n        var /** @type {?} */ queryMatches = /** @type {?} */ ((undefined));\n        if (node instanceof ElementAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        else if (node instanceof EmbeddedTemplateAst) {\n            findStaticQueryIds(node.children, result);\n            node.children.forEach(function (child) {\n                var /** @type {?} */ childData = /** @type {?} */ ((result.get(child)));\n                childData.staticQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n                childData.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n            });\n            queryMatches = node.queryMatches;\n        }\n        if (queryMatches) {\n            queryMatches.forEach(function (match) { return staticQueryIds.add(match.queryId); });\n        }\n        dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n        result.set(node, { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds });\n    });\n    return result;\n}\n/**\n * @param {?} nodeStaticQueryIds\n * @return {?}\n */\nfunction staticViewQueryIds(nodeStaticQueryIds) {\n    var /** @type {?} */ staticQueryIds = new Set();\n    var /** @type {?} */ dynamicQueryIds = new Set();\n    Array.from(nodeStaticQueryIds.values()).forEach(function (entry) {\n        entry.staticQueryIds.forEach(function (queryId) { return staticQueryIds.add(queryId); });\n        entry.dynamicQueryIds.forEach(function (queryId) { return dynamicQueryIds.add(queryId); });\n    });\n    dynamicQueryIds.forEach(function (queryId) { return staticQueryIds.delete(queryId); });\n    return { staticQueryIds: staticQueryIds, dynamicQueryIds: dynamicQueryIds };\n}\n/**\n * @param {?} eventAst\n * @param {?} dirAst\n * @return {?}\n */\nfunction elementEventNameAndTarget(eventAst, dirAst) {\n    if (eventAst.isAnimation) {\n        return {\n            name: \"@\" + eventAst.name + \".\" + eventAst.phase,\n            target: dirAst && dirAst.directive.isComponent ? 'component' : null\n        };\n    }\n    else {\n        return eventAst;\n    }\n}\n/**\n * @param {?} queryIds\n * @param {?} queryId\n * @param {?} isFirst\n * @return {?}\n */\nfunction calcStaticDynamicQueryFlags(queryIds, queryId, isFirst) {\n    var /** @type {?} */ flags = 0;\n    // Note: We only make queries static that query for a single item.\n    // This is because of backwards compatibility with the old view compiler...\n    if (isFirst && (queryIds.staticQueryIds.has(queryId) || !queryIds.dynamicQueryIds.has(queryId))) {\n        flags |= 268435456 /* StaticQuery */;\n    }\n    else {\n        flags |= 536870912 /* DynamicQuery */;\n    }\n    return flags;\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A container for message extracted from the templates.\n */\nvar MessageBundle = (function () {\n    function MessageBundle(_htmlParser, _implicitTags, _implicitAttrs, _locale) {\n        if (_locale === void 0) { _locale = null; }\n        this._htmlParser = _htmlParser;\n        this._implicitTags = _implicitTags;\n        this._implicitAttrs = _implicitAttrs;\n        this._locale = _locale;\n        this._messages = [];\n    }\n    /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    MessageBundle.prototype.updateFromTemplate = /**\n     * @param {?} html\n     * @param {?} url\n     * @param {?} interpolationConfig\n     * @return {?}\n     */\n    function (html, url, interpolationConfig) {\n        var /** @type {?} */ htmlParserResult = this._htmlParser.parse(html, url, true, interpolationConfig);\n        if (htmlParserResult.errors.length) {\n            return htmlParserResult.errors;\n        }\n        var /** @type {?} */ i18nParserResult = extractMessages(htmlParserResult.rootNodes, interpolationConfig, this._implicitTags, this._implicitAttrs);\n        if (i18nParserResult.errors.length) {\n            return i18nParserResult.errors;\n        }\n        (_a = this._messages).push.apply(_a, i18nParserResult.messages);\n        return [];\n        var _a;\n    };\n    // Return the message in the internal format\n    // The public (serialized) format might be different, see the `write` method.\n    /**\n     * @return {?}\n     */\n    MessageBundle.prototype.getMessages = /**\n     * @return {?}\n     */\n    function () { return this._messages; };\n    /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    MessageBundle.prototype.write = /**\n     * @param {?} serializer\n     * @param {?=} filterSources\n     * @return {?}\n     */\n    function (serializer, filterSources) {\n        var /** @type {?} */ messages = {};\n        var /** @type {?} */ mapperVisitor = new MapPlaceholderNames();\n        // Deduplicate messages based on their ID\n        this._messages.forEach(function (message) {\n            var /** @type {?} */ id = serializer.digest(message);\n            if (!messages.hasOwnProperty(id)) {\n                messages[id] = message;\n            }\n            else {\n                (_a = messages[id].sources).push.apply(_a, message.sources);\n            }\n            var _a;\n        });\n        // Transform placeholder names using the serializer mapping\n        var /** @type {?} */ msgList = Object.keys(messages).map(function (id) {\n            var /** @type {?} */ mapper = serializer.createNameMapper(messages[id]);\n            var /** @type {?} */ src = messages[id];\n            var /** @type {?} */ nodes = mapper ? mapperVisitor.convert(src.nodes, mapper) : src.nodes;\n            var /** @type {?} */ transformedMessage = new Message(nodes, {}, {}, src.meaning, src.description, id);\n            transformedMessage.sources = src.sources;\n            if (filterSources) {\n                transformedMessage.sources.forEach(function (source) { return source.filePath = filterSources(source.filePath); });\n            }\n            return transformedMessage;\n        });\n        return serializer.write(msgList, this._locale);\n    };\n    return MessageBundle;\n}());\nvar MapPlaceholderNames = (function (_super) {\n    __extends(MapPlaceholderNames, _super);\n    function MapPlaceholderNames() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.convert = /**\n     * @param {?} nodes\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (nodes, mapper) {\n        var _this = this;\n        return mapper ? nodes.map(function (n) { return n.visit(_this, mapper); }) : nodes;\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitTagPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        var _this = this;\n        var /** @type {?} */ startName = /** @type {?} */ ((mapper.toPublicName(ph.startName)));\n        var /** @type {?} */ closeName = ph.closeName ? /** @type {?} */ ((mapper.toPublicName(ph.closeName))) : ph.closeName;\n        var /** @type {?} */ children = ph.children.map(function (n) { return n.visit(_this, mapper); });\n        return new TagPlaceholder(ph.tag, ph.attrs, startName, closeName, children, ph.isVoid, ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new Placeholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    MapPlaceholderNames.prototype.visitIcuPlaceholder = /**\n     * @param {?} ph\n     * @param {?} mapper\n     * @return {?}\n     */\n    function (ph, mapper) {\n        return new IcuPlaceholder(ph.value, /** @type {?} */ ((mapper.toPublicName(ph.name))), ph.sourceSpan);\n    };\n    return MapPlaceholderNames;\n}(CloneVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GeneratedFile = (function () {\n    function GeneratedFile(srcFileUrl, genFileUrl, sourceOrStmts) {\n        this.srcFileUrl = srcFileUrl;\n        this.genFileUrl = genFileUrl;\n        if (typeof sourceOrStmts === 'string') {\n            this.source = sourceOrStmts;\n            this.stmts = null;\n        }\n        else {\n            this.source = null;\n            this.stmts = sourceOrStmts;\n        }\n    }\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    GeneratedFile.prototype.isEquivalent = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        if (this.genFileUrl !== other.genFileUrl) {\n            return false;\n        }\n        if (this.source) {\n            return this.source === other.source;\n        }\n        if (other.stmts == null) {\n            return false;\n        }\n        // Note: the constructor guarantees that if this.source is not filled,\n        // then this.stmts is.\n        return areAllEquivalent(/** @type {?} */ ((this.stmts)), /** @type {?} */ ((other.stmts)));\n    };\n    return GeneratedFile;\n}());\n/**\n * @param {?} file\n * @param {?=} preamble\n * @return {?}\n */\nfunction toTypeScript(file, preamble) {\n    if (preamble === void 0) { preamble = ''; }\n    if (!file.stmts) {\n        throw new Error(\"Illegal state: No stmts present on GeneratedFile \" + file.genFileUrl);\n    }\n    return new TypeScriptEmitter().emitStatements(file.genFileUrl, file.stmts, preamble);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * @param {?} moduleMeta\n * @param {?} reflector\n * @return {?}\n */\nfunction listLazyRoutes(moduleMeta, reflector) {\n    var /** @type {?} */ allLazyRoutes = [];\n    for (var _i = 0, _a = moduleMeta.transitiveModule.providers; _i < _a.length; _i++) {\n        var _b = _a[_i], provider = _b.provider, module = _b.module;\n        if (tokenReference(provider.token) === reflector.ROUTES) {\n            var /** @type {?} */ loadChildren = _collectLoadChildren(provider.useValue);\n            for (var _c = 0, loadChildren_1 = loadChildren; _c < loadChildren_1.length; _c++) {\n                var route = loadChildren_1[_c];\n                allLazyRoutes.push(parseLazyRoute(route, reflector, module.reference));\n            }\n        }\n    }\n    return allLazyRoutes;\n}\n/**\n * @param {?} routes\n * @param {?=} target\n * @return {?}\n */\nfunction _collectLoadChildren(routes, target) {\n    if (target === void 0) { target = []; }\n    if (typeof routes === 'string') {\n        target.push(routes);\n    }\n    else if (Array.isArray(routes)) {\n        for (var _i = 0, routes_1 = routes; _i < routes_1.length; _i++) {\n            var route = routes_1[_i];\n            _collectLoadChildren(route, target);\n        }\n    }\n    else if (routes.loadChildren) {\n        _collectLoadChildren(routes.loadChildren, target);\n    }\n    else if (routes.children) {\n        _collectLoadChildren(routes.children, target);\n    }\n    return target;\n}\n/**\n * @param {?} route\n * @param {?} reflector\n * @param {?=} module\n * @return {?}\n */\nfunction parseLazyRoute(route, reflector, module) {\n    var _a = route.split('#'), routePath = _a[0], routeName = _a[1];\n    var /** @type {?} */ referencedModule = reflector.resolveExternalReference({\n        moduleName: routePath,\n        name: routeName,\n    }, module ? module.filePath : undefined);\n    return { route: route, module: module || referencedModule, referencedModule: referencedModule };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} srcFileName\n * @param {?} forJitCtx\n * @param {?} summaryResolver\n * @param {?} symbolResolver\n * @param {?} symbols\n * @param {?} types\n * @return {?}\n */\nfunction serializeSummaries(srcFileName, forJitCtx, summaryResolver, symbolResolver, symbols, types) {\n    var /** @type {?} */ toJsonSerializer = new ToJsonSerializer(symbolResolver, summaryResolver, srcFileName);\n    // for symbols, we use everything except for the class metadata itself\n    // (we keep the statics though), as the class metadata is contained in the\n    // CompileTypeSummary.\n    symbols.forEach(function (resolvedSymbol) {\n        return toJsonSerializer.addSummary({ symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata });\n    });\n    // Add type summaries.\n    types.forEach(function (_a) {\n        var summary = _a.summary, metadata = _a.metadata;\n        toJsonSerializer.addSummary({ symbol: summary.type.reference, metadata: undefined, type: summary });\n    });\n    var _a = toJsonSerializer.serialize(), json = _a.json, exportAs = _a.exportAs;\n    if (forJitCtx) {\n        var /** @type {?} */ forJitSerializer_1 = new ForJitSerializer(forJitCtx, symbolResolver, summaryResolver);\n        types.forEach(function (_a) {\n            var summary = _a.summary, metadata = _a.metadata;\n            forJitSerializer_1.addSourceType(summary, metadata);\n        });\n        toJsonSerializer.unprocessedSymbolSummariesBySymbol.forEach(function (summary) {\n            if (summaryResolver.isLibraryFile(summary.symbol.filePath) && summary.type) {\n                forJitSerializer_1.addLibType(summary.type);\n            }\n        });\n        forJitSerializer_1.serialize(exportAs);\n    }\n    return { json: json, exportAs: exportAs };\n}\n/**\n * @param {?} symbolCache\n * @param {?} summaryResolver\n * @param {?} libraryFileName\n * @param {?} json\n * @return {?}\n */\nfunction deserializeSummaries(symbolCache, summaryResolver, libraryFileName, json) {\n    var /** @type {?} */ deserializer = new FromJsonDeserializer(symbolCache, summaryResolver);\n    return deserializer.deserialize(libraryFileName, json);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @return {?}\n */\nfunction createForJitStub(outputCtx, reference) {\n    return createSummaryForJitFunction(outputCtx, reference, NULL_EXPR);\n}\n/**\n * @param {?} outputCtx\n * @param {?} reference\n * @param {?} value\n * @return {?}\n */\nfunction createSummaryForJitFunction(outputCtx, reference, value) {\n    var /** @type {?} */ fnName = summaryForJitName(reference.name);\n    outputCtx.statements.push(fn([], [new ReturnStatement(value)], new ArrayType(DYNAMIC_TYPE)).toDeclStmt(fnName, [\n        StmtModifier.Final, StmtModifier.Exported\n    ]));\n}\nvar ToJsonSerializer = (function (_super) {\n    __extends(ToJsonSerializer, _super);\n    function ToJsonSerializer(symbolResolver, summaryResolver, srcFileName) {\n        var _this = _super.call(this) || this;\n        _this.symbolResolver = symbolResolver;\n        _this.summaryResolver = summaryResolver;\n        _this.srcFileName = srcFileName;\n        _this.symbols = [];\n        _this.indexBySymbol = new Map();\n        _this.reexportedBy = new Map();\n        _this.processedSummaryBySymbol = new Map();\n        _this.processedSummaries = [];\n        _this.unprocessedSymbolSummariesBySymbol = new Map();\n        _this.moduleName = symbolResolver.getKnownModuleName(srcFileName);\n        return _this;\n    }\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        var _this = this;\n        var /** @type {?} */ unprocessedSummary = this.unprocessedSymbolSummariesBySymbol.get(summary.symbol);\n        var /** @type {?} */ processedSummary = this.processedSummaryBySymbol.get(summary.symbol);\n        if (!unprocessedSummary) {\n            unprocessedSummary = { symbol: summary.symbol, metadata: undefined };\n            this.unprocessedSymbolSummariesBySymbol.set(summary.symbol, unprocessedSummary);\n            processedSummary = { symbol: this.processValue(summary.symbol, 0 /* None */) };\n            this.processedSummaries.push(processedSummary);\n            this.processedSummaryBySymbol.set(summary.symbol, processedSummary);\n        }\n        if (!unprocessedSummary.metadata && summary.metadata) {\n            var /** @type {?} */ metadata_1 = summary.metadata || {};\n            if (metadata_1.__symbolic === 'class') {\n                // For classes, we keep everything except their class decorators.\n                // We need to keep e.g. the ctor args, method names, method decorators\n                // so that the class can be extended in another compilation unit.\n                // We don't keep the class decorators as\n                // 1) they refer to data\n                //   that should not cause a rebuild of downstream compilation units\n                //   (e.g. inline templates of @Component, or @NgModule.declarations)\n                // 2) their data is already captured in TypeSummaries, e.g. DirectiveSummary.\n                var /** @type {?} */ clone_1 = {};\n                Object.keys(metadata_1).forEach(function (propName) {\n                    if (propName !== 'decorators') {\n                        clone_1[propName] = metadata_1[propName];\n                    }\n                });\n                metadata_1 = clone_1;\n            }\n            else if (isCall(metadata_1)) {\n                if (!isFunctionCall(metadata_1) && !isMethodCallOnVariable(metadata_1)) {\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    // Don't store complex calls as we won't be able to simplify them anyways later on.\n                    metadata_1 = {\n                        __symbolic: 'error',\n                        message: 'Complex function calls are not supported.',\n                    };\n                }\n            }\n            // Note: We need to keep storing ctor calls for e.g.\n            // `export const x = new InjectionToken(...)`\n            unprocessedSummary.metadata = metadata_1;\n            processedSummary.metadata = this.processValue(metadata_1, 1 /* ResolveValue */);\n            if (metadata_1 instanceof StaticSymbol &&\n                this.summaryResolver.isLibraryFile(metadata_1.filePath)) {\n                var /** @type {?} */ declarationSymbol = this.symbols[/** @type {?} */ ((this.indexBySymbol.get(metadata_1)))];\n                if (!isLoweredSymbol(declarationSymbol.name)) {\n                    // Note: symbols that were introduced during codegen in the user file can have a reexport\n                    // if a user used `export *`. However, we can't rely on this as tsickle will change\n                    // `export *` into named exports, using only the information from the typechecker.\n                    // As we introduce the new symbols after typecheck, Tsickle does not know about them,\n                    // and omits them when expanding `export *`.\n                    // So we have to keep reexporting these symbols manually via .ngfactory files.\n                    this.reexportedBy.set(declarationSymbol, summary.symbol);\n                }\n            }\n        }\n        if (!unprocessedSummary.type && summary.type) {\n            unprocessedSummary.type = summary.type;\n            // Note: We don't add the summaries of all referenced symbols as for the ResolvedSymbols,\n            // as the type summaries already contain the transitive data that they require\n            // (in a minimal way).\n            processedSummary.type = this.processValue(summary.type, 0 /* None */);\n            // except for reexported directives / pipes, so we need to store\n            // their summaries explicitly.\n            if (summary.type.summaryKind === CompileSummaryKind.NgModule) {\n                var /** @type {?} */ ngModuleSummary = /** @type {?} */ (summary.type);\n                ngModuleSummary.exportedDirectives.concat(ngModuleSummary.exportedPipes).forEach(function (id) {\n                    var /** @type {?} */ symbol = id.reference;\n                    if (_this.summaryResolver.isLibraryFile(symbol.filePath) &&\n                        !_this.unprocessedSymbolSummariesBySymbol.has(symbol)) {\n                        var /** @type {?} */ summary_1 = _this.summaryResolver.resolveSummary(symbol);\n                        if (summary_1) {\n                            _this.addSummary(summary_1);\n                        }\n                    }\n                });\n            }\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.serialize = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        var /** @type {?} */ exportAs = [];\n        var /** @type {?} */ json = JSON.stringify({\n            moduleName: this.moduleName,\n            summaries: this.processedSummaries,\n            symbols: this.symbols.map(function (symbol, index) {\n                symbol.assertNoMembers();\n                var /** @type {?} */ importAs = /** @type {?} */ ((undefined));\n                if (_this.summaryResolver.isLibraryFile(symbol.filePath)) {\n                    var /** @type {?} */ reexportSymbol = _this.reexportedBy.get(symbol);\n                    if (reexportSymbol) {\n                        importAs = /** @type {?} */ ((_this.indexBySymbol.get(reexportSymbol)));\n                    }\n                    else {\n                        var /** @type {?} */ summary = _this.unprocessedSymbolSummariesBySymbol.get(symbol);\n                        if (!summary || !summary.metadata || summary.metadata.__symbolic !== 'interface') {\n                            importAs = symbol.name + \"_\" + index;\n                            exportAs.push({ symbol: symbol, exportAs: importAs });\n                        }\n                    }\n                }\n                return {\n                    __symbol: index,\n                    name: symbol.name,\n                    filePath: _this.summaryResolver.toSummaryFileName(symbol.filePath, _this.srcFileName),\n                    importAs: importAs\n                };\n            })\n        });\n        return { json: json, exportAs: exportAs };\n    };\n    /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.processValue = /**\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (value, flags) {\n        return visitValue(value, this, flags);\n    };\n    /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitOther = /**\n     * @param {?} value\n     * @param {?} context\n     * @return {?}\n     */\n    function (value, context) {\n        if (value instanceof StaticSymbol) {\n            var /** @type {?} */ baseSymbol = this.symbolResolver.getStaticSymbol(value.filePath, value.name);\n            var /** @type {?} */ index = this.visitStaticSymbol(baseSymbol, context);\n            return { __symbol: index, members: value.members };\n        }\n    };\n    /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.visitStaticSymbol = /**\n     * Returns null if the options.resolveValue is true, and the summary for the symbol\n     * resolved to a type or could not be resolved.\n     * @param {?} baseSymbol\n     * @param {?} flags\n     * @return {?}\n     */\n    function (baseSymbol, flags) {\n        var /** @type {?} */ index = this.indexBySymbol.get(baseSymbol);\n        var /** @type {?} */ summary = null;\n        if (flags & 1 /* ResolveValue */ &&\n            this.summaryResolver.isLibraryFile(baseSymbol.filePath)) {\n            if (this.unprocessedSymbolSummariesBySymbol.has(baseSymbol)) {\n                // the summary for this symbol was already added\n                // -> nothing to do.\n                return /** @type {?} */ ((index));\n            }\n            summary = this.loadSummary(baseSymbol);\n            if (summary && summary.metadata instanceof StaticSymbol) {\n                // The summary is a reexport\n                index = this.visitStaticSymbol(summary.metadata, flags);\n                // reset the summary as it is just a reexport, so we don't want to store it.\n                summary = null;\n            }\n        }\n        else if (index != null) {\n            // Note: == on purpose to compare with undefined!\n            // No summary and the symbol is already added -> nothing to do.\n            return index;\n        }\n        // Note: == on purpose to compare with undefined!\n        if (index == null) {\n            index = this.symbols.length;\n            this.symbols.push(baseSymbol);\n        }\n        this.indexBySymbol.set(baseSymbol, index);\n        if (summary) {\n            this.addSummary(summary);\n        }\n        return index;\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    ToJsonSerializer.prototype.loadSummary = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(symbol);\n        if (!summary) {\n            // some symbols might originate from a plain typescript library\n            // that just exported .d.ts and .metadata.json files, i.e. where no summary\n            // files were created.\n            var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n            if (resolvedSymbol) {\n                summary = { symbol: resolvedSymbol.symbol, metadata: resolvedSymbol.metadata };\n            }\n        }\n        return summary;\n    };\n    return ToJsonSerializer;\n}(ValueTransformer));\nvar ForJitSerializer = (function () {\n    function ForJitSerializer(outputCtx, symbolResolver, summaryResolver) {\n        this.outputCtx = outputCtx;\n        this.symbolResolver = symbolResolver;\n        this.summaryResolver = summaryResolver;\n        this.data = [];\n    }\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addSourceType = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        this.data.push({ summary: summary, metadata: metadata, isLibrary: false });\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    ForJitSerializer.prototype.addLibType = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) {\n        this.data.push({ summary: summary, metadata: null, isLibrary: true });\n    };\n    /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serialize = /**\n     * @param {?} exportAsArr\n     * @return {?}\n     */\n    function (exportAsArr) {\n        var _this = this;\n        var /** @type {?} */ exportAsBySymbol = new Map();\n        for (var _i = 0, exportAsArr_1 = exportAsArr; _i < exportAsArr_1.length; _i++) {\n            var _a = exportAsArr_1[_i], symbol = _a.symbol, exportAs = _a.exportAs;\n            exportAsBySymbol.set(symbol, exportAs);\n        }\n        var /** @type {?} */ ngModuleSymbols = new Set();\n        for (var _b = 0, _c = this.data; _b < _c.length; _b++) {\n            var _d = _c[_b], summary = _d.summary, metadata = _d.metadata, isLibrary = _d.isLibrary;\n            if (summary.summaryKind === CompileSummaryKind.NgModule) {\n                // collect the symbols that refer to NgModule classes.\n                // Note: we can't just rely on `summary.type.summaryKind` to determine this as\n                // we don't add the summaries of all referenced symbols when we serialize type summaries.\n                // See serializeSummaries for details.\n                ngModuleSymbols.add(summary.type.reference);\n                var /** @type {?} */ modSummary = /** @type {?} */ (summary);\n                for (var _e = 0, _f = modSummary.modules; _e < _f.length; _e++) {\n                    var mod = _f[_e];\n                    ngModuleSymbols.add(mod.reference);\n                }\n            }\n            if (!isLibrary) {\n                var /** @type {?} */ fnName = summaryForJitName(summary.type.reference.name);\n                createSummaryForJitFunction(this.outputCtx, summary.type.reference, this.serializeSummaryWithDeps(summary, /** @type {?} */ ((metadata))));\n            }\n        }\n        ngModuleSymbols.forEach(function (ngModuleSymbol) {\n            if (_this.summaryResolver.isLibraryFile(ngModuleSymbol.filePath)) {\n                var /** @type {?} */ exportAs = exportAsBySymbol.get(ngModuleSymbol) || ngModuleSymbol.name;\n                var /** @type {?} */ jitExportAsName = summaryForJitName(exportAs);\n                _this.outputCtx.statements.push(variable(jitExportAsName)\n                    .set(_this.serializeSummaryRef(ngModuleSymbol))\n                    .toDeclStmt(null, [StmtModifier.Exported]));\n            }\n        });\n    };\n    /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryWithDeps = /**\n     * @param {?} summary\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (summary, metadata) {\n        var _this = this;\n        var /** @type {?} */ expressions = [this.serializeSummary(summary)];\n        var /** @type {?} */ providers = [];\n        if (metadata instanceof CompileNgModuleMetadata) {\n            expressions.push.apply(expressions, \n            // For directives / pipes, we only add the declared ones,\n            // and rely on transitively importing NgModules to get the transitive\n            // summaries.\n            metadata.declaredDirectives.concat(metadata.declaredPipes)\n                .map(function (type) { return type.reference; })\n                .concat(metadata.transitiveModule.modules.map(function (type) { return type.reference; })\n                .filter(function (ref) { return ref !== metadata.type.reference; }))\n                .map(function (ref) { return _this.serializeSummaryRef(ref); }));\n            // Note: We don't use `NgModuleSummary.providers`, as that one is transitive,\n            // and we already have transitive modules.\n            providers = metadata.providers;\n        }\n        else if (summary.summaryKind === CompileSummaryKind.Directive) {\n            var /** @type {?} */ dirSummary = /** @type {?} */ (summary);\n            providers = dirSummary.providers.concat(dirSummary.viewProviders);\n        }\n        // Note: We can't just refer to the `ngsummary.ts` files for `useClass` providers (as we do for\n        // declaredDirectives / declaredPipes), as we allow\n        // providers without ctor arguments to skip the `@Injectable` decorator,\n        // i.e. we didn't generate .ngsummary.ts files for these.\n        expressions.push.apply(expressions, providers.filter(function (provider) { return !!provider.useClass; }).map(function (provider) {\n            return _this.serializeSummary(/** @type {?} */ ({\n                summaryKind: CompileSummaryKind.Injectable, type: provider.useClass\n            }));\n        }));\n        return literalArr(expressions);\n    };\n    /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummaryRef = /**\n     * @param {?} typeSymbol\n     * @return {?}\n     */\n    function (typeSymbol) {\n        var /** @type {?} */ jitImportedSymbol = this.symbolResolver.getStaticSymbol(summaryForJitFileName(typeSymbol.filePath), summaryForJitName(typeSymbol.name));\n        return this.outputCtx.importExpr(jitImportedSymbol);\n    };\n    /**\n     * @param {?} data\n     * @return {?}\n     */\n    ForJitSerializer.prototype.serializeSummary = /**\n     * @param {?} data\n     * @return {?}\n     */\n    function (data) {\n        var /** @type {?} */ outputCtx = this.outputCtx;\n        var Transformer = (function () {\n            function Transformer() {\n            }\n            /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitArray = /**\n             * @param {?} arr\n             * @param {?} context\n             * @return {?}\n             */\n            function (arr, context) {\n                var _this = this;\n                return literalArr(arr.map(function (entry) { return visitValue(entry, _this, context); }));\n            };\n            /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} context\n             * @return {?}\n             */\n            function (map, context) {\n                var _this = this;\n                return new LiteralMapExpr(Object.keys(map).map(function (key) { return new LiteralMapEntry(key, visitValue(map[key], _this, context), false); }));\n            };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitPrimitive = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) { return literal(value); };\n            /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            Transformer.prototype.visitOther = /**\n             * @param {?} value\n             * @param {?} context\n             * @return {?}\n             */\n            function (value, context) {\n                if (value instanceof StaticSymbol) {\n                    return outputCtx.importExpr(value);\n                }\n                else {\n                    throw new Error(\"Illegal State: Encountered value \" + value);\n                }\n            };\n            return Transformer;\n        }());\n        return visitValue(data, new Transformer(), null);\n    };\n    return ForJitSerializer;\n}());\nvar FromJsonDeserializer = (function (_super) {\n    __extends(FromJsonDeserializer, _super);\n    function FromJsonDeserializer(symbolCache, summaryResolver) {\n        var _this = _super.call(this) || this;\n        _this.symbolCache = symbolCache;\n        _this.summaryResolver = summaryResolver;\n        return _this;\n    }\n    /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.deserialize = /**\n     * @param {?} libraryFileName\n     * @param {?} json\n     * @return {?}\n     */\n    function (libraryFileName, json) {\n        var _this = this;\n        var /** @type {?} */ data = JSON.parse(json);\n        var /** @type {?} */ allImportAs = [];\n        this.symbols = data.symbols.map(function (serializedSymbol) {\n            return _this.symbolCache.get(_this.summaryResolver.fromSummaryFileName(serializedSymbol.filePath, libraryFileName), serializedSymbol.name);\n        });\n        data.symbols.forEach(function (serializedSymbol, index) {\n            var /** @type {?} */ symbol = _this.symbols[index];\n            var /** @type {?} */ importAs = serializedSymbol.importAs;\n            if (typeof importAs === 'number') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbols[importAs] });\n            }\n            else if (typeof importAs === 'string') {\n                allImportAs.push({ symbol: symbol, importAs: _this.symbolCache.get(ngfactoryFilePath(libraryFileName), importAs) });\n            }\n        });\n        var /** @type {?} */ summaries = /** @type {?} */ (visitValue(data.summaries, this, null));\n        return { moduleName: data.moduleName, summaries: summaries, importAs: allImportAs };\n    };\n    /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    FromJsonDeserializer.prototype.visitStringMap = /**\n     * @param {?} map\n     * @param {?} context\n     * @return {?}\n     */\n    function (map, context) {\n        if ('__symbol' in map) {\n            var /** @type {?} */ baseSymbol = this.symbols[map['__symbol']];\n            var /** @type {?} */ members = map['members'];\n            return members.length ? this.symbolCache.get(baseSymbol.filePath, baseSymbol.name, members) :\n                baseSymbol;\n        }\n        else {\n            return _super.prototype.visitStringMap.call(this, map, context);\n        }\n    };\n    return FromJsonDeserializer;\n}(ValueTransformer));\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isCall(metadata) {\n    return metadata && metadata.__symbolic === 'call';\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isFunctionCall(metadata) {\n    return isCall(metadata) && metadata.expression instanceof StaticSymbol;\n}\n/**\n * @param {?} metadata\n * @return {?}\n */\nfunction isMethodCallOnVariable(metadata) {\n    return isCall(metadata) && metadata.expression && metadata.expression.__symbolic === 'select' &&\n        metadata.expression.expression instanceof StaticSymbol;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar StubEmitFlags = {\n    Basic: 1,\n    TypeCheck: 2,\n    All: 3,\n};\nStubEmitFlags[StubEmitFlags.Basic] = \"Basic\";\nStubEmitFlags[StubEmitFlags.TypeCheck] = \"TypeCheck\";\nStubEmitFlags[StubEmitFlags.All] = \"All\";\nvar AotCompiler = (function () {\n    function AotCompiler(_config, _options, _host, _reflector, _metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _typeCheckCompiler, _ngModuleCompiler, _outputEmitter, _summaryResolver, _symbolResolver) {\n        this._config = _config;\n        this._options = _options;\n        this._host = _host;\n        this._reflector = _reflector;\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._typeCheckCompiler = _typeCheckCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._outputEmitter = _outputEmitter;\n        this._summaryResolver = _summaryResolver;\n        this._symbolResolver = _symbolResolver;\n        this._templateAstCache = new Map();\n        this._analyzedFiles = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    AotCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () { this._metadataResolver.clearCache(); };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesSync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        analyzeResult.ngModules.forEach(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n        });\n        return analyzeResult;\n    };\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    AotCompiler.prototype.analyzeModulesAsync = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var /** @type {?} */ analyzeResult = analyzeAndValidateNgModules(rootFiles, this._host, this._symbolResolver, this._metadataResolver);\n        return Promise\n            .all(analyzeResult.ngModules.map(function (ngModule) {\n            return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () { return analyzeResult; });\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype._analyzeFile = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var /** @type {?} */ analyzedFile = this._analyzedFiles.get(fileName);\n        if (!analyzedFile) {\n            analyzedFile =\n                analyzeFile(this._host, this._symbolResolver, this._metadataResolver, fileName);\n            this._analyzedFiles.set(fileName, analyzedFile);\n        }\n        return analyzedFile;\n    };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    AotCompiler.prototype.findGeneratedFileNames = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) {\n        var _this = this;\n        var /** @type {?} */ genFileNames = [];\n        var /** @type {?} */ file = this._analyzeFile(fileName);\n        // Make sure we create a .ngfactory if we have a injectable/directive/pipe/NgModule\n        // or a reference to a non source file.\n        // Note: This is overestimating the required .ngfactory files as the real calculation is harder.\n        // Only do this for StubEmitFlags.Basic, as adding a type check block\n        // does not change this file (as we generate type check blocks based on NgModules).\n        if (this._options.allowEmptyCodegenFiles || file.directives.length || file.pipes.length ||\n            file.injectables.length || file.ngModules.length || file.exportsNonSourceFiles) {\n            genFileNames.push(ngfactoryFilePath(file.fileName, true));\n            if (this._options.enableSummariesForJit) {\n                genFileNames.push(summaryForJitFileName(file.fileName, true));\n            }\n        }\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(file.fileName, true)[1];\n        file.directives.forEach(function (dirSymbol) {\n            var /** @type {?} */ compMeta = /** @type {?} */ ((_this._metadataResolver.getNonNormalizedDirectiveMetadata(dirSymbol))).metadata;\n            if (!compMeta.isComponent) {\n                return;\n            } /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).styleUrls.forEach(function (styleUrl) {\n                var /** @type {?} */ normalizedUrl = _this._host.resourceNameToFileName(styleUrl, file.fileName);\n                if (!normalizedUrl) {\n                    throw syntaxError(\"Couldn't resolve resource \" + styleUrl + \" relative to \" + file.fileName);\n                }\n                var /** @type {?} */ needsShim = (/** @type {?} */ ((compMeta.template)).encapsulation || _this._config.defaultEncapsulation) === ViewEncapsulation.Emulated;\n                genFileNames.push(_stylesModuleUrl(normalizedUrl, needsShim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    genFileNames.push(_stylesModuleUrl(normalizedUrl, !needsShim, fileSuffix));\n                }\n            });\n        });\n        return genFileNames;\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitBasicStub = /**\n     * @param {?} genFileName\n     * @param {?=} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            if (!originalFileName) {\n                throw new Error(\"Assertion error: require the original file for .ngfactory.ts stubs. File: \" + genFileName);\n            }\n            var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.Basic);\n        }\n        else if (genFileName.endsWith('.ngsummary.ts')) {\n            if (this._options.enableSummariesForJit) {\n                if (!originalFileName) {\n                    throw new Error(\"Assertion error: require the original file for .ngsummary.ts stubs. File: \" + genFileName);\n                }\n                var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n                _createEmptyStub(outputCtx);\n                originalFile.ngModules.forEach(function (ngModule) {\n                    // create exports that user code can reference\n                    createForJitStub(outputCtx, ngModule.type.reference);\n                });\n            }\n        }\n        else if (genFileName.endsWith('.ngstyle.ts')) {\n            _createEmptyStub(outputCtx);\n        }\n        // Note: for the stubs, we don't need a property srcFileUrl,\n        // as lateron in emitAllImpls we will create the proper GeneratedFiles with the\n        // correct srcFileUrl.\n        // This is good as e.g. for .ngstyle.ts files we can't derive\n        // the url of components based on the genFileUrl.\n        return this._codegenSourceModule('unknown', outputCtx);\n    };\n    /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    AotCompiler.prototype.emitTypeCheckStub = /**\n     * @param {?} genFileName\n     * @param {?} originalFileName\n     * @return {?}\n     */\n    function (genFileName, originalFileName) {\n        var /** @type {?} */ originalFile = this._analyzeFile(originalFileName);\n        var /** @type {?} */ outputCtx = this._createOutputContext(genFileName);\n        if (genFileName.endsWith('.ngfactory.ts')) {\n            this._createNgFactoryStub(outputCtx, originalFile, StubEmitFlags.TypeCheck);\n        }\n        return outputCtx.statements.length > 0 ?\n            this._codegenSourceModule(originalFile.fileName, outputCtx) :\n            null;\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesAsync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        var /** @type {?} */ loadingPromises = [];\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return loadingPromises.push(_this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false));\n            });\n        });\n        return Promise.all(loadingPromises).then(function (_) { return mergeAndValidateNgFiles(files); });\n    };\n    /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    AotCompiler.prototype.loadFilesSync = /**\n     * @param {?} fileNames\n     * @return {?}\n     */\n    function (fileNames) {\n        var _this = this;\n        var /** @type {?} */ files = fileNames.map(function (fileName) { return _this._analyzeFile(fileName); });\n        files.forEach(function (file) {\n            return file.ngModules.forEach(function (ngModule) {\n                return _this._metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, true);\n            });\n        });\n        return mergeAndValidateNgFiles(files);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    AotCompiler.prototype._createNgFactoryStub = /**\n     * @param {?} outputCtx\n     * @param {?} file\n     * @param {?} emitFlags\n     * @return {?}\n     */\n    function (outputCtx, file, emitFlags) {\n        var _this = this;\n        var /** @type {?} */ componentId = 0;\n        file.ngModules.forEach(function (ngModuleMeta, ngModuleIndex) {\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            // Note: the code below needs to executed for StubEmitFlags.Basic and StubEmitFlags.TypeCheck,\n            // so we don't change the .ngfactory file too much when adding the typecheck block.\n            // create exports that user code can reference\n            _this._ngModuleCompiler.createStub(outputCtx, ngModuleMeta.type.reference);\n            // add references to the symbols from the metadata.\n            // These can be used by the type check block for components,\n            // and they also cause TypeScript to include these files into the program too,\n            // which will make them part of the analyzedFiles.\n            var /** @type {?} */ externalReferences = ngModuleMeta.transitiveModule.directives.map(function (d) { return d.reference; }).concat(ngModuleMeta.transitiveModule.pipes.map(function (d) { return d.reference; }), ngModuleMeta.importedModules.map(function (m) { return m.type.reference; }), ngModuleMeta.exportedModules.map(function (m) { return m.type.reference; }));\n            var /** @type {?} */ externalReferenceVars = new Map();\n            externalReferences.forEach(function (ref, typeIndex) {\n                if (_this._host.isSourceFile(ref.filePath)) {\n                    externalReferenceVars.set(ref, \"_decl\" + ngModuleIndex + \"_\" + typeIndex);\n                }\n            });\n            externalReferenceVars.forEach(function (varName, reference) {\n                outputCtx.statements.push(variable(varName)\n                    .set(NULL_EXPR.cast(DYNAMIC_TYPE))\n                    .toDeclStmt(expressionType(outputCtx.importExpr(reference))));\n            });\n            if (emitFlags & StubEmitFlags.TypeCheck) {\n                // add the typecheck block for all components of the NgModule\n                ngModuleMeta.declaredDirectives.forEach(function (dirId) {\n                    var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(dirId.reference);\n                    if (!compMeta.isComponent) {\n                        return;\n                    }\n                    componentId++;\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_Host_\" + componentId, ngModuleMeta, _this._metadataResolver.getHostComponentMetadata(compMeta), [compMeta.type], externalReferenceVars);\n                    _this._createTypeCheckBlock(outputCtx, compMeta.type.reference.name + \"_\" + componentId, ngModuleMeta, compMeta, ngModuleMeta.transitiveModule.directives, externalReferenceVars);\n                });\n            }\n        });\n        if (outputCtx.statements.length === 0) {\n            _createEmptyStub(outputCtx);\n        }\n    };\n    /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    AotCompiler.prototype._createTypeCheckBlock = /**\n     * @param {?} ctx\n     * @param {?} componentId\n     * @param {?} moduleMeta\n     * @param {?} compMeta\n     * @param {?} directives\n     * @param {?} externalReferenceVars\n     * @return {?}\n     */\n    function (ctx, componentId, moduleMeta, compMeta, directives, externalReferenceVars) {\n        var _a = this._parseTemplate(compMeta, moduleMeta, directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        (_b = ctx.statements).push.apply(_b, this._typeCheckCompiler.compileComponent(componentId, compMeta, parsedTemplate, usedPipes, externalReferenceVars));\n        var _b;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    AotCompiler.prototype.emitMessageBundle = /**\n     * @param {?} analyzeResult\n     * @param {?} locale\n     * @return {?}\n     */\n    function (analyzeResult, locale) {\n        var _this = this;\n        var /** @type {?} */ errors = [];\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        analyzeResult.files.forEach(function (file) {\n            var /** @type {?} */ compMetas = [];\n            file.directives.forEach(function (directiveType) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(directiveType);\n                if (dirMeta && dirMeta.isComponent) {\n                    compMetas.push(dirMeta);\n                }\n            });\n            compMetas.forEach(function (compMeta) {\n                var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                errors.push.apply(errors, /** @type {?} */ ((messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n            });\n        });\n        if (errors.length) {\n            throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n        }\n        return messageBundle;\n    };\n    /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    AotCompiler.prototype.emitAllImpls = /**\n     * @param {?} analyzeResult\n     * @return {?}\n     */\n    function (analyzeResult) {\n        var _this = this;\n        var ngModuleByPipeOrDirective = analyzeResult.ngModuleByPipeOrDirective, files = analyzeResult.files;\n        var /** @type {?} */ sourceModules = files.map(function (file) {\n            return _this._compileImplFile(file.fileName, ngModuleByPipeOrDirective, file.directives, file.pipes, file.ngModules, file.injectables);\n        });\n        return flatten$1(sourceModules);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    AotCompiler.prototype._compileImplFile = /**\n     * @param {?} srcFileUrl\n     * @param {?} ngModuleByPipeOrDirective\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @return {?}\n     */\n    function (srcFileUrl, ngModuleByPipeOrDirective, directives, pipes, ngModules, injectables) {\n        var _this = this;\n        var /** @type {?} */ fileSuffix = splitTypescriptSuffix(srcFileUrl, true)[1];\n        var /** @type {?} */ generatedFiles = [];\n        var /** @type {?} */ outputCtx = this._createOutputContext(ngfactoryFilePath(srcFileUrl, true));\n        generatedFiles.push.apply(generatedFiles, this._createSummary(srcFileUrl, directives, pipes, ngModules, injectables, outputCtx));\n        // compile all ng modules\n        ngModules.forEach(function (ngModuleMeta) { return _this._compileModule(outputCtx, ngModuleMeta); });\n        // compile components\n        directives.forEach(function (dirType) {\n            var /** @type {?} */ compMeta = _this._metadataResolver.getDirectiveMetadata(/** @type {?} */ (dirType));\n            if (!compMeta.isComponent) {\n                return;\n            }\n            var /** @type {?} */ ngModule = ngModuleByPipeOrDirective.get(dirType);\n            if (!ngModule) {\n                throw new Error(\"Internal Error: cannot determine the module for component \" + identifierName(compMeta.type) + \"!\");\n            }\n            // compile styles\n            var /** @type {?} */ componentStylesheet = _this._styleCompiler.compileComponent(outputCtx, compMeta); /** @type {?} */\n            ((\n            // Note: compMeta is a component and therefore template is non null.\n            compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n                // Note: fill non shim and shim style files as they might\n                // be shared by component with and without ViewEncapsulation.\n                var /** @type {?} */ shim = _this._styleCompiler.needsStyleShim(compMeta);\n                generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, shim, fileSuffix));\n                if (_this._options.allowEmptyCodegenFiles) {\n                    generatedFiles.push(_this._codegenStyles(srcFileUrl, compMeta, stylesheetMeta, !shim, fileSuffix));\n                }\n            });\n            // compile components\n            var /** @type {?} */ compViewVars = _this._compileComponent(outputCtx, compMeta, ngModule, ngModule.transitiveModule.directives, componentStylesheet, fileSuffix);\n            _this._compileComponentFactory(outputCtx, compMeta, ngModule, fileSuffix);\n        });\n        if (outputCtx.statements.length > 0 || this._options.allowEmptyCodegenFiles) {\n            var /** @type {?} */ srcModule = this._codegenSourceModule(srcFileUrl, outputCtx);\n            generatedFiles.unshift(srcModule);\n        }\n        return generatedFiles;\n    };\n    /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    AotCompiler.prototype._createSummary = /**\n     * @param {?} srcFileName\n     * @param {?} directives\n     * @param {?} pipes\n     * @param {?} ngModules\n     * @param {?} injectables\n     * @param {?} ngFactoryCtx\n     * @return {?}\n     */\n    function (srcFileName, directives, pipes, ngModules, injectables, ngFactoryCtx) {\n        var _this = this;\n        var /** @type {?} */ symbolSummaries = this._symbolResolver.getSymbolsOf(srcFileName)\n            .map(function (symbol) { return _this._symbolResolver.resolveSymbol(symbol); });\n        var /** @type {?} */ typeData = ngModules.map(function (meta) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getNgModuleSummary(meta.type.reference))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(meta.type.reference)))\n            });\n        }).concat(directives.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getDirectiveSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getDirectiveMetadata(ref)))\n            });\n        }), pipes.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getPipeSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getPipeMetadata(ref)))\n            });\n        }), injectables.map(function (ref) {\n            return ({\n                summary: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))),\n                metadata: /** @type {?} */ ((_this._metadataResolver.getInjectableSummary(ref))).type\n            });\n        }));\n        var /** @type {?} */ forJitOutputCtx = this._options.enableSummariesForJit ?\n            this._createOutputContext(summaryForJitFileName(srcFileName, true)) :\n            null;\n        var _a = serializeSummaries(srcFileName, forJitOutputCtx, this._summaryResolver, this._symbolResolver, symbolSummaries, typeData), json = _a.json, exportAs = _a.exportAs;\n        exportAs.forEach(function (entry) {\n            ngFactoryCtx.statements.push(variable(entry.exportAs).set(ngFactoryCtx.importExpr(entry.symbol)).toDeclStmt(null, [\n                StmtModifier.Exported\n            ]));\n        });\n        var /** @type {?} */ summaryJson = new GeneratedFile(srcFileName, summaryFileName(srcFileName), json);\n        var /** @type {?} */ result = [summaryJson];\n        if (forJitOutputCtx) {\n            result.push(this._codegenSourceModule(srcFileName, forJitOutputCtx));\n        }\n        return result;\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    AotCompiler.prototype._compileModule = /**\n     * @param {?} outputCtx\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (outputCtx, ngModule) {\n        var /** @type {?} */ providers = [];\n        if (this._options.locale) {\n            var /** @type {?} */ normalizedLocale = this._options.locale.replace(/_/g, '-');\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.LOCALE_ID),\n                useValue: normalizedLocale,\n            });\n        }\n        if (this._options.i18nFormat) {\n            providers.push({\n                token: createTokenForExternalReference(this._reflector, Identifiers.TRANSLATIONS_FORMAT),\n                useValue: this._options.i18nFormat\n            });\n        }\n        this._ngModuleCompiler.compile(outputCtx, ngModule, providers);\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponentFactory = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, fileSuffix) {\n        var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta);\n        var /** @type {?} */ hostViewFactoryVar = this._compileComponent(outputCtx, hostMeta, ngModule, [compMeta.type], null, fileSuffix)\n            .viewClassVar;\n        var /** @type {?} */ compFactoryVar = componentFactoryName(compMeta.type.reference);\n        var /** @type {?} */ inputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.inputs) {\n            var /** @type {?} */ templateName = compMeta.inputs[propName];\n            // Don't quote so that the key gets minified...\n            inputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        var /** @type {?} */ outputsExprs = [];\n        for (var /** @type {?} */ propName in compMeta.outputs) {\n            var /** @type {?} */ templateName = compMeta.outputs[propName];\n            // Don't quote so that the key gets minified...\n            outputsExprs.push(new LiteralMapEntry(propName, literal(templateName), false));\n        }\n        outputCtx.statements.push(variable(compFactoryVar)\n            .set(importExpr(Identifiers.createComponentFactory).callFn([\n            literal(compMeta.selector), outputCtx.importExpr(compMeta.type.reference),\n            variable(hostViewFactoryVar), new LiteralMapExpr(inputsExprs),\n            new LiteralMapExpr(outputsExprs),\n            literalArr(/** @type {?} */ ((compMeta.template)).ngContentSelectors.map(function (selector) { return literal(selector); }))\n        ]))\n            .toDeclStmt(importType(Identifiers.ComponentFactory, [/** @type {?} */ ((expressionType(outputCtx.importExpr(compMeta.type.reference))))], [TypeModifier.Const]), [StmtModifier.Final, StmtModifier.Exported]));\n    };\n    /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._compileComponent = /**\n     * @param {?} outputCtx\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @param {?} componentStyles\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (outputCtx, compMeta, ngModule, directiveIdentifiers, componentStyles, fileSuffix) {\n        var _a = this._parseTemplate(compMeta, ngModule, directiveIdentifiers), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ stylesExpr = componentStyles ? variable(componentStyles.stylesVar) : literalArr([]);\n        var /** @type {?} */ viewResult = this._viewCompiler.compileComponent(outputCtx, compMeta, parsedTemplate, stylesExpr, usedPipes);\n        if (componentStyles) {\n            _resolveStyleStatements(this._symbolResolver, componentStyles, this._styleCompiler.needsStyleShim(compMeta), fileSuffix);\n        }\n        return viewResult;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    AotCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        if (this._templateAstCache.has(compMeta.type.reference)) {\n            return /** @type {?} */ ((this._templateAstCache.get(compMeta.type.reference)));\n        }\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((/** @type {?} */ ((compMeta)).template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var /** @type {?} */ result = this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n        this._templateAstCache.set(compMeta.type.reference, result);\n        return result;\n    };\n    /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._createOutputContext = /**\n     * @param {?} genFilePath\n     * @return {?}\n     */\n    function (genFilePath) {\n        var _this = this;\n        var /** @type {?} */ importExpr$$1 = function (symbol, typeParams) {\n            if (typeParams === void 0) { typeParams = null; }\n            if (!(symbol instanceof StaticSymbol)) {\n                throw new Error(\"Internal error: unknown identifier \" + JSON.stringify(symbol));\n            }\n            var /** @type {?} */ arity = _this._symbolResolver.getTypeArity(symbol) || 0;\n            var _a = _this._symbolResolver.getImportAs(symbol) || symbol, filePath = _a.filePath, name = _a.name, members = _a.members;\n            var /** @type {?} */ importModule = _this._fileNameToModuleName(filePath, genFilePath);\n            // It should be good enough to compare filePath to genFilePath and if they are equal\n            // there is a self reference. However, ngfactory files generate to .ts but their\n            // symbols have .d.ts so a simple compare is insufficient. They should be canonical\n            // and is tracked by #17705.\n            var /** @type {?} */ selfReference = _this._fileNameToModuleName(genFilePath, genFilePath);\n            var /** @type {?} */ moduleName = importModule === selfReference ? null : importModule;\n            // If we are in a type expression that refers to a generic type then supply\n            // the required type parameters. If there were not enough type parameters\n            // supplied, supply any as the type. Outside a type expression the reference\n            // should not supply type parameters and be treated as a simple value reference\n            // to the constructor function itself.\n            var /** @type {?} */ suppliedTypeParams = typeParams || [];\n            var /** @type {?} */ missingTypeParamsCount = arity - suppliedTypeParams.length;\n            var /** @type {?} */ allTypeParams = suppliedTypeParams.concat(new Array(missingTypeParamsCount).fill(DYNAMIC_TYPE));\n            return members.reduce(function (expr, memberName) { return expr.prop(memberName); }, /** @type {?} */ (importExpr(new ExternalReference(moduleName, name, null), allTypeParams)));\n        };\n        return { statements: [], genFilePath: genFilePath, importExpr: importExpr$$1 };\n    };\n    /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    AotCompiler.prototype._fileNameToModuleName = /**\n     * @param {?} importedFilePath\n     * @param {?} containingFilePath\n     * @return {?}\n     */\n    function (importedFilePath, containingFilePath) {\n        return this._summaryResolver.getKnownModuleName(importedFilePath) ||\n            this._symbolResolver.getKnownModuleName(importedFilePath) ||\n            this._host.fileNameToModuleName(importedFilePath, containingFilePath);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenStyles = /**\n     * @param {?} srcFileUrl\n     * @param {?} compMeta\n     * @param {?} stylesheetMetadata\n     * @param {?} isShimmed\n     * @param {?} fileSuffix\n     * @return {?}\n     */\n    function (srcFileUrl, compMeta, stylesheetMetadata, isShimmed, fileSuffix) {\n        var /** @type {?} */ outputCtx = this._createOutputContext(_stylesModuleUrl(/** @type {?} */ ((stylesheetMetadata.moduleUrl)), isShimmed, fileSuffix));\n        var /** @type {?} */ compiledStylesheet = this._styleCompiler.compileStyles(outputCtx, compMeta, stylesheetMetadata, isShimmed);\n        _resolveStyleStatements(this._symbolResolver, compiledStylesheet, isShimmed, fileSuffix);\n        return this._codegenSourceModule(srcFileUrl, outputCtx);\n    };\n    /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    AotCompiler.prototype._codegenSourceModule = /**\n     * @param {?} srcFileUrl\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (srcFileUrl, ctx) {\n        return new GeneratedFile(srcFileUrl, ctx.genFilePath, ctx.statements);\n    };\n    /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    AotCompiler.prototype.listLazyRoutes = /**\n     * @param {?=} entryRoute\n     * @param {?=} analyzedModules\n     * @return {?}\n     */\n    function (entryRoute, analyzedModules) {\n        var /** @type {?} */ self = this;\n        if (entryRoute) {\n            var /** @type {?} */ symbol = parseLazyRoute(entryRoute, this._reflector).referencedModule;\n            return visitLazyRoute(symbol);\n        }\n        else if (analyzedModules) {\n            var /** @type {?} */ allLazyRoutes = [];\n            for (var _i = 0, _a = analyzedModules.ngModules; _i < _a.length; _i++) {\n                var ngModule = _a[_i];\n                var /** @type {?} */ lazyRoutes = listLazyRoutes(ngModule, this._reflector);\n                for (var _b = 0, lazyRoutes_1 = lazyRoutes; _b < lazyRoutes_1.length; _b++) {\n                    var lazyRoute = lazyRoutes_1[_b];\n                    allLazyRoutes.push(lazyRoute);\n                }\n            }\n            return allLazyRoutes;\n        }\n        else {\n            throw new Error(\"Either route or analyzedModules has to be specified!\");\n        }\n        /**\n         * @param {?} symbol\n         * @param {?=} seenRoutes\n         * @param {?=} allLazyRoutes\n         * @return {?}\n         */\n        function visitLazyRoute(symbol, seenRoutes, allLazyRoutes) {\n            if (seenRoutes === void 0) { seenRoutes = new Set(); }\n            if (allLazyRoutes === void 0) { allLazyRoutes = []; }\n            // Support pointing to default exports, but stop recursing there,\n            // as the StaticReflector does not yet support default exports.\n            if (seenRoutes.has(symbol) || !symbol.name) {\n                return allLazyRoutes;\n            }\n            seenRoutes.add(symbol);\n            var /** @type {?} */ lazyRoutes = listLazyRoutes(/** @type {?} */ ((self._metadataResolver.getNgModuleMetadata(symbol, true))), self._reflector);\n            for (var _i = 0, lazyRoutes_2 = lazyRoutes; _i < lazyRoutes_2.length; _i++) {\n                var lazyRoute = lazyRoutes_2[_i];\n                allLazyRoutes.push(lazyRoute);\n                visitLazyRoute(lazyRoute.referencedModule, seenRoutes, allLazyRoutes);\n            }\n            return allLazyRoutes;\n        }\n    };\n    return AotCompiler;\n}());\n/**\n * @param {?} outputCtx\n * @return {?}\n */\nfunction _createEmptyStub(outputCtx) {\n    // Note: We need to produce at least one import statement so that\n    // TypeScript knows that the file is an es6 module. Otherwise our generated\n    // exports / imports won't be emitted properly by TypeScript.\n    outputCtx.statements.push(importExpr(Identifiers.ComponentFactory).toStmt());\n}\n/**\n * @param {?} symbolResolver\n * @param {?} compileResult\n * @param {?} needsShim\n * @param {?} fileSuffix\n * @return {?}\n */\nfunction _resolveStyleStatements(symbolResolver, compileResult, needsShim, fileSuffix) {\n    compileResult.dependencies.forEach(function (dep) {\n        dep.setValue(symbolResolver.getStaticSymbol(_stylesModuleUrl(dep.moduleUrl, needsShim, fileSuffix), dep.name));\n    });\n}\n/**\n * @param {?} stylesheetUrl\n * @param {?} shim\n * @param {?} suffix\n * @return {?}\n */\nfunction _stylesModuleUrl(stylesheetUrl, shim, suffix) {\n    return \"\" + stylesheetUrl + (shim ? '.shim' : '') + \".ngstyle\" + suffix;\n}\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ files = _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver);\n    return mergeAnalyzedFiles(files);\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction analyzeAndValidateNgModules(fileNames, host, staticSymbolResolver, metadataResolver) {\n    return validateAnalyzedModules(analyzeNgModules(fileNames, host, staticSymbolResolver, metadataResolver));\n}\n/**\n * @param {?} analyzedModules\n * @return {?}\n */\nfunction validateAnalyzedModules(analyzedModules) {\n    if (analyzedModules.symbolsMissingModule && analyzedModules.symbolsMissingModule.length) {\n        var /** @type {?} */ messages = analyzedModules.symbolsMissingModule.map(function (s) {\n            return \"Cannot determine the module for class \" + s.name + \" in \" + s.filePath + \"! Add \" + s.name + \" to the NgModule to fix it.\";\n        });\n        throw syntaxError(messages.join('\\n'));\n    }\n    return analyzedModules;\n}\n/**\n * @param {?} fileNames\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @return {?}\n */\nfunction _analyzeFilesIncludingNonProgramFiles(fileNames, host, staticSymbolResolver, metadataResolver) {\n    var /** @type {?} */ seenFiles = new Set();\n    var /** @type {?} */ files = [];\n    var /** @type {?} */ visitFile = function (fileName) {\n        if (seenFiles.has(fileName) || !host.isSourceFile(fileName)) {\n            return false;\n        }\n        seenFiles.add(fileName);\n        var /** @type {?} */ analyzedFile = analyzeFile(host, staticSymbolResolver, metadataResolver, fileName);\n        files.push(analyzedFile);\n        analyzedFile.ngModules.forEach(function (ngModule) {\n            ngModule.transitiveModule.modules.forEach(function (modMeta) { return visitFile(modMeta.reference.filePath); });\n        });\n    };\n    fileNames.forEach(function (fileName) { return visitFile(fileName); });\n    return files;\n}\n/**\n * @param {?} host\n * @param {?} staticSymbolResolver\n * @param {?} metadataResolver\n * @param {?} fileName\n * @return {?}\n */\nfunction analyzeFile(host, staticSymbolResolver, metadataResolver, fileName) {\n    var /** @type {?} */ directives = [];\n    var /** @type {?} */ pipes = [];\n    var /** @type {?} */ injectables = [];\n    var /** @type {?} */ ngModules = [];\n    var /** @type {?} */ hasDecorators = staticSymbolResolver.hasDecorators(fileName);\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    // Don't analyze .d.ts files that have no decorators as a shortcut\n    // to speed up the analysis. This prevents us from\n    // resolving the references in these files.\n    // Note: exportsNonSourceFiles is only needed when compiling with summaries,\n    // which is not the case when .d.ts files are treated as input files.\n    if (!fileName.endsWith('.d.ts') || hasDecorators) {\n        staticSymbolResolver.getSymbolsOf(fileName).forEach(function (symbol) {\n            var /** @type {?} */ resolvedSymbol = staticSymbolResolver.resolveSymbol(symbol);\n            var /** @type {?} */ symbolMeta = resolvedSymbol.metadata;\n            if (!symbolMeta || symbolMeta.__symbolic === 'error') {\n                return;\n            }\n            var /** @type {?} */ isNgSymbol = false;\n            if (symbolMeta.__symbolic === 'class') {\n                if (metadataResolver.isDirective(symbol)) {\n                    isNgSymbol = true;\n                    directives.push(symbol);\n                }\n                else if (metadataResolver.isPipe(symbol)) {\n                    isNgSymbol = true;\n                    pipes.push(symbol);\n                }\n                else if (metadataResolver.isInjectable(symbol)) {\n                    isNgSymbol = true;\n                    injectables.push(symbol);\n                }\n                else {\n                    var /** @type {?} */ ngModule = metadataResolver.getNgModuleMetadata(symbol, false);\n                    if (ngModule) {\n                        isNgSymbol = true;\n                        ngModules.push(ngModule);\n                    }\n                }\n            }\n            if (!isNgSymbol) {\n                exportsNonSourceFiles =\n                    exportsNonSourceFiles || isValueExportingNonSourceFile(host, symbolMeta);\n            }\n        });\n    }\n    return {\n        fileName: fileName, directives: directives, pipes: pipes, ngModules: ngModules, injectables: injectables, exportsNonSourceFiles: exportsNonSourceFiles,\n    };\n}\n/**\n * @param {?} host\n * @param {?} metadata\n * @return {?}\n */\nfunction isValueExportingNonSourceFile(host, metadata) {\n    var /** @type {?} */ exportsNonSourceFiles = false;\n    var Visitor = (function () {\n        function Visitor() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitArray = /**\n         * @param {?} arr\n         * @param {?} context\n         * @return {?}\n         */\n        function (arr, context) {\n            var _this = this;\n            arr.forEach(function (v) { return visitValue(v, _this, context); });\n        };\n        /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitStringMap = /**\n         * @param {?} map\n         * @param {?} context\n         * @return {?}\n         */\n        function (map, context) {\n            var _this = this;\n            Object.keys(map).forEach(function (key) { return visitValue(map[key], _this, context); });\n        };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitPrimitive = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) { };\n        /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        Visitor.prototype.visitOther = /**\n         * @param {?} value\n         * @param {?} context\n         * @return {?}\n         */\n        function (value, context) {\n            if (value instanceof StaticSymbol && !host.isSourceFile(value.filePath)) {\n                exportsNonSourceFiles = true;\n            }\n        };\n        return Visitor;\n    }());\n    visitValue(metadata, new Visitor(), null);\n    return exportsNonSourceFiles;\n}\n/**\n * @param {?} analyzedFiles\n * @return {?}\n */\nfunction mergeAnalyzedFiles(analyzedFiles) {\n    var /** @type {?} */ allNgModules = [];\n    var /** @type {?} */ ngModuleByPipeOrDirective = new Map();\n    var /** @type {?} */ allPipesAndDirectives = new Set();\n    analyzedFiles.forEach(function (af) {\n        af.ngModules.forEach(function (ngModule) {\n            allNgModules.push(ngModule);\n            ngModule.declaredDirectives.forEach(function (d) { return ngModuleByPipeOrDirective.set(d.reference, ngModule); });\n            ngModule.declaredPipes.forEach(function (p) { return ngModuleByPipeOrDirective.set(p.reference, ngModule); });\n        });\n        af.directives.forEach(function (d) { return allPipesAndDirectives.add(d); });\n        af.pipes.forEach(function (p) { return allPipesAndDirectives.add(p); });\n    });\n    var /** @type {?} */ symbolsMissingModule = [];\n    allPipesAndDirectives.forEach(function (ref) {\n        if (!ngModuleByPipeOrDirective.has(ref)) {\n            symbolsMissingModule.push(ref);\n        }\n    });\n    return {\n        ngModules: allNgModules,\n        ngModuleByPipeOrDirective: ngModuleByPipeOrDirective,\n        symbolsMissingModule: symbolsMissingModule,\n        files: analyzedFiles\n    };\n}\n/**\n * @param {?} files\n * @return {?}\n */\nfunction mergeAndValidateNgFiles(files) {\n    return validateAnalyzedModules(mergeAnalyzedFiles(files));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANGULAR_CORE = '@angular/core';\nvar ANGULAR_ROUTER = '@angular/router';\nvar HIDDEN_KEY = /^\\$.*\\$$/;\nvar IGNORE = {\n    __symbolic: 'ignore'\n};\nvar USE_VALUE = 'useValue';\nvar PROVIDE = 'provide';\nvar REFERENCE_SET = new Set([USE_VALUE, 'useFactory', 'data']);\n/**\n * @param {?} value\n * @return {?}\n */\nfunction shouldIgnore(value) {\n    return value && value.__symbolic == 'ignore';\n}\n/**\n * A static reflector implements enough of the Reflector API that is necessary to compile\n * templates statically.\n */\nvar StaticReflector = (function () {\n    function StaticReflector(summaryResolver, symbolResolver, knownMetadataClasses, knownMetadataFunctions, errorRecorder) {\n        if (knownMetadataClasses === void 0) { knownMetadataClasses = []; }\n        if (knownMetadataFunctions === void 0) { knownMetadataFunctions = []; }\n        var _this = this;\n        this.summaryResolver = summaryResolver;\n        this.symbolResolver = symbolResolver;\n        this.errorRecorder = errorRecorder;\n        this.annotationCache = new Map();\n        this.propertyCache = new Map();\n        this.parameterCache = new Map();\n        this.methodCache = new Map();\n        this.conversionMap = new Map();\n        this.annotationForParentClassWithSummaryKind = new Map();\n        this.initializeConversionMap();\n        knownMetadataClasses.forEach(function (kc) {\n            return _this._registerDecoratorOrConstructor(_this.getStaticSymbol(kc.filePath, kc.name), kc.ctor);\n        });\n        knownMetadataFunctions.forEach(function (kf) { return _this._registerFunction(_this.getStaticSymbol(kf.filePath, kf.name), kf.fn); });\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Directive, [createDirective, createComponent]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Pipe, [createPipe]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.NgModule, [createNgModule]);\n        this.annotationForParentClassWithSummaryKind.set(CompileSummaryKind.Injectable, [createInjectable, createPipe, createDirective, createComponent, createNgModule]);\n    }\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    StaticReflector.prototype.componentModuleUrl = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        var /** @type {?} */ staticSymbol = this.findSymbolDeclaration(typeOrFunc);\n        return this.symbolResolver.getResourcePath(staticSymbol);\n    };\n    /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.resolveExternalReference = /**\n     * @param {?} ref\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (ref, containingFile) {\n        var /** @type {?} */ refSymbol = this.symbolResolver.getSymbolByModule(/** @type {?} */ ((ref.moduleName)), /** @type {?} */ ((ref.name)), containingFile);\n        var /** @type {?} */ declarationSymbol = this.findSymbolDeclaration(refSymbol);\n        if (!containingFile) {\n            this.symbolResolver.recordModuleNameForFileName(refSymbol.filePath, /** @type {?} */ ((ref.moduleName)));\n            this.symbolResolver.recordImportAs(declarationSymbol, refSymbol);\n        }\n        return declarationSymbol;\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticReflector.prototype.findDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (moduleUrl, name, containingFile) {\n        return this.findSymbolDeclaration(this.symbolResolver.getSymbolByModule(moduleUrl, name, containingFile));\n    };\n    /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    StaticReflector.prototype.tryFindDeclaration = /**\n     * @param {?} moduleUrl\n     * @param {?} name\n     * @return {?}\n     */\n    function (moduleUrl, name) {\n        var _this = this;\n        return this.symbolResolver.ignoreErrorsFor(function () { return _this.findDeclaration(moduleUrl, name); });\n    };\n    /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    StaticReflector.prototype.findSymbolDeclaration = /**\n     * @param {?} symbol\n     * @return {?}\n     */\n    function (symbol) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(symbol);\n        if (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            return this.findSymbolDeclaration(resolvedSymbol.metadata);\n        }\n        else {\n            return symbol;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.annotations = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ annotations = this.annotationCache.get(type);\n        if (!annotations) {\n            annotations = [];\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentAnnotations = this.annotations(parentType);\n                annotations.push.apply(annotations, parentAnnotations);\n            }\n            var /** @type {?} */ ownAnnotations_1 = [];\n            if (classMetadata['decorators']) {\n                ownAnnotations_1 = this.simplify(type, classMetadata['decorators']);\n                annotations.push.apply(annotations, ownAnnotations_1);\n            }\n            if (parentType && !this.summaryResolver.isLibraryFile(type.filePath) &&\n                this.summaryResolver.isLibraryFile(parentType.filePath)) {\n                var /** @type {?} */ summary = this.summaryResolver.resolveSummary(parentType);\n                if (summary && summary.type) {\n                    var /** @type {?} */ requiredAnnotationTypes = /** @type {?} */ ((this.annotationForParentClassWithSummaryKind.get(/** @type {?} */ ((summary.type.summaryKind)))));\n                    var /** @type {?} */ typeHasRequiredAnnotation = requiredAnnotationTypes.some(function (requiredType) { return ownAnnotations_1.some(function (ann) { return requiredType.isTypeOf(ann); }); });\n                    if (!typeHasRequiredAnnotation) {\n                        this.reportError(syntaxError(\"Class \" + type.name + \" in \" + type.filePath + \" extends from a \" + CompileSummaryKind[(/** @type {?} */ ((summary.type.summaryKind)))] + \" in another compilation unit without duplicating the decorator. \" +\n                            (\"Please add a \" + requiredAnnotationTypes.map(function (type) { return type.ngMetadataName; }).join(' or ') + \" decorator to the class.\")), type);\n                    }\n                }\n            }\n            this.annotationCache.set(type, annotations.filter(function (ann) { return !!ann; }));\n        }\n        return annotations;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.propMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        var /** @type {?} */ propMetadata = this.propertyCache.get(type);\n        if (!propMetadata) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            propMetadata = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentType);\n                Object.keys(parentPropMetadata_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((propMetadata))[parentProp] = parentPropMetadata_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_1 = classMetadata['members'] || {};\n            Object.keys(members_1).forEach(function (propName) {\n                var /** @type {?} */ propData = members_1[propName];\n                var /** @type {?} */ prop = (/** @type {?} */ (propData))\n                    .find(function (a) { return a['__symbolic'] == 'property' || a['__symbolic'] == 'method'; });\n                var /** @type {?} */ decorators = [];\n                if (/** @type {?} */ ((propMetadata))[propName]) {\n                    decorators.push.apply(decorators, /** @type {?} */ ((propMetadata))[propName]);\n                } /** @type {?} */\n                ((propMetadata))[propName] = decorators;\n                if (prop && prop['decorators']) {\n                    decorators.push.apply(decorators, _this.simplify(type, prop['decorators']));\n                }\n            });\n            this.propertyCache.set(type, propMetadata);\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var _this = this;\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"parameters received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n            return [];\n        }\n        try {\n            var /** @type {?} */ parameters_1 = this.parameterCache.get(type);\n            if (!parameters_1) {\n                var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n                var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n                var /** @type {?} */ members = classMetadata ? classMetadata['members'] : null;\n                var /** @type {?} */ ctorData = members ? members['__ctor__'] : null;\n                if (ctorData) {\n                    var /** @type {?} */ ctor = (/** @type {?} */ (ctorData)).find(function (a) { return a['__symbolic'] == 'constructor'; });\n                    var /** @type {?} */ rawParameterTypes = /** @type {?} */ (ctor['parameters']) || [];\n                    var /** @type {?} */ parameterDecorators_1 = /** @type {?} */ (this.simplify(type, ctor['parameterDecorators'] || []));\n                    parameters_1 = [];\n                    rawParameterTypes.forEach(function (rawParamType, index) {\n                        var /** @type {?} */ nestedResult = [];\n                        var /** @type {?} */ paramType = _this.trySimplify(type, rawParamType);\n                        if (paramType)\n                            nestedResult.push(paramType);\n                        var /** @type {?} */ decorators = parameterDecorators_1 ? parameterDecorators_1[index] : null;\n                        if (decorators) {\n                            nestedResult.push.apply(nestedResult, decorators);\n                        } /** @type {?} */\n                        ((parameters_1)).push(nestedResult);\n                    });\n                }\n                else if (parentType) {\n                    parameters_1 = this.parameters(parentType);\n                }\n                if (!parameters_1) {\n                    parameters_1 = [];\n                }\n                this.parameterCache.set(type, parameters_1);\n            }\n            return parameters_1;\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype._methodNames = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ methodNames = this.methodCache.get(type);\n        if (!methodNames) {\n            var /** @type {?} */ classMetadata = this.getTypeMetadata(type);\n            methodNames = {};\n            var /** @type {?} */ parentType = this.findParentType(type, classMetadata);\n            if (parentType) {\n                var /** @type {?} */ parentMethodNames_1 = this._methodNames(parentType);\n                Object.keys(parentMethodNames_1).forEach(function (parentProp) {\n                    /** @type {?} */ ((methodNames))[parentProp] = parentMethodNames_1[parentProp];\n                });\n            }\n            var /** @type {?} */ members_2 = classMetadata['members'] || {};\n            Object.keys(members_2).forEach(function (propName) {\n                var /** @type {?} */ propData = members_2[propName];\n                var /** @type {?} */ isMethod = (/** @type {?} */ (propData)).some(function (a) { return a['__symbolic'] == 'method'; }); /** @type {?} */\n                ((methodNames))[propName] = /** @type {?} */ ((methodNames))[propName] || isMethod;\n            });\n            this.methodCache.set(type, methodNames);\n        }\n        return methodNames;\n    };\n    /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    StaticReflector.prototype.findParentType = /**\n     * @param {?} type\n     * @param {?} classMetadata\n     * @return {?}\n     */\n    function (type, classMetadata) {\n        var /** @type {?} */ parentType = this.trySimplify(type, classMetadata['extends']);\n        if (parentType instanceof StaticSymbol) {\n            return parentType;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    StaticReflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        if (!(type instanceof StaticSymbol)) {\n            this.reportError(new Error(\"hasLifecycleHook received \" + JSON.stringify(type) + \" which is not a StaticSymbol\"), type);\n        }\n        try {\n            return !!this._methodNames(type)[lcProperty];\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Failed on type \" + JSON.stringify(type) + \" with error \" + e);\n            throw e;\n        }\n    };\n    /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    StaticReflector.prototype._registerDecoratorOrConstructor = /**\n     * @param {?} type\n     * @param {?} ctor\n     * @return {?}\n     */\n    function (type, ctor) {\n        this.conversionMap.set(type, function (context, args) { return new (ctor.bind.apply(ctor, [void 0].concat(args)))(); });\n    };\n    /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    StaticReflector.prototype._registerFunction = /**\n     * @param {?} type\n     * @param {?} fn\n     * @return {?}\n     */\n    function (type, fn) {\n        this.conversionMap.set(type, function (context, args) { return fn.apply(undefined, args); });\n    };\n    /**\n     * @return {?}\n     */\n    StaticReflector.prototype.initializeConversionMap = /**\n     * @return {?}\n     */\n    function () {\n        this.injectionToken = this.findDeclaration(ANGULAR_CORE, 'InjectionToken');\n        this.opaqueToken = this.findDeclaration(ANGULAR_CORE, 'OpaqueToken');\n        this.ROUTES = this.tryFindDeclaration(ANGULAR_ROUTER, 'ROUTES');\n        this.ANALYZE_FOR_ENTRY_COMPONENTS =\n            this.findDeclaration(ANGULAR_CORE, 'ANALYZE_FOR_ENTRY_COMPONENTS');\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Injectable'), createInjectable);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Inject'), createInject);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Attribute'), createAttribute);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChild'), createContentChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ContentChildren'), createContentChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChild'), createViewChild);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'ViewChildren'), createViewChildren);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Input'), createInput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Output'), createOutput);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Pipe'), createPipe);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostBinding'), createHostBinding);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'HostListener'), createHostListener);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Directive'), createDirective);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Component'), createComponent);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'NgModule'), createNgModule);\n        // Note: Some metadata classes can be used directly with Provider.deps.\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Host'), createHost);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Self'), createSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'SkipSelf'), createSkipSelf);\n        this._registerDecoratorOrConstructor(this.findDeclaration(ANGULAR_CORE, 'Optional'), createOptional);\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    StaticReflector.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.symbolResolver.getStaticSymbol(declarationFile, name, members);\n    };\n    /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticReflector.prototype.reportError = /**\n     * @param {?} error\n     * @param {?} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.trySimplify = /**\n     * Simplify but discard any errors\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var /** @type {?} */ originalRecorder = this.errorRecorder;\n        this.errorRecorder = function (error, fileName) { };\n        var /** @type {?} */ result = this.simplify(context, value);\n        this.errorRecorder = originalRecorder;\n        return result;\n    };\n    /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    StaticReflector.prototype.simplify = /**\n     * \\@internal\n     * @param {?} context\n     * @param {?} value\n     * @return {?}\n     */\n    function (context, value) {\n        var _this = this;\n        var /** @type {?} */ self = this;\n        var /** @type {?} */ scope = BindingScope.empty;\n        var /** @type {?} */ calling = new Map();\n        /**\n         * @param {?} context\n         * @param {?} value\n         * @param {?} depth\n         * @param {?} references\n         * @return {?}\n         */\n        function simplifyInContext(context, value, depth, references) {\n            /**\n             * @param {?} staticSymbol\n             * @return {?}\n             */\n            function resolveReferenceValue(staticSymbol) {\n                var /** @type {?} */ resolvedSymbol = self.symbolResolver.resolveSymbol(staticSymbol);\n                return resolvedSymbol ? resolvedSymbol.metadata : null;\n            }\n            /**\n             * @param {?} functionSymbol\n             * @param {?} targetFunction\n             * @param {?} args\n             * @return {?}\n             */\n            function simplifyCall(functionSymbol, targetFunction, args) {\n                if (targetFunction && targetFunction['__symbolic'] == 'function') {\n                    if (calling.get(functionSymbol)) {\n                        throw new Error('Recursion not supported');\n                    }\n                    try {\n                        var /** @type {?} */ value_1 = targetFunction['value'];\n                        if (value_1 && (depth != 0 || value_1.__symbolic != 'error')) {\n                            var /** @type {?} */ parameters = targetFunction['parameters'];\n                            var /** @type {?} */ defaults = targetFunction.defaults;\n                            args = args.map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                            if (defaults && defaults.length > args.length) {\n                                args.push.apply(args, defaults.slice(args.length).map(function (value) { return simplify(value); }));\n                            }\n                            calling.set(functionSymbol, true);\n                            var /** @type {?} */ functionScope = BindingScope.build();\n                            for (var /** @type {?} */ i = 0; i < parameters.length; i++) {\n                                functionScope.define(parameters[i], args[i]);\n                            }\n                            var /** @type {?} */ oldScope = scope;\n                            var /** @type {?} */ result_1;\n                            try {\n                                scope = functionScope.done();\n                                result_1 = simplifyInContext(functionSymbol, value_1, depth + 1, references);\n                            }\n                            finally {\n                                scope = oldScope;\n                            }\n                            return result_1;\n                        }\n                    }\n                    finally {\n                        calling.delete(functionSymbol);\n                    }\n                }\n                if (depth === 0) {\n                    // If depth is 0 we are evaluating the top level expression that is describing element\n                    // decorator. In this case, it is a decorator we don't understand, such as a custom\n                    // non-angular decorator, and we should just ignore it.\n                    return IGNORE;\n                }\n                return simplify({ __symbolic: 'error', message: 'Function call not supported', context: functionSymbol });\n            }\n            /**\n             * @param {?} expression\n             * @return {?}\n             */\n            function simplify(expression) {\n                if (isPrimitive(expression)) {\n                    return expression;\n                }\n                if (expression instanceof Array) {\n                    var /** @type {?} */ result_2 = [];\n                    for (var _i = 0, _a = (/** @type {?} */ (expression)); _i < _a.length; _i++) {\n                        var item = _a[_i];\n                        // Check for a spread expression\n                        if (item && item.__symbolic === 'spread') {\n                            // We call with references as 0 because we require the actual value and cannot\n                            // tolerate a reference here.\n                            var /** @type {?} */ spreadArray = simplifyInContext(context, item.expression, depth, 0);\n                            if (Array.isArray(spreadArray)) {\n                                for (var _b = 0, spreadArray_1 = spreadArray; _b < spreadArray_1.length; _b++) {\n                                    var spreadItem = spreadArray_1[_b];\n                                    result_2.push(spreadItem);\n                                }\n                                continue;\n                            }\n                        }\n                        var /** @type {?} */ value_2 = simplify(item);\n                        if (shouldIgnore(value_2)) {\n                            continue;\n                        }\n                        result_2.push(value_2);\n                    }\n                    return result_2;\n                }\n                if (expression instanceof StaticSymbol) {\n                    // Stop simplification at builtin symbols or if we are in a reference context and\n                    // the symbol doesn't have members.\n                    if (expression === self.injectionToken || self.conversionMap.has(expression) ||\n                        (references > 0 && !expression.members.length)) {\n                        return expression;\n                    }\n                    else {\n                        var /** @type {?} */ staticSymbol = expression;\n                        var /** @type {?} */ declarationValue = resolveReferenceValue(staticSymbol);\n                        if (declarationValue != null) {\n                            return simplifyInContext(staticSymbol, declarationValue, depth + 1, references);\n                        }\n                        else {\n                            return staticSymbol;\n                        }\n                    }\n                }\n                if (expression) {\n                    if (expression['__symbolic']) {\n                        var /** @type {?} */ staticSymbol = void 0;\n                        switch (expression['__symbolic']) {\n                            case 'binop':\n                                var /** @type {?} */ left = simplify(expression['left']);\n                                if (shouldIgnore(left))\n                                    return left;\n                                var /** @type {?} */ right = simplify(expression['right']);\n                                if (shouldIgnore(right))\n                                    return right;\n                                switch (expression['operator']) {\n                                    case '&&':\n                                        return left && right;\n                                    case '||':\n                                        return left || right;\n                                    case '|':\n                                        return left | right;\n                                    case '^':\n                                        return left ^ right;\n                                    case '&':\n                                        return left & right;\n                                    case '==':\n                                        return left == right;\n                                    case '!=':\n                                        return left != right;\n                                    case '===':\n                                        return left === right;\n                                    case '!==':\n                                        return left !== right;\n                                    case '<':\n                                        return left < right;\n                                    case '>':\n                                        return left > right;\n                                    case '<=':\n                                        return left <= right;\n                                    case '>=':\n                                        return left >= right;\n                                    case '<<':\n                                        return left << right;\n                                    case '>>':\n                                        return left >> right;\n                                    case '+':\n                                        return left + right;\n                                    case '-':\n                                        return left - right;\n                                    case '*':\n                                        return left * right;\n                                    case '/':\n                                        return left / right;\n                                    case '%':\n                                        return left % right;\n                                }\n                                return null;\n                            case 'if':\n                                var /** @type {?} */ condition = simplify(expression['condition']);\n                                return condition ? simplify(expression['thenExpression']) :\n                                    simplify(expression['elseExpression']);\n                            case 'pre':\n                                var /** @type {?} */ operand = simplify(expression['operand']);\n                                if (shouldIgnore(operand))\n                                    return operand;\n                                switch (expression['operator']) {\n                                    case '+':\n                                        return operand;\n                                    case '-':\n                                        return -operand;\n                                    case '!':\n                                        return !operand;\n                                    case '~':\n                                        return ~operand;\n                                }\n                                return null;\n                            case 'index':\n                                var /** @type {?} */ indexTarget = simplifyInContext(context, expression['expression'], depth, 0);\n                                var /** @type {?} */ index = simplifyInContext(context, expression['index'], depth, 0);\n                                if (indexTarget && isPrimitive(index))\n                                    return indexTarget[index];\n                                return null;\n                            case 'select':\n                                var /** @type {?} */ member = expression['member'];\n                                var /** @type {?} */ selectContext = context;\n                                var /** @type {?} */ selectTarget = simplify(expression['expression']);\n                                if (selectTarget instanceof StaticSymbol) {\n                                    var /** @type {?} */ members = selectTarget.members.concat(member);\n                                    selectContext =\n                                        self.getStaticSymbol(selectTarget.filePath, selectTarget.name, members);\n                                    var /** @type {?} */ declarationValue = resolveReferenceValue(selectContext);\n                                    if (declarationValue != null) {\n                                        return simplifyInContext(selectContext, declarationValue, depth + 1, references);\n                                    }\n                                    else {\n                                        return selectContext;\n                                    }\n                                }\n                                if (selectTarget && isPrimitive(member))\n                                    return simplifyInContext(selectContext, selectTarget[member], depth + 1, references);\n                                return null;\n                            case 'reference':\n                                // Note: This only has to deal with variable references,\n                                // as symbol references have been converted into StaticSymbols already\n                                // in the StaticSymbolResolver!\n                                var /** @type {?} */ name_1 = expression['name'];\n                                var /** @type {?} */ localValue = scope.resolve(name_1);\n                                if (localValue != BindingScope.missing) {\n                                    return localValue;\n                                }\n                                break;\n                            case 'class':\n                                return context;\n                            case 'function':\n                                return context;\n                            case 'new':\n                            case 'call':\n                                // Determine if the function is a built-in conversion\n                                staticSymbol = simplifyInContext(context, expression['expression'], depth + 1, /* references */ 0);\n                                if (staticSymbol instanceof StaticSymbol) {\n                                    if (staticSymbol === self.injectionToken || staticSymbol === self.opaqueToken) {\n                                        // if somebody calls new InjectionToken, don't create an InjectionToken,\n                                        // but rather return the symbol to which the InjectionToken is assigned to.\n                                        // OpaqueToken is supported too as it is required by the language service to\n                                        // support v4 and prior versions of Angular.\n                                        return context;\n                                    }\n                                    var /** @type {?} */ argExpressions = expression['arguments'] || [];\n                                    var /** @type {?} */ converter = self.conversionMap.get(staticSymbol);\n                                    if (converter) {\n                                        var /** @type {?} */ args = argExpressions\n                                            .map(function (arg) { return simplifyInContext(context, arg, depth + 1, references); })\n                                            .map(function (arg) { return shouldIgnore(arg) ? undefined : arg; });\n                                        return converter(context, args);\n                                    }\n                                    else {\n                                        // Determine if the function is one we can simplify.\n                                        var /** @type {?} */ targetFunction = resolveReferenceValue(staticSymbol);\n                                        return simplifyCall(staticSymbol, targetFunction, argExpressions);\n                                    }\n                                }\n                                return IGNORE;\n                            case 'error':\n                                var /** @type {?} */ message = produceErrorMessage(expression);\n                                if (expression['line']) {\n                                    message =\n                                        message + \" (position \" + (expression['line'] + 1) + \":\" + (expression['character'] + 1) + \" in the original .ts file)\";\n                                    self.reportError(positionalError(message, context.filePath, expression['line'], expression['character']), context);\n                                }\n                                else {\n                                    self.reportError(new Error(message), context);\n                                }\n                                return IGNORE;\n                            case 'ignore':\n                                return expression;\n                        }\n                        return null;\n                    }\n                    return mapStringMap(expression, function (value, name) {\n                        if (REFERENCE_SET.has(name)) {\n                            if (name === USE_VALUE && PROVIDE in expression) {\n                                // If this is a provider expression, check for special tokens that need the value\n                                // during analysis.\n                                var /** @type {?} */ provide = simplify(expression.provide);\n                                if (provide === self.ROUTES || provide == self.ANALYZE_FOR_ENTRY_COMPONENTS) {\n                                    return simplify(value);\n                                }\n                            }\n                            return simplifyInContext(context, value, depth, references + 1);\n                        }\n                        return simplify(value);\n                    });\n                }\n                return IGNORE;\n            }\n            try {\n                return simplify(value);\n            }\n            catch (/** @type {?} */ e) {\n                var /** @type {?} */ members = context.members.length ? \".\" + context.members.join('.') : '';\n                var /** @type {?} */ message = e.message + \", resolving symbol \" + context.name + members + \" in \" + context.filePath;\n                if (e.fileName) {\n                    throw positionalError(message, e.fileName, e.line, e.column);\n                }\n                throw syntaxError(message);\n            }\n        }\n        var /** @type {?} */ recordedSimplifyInContext = function (context, value) {\n            try {\n                return simplifyInContext(context, value, 0, 0);\n            }\n            catch (/** @type {?} */ e) {\n                _this.reportError(e, context);\n            }\n        };\n        var /** @type {?} */ result = this.errorRecorder ? recordedSimplifyInContext(context, value) :\n            simplifyInContext(context, value, 0, 0);\n        if (shouldIgnore(result)) {\n            return undefined;\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    StaticReflector.prototype.getTypeMetadata = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        var /** @type {?} */ resolvedSymbol = this.symbolResolver.resolveSymbol(type);\n        return resolvedSymbol && resolvedSymbol.metadata ? resolvedSymbol.metadata :\n            { __symbolic: 'class' };\n    };\n    return StaticReflector;\n}());\n/**\n * @param {?} error\n * @return {?}\n */\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var /** @type {?} */ prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n            break;\n    }\n    return error.message;\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction produceErrorMessage(error) {\n    return \"Error encountered resolving symbol values statically. \" + expandedMessage(error);\n}\n/**\n * @param {?} input\n * @param {?} transform\n * @return {?}\n */\nfunction mapStringMap(input, transform) {\n    if (!input)\n        return {};\n    var /** @type {?} */ result = {};\n    Object.keys(input).forEach(function (key) {\n        var /** @type {?} */ value = transform(input[key], key);\n        if (!shouldIgnore(value)) {\n            if (HIDDEN_KEY.test(key)) {\n                Object.defineProperty(result, key, { enumerable: false, configurable: true, value: value });\n            }\n            else {\n                result[key] = value;\n            }\n        }\n    });\n    return result;\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\n/**\n * @abstract\n */\nvar BindingScope = (function () {\n    function BindingScope() {\n    }\n    /**\n     * @return {?}\n     */\n    BindingScope.build = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ current = new Map();\n        return {\n            define: function (name, value) {\n                current.set(name, value);\n                return this;\n            },\n            done: function () {\n                return current.size > 0 ? new PopulatedScope(current) : BindingScope.empty;\n            }\n        };\n    };\n    BindingScope.missing = {};\n    BindingScope.empty = { resolve: function (name) { return BindingScope.missing; } };\n    return BindingScope;\n}());\nvar PopulatedScope = (function (_super) {\n    __extends(PopulatedScope, _super);\n    function PopulatedScope(bindings) {\n        var _this = _super.call(this) || this;\n        _this.bindings = bindings;\n        return _this;\n    }\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    PopulatedScope.prototype.resolve = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return this.bindings.has(name) ? this.bindings.get(name) : BindingScope.missing;\n    };\n    return PopulatedScope;\n}(BindingScope));\n/**\n * @param {?} message\n * @param {?} fileName\n * @param {?} line\n * @param {?} column\n * @return {?}\n */\nfunction positionalError(message, fileName, line, column) {\n    var /** @type {?} */ result = syntaxError(message);\n    (/** @type {?} */ (result)).fileName = fileName;\n    (/** @type {?} */ (result)).line = line;\n    (/** @type {?} */ (result)).column = column;\n    return result;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar ResolvedStaticSymbol = (function () {\n    function ResolvedStaticSymbol(symbol, metadata) {\n        this.symbol = symbol;\n        this.metadata = metadata;\n    }\n    return ResolvedStaticSymbol;\n}());\n/**\n * The host of the SymbolResolverHost disconnects the implementation from TypeScript / other\n * language\n * services and from underlying file systems.\n * @record\n */\n\nvar SUPPORTED_SCHEMA_VERSION = 4;\n/**\n * This class is responsible for loading metadata per symbol,\n * and normalizing references between symbols.\n *\n * Internally, it only uses symbols without members,\n * and deduces the values for symbols with members based\n * on these symbols.\n */\nvar StaticSymbolResolver = (function () {\n    function StaticSymbolResolver(host, staticSymbolCache, summaryResolver, errorRecorder) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryResolver = summaryResolver;\n        this.errorRecorder = errorRecorder;\n        this.metadataCache = new Map();\n        this.resolvedSymbols = new Map();\n        this.resolvedFilePaths = new Set();\n        this.importAs = new Map();\n        this.symbolResourcePaths = new Map();\n        this.symbolFromFile = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveSymbol = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length > 0) {\n            return /** @type {?} */ ((this._resolveSymbolMembers(staticSymbol)));\n        }\n        // Note: always ask for a summary first,\n        // as we might have read shallow metadata via a .d.ts file\n        // for the symbol.\n        var /** @type {?} */ resultFromSummary = /** @type {?} */ ((this._resolveSymbolFromSummary(staticSymbol)));\n        if (resultFromSummary) {\n            return resultFromSummary;\n        }\n        var /** @type {?} */ resultFromCache = this.resolvedSymbols.get(staticSymbol);\n        if (resultFromCache) {\n            return resultFromCache;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files. So we always need to check both, the summary\n        // and metadata.\n        this._createSymbolsOf(staticSymbol.filePath);\n        return /** @type {?} */ ((this.resolvedSymbols.get(staticSymbol)));\n    };\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param staticSymbol the symbol for which to generate a import symbol\n     */\n    /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getImportAs = /**\n     * getImportAs produces a symbol that can be used to import the given symbol.\n     * The import might be different than the symbol if the symbol is exported from\n     * a library with a summary; in which case we want to import the symbol from the\n     * ngfactory re-export instead of directly to avoid introducing a direct dependency\n     * on an otherwise indirect dependency.\n     *\n     * @param {?} staticSymbol the symbol for which to generate a import symbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        if (staticSymbol.members.length) {\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(baseImportAs.filePath, baseImportAs.name, staticSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ summarizedFileName = stripSummaryForJitFileSuffix(staticSymbol.filePath);\n        if (summarizedFileName !== staticSymbol.filePath) {\n            var /** @type {?} */ summarizedName = stripSummaryForJitNameSuffix(staticSymbol.name);\n            var /** @type {?} */ baseSymbol = this.getStaticSymbol(summarizedFileName, summarizedName, staticSymbol.members);\n            var /** @type {?} */ baseImportAs = this.getImportAs(baseSymbol);\n            return baseImportAs ?\n                this.getStaticSymbol(summaryForJitFileName(baseImportAs.filePath), summaryForJitName(baseImportAs.name), baseSymbol.members) :\n                null;\n        }\n        var /** @type {?} */ result = this.summaryResolver.getImportAs(staticSymbol);\n        if (!result) {\n            result = /** @type {?} */ ((this.importAs.get(staticSymbol)));\n        }\n        return result;\n    };\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     */\n    /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getResourcePath = /**\n     * getResourcePath produces the path to the original location of the symbol and should\n     * be used to determine the relative location of resource references recorded in\n     * symbol metadata.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        return this.symbolResourcePaths.get(staticSymbol) || staticSymbol.filePath;\n    };\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     */\n    /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getTypeArity = /**\n     * getTypeArity returns the number of generic type parameters the given symbol\n     * has. If the symbol is not a type the result is null.\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        // If the file is a factory/ngsummary file, don't resolve the symbol as doing so would\n        // cause the metadata for an factory/ngsummary file to be loaded which doesn't exist.\n        // All references to generated classes must include the correct arity whenever\n        // generating code.\n        if (isGeneratedFile(staticSymbol.filePath)) {\n            return null;\n        }\n        var /** @type {?} */ resolvedSymbol = this.resolveSymbol(staticSymbol);\n        while (resolvedSymbol && resolvedSymbol.metadata instanceof StaticSymbol) {\n            resolvedSymbol = this.resolveSymbol(resolvedSymbol.metadata);\n        }\n        return (resolvedSymbol && resolvedSymbol.metadata && resolvedSymbol.metadata.arity) || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getKnownModuleName = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        return this.knownFileNameToModuleNames.get(filePath) || null;\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordImportAs = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        this.importAs.set(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.recordModuleNameForFileName = /**\n     * @param {?} fileName\n     * @param {?} moduleName\n     * @return {?}\n     */\n    function (fileName, moduleName) {\n        this.knownFileNameToModuleNames.set(fileName, moduleName);\n    };\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param fileName the file to invalidate\n     */\n    /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.invalidateFile = /**\n     * Invalidate all information derived from the given file.\n     *\n     * @param {?} fileName the file to invalidate\n     * @return {?}\n     */\n    function (fileName) {\n        this.metadataCache.delete(fileName);\n        this.resolvedFilePaths.delete(fileName);\n        var /** @type {?} */ symbols = this.symbolFromFile.get(fileName);\n        if (symbols) {\n            this.symbolFromFile.delete(fileName);\n            for (var _i = 0, symbols_1 = symbols; _i < symbols_1.length; _i++) {\n                var symbol = symbols_1[_i];\n                this.resolvedSymbols.delete(symbol);\n                this.importAs.delete(symbol);\n                this.symbolResourcePaths.delete(symbol);\n            }\n        }\n    };\n    /* @internal */\n    /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.ignoreErrorsFor = /**\n     * @template T\n     * @param {?} cb\n     * @return {?}\n     */\n    function (cb) {\n        var /** @type {?} */ recorder = this.errorRecorder;\n        this.errorRecorder = function () { };\n        try {\n            return cb();\n        }\n        finally {\n            this.errorRecorder = recorder;\n        }\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolMembers = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ members = staticSymbol.members;\n        var /** @type {?} */ baseResolvedSymbol = this.resolveSymbol(this.getStaticSymbol(staticSymbol.filePath, staticSymbol.name));\n        if (!baseResolvedSymbol) {\n            return null;\n        }\n        var /** @type {?} */ baseMetadata = baseResolvedSymbol.metadata;\n        if (baseMetadata instanceof StaticSymbol) {\n            return new ResolvedStaticSymbol(staticSymbol, this.getStaticSymbol(baseMetadata.filePath, baseMetadata.name, members));\n        }\n        else if (baseMetadata && baseMetadata.__symbolic === 'class') {\n            if (baseMetadata.statics && members.length === 1) {\n                return new ResolvedStaticSymbol(staticSymbol, baseMetadata.statics[members[0]]);\n            }\n        }\n        else {\n            var /** @type {?} */ value = baseMetadata;\n            for (var /** @type {?} */ i = 0; i < members.length && value; i++) {\n                value = value[members[i]];\n            }\n            return new ResolvedStaticSymbol(staticSymbol, value);\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._resolveSymbolFromSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        var /** @type {?} */ summary = this.summaryResolver.resolveSummary(staticSymbol);\n        return summary ? new ResolvedStaticSymbol(staticSymbol, summary.metadata) : null;\n    };\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param declarationFile the absolute path of the file where the symbol is declared\n     * @param name the name of the type.\n     * @param members a symbol for a static member of the named type\n     */\n    /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getStaticSymbol = /**\n     * getStaticSymbol produces a Type whose metadata is known but whose implementation is not loaded.\n     * All types passed to the StaticResolver should be pseudo-types returned by this method.\n     *\n     * @param {?} declarationFile the absolute path of the file where the symbol is declared\n     * @param {?} name the name of the type.\n     * @param {?=} members a symbol for a static member of the named type\n     * @return {?}\n     */\n    function (declarationFile, name, members) {\n        return this.staticSymbolCache.get(declarationFile, name, members);\n    };\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param filePath the absolute path to examine for decorators.\n     * @returns true if any class in the file has a decorator.\n     */\n    /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    StaticSymbolResolver.prototype.hasDecorators = /**\n     * hasDecorators checks a file's metadata for the presense of decorators without evalutating the\n     * metadata.\n     *\n     * @param {?} filePath the absolute path to examine for decorators.\n     * @return {?} true if any class in the file has a decorator.\n     */\n    function (filePath) {\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['metadata']) {\n            return Object.keys(metadata['metadata']).some(function (metadataKey) {\n                var /** @type {?} */ entry = metadata['metadata'][metadataKey];\n                return entry && entry.__symbolic === 'class' && entry.decorators;\n            });\n        }\n        return false;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var /** @type {?} */ summarySymbols = this.summaryResolver.getSymbolsOf(filePath);\n        if (summarySymbols) {\n            return summarySymbols;\n        }\n        // Note: Some users use libraries that were not compiled with ngc, i.e. they don't\n        // have summaries, only .d.ts files, but `summaryResolver.isLibraryFile` returns true.\n        this._createSymbolsOf(filePath);\n        var /** @type {?} */ metadataSymbols = [];\n        this.resolvedSymbols.forEach(function (resolvedSymbol) {\n            if (resolvedSymbol.symbol.filePath === filePath) {\n                metadataSymbols.push(resolvedSymbol.symbol);\n            }\n        });\n        return metadataSymbols;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype._createSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        if (this.resolvedFilePaths.has(filePath)) {\n            return;\n        }\n        this.resolvedFilePaths.add(filePath);\n        var /** @type {?} */ resolvedSymbols = [];\n        var /** @type {?} */ metadata = this.getModuleMetadata(filePath);\n        if (metadata['importAs']) {\n            // Index bundle indices should use the importAs module name defined\n            // in the bundle.\n            this.knownFileNameToModuleNames.set(filePath, metadata['importAs']);\n        }\n        // handle the symbols in one of the re-export location\n        if (metadata['exports']) {\n            var _loop_1 = function (moduleExport) {\n                // handle the symbols in the list of explicitly re-exported symbols.\n                if (moduleExport.export) {\n                    moduleExport.export.forEach(function (exportSymbol) {\n                        var /** @type {?} */ symbolName;\n                        if (typeof exportSymbol === 'string') {\n                            symbolName = exportSymbol;\n                        }\n                        else {\n                            symbolName = exportSymbol.as;\n                        }\n                        symbolName = unescapeIdentifier(symbolName);\n                        var /** @type {?} */ symName = symbolName;\n                        if (typeof exportSymbol !== 'string') {\n                            symName = unescapeIdentifier(exportSymbol.name);\n                        }\n                        var /** @type {?} */ resolvedModule = _this.resolveModule(moduleExport.from, filePath);\n                        if (resolvedModule) {\n                            var /** @type {?} */ targetSymbol = _this.getStaticSymbol(resolvedModule, symName);\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, symbolName);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        }\n                    });\n                }\n                else {\n                    // handle the symbols via export * directives.\n                    var /** @type {?} */ resolvedModule = this_1.resolveModule(moduleExport.from, filePath);\n                    if (resolvedModule) {\n                        var /** @type {?} */ nestedExports = this_1.getSymbolsOf(resolvedModule);\n                        nestedExports.forEach(function (targetSymbol) {\n                            var /** @type {?} */ sourceSymbol = _this.getStaticSymbol(filePath, targetSymbol.name);\n                            resolvedSymbols.push(_this.createExport(sourceSymbol, targetSymbol));\n                        });\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var _i = 0, _a = metadata['exports']; _i < _a.length; _i++) {\n                var moduleExport = _a[_i];\n                _loop_1(moduleExport);\n            }\n        }\n        // handle the actual metadata. Has to be after the exports\n        // as there migth be collisions in the names, and we want the symbols\n        // of the current module to win ofter reexports.\n        if (metadata['metadata']) {\n            // handle direct declarations of the symbol\n            var /** @type {?} */ topLevelSymbolNames_1 = new Set(Object.keys(metadata['metadata']).map(unescapeIdentifier));\n            var /** @type {?} */ origins_1 = metadata['origins'] || {};\n            Object.keys(metadata['metadata']).forEach(function (metadataKey) {\n                var /** @type {?} */ symbolMeta = metadata['metadata'][metadataKey];\n                var /** @type {?} */ name = unescapeIdentifier(metadataKey);\n                var /** @type {?} */ symbol = _this.getStaticSymbol(filePath, name);\n                var /** @type {?} */ origin = origins_1.hasOwnProperty(metadataKey) && origins_1[metadataKey];\n                if (origin) {\n                    // If the symbol is from a bundled index, use the declaration location of the\n                    // symbol so relative references (such as './my.html') will be calculated\n                    // correctly.\n                    var /** @type {?} */ originFilePath = _this.resolveModule(origin, filePath);\n                    if (!originFilePath) {\n                        _this.reportError(new Error(\"Couldn't resolve original symbol for \" + origin + \" from \" + filePath));\n                    }\n                    else {\n                        _this.symbolResourcePaths.set(symbol, originFilePath);\n                    }\n                }\n                resolvedSymbols.push(_this.createResolvedSymbol(symbol, filePath, topLevelSymbolNames_1, symbolMeta));\n            });\n        }\n        resolvedSymbols.forEach(function (resolvedSymbol) { return _this.resolvedSymbols.set(resolvedSymbol.symbol, resolvedSymbol); });\n        this.symbolFromFile.set(filePath, resolvedSymbols.map(function (resolvedSymbol) { return resolvedSymbol.symbol; }));\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createResolvedSymbol = /**\n     * @param {?} sourceSymbol\n     * @param {?} topLevelPath\n     * @param {?} topLevelSymbolNames\n     * @param {?} metadata\n     * @return {?}\n     */\n    function (sourceSymbol, topLevelPath, topLevelSymbolNames, metadata) {\n        // For classes that don't have Angular summaries / metadata,\n        // we only keep their arity, but nothing else\n        // (e.g. their constructor parameters).\n        // We do this to prevent introducing deep imports\n        // as we didn't generate .ngfactory.ts files with proper reexports.\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) && metadata &&\n            metadata['__symbolic'] === 'class') {\n            var /** @type {?} */ transformedMeta_1 = { __symbolic: 'class', arity: metadata.arity };\n            return new ResolvedStaticSymbol(sourceSymbol, transformedMeta_1);\n        }\n        var /** @type {?} */ self = this;\n        var ReferenceTransformer = (function (_super) {\n            __extends(ReferenceTransformer, _super);\n            function ReferenceTransformer() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            ReferenceTransformer.prototype.visitStringMap = /**\n             * @param {?} map\n             * @param {?} functionParams\n             * @return {?}\n             */\n            function (map, functionParams) {\n                var /** @type {?} */ symbolic = map['__symbolic'];\n                if (symbolic === 'function') {\n                    var /** @type {?} */ oldLen = functionParams.length;\n                    functionParams.push.apply(functionParams, (map['parameters'] || []));\n                    var /** @type {?} */ result = _super.prototype.visitStringMap.call(this, map, functionParams);\n                    functionParams.length = oldLen;\n                    return result;\n                }\n                else if (symbolic === 'reference') {\n                    var /** @type {?} */ module = map['module'];\n                    var /** @type {?} */ name_1 = map['name'] ? unescapeIdentifier(map['name']) : map['name'];\n                    if (!name_1) {\n                        return null;\n                    }\n                    var /** @type {?} */ filePath = void 0;\n                    if (module) {\n                        filePath = /** @type {?} */ ((self.resolveModule(module, sourceSymbol.filePath)));\n                        if (!filePath) {\n                            return {\n                                __symbolic: 'error',\n                                message: \"Could not resolve \" + module + \" relative to \" + sourceSymbol.filePath + \".\"\n                            };\n                        }\n                        return self.getStaticSymbol(filePath, name_1);\n                    }\n                    else if (functionParams.indexOf(name_1) >= 0) {\n                        // reference to a function parameter\n                        return { __symbolic: 'reference', name: name_1 };\n                    }\n                    else {\n                        if (topLevelSymbolNames.has(name_1)) {\n                            return self.getStaticSymbol(topLevelPath, name_1);\n                        }\n                        // ambient value\n                        null;\n                    }\n                }\n                else {\n                    return _super.prototype.visitStringMap.call(this, map, functionParams);\n                }\n            };\n            return ReferenceTransformer;\n        }(ValueTransformer));\n        var /** @type {?} */ transformedMeta = visitValue(metadata, new ReferenceTransformer(), []);\n        if (transformedMeta instanceof StaticSymbol) {\n            return this.createExport(sourceSymbol, transformedMeta);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, transformedMeta);\n    };\n    /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.createExport = /**\n     * @param {?} sourceSymbol\n     * @param {?} targetSymbol\n     * @return {?}\n     */\n    function (sourceSymbol, targetSymbol) {\n        sourceSymbol.assertNoMembers();\n        targetSymbol.assertNoMembers();\n        if (this.summaryResolver.isLibraryFile(sourceSymbol.filePath) &&\n            this.summaryResolver.isLibraryFile(targetSymbol.filePath)) {\n            // This case is for an ng library importing symbols from a plain ts library\n            // transitively.\n            // Note: We rely on the fact that we discover symbols in the direction\n            // from source files to library files\n            this.importAs.set(targetSymbol, this.getImportAs(sourceSymbol) || sourceSymbol);\n        }\n        return new ResolvedStaticSymbol(sourceSymbol, targetSymbol);\n    };\n    /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.reportError = /**\n     * @param {?} error\n     * @param {?=} context\n     * @param {?=} path\n     * @return {?}\n     */\n    function (error, context, path$$1) {\n        if (this.errorRecorder) {\n            this.errorRecorder(error, (context && context.filePath) || path$$1);\n        }\n        else {\n            throw error;\n        }\n    };\n    /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getModuleMetadata = /**\n     * @param {?} module an absolute path to a module file.\n     * @return {?}\n     */\n    function (module) {\n        var /** @type {?} */ moduleMetadata = this.metadataCache.get(module);\n        if (!moduleMetadata) {\n            var /** @type {?} */ moduleMetadatas = this.host.getMetadataFor(module);\n            if (moduleMetadatas) {\n                var /** @type {?} */ maxVersion_1 = -1;\n                moduleMetadatas.forEach(function (md) {\n                    if (md['version'] > maxVersion_1) {\n                        maxVersion_1 = md['version'];\n                        moduleMetadata = md;\n                    }\n                });\n            }\n            if (!moduleMetadata) {\n                moduleMetadata =\n                    { __symbolic: 'module', version: SUPPORTED_SCHEMA_VERSION, module: module, metadata: {} };\n            }\n            if (moduleMetadata['version'] != SUPPORTED_SCHEMA_VERSION) {\n                var /** @type {?} */ errorMessage = moduleMetadata['version'] == 2 ?\n                    \"Unsupported metadata version \" + moduleMetadata['version'] + \" for module \" + module + \". This module should be compiled with a newer version of ngc\" :\n                    \"Metadata version mismatch for module \" + module + \", found version \" + moduleMetadata['version'] + \", expected \" + SUPPORTED_SCHEMA_VERSION;\n                this.reportError(new Error(errorMessage));\n            }\n            this.metadataCache.set(module, moduleMetadata);\n        }\n        return moduleMetadata;\n    };\n    /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.getSymbolByModule = /**\n     * @param {?} module\n     * @param {?} symbolName\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, symbolName, containingFile) {\n        var /** @type {?} */ filePath = this.resolveModule(module, containingFile);\n        if (!filePath) {\n            this.reportError(new Error(\"Could not resolve module \" + module + (containingFile ? ' relative to ' +\n                containingFile : '')));\n            return this.getStaticSymbol(\"ERROR:\" + module, symbolName);\n        }\n        return this.getStaticSymbol(filePath, symbolName);\n    };\n    /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    StaticSymbolResolver.prototype.resolveModule = /**\n     * @param {?} module\n     * @param {?=} containingFile\n     * @return {?}\n     */\n    function (module, containingFile) {\n        try {\n            return this.host.moduleNameToFileName(module, containingFile);\n        }\n        catch (/** @type {?} */ e) {\n            console.error(\"Could not resolve module '\" + module + \"' relative to file \" + containingFile);\n            this.reportError(e, undefined, containingFile);\n        }\n        return null;\n    };\n    return StaticSymbolResolver;\n}());\n/**\n * @param {?} identifier\n * @return {?}\n */\nfunction unescapeIdentifier(identifier) {\n    return identifier.startsWith('___') ? identifier.substr(1) : identifier;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\nvar AotSummaryResolver = (function () {\n    function AotSummaryResolver(host, staticSymbolCache) {\n        this.host = host;\n        this.staticSymbolCache = staticSymbolCache;\n        this.summaryCache = new Map();\n        this.loadedFilePaths = new Map();\n        this.importAs = new Map();\n        this.knownFileNameToModuleNames = new Map();\n    }\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.isLibraryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        // Note: We need to strip the .ngfactory. file path,\n        // so this method also works for generated files\n        // (for which host.isSourceFile will always return false).\n        return !this.host.isSourceFile(stripGeneratedFileSuffix(filePath));\n    };\n    /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} filePath\n     * @param {?} referringSrcFileName\n     * @return {?}\n     */\n    function (filePath, referringSrcFileName) {\n        return this.host.toSummaryFileName(filePath, referringSrcFileName);\n    };\n    /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @param {?} referringLibFileName\n     * @return {?}\n     */\n    function (fileName, referringLibFileName) {\n        return this.host.fromSummaryFileName(fileName, referringLibFileName);\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        var /** @type {?} */ summary = this.summaryCache.get(staticSymbol);\n        if (!summary) {\n            this._loadSummaryFile(staticSymbol.filePath);\n            summary = /** @type {?} */ ((this.summaryCache.get(staticSymbol)));\n        }\n        return summary || null;\n    };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getSymbolsOf = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        if (this._loadSummaryFile(filePath)) {\n            return Array.from(this.summaryCache.keys()).filter(function (symbol) { return symbol.filePath === filePath; });\n        }\n        return null;\n    };\n    /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getImportAs = /**\n     * @param {?} staticSymbol\n     * @return {?}\n     */\n    function (staticSymbol) {\n        staticSymbol.assertNoMembers();\n        return /** @type {?} */ ((this.importAs.get(staticSymbol)));\n    };\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     */\n    /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.getKnownModuleName = /**\n     * Converts a file path to a module name that can be used as an `import`.\n     * @param {?} importedFilePath\n     * @return {?}\n     */\n    function (importedFilePath) {\n        return this.knownFileNameToModuleNames.get(importedFilePath) || null;\n    };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    AotSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this.summaryCache.set(summary.symbol, summary); };\n    /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    AotSummaryResolver.prototype._loadSummaryFile = /**\n     * @param {?} filePath\n     * @return {?}\n     */\n    function (filePath) {\n        var _this = this;\n        var /** @type {?} */ hasSummary = this.loadedFilePaths.get(filePath);\n        if (hasSummary != null) {\n            return hasSummary;\n        }\n        var /** @type {?} */ json = null;\n        if (this.isLibraryFile(filePath)) {\n            var /** @type {?} */ summaryFilePath = summaryFileName(filePath);\n            try {\n                json = this.host.loadSummary(summaryFilePath);\n            }\n            catch (/** @type {?} */ e) {\n                console.error(\"Error loading summary file \" + summaryFilePath);\n                throw e;\n            }\n        }\n        hasSummary = json != null;\n        this.loadedFilePaths.set(filePath, hasSummary);\n        if (json) {\n            var _a = deserializeSummaries(this.staticSymbolCache, this, filePath, json), moduleName = _a.moduleName, summaries = _a.summaries, importAs = _a.importAs;\n            summaries.forEach(function (summary) { return _this.summaryCache.set(summary.symbol, summary); });\n            if (moduleName) {\n                this.knownFileNameToModuleNames.set(filePath, moduleName);\n            }\n            importAs.forEach(function (importAs) { _this.importAs.set(importAs.symbol, importAs.importAs); });\n        }\n        return hasSummary;\n    };\n    return AotSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} host\n * @return {?}\n */\nfunction createAotUrlResolver(host) {\n    return {\n        resolve: function (basePath, url) {\n            var /** @type {?} */ filePath = host.resourceNameToFileName(url, basePath);\n            if (!filePath) {\n                throw syntaxError(\"Couldn't resolve resource \" + url + \" from \" + basePath);\n            }\n            return filePath;\n        }\n    };\n}\n/**\n * Creates a new AotCompiler based on options and a host.\n * @param {?} compilerHost\n * @param {?} options\n * @param {?=} errorCollector\n * @return {?}\n */\nfunction createAotCompiler(compilerHost, options, errorCollector) {\n    var /** @type {?} */ translations = options.translations || '';\n    var /** @type {?} */ urlResolver = createAotUrlResolver(compilerHost);\n    var /** @type {?} */ symbolCache = new StaticSymbolCache();\n    var /** @type {?} */ summaryResolver = new AotSummaryResolver(compilerHost, symbolCache);\n    var /** @type {?} */ symbolResolver = new StaticSymbolResolver(compilerHost, symbolCache, summaryResolver);\n    var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, symbolResolver, [], [], errorCollector);\n    var /** @type {?} */ htmlParser = new I18NHtmlParser(new HtmlParser(), translations, options.i18nFormat, options.missingTranslation, console);\n    var /** @type {?} */ config = new CompilerConfig({\n        defaultEncapsulation: ViewEncapsulation.Emulated,\n        useJit: false,\n        enableLegacyTemplate: options.enableLegacyTemplate === true,\n        missingTranslation: options.missingTranslation,\n        preserveWhitespaces: options.preserveWhitespaces,\n        strictInjectionParameters: options.strictInjectionParameters,\n    });\n    var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return compilerHost.loadResource(url); } }, urlResolver, htmlParser, config);\n    var /** @type {?} */ expressionParser = new Parser(new Lexer());\n    var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n    var /** @type {?} */ tmplParser = new TemplateParser(config, staticReflector, expressionParser, elementSchemaRegistry, htmlParser, console, []);\n    var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector, errorCollector);\n    // TODO(vicb): do not pass options.i18nFormat here\n    var /** @type {?} */ viewCompiler = new ViewCompiler(staticReflector);\n    var /** @type {?} */ typeCheckCompiler = new TypeCheckCompiler(options, staticReflector);\n    var /** @type {?} */ compiler = new AotCompiler(config, options, compilerHost, staticReflector, resolver, tmplParser, new StyleCompiler(urlResolver), viewCompiler, typeCheckCompiler, new NgModuleCompiler(staticReflector), new TypeScriptEmitter(), summaryResolver, symbolResolver);\n    return { compiler: compiler, reflector: staticReflector };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @record\n */\n\n/**\n * @abstract\n */\nvar SummaryResolver = (function () {\n    function SummaryResolver() {\n    }\n    return SummaryResolver;\n}());\nvar JitSummaryResolver = (function () {\n    function JitSummaryResolver() {\n        this._summaries = new Map();\n    }\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.isLibraryFile = /**\n     * @return {?}\n     */\n    function () { return false; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.toSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.fromSummaryFileName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return fileName; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.resolveSummary = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) {\n        return this._summaries.get(reference) || null;\n    };\n    /**\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getSymbolsOf = /**\n     * @return {?}\n     */\n    function () { return []; };\n    /**\n     * @param {?} reference\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getImportAs = /**\n     * @param {?} reference\n     * @return {?}\n     */\n    function (reference) { return reference; };\n    /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.getKnownModuleName = /**\n     * @param {?} fileName\n     * @return {?}\n     */\n    function (fileName) { return null; };\n    /**\n     * @param {?} summary\n     * @return {?}\n     */\n    JitSummaryResolver.prototype.addSummary = /**\n     * @param {?} summary\n     * @return {?}\n     */\n    function (summary) { this._summaries.set(summary.symbol, summary); };\n    return JitSummaryResolver;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} statements\n * @param {?} reflector\n * @return {?}\n */\nfunction interpretStatements(statements, reflector) {\n    var /** @type {?} */ ctx = new _ExecutionContext(null, null, null, new Map());\n    var /** @type {?} */ visitor = new StatementInterpreter(reflector);\n    visitor.visitAllStatements(statements, ctx);\n    var /** @type {?} */ result = {};\n    ctx.exports.forEach(function (exportName) { result[exportName] = ctx.vars.get(exportName); });\n    return result;\n}\n/**\n * @param {?} varNames\n * @param {?} varValues\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _executeFunctionStatements(varNames, varValues, statements, ctx, visitor) {\n    var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n    for (var /** @type {?} */ i = 0; i < varNames.length; i++) {\n        childCtx.vars.set(varNames[i], varValues[i]);\n    }\n    var /** @type {?} */ result = visitor.visitAllStatements(statements, childCtx);\n    return result ? result.value : null;\n}\nvar _ExecutionContext = (function () {\n    function _ExecutionContext(parent, instance, className, vars) {\n        this.parent = parent;\n        this.instance = instance;\n        this.className = className;\n        this.vars = vars;\n        this.exports = [];\n    }\n    /**\n     * @return {?}\n     */\n    _ExecutionContext.prototype.createChildWihtLocalVars = /**\n     * @return {?}\n     */\n    function () {\n        return new _ExecutionContext(this, this.instance, this.className, new Map());\n    };\n    return _ExecutionContext;\n}());\nvar ReturnValue = (function () {\n    function ReturnValue(value) {\n        this.value = value;\n    }\n    return ReturnValue;\n}());\n/**\n * @param {?} _classStmt\n * @param {?} _ctx\n * @param {?} _visitor\n * @return {?}\n */\nfunction createDynamicClass(_classStmt, _ctx, _visitor) {\n    var /** @type {?} */ propertyDescriptors = {};\n    _classStmt.getters.forEach(function (getter) {\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[getter.name] = {\n            configurable: false,\n            get: function () {\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements([], [], getter.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    _classStmt.methods.forEach(function (method) {\n        var /** @type {?} */ paramNames = method.params.map(function (param) { return param.name; });\n        // Note: use `function` instead of arrow function to capture `this`\n        propertyDescriptors[/** @type {?} */ ((method.name))] = {\n            writable: false,\n            configurable: false,\n            value: function () {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n                return _executeFunctionStatements(paramNames, args, method.body, instanceCtx, _visitor);\n            }\n        };\n    });\n    var /** @type {?} */ ctorParamNames = _classStmt.constructorMethod.params.map(function (param) { return param.name; });\n    // Note: use `function` instead of arrow function to capture `this`\n    var /** @type {?} */ ctor = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var /** @type {?} */ instanceCtx = new _ExecutionContext(_ctx, this, _classStmt.name, _ctx.vars);\n        _classStmt.fields.forEach(function (field) { _this[field.name] = undefined; });\n        _executeFunctionStatements(ctorParamNames, args, _classStmt.constructorMethod.body, instanceCtx, _visitor);\n    };\n    var /** @type {?} */ superClass = _classStmt.parent ? _classStmt.parent.visitExpression(_visitor, _ctx) : Object;\n    ctor.prototype = Object.create(superClass.prototype, propertyDescriptors);\n    return ctor;\n}\nvar StatementInterpreter = (function () {\n    function StatementInterpreter(reflector) {\n        this.reflector = reflector;\n    }\n    /**\n     * @param {?} ast\n     * @return {?}\n     */\n    StatementInterpreter.prototype.debugAst = /**\n     * @param {?} ast\n     * @return {?}\n     */\n    function (ast) { return debugOutputAstAsTypeScript(ast); };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.vars.set(stmt.name, stmt.value.visitExpression(this, ctx));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteVarExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(expr.name)) {\n                currCtx.vars.set(expr.name, value);\n                return value;\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + expr.name);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ varName = /** @type {?} */ ((ast.name));\n        if (ast.builtin != null) {\n            switch (ast.builtin) {\n                case BuiltinVar.Super:\n                    return ctx.instance.__proto__;\n                case BuiltinVar.This:\n                    return ctx.instance;\n                case BuiltinVar.CatchError:\n                    varName = CATCH_ERROR_VAR$2;\n                    break;\n                case BuiltinVar.CatchStack:\n                    varName = CATCH_STACK_VAR$2;\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin variable \" + ast.builtin);\n            }\n        }\n        var /** @type {?} */ currCtx = ctx;\n        while (currCtx != null) {\n            if (currCtx.vars.has(varName)) {\n                return currCtx.vars.get(varName);\n            }\n            currCtx = /** @type {?} */ ((currCtx.parent));\n        }\n        throw new Error(\"Not declared variable \" + varName);\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWriteKeyExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ index = expr.index.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[index] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitWritePropExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ value = expr.value.visitExpression(this, ctx);\n        receiver[expr.name] = value;\n        return value;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeMethodExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ receiver = expr.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ args = this.visitAllExpressions(expr.args, ctx);\n        var /** @type {?} */ result;\n        if (expr.builtin != null) {\n            switch (expr.builtin) {\n                case BuiltinMethod.ConcatArray:\n                    result = receiver.concat.apply(receiver, args);\n                    break;\n                case BuiltinMethod.SubscribeObservable:\n                    result = receiver.subscribe({ next: args[0] });\n                    break;\n                case BuiltinMethod.Bind:\n                    result = receiver.bind.apply(receiver, args);\n                    break;\n                default:\n                    throw new Error(\"Unknown builtin method \" + expr.builtin);\n            }\n        }\n        else {\n            result = receiver[/** @type {?} */ ((expr.name))].apply(receiver, args);\n        }\n        return result;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(stmt.args, ctx);\n        var /** @type {?} */ fnExpr = stmt.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            ctx.instance.constructor.prototype.constructor.apply(ctx.instance, args);\n            return null;\n        }\n        else {\n            var /** @type {?} */ fn$$1 = stmt.fn.visitExpression(this, ctx);\n            return fn$$1.apply(null, args);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReturnStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return new ReturnValue(stmt.value.visitExpression(this, ctx));\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ clazz = createDynamicClass(stmt, ctx, this);\n        ctx.vars.set(stmt.name, clazz);\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExpressionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        return stmt.expr.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitIfStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ condition = stmt.condition.visitExpression(this, ctx);\n        if (condition) {\n            return this.visitAllStatements(stmt.trueCase, ctx);\n        }\n        else if (stmt.falseCase != null) {\n            return this.visitAllStatements(stmt.falseCase, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        try {\n            return this.visitAllStatements(stmt.bodyStmts, ctx);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ childCtx = ctx.createChildWihtLocalVars();\n            childCtx.vars.set(CATCH_ERROR_VAR$2, e);\n            childCtx.vars.set(CATCH_STACK_VAR$2, e.stack);\n            return this.visitAllStatements(stmt.catchStmts, childCtx);\n        }\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitThrowStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        throw stmt.error.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommentStmt = /**\n     * @param {?} stmt\n     * @param {?=} context\n     * @return {?}\n     */\n    function (stmt, context) { return null; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitInstantiateExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ args = this.visitAllExpressions(ast.args, ctx);\n        var /** @type {?} */ clazz = ast.classExpr.visitExpression(this, ctx);\n        return new (clazz.bind.apply(clazz, [void 0].concat(args)))();\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) { return ast.value; };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.reflector.resolveExternalReference(ast.value);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitConditionalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.condition.visitExpression(this, ctx)) {\n            return ast.trueCase.visitExpression(this, ctx);\n        }\n        else if (ast.falseCase != null) {\n            return ast.falseCase.visitExpression(this, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitNotExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return !ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAssertNotNullExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.condition.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return ast.value.visitExpression(this, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ paramNames = ast.params.map(function (param) { return param.name; });\n        return _declareFn(paramNames, ast.statements, ctx, this);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var /** @type {?} */ paramNames = stmt.params.map(function (param) { return param.name; });\n        ctx.vars.set(stmt.name, _declareFn(paramNames, stmt.statements, ctx, this));\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            ctx.exports.push(stmt.name);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitBinaryOperatorExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ lhs = function () { return ast.lhs.visitExpression(_this, ctx); };\n        var /** @type {?} */ rhs = function () { return ast.rhs.visitExpression(_this, ctx); };\n        switch (ast.operator) {\n            case BinaryOperator.Equals:\n                return lhs() == rhs();\n            case BinaryOperator.Identical:\n                return lhs() === rhs();\n            case BinaryOperator.NotEquals:\n                return lhs() != rhs();\n            case BinaryOperator.NotIdentical:\n                return lhs() !== rhs();\n            case BinaryOperator.And:\n                return lhs() && rhs();\n            case BinaryOperator.Or:\n                return lhs() || rhs();\n            case BinaryOperator.Plus:\n                return lhs() + rhs();\n            case BinaryOperator.Minus:\n                return lhs() - rhs();\n            case BinaryOperator.Divide:\n                return lhs() / rhs();\n            case BinaryOperator.Multiply:\n                return lhs() * rhs();\n            case BinaryOperator.Modulo:\n                return lhs() % rhs();\n            case BinaryOperator.Lower:\n                return lhs() < rhs();\n            case BinaryOperator.LowerEquals:\n                return lhs() <= rhs();\n            case BinaryOperator.Bigger:\n                return lhs() > rhs();\n            case BinaryOperator.BiggerEquals:\n                return lhs() >= rhs();\n            default:\n                throw new Error(\"Unknown operator \" + ast.operator);\n        }\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadPropExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ result;\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        result = receiver[ast.name];\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitReadKeyExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ receiver = ast.receiver.visitExpression(this, ctx);\n        var /** @type {?} */ prop = ast.index.visitExpression(this, ctx);\n        return receiver[prop];\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralArrayExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        return this.visitAllExpressions(ast.entries, ctx);\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitLiteralMapExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var _this = this;\n        var /** @type {?} */ result = {};\n        ast.entries.forEach(function (entry) { return result[entry.key] = entry.value.visitExpression(_this, ctx); });\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitCommaExpr = /**\n     * @param {?} ast\n     * @param {?} context\n     * @return {?}\n     */\n    function (ast, context) {\n        var /** @type {?} */ values = this.visitAllExpressions(ast.parts, context);\n        return values[values.length - 1];\n    };\n    /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllExpressions = /**\n     * @param {?} expressions\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expressions, ctx) {\n        var _this = this;\n        return expressions.map(function (expr) { return expr.visitExpression(_this, ctx); });\n    };\n    /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    StatementInterpreter.prototype.visitAllStatements = /**\n     * @param {?} statements\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (statements, ctx) {\n        for (var /** @type {?} */ i = 0; i < statements.length; i++) {\n            var /** @type {?} */ stmt = statements[i];\n            var /** @type {?} */ val = stmt.visitStatement(this, ctx);\n            if (val instanceof ReturnValue) {\n                return val;\n            }\n        }\n        return null;\n    };\n    return StatementInterpreter;\n}());\n/**\n * @param {?} varNames\n * @param {?} statements\n * @param {?} ctx\n * @param {?} visitor\n * @return {?}\n */\nfunction _declareFn(varNames, statements, ctx, visitor) {\n    return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return _executeFunctionStatements(varNames, args, statements, ctx, visitor);\n    };\n}\nvar CATCH_ERROR_VAR$2 = 'error';\nvar CATCH_STACK_VAR$2 = 'stack';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n */\nvar AbstractJsEmitterVisitor = (function (_super) {\n    __extends(AbstractJsEmitterVisitor, _super);\n    function AbstractJsEmitterVisitor() {\n        return _super.call(this, false) || this;\n    }\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        var _this = this;\n        ctx.pushClass(stmt);\n        this._visitClassConstructor(stmt, ctx);\n        if (stmt.parent != null) {\n            ctx.print(stmt, stmt.name + \".prototype = Object.create(\");\n            stmt.parent.visitExpression(this, ctx);\n            ctx.println(stmt, \".prototype);\");\n        }\n        stmt.getters.forEach(function (getter) { return _this._visitClassGetter(stmt, getter, ctx); });\n        stmt.methods.forEach(function (method) { return _this._visitClassMethod(stmt, method, ctx); });\n        ctx.popClass();\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassConstructor = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        if (stmt.constructorMethod != null) {\n            this._visitParams(stmt.constructorMethod.params, ctx);\n        }\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (stmt.constructorMethod != null) {\n            if (stmt.constructorMethod.body.length > 0) {\n                ctx.println(stmt, \"var self = this;\");\n                this.visitAllStatements(stmt.constructorMethod.body, ctx);\n            }\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassGetter = /**\n     * @param {?} stmt\n     * @param {?} getter\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, getter, ctx) {\n        ctx.println(stmt, \"Object.defineProperty(\" + stmt.name + \".prototype, '\" + getter.name + \"', { get: function() {\");\n        ctx.incIndent();\n        if (getter.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(getter.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"}});\");\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitClassMethod = /**\n     * @param {?} stmt\n     * @param {?} method\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, method, ctx) {\n        ctx.print(stmt, stmt.name + \".prototype.\" + method.name + \" = function(\");\n        this._visitParams(method.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        if (method.body.length > 0) {\n            ctx.println(stmt, \"var self = this;\");\n            this.visitAllStatements(method.body, ctx);\n        }\n        ctx.decIndent();\n        ctx.println(stmt, \"};\");\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitReadVarExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        if (ast.builtin === BuiltinVar.This) {\n            ctx.print(ast, 'self');\n        }\n        else if (ast.builtin === BuiltinVar.Super) {\n            throw new Error(\"'super' needs to be handled at a parent ast node, not at the variable level!\");\n        }\n        else {\n            _super.prototype.visitReadVarExpr.call(this, ast, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"var \" + stmt.name + \" = \");\n        stmt.value.visitExpression(this, ctx);\n        ctx.println(stmt, \";\");\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitCastExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ast.value.visitExpression(this, ctx);\n        return null;\n    };\n    /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitInvokeFunctionExpr = /**\n     * @param {?} expr\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (expr, ctx) {\n        var /** @type {?} */ fnExpr = expr.fn;\n        if (fnExpr instanceof ReadVarExpr && fnExpr.builtin === BuiltinVar.Super) {\n            /** @type {?} */ ((/** @type {?} */ ((ctx.currentClass)).parent)).visitExpression(this, ctx);\n            ctx.print(expr, \".call(this\");\n            if (expr.args.length > 0) {\n                ctx.print(expr, \", \");\n                this.visitAllExpressions(expr.args, ctx, ',');\n            }\n            ctx.print(expr, \")\");\n        }\n        else {\n            _super.prototype.visitInvokeFunctionExpr.call(this, expr, ctx);\n        }\n        return null;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitFunctionExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        ctx.print(ast, \"function(\");\n        this._visitParams(ast.params, ctx);\n        ctx.println(ast, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(ast.statements, ctx);\n        ctx.decIndent();\n        ctx.print(ast, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.print(stmt, \"function \" + stmt.name + \"(\");\n        this._visitParams(stmt.params, ctx);\n        ctx.println(stmt, \") {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.statements, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.visitTryCatchStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        ctx.println(stmt, \"try {\");\n        ctx.incIndent();\n        this.visitAllStatements(stmt.bodyStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"} catch (\" + CATCH_ERROR_VAR$1.name + \") {\");\n        ctx.incIndent();\n        var /** @type {?} */ catchStmts = [/** @type {?} */ (CATCH_STACK_VAR$1.set(CATCH_ERROR_VAR$1.prop('stack')).toDeclStmt(null, [\n                StmtModifier.Final\n            ]))].concat(stmt.catchStmts);\n        this.visitAllStatements(catchStmts, ctx);\n        ctx.decIndent();\n        ctx.println(stmt, \"}\");\n        return null;\n    };\n    /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype._visitParams = /**\n     * @param {?} params\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (params, ctx) {\n        this.visitAllObjects(function (param) { return ctx.print(null, param.name); }, params, ctx, ',');\n    };\n    /**\n     * @param {?} method\n     * @return {?}\n     */\n    AbstractJsEmitterVisitor.prototype.getBuiltinMethodName = /**\n     * @param {?} method\n     * @return {?}\n     */\n    function (method) {\n        var /** @type {?} */ name;\n        switch (method) {\n            case BuiltinMethod.ConcatArray:\n                name = 'concat';\n                break;\n            case BuiltinMethod.SubscribeObservable:\n                name = 'subscribe';\n                break;\n            case BuiltinMethod.Bind:\n                name = 'bind';\n                break;\n            default:\n                throw new Error(\"Unknown builtin method: \" + method);\n        }\n        return name;\n    };\n    return AbstractJsEmitterVisitor;\n}(AbstractEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} sourceUrl\n * @param {?} ctx\n * @param {?} vars\n * @param {?} createSourceMap\n * @return {?}\n */\nfunction evalExpression(sourceUrl, ctx, vars, createSourceMap) {\n    var /** @type {?} */ fnBody = ctx.toSource() + \"\\n//# sourceURL=\" + sourceUrl;\n    var /** @type {?} */ fnArgNames = [];\n    var /** @type {?} */ fnArgValues = [];\n    for (var /** @type {?} */ argName in vars) {\n        fnArgNames.push(argName);\n        fnArgValues.push(vars[argName]);\n    }\n    if (createSourceMap) {\n        // using `new Function(...)` generates a header, 1 line of no arguments, 2 lines otherwise\n        // E.g. ```\n        // function anonymous(a,b,c\n        // /**/) { ... }```\n        // We don't want to hard code this fact, so we auto detect it via an empty function first.\n        var /** @type {?} */ emptyFn = new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat('return null;'))))().toString();\n        var /** @type {?} */ headerLines = emptyFn.slice(0, emptyFn.indexOf('return null;')).split('\\n').length - 1;\n        fnBody += \"\\n\" + ctx.toSourceMapGenerator(sourceUrl, headerLines).toJsComment();\n    }\n    return new (Function.bind.apply(Function, [void 0].concat(fnArgNames.concat(fnBody))))().apply(void 0, fnArgValues);\n}\n/**\n * @param {?} sourceUrl\n * @param {?} statements\n * @param {?} reflector\n * @param {?} createSourceMaps\n * @return {?}\n */\nfunction jitStatements(sourceUrl, statements, reflector, createSourceMaps) {\n    var /** @type {?} */ converter = new JitEmitterVisitor(reflector);\n    var /** @type {?} */ ctx = EmitterVisitorContext.createRoot();\n    converter.visitAllStatements(statements, ctx);\n    converter.createReturnStmt(ctx);\n    return evalExpression(sourceUrl, ctx, converter.getArgs(), createSourceMaps);\n}\nvar JitEmitterVisitor = (function (_super) {\n    __extends(JitEmitterVisitor, _super);\n    function JitEmitterVisitor(reflector) {\n        var _this = _super.call(this) || this;\n        _this.reflector = reflector;\n        _this._evalArgNames = [];\n        _this._evalArgValues = [];\n        _this._evalExportedVars = [];\n        return _this;\n    }\n    /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.createReturnStmt = /**\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ctx) {\n        var /** @type {?} */ stmt = new ReturnStatement(new LiteralMapExpr(this._evalExportedVars.map(function (resultVar) { return new LiteralMapEntry(resultVar, variable(resultVar), false); })));\n        stmt.visitStatement(this, ctx);\n    };\n    /**\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.getArgs = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ result = {};\n        for (var /** @type {?} */ i = 0; i < this._evalArgNames.length; i++) {\n            result[this._evalArgNames[i]] = this._evalArgValues[i];\n        }\n        return result;\n    };\n    /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitExternalExpr = /**\n     * @param {?} ast\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (ast, ctx) {\n        var /** @type {?} */ value = this.reflector.resolveExternalReference(ast.value);\n        var /** @type {?} */ id = this._evalArgValues.indexOf(value);\n        if (id === -1) {\n            id = this._evalArgValues.length;\n            this._evalArgValues.push(value);\n            var /** @type {?} */ name_1 = identifierName({ reference: value }) || 'val';\n            this._evalArgNames.push(\"jit_\" + name_1 + \"_\" + id);\n        }\n        ctx.print(ast, this._evalArgNames[id]);\n        return null;\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareVarStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareVarStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareFunctionStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareFunctionStmt.call(this, stmt, ctx);\n    };\n    /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    JitEmitterVisitor.prototype.visitDeclareClassStmt = /**\n     * @param {?} stmt\n     * @param {?} ctx\n     * @return {?}\n     */\n    function (stmt, ctx) {\n        if (stmt.hasModifier(StmtModifier.Exported)) {\n            this._evalExportedVars.push(stmt.name);\n        }\n        return _super.prototype.visitDeclareClassStmt.call(this, stmt, ctx);\n    };\n    return JitEmitterVisitor;\n}(AbstractJsEmitterVisitor));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n\n/**\n * An internal module of the Angular compiler that begins with component types,\n * extracts templates, and eventually produces a compiled version of the component\n * ready for linking into an application.\n *\n * \\@security When compiling templates at runtime, you must ensure that the entire template comes\n * from a trusted source. Attacker-controlled data introduced by a template could expose your\n * application to XSS risks.  For more detail, see the [Security Guide](http://g.co/ng/security).\n */\nvar JitCompiler = (function () {\n    function JitCompiler(_metadataResolver, _templateParser, _styleCompiler, _viewCompiler, _ngModuleCompiler, _summaryResolver, _reflector, _compilerConfig, _console, getExtraNgModuleProviders) {\n        this._metadataResolver = _metadataResolver;\n        this._templateParser = _templateParser;\n        this._styleCompiler = _styleCompiler;\n        this._viewCompiler = _viewCompiler;\n        this._ngModuleCompiler = _ngModuleCompiler;\n        this._summaryResolver = _summaryResolver;\n        this._reflector = _reflector;\n        this._compilerConfig = _compilerConfig;\n        this._console = _console;\n        this.getExtraNgModuleProviders = getExtraNgModuleProviders;\n        this._compiledTemplateCache = new Map();\n        this._compiledHostTemplateCache = new Map();\n        this._compiledDirectiveWrapperCache = new Map();\n        this._compiledNgModuleCache = new Map();\n        this._sharedStylesheetCount = 0;\n    }\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndComponents(moduleType, false));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsSync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return SyncAsync.assertSync(this._compileModuleAndAllComponents(moduleType, true));\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        return Promise.resolve(this._compileModuleAndAllComponents(moduleType, false));\n    };\n    /**\n     * @param {?} component\n     * @return {?}\n     */\n    JitCompiler.prototype.getComponentFactory = /**\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        var /** @type {?} */ summary = this._metadataResolver.getDirectiveSummary(component);\n        return /** @type {?} */ (summary.componentFactory);\n    };\n    /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    JitCompiler.prototype.loadAotSummaries = /**\n     * @param {?} summaries\n     * @return {?}\n     */\n    function (summaries) {\n        var _this = this;\n        this.clearCache();\n        flattenSummaries(summaries).forEach(function (summary) {\n            _this._summaryResolver.addSummary({ symbol: summary.type.reference, metadata: null, type: summary });\n        });\n    };\n    /**\n     * @param {?} ref\n     * @return {?}\n     */\n    JitCompiler.prototype.hasAotSummary = /**\n     * @param {?} ref\n     * @return {?}\n     */\n    function (ref) { return !!this._summaryResolver.resolveSummary(ref); };\n    /**\n     * @param {?} ids\n     * @return {?}\n     */\n    JitCompiler.prototype._filterJitIdentifiers = /**\n     * @param {?} ids\n     * @return {?}\n     */\n    function (ids) {\n        var _this = this;\n        return ids.map(function (mod) { return mod.reference; }).filter(function (ref) { return !_this.hasAotSummary(ref); });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            _this._compileComponents(moduleType, null);\n            return _this._compileModule(moduleType);\n        });\n    };\n    /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModuleAndAllComponents = /**\n     * @param {?} moduleType\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (moduleType, isSync) {\n        var _this = this;\n        return SyncAsync.then(this._loadModules(moduleType, isSync), function () {\n            var /** @type {?} */ componentFactories = [];\n            _this._compileComponents(moduleType, componentFactories);\n            return {\n                ngModuleFactory: _this._compileModule(moduleType),\n                componentFactories: componentFactories\n            };\n        });\n    };\n    /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    JitCompiler.prototype._loadModules = /**\n     * @param {?} mainModule\n     * @param {?} isSync\n     * @return {?}\n     */\n    function (mainModule, isSync) {\n        var _this = this;\n        var /** @type {?} */ loading = [];\n        var /** @type {?} */ mainNgModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        // Note: for runtime compilation, we want to transitively compile all modules,\n        // so we also need to load the declared directives / pipes for all nested modules.\n        this._filterJitIdentifiers(mainNgModule.transitiveModule.modules).forEach(function (nestedNgModule) {\n            // getNgModuleMetadata only returns null if the value passed in is not an NgModule\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(nestedNgModule)));\n            _this._filterJitIdentifiers(moduleMeta.declaredDirectives).forEach(function (ref) {\n                var /** @type {?} */ promise = _this._metadataResolver.loadDirectiveMetadata(moduleMeta.type.reference, ref, isSync);\n                if (promise) {\n                    loading.push(promise);\n                }\n            });\n            _this._filterJitIdentifiers(moduleMeta.declaredPipes)\n                .forEach(function (ref) { return _this._metadataResolver.getOrLoadPipeMetadata(ref); });\n        });\n        return SyncAsync.all(loading);\n    };\n    /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    JitCompiler.prototype._compileModule = /**\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        var /** @type {?} */ ngModuleFactory = /** @type {?} */ ((this._compiledNgModuleCache.get(moduleType)));\n        if (!ngModuleFactory) {\n            var /** @type {?} */ moduleMeta = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(moduleType)));\n            // Always provide a bound Compiler\n            var /** @type {?} */ extraProviders = this.getExtraNgModuleProviders(moduleMeta.type.reference);\n            var /** @type {?} */ outputCtx = createOutputContext();\n            var /** @type {?} */ compileResult = this._ngModuleCompiler.compile(outputCtx, moduleMeta, extraProviders);\n            ngModuleFactory = this._interpretOrJit(ngModuleJitUrl(moduleMeta), outputCtx.statements)[compileResult.ngModuleFactoryVar];\n            this._compiledNgModuleCache.set(moduleMeta.type.reference, ngModuleFactory);\n        }\n        return ngModuleFactory;\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    JitCompiler.prototype._compileComponents = /**\n     * \\@internal\n     * @param {?} mainModule\n     * @param {?} allComponentFactories\n     * @return {?}\n     */\n    function (mainModule, allComponentFactories) {\n        var _this = this;\n        var /** @type {?} */ ngModule = /** @type {?} */ ((this._metadataResolver.getNgModuleMetadata(mainModule)));\n        var /** @type {?} */ moduleByJitDirective = new Map();\n        var /** @type {?} */ templates = new Set();\n        var /** @type {?} */ transJitModules = this._filterJitIdentifiers(ngModule.transitiveModule.modules);\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                moduleByJitDirective.set(dirRef, localModuleMeta);\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    templates.add(_this._createCompiledTemplate(dirMeta, localModuleMeta));\n                    if (allComponentFactories) {\n                        var /** @type {?} */ template = _this._createCompiledHostTemplate(dirMeta.type.reference, localModuleMeta);\n                        templates.add(template);\n                        allComponentFactories.push(/** @type {?} */ (dirMeta.componentFactory));\n                    }\n                }\n            });\n        });\n        transJitModules.forEach(function (localMod) {\n            var /** @type {?} */ localModuleMeta = /** @type {?} */ ((_this._metadataResolver.getNgModuleMetadata(localMod)));\n            _this._filterJitIdentifiers(localModuleMeta.declaredDirectives).forEach(function (dirRef) {\n                var /** @type {?} */ dirMeta = _this._metadataResolver.getDirectiveMetadata(dirRef);\n                if (dirMeta.isComponent) {\n                    dirMeta.entryComponents.forEach(function (entryComponentType) {\n                        var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                        templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                    });\n                }\n            });\n            localModuleMeta.entryComponents.forEach(function (entryComponentType) {\n                if (!_this.hasAotSummary(entryComponentType.componentType.reference)) {\n                    var /** @type {?} */ moduleMeta = /** @type {?} */ ((moduleByJitDirective.get(entryComponentType.componentType)));\n                    templates.add(_this._createCompiledHostTemplate(entryComponentType.componentType, moduleMeta));\n                }\n            });\n        });\n        templates.forEach(function (template) { return _this._compileTemplate(template); });\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCacheFor = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        this._compiledNgModuleCache.delete(type);\n        this._metadataResolver.clearCacheFor(type);\n        this._compiledHostTemplateCache.delete(type);\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(type);\n        if (compiledTemplate) {\n            this._compiledTemplateCache.delete(type);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    JitCompiler.prototype.clearCache = /**\n     * @return {?}\n     */\n    function () {\n        this._metadataResolver.clearCache();\n        this._compiledTemplateCache.clear();\n        this._compiledHostTemplateCache.clear();\n        this._compiledNgModuleCache.clear();\n    };\n    /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledHostTemplate = /**\n     * @param {?} compType\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compType, ngModule) {\n        if (!ngModule) {\n            throw new Error(\"Component \" + stringify(compType) + \" is not part of any NgModule or the module has not been imported into your module.\");\n        }\n        var /** @type {?} */ compiledTemplate = this._compiledHostTemplateCache.get(compType);\n        if (!compiledTemplate) {\n            var /** @type {?} */ compMeta = this._metadataResolver.getDirectiveMetadata(compType);\n            assertComponent(compMeta);\n            var /** @type {?} */ hostMeta = this._metadataResolver.getHostComponentMetadata(compMeta, (/** @type {?} */ (compMeta.componentFactory)).viewDefFactory);\n            compiledTemplate =\n                new CompiledTemplate(true, compMeta.type, hostMeta, ngModule, [compMeta.type]);\n            this._compiledHostTemplateCache.set(compType, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    JitCompiler.prototype._createCompiledTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @return {?}\n     */\n    function (compMeta, ngModule) {\n        var /** @type {?} */ compiledTemplate = this._compiledTemplateCache.get(compMeta.type.reference);\n        if (!compiledTemplate) {\n            assertComponent(compMeta);\n            compiledTemplate = new CompiledTemplate(false, compMeta.type, compMeta, ngModule, ngModule.transitiveModule.directives);\n            this._compiledTemplateCache.set(compMeta.type.reference, compiledTemplate);\n        }\n        return compiledTemplate;\n    };\n    /**\n     * @param {?} template\n     * @return {?}\n     */\n    JitCompiler.prototype._compileTemplate = /**\n     * @param {?} template\n     * @return {?}\n     */\n    function (template) {\n        var _this = this;\n        if (template.isCompiled) {\n            return;\n        }\n        var /** @type {?} */ compMeta = template.compMeta;\n        var /** @type {?} */ externalStylesheetsByModuleUrl = new Map();\n        var /** @type {?} */ outputContext = createOutputContext();\n        var /** @type {?} */ componentStylesheet = this._styleCompiler.compileComponent(outputContext, compMeta); /** @type {?} */\n        ((compMeta.template)).externalStylesheets.forEach(function (stylesheetMeta) {\n            var /** @type {?} */ compiledStylesheet = _this._styleCompiler.compileStyles(createOutputContext(), compMeta, stylesheetMeta);\n            externalStylesheetsByModuleUrl.set(/** @type {?} */ ((stylesheetMeta.moduleUrl)), compiledStylesheet);\n        });\n        this._resolveStylesCompileResult(componentStylesheet, externalStylesheetsByModuleUrl);\n        var /** @type {?} */ pipes = template.ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        var _a = this._parseTemplate(compMeta, template.ngModule, template.directives), parsedTemplate = _a.template, usedPipes = _a.pipes;\n        var /** @type {?} */ compileResult = this._viewCompiler.compileComponent(outputContext, compMeta, parsedTemplate, variable(componentStylesheet.stylesVar), usedPipes);\n        var /** @type {?} */ evalResult = this._interpretOrJit(templateJitUrl(template.ngModule.type, template.compMeta), outputContext.statements);\n        var /** @type {?} */ viewClass = evalResult[compileResult.viewClassVar];\n        var /** @type {?} */ rendererType = evalResult[compileResult.rendererTypeVar];\n        template.compiled(viewClass, rendererType);\n    };\n    /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    JitCompiler.prototype._parseTemplate = /**\n     * @param {?} compMeta\n     * @param {?} ngModule\n     * @param {?} directiveIdentifiers\n     * @return {?}\n     */\n    function (compMeta, ngModule, directiveIdentifiers) {\n        var _this = this;\n        // Note: ! is ok here as components always have a template.\n        var /** @type {?} */ preserveWhitespaces = /** @type {?} */ ((compMeta.template)).preserveWhitespaces;\n        var /** @type {?} */ directives = directiveIdentifiers.map(function (dir) { return _this._metadataResolver.getDirectiveSummary(dir.reference); });\n        var /** @type {?} */ pipes = ngModule.transitiveModule.pipes.map(function (pipe) { return _this._metadataResolver.getPipeSummary(pipe.reference); });\n        return this._templateParser.parse(compMeta, /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).htmlAst)), directives, pipes, ngModule.schemas, templateSourceUrl(ngModule.type, compMeta, /** @type {?} */ ((compMeta.template))), preserveWhitespaces);\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        var _this = this;\n        result.dependencies.forEach(function (dep, i) {\n            var /** @type {?} */ nestedCompileResult = /** @type {?} */ ((externalStylesheetsByModuleUrl.get(dep.moduleUrl)));\n            var /** @type {?} */ nestedStylesArr = _this._resolveAndEvalStylesCompileResult(nestedCompileResult, externalStylesheetsByModuleUrl);\n            dep.setValue(nestedStylesArr);\n        });\n    };\n    /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    JitCompiler.prototype._resolveAndEvalStylesCompileResult = /**\n     * @param {?} result\n     * @param {?} externalStylesheetsByModuleUrl\n     * @return {?}\n     */\n    function (result, externalStylesheetsByModuleUrl) {\n        this._resolveStylesCompileResult(result, externalStylesheetsByModuleUrl);\n        return this._interpretOrJit(sharedStylesheetJitUrl(result.meta, this._sharedStylesheetCount++), result.outputCtx.statements)[result.stylesVar];\n    };\n    /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    JitCompiler.prototype._interpretOrJit = /**\n     * @param {?} sourceUrl\n     * @param {?} statements\n     * @return {?}\n     */\n    function (sourceUrl, statements) {\n        if (!this._compilerConfig.useJit) {\n            return interpretStatements(statements, this._reflector);\n        }\n        else {\n            return jitStatements(sourceUrl, statements, this._reflector, this._compilerConfig.jitDevMode);\n        }\n    };\n    return JitCompiler;\n}());\nvar CompiledTemplate = (function () {\n    function CompiledTemplate(isHost, compType, compMeta, ngModule, directives) {\n        this.isHost = isHost;\n        this.compType = compType;\n        this.compMeta = compMeta;\n        this.ngModule = ngModule;\n        this.directives = directives;\n        this._viewClass = /** @type {?} */ ((null));\n        this.isCompiled = false;\n    }\n    /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    CompiledTemplate.prototype.compiled = /**\n     * @param {?} viewClass\n     * @param {?} rendererType\n     * @return {?}\n     */\n    function (viewClass, rendererType) {\n        this._viewClass = viewClass;\n        (/** @type {?} */ (this.compMeta.componentViewType)).setDelegate(viewClass);\n        for (var /** @type {?} */ prop in rendererType) {\n            (/** @type {?} */ (this.compMeta.rendererType))[prop] = rendererType[prop];\n        }\n        this.isCompiled = true;\n    };\n    return CompiledTemplate;\n}());\n/**\n * @param {?} meta\n * @return {?}\n */\nfunction assertComponent(meta) {\n    if (!meta.isComponent) {\n        throw new Error(\"Could not compile '\" + identifierName(meta.type) + \"' because it is not a component.\");\n    }\n}\n/**\n * @param {?} fn\n * @param {?=} out\n * @param {?=} seen\n * @return {?}\n */\nfunction flattenSummaries(fn$$1, out, seen) {\n    if (out === void 0) { out = []; }\n    if (seen === void 0) { seen = new Set(); }\n    if (seen.has(fn$$1)) {\n        return out;\n    }\n    seen.add(fn$$1);\n    var /** @type {?} */ summaries = fn$$1();\n    for (var /** @type {?} */ i = 0; i < summaries.length; i++) {\n        var /** @type {?} */ entry = summaries[i];\n        if (typeof entry === 'function') {\n            flattenSummaries(entry, out, seen);\n        }\n        else {\n            out.push(entry);\n        }\n    }\n    return out;\n}\n/**\n * @return {?}\n */\nfunction createOutputContext() {\n    var /** @type {?} */ importExpr$$1 = function (symbol) {\n        return importExpr({ name: identifierName(symbol), moduleName: null, runtime: symbol });\n    };\n    return { statements: [], genFilePath: '', importExpr: importExpr$$1 };\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols that the compiler needs.\n * @abstract\n */\nvar CompileReflector = (function () {\n    function CompileReflector() {\n    }\n    return CompileReflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Create a {\\@link UrlResolver} with no package prefix.\n * @return {?}\n */\nfunction createUrlResolverWithoutPackagePrefix() {\n    return new UrlResolver();\n}\n/**\n * @return {?}\n */\nfunction createOfflineCompileUrlResolver() {\n    return new UrlResolver('.');\n}\n/**\n * @record\n */\n\nvar UrlResolver = (function () {\n    function UrlResolverImpl(_packagePrefix) {\n        if (_packagePrefix === void 0) { _packagePrefix = null; }\n        this._packagePrefix = _packagePrefix;\n    }\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     */\n    /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    UrlResolverImpl.prototype.resolve = /**\n     * Resolves the `url` given the `baseUrl`:\n     * - when the `url` is null, the `baseUrl` is returned,\n     * - if `url` is relative ('path/to/here', './path/to/here'), the resolved url is a combination of\n     * `baseUrl` and `url`,\n     * - if `url` is absolute (it has a scheme: 'http://', 'https://' or start with '/'), the `url` is\n     * returned as is (ignoring the `baseUrl`)\n     * @param {?} baseUrl\n     * @param {?} url\n     * @return {?}\n     */\n    function (baseUrl, url) {\n        var /** @type {?} */ resolvedUrl = url;\n        if (baseUrl != null && baseUrl.length > 0) {\n            resolvedUrl = _resolveUrl(baseUrl, resolvedUrl);\n        }\n        var /** @type {?} */ resolvedParts = _split(resolvedUrl);\n        var /** @type {?} */ prefix = this._packagePrefix;\n        if (prefix != null && resolvedParts != null &&\n            resolvedParts[_ComponentIndex.Scheme] == 'package') {\n            var /** @type {?} */ path$$1 = resolvedParts[_ComponentIndex.Path];\n            prefix = prefix.replace(/\\/+$/, '');\n            path$$1 = path$$1.replace(/^\\/+/, '');\n            return prefix + \"/\" + path$$1;\n        }\n        return resolvedUrl;\n    };\n    return UrlResolverImpl;\n}());\n/**\n * Extract the scheme of a URL.\n * @param {?} url\n * @return {?}\n */\nfunction getUrlScheme(url) {\n    var /** @type {?} */ match = _split(url);\n    return (match && match[_ComponentIndex.Scheme]) || '';\n}\n/**\n * Builds a URI string from already-encoded parts.\n *\n * No encoding is performed.  Any component may be omitted as either null or\n * undefined.\n *\n * @param {?=} opt_scheme The scheme such as 'http'.\n * @param {?=} opt_userInfo The user name before the '\\@'.\n * @param {?=} opt_domain The domain such as 'www.google.com', already\n *     URI-encoded.\n * @param {?=} opt_port The port number.\n * @param {?=} opt_path The path, already URI-encoded.  If it is not\n *     empty, it must begin with a slash.\n * @param {?=} opt_queryData The URI-encoded query data.\n * @param {?=} opt_fragment The URI-encoded fragment identifier.\n * @return {?} The fully combined URI.\n */\nfunction _buildFromEncodedParts(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n    var /** @type {?} */ out = [];\n    if (opt_scheme != null) {\n        out.push(opt_scheme + ':');\n    }\n    if (opt_domain != null) {\n        out.push('//');\n        if (opt_userInfo != null) {\n            out.push(opt_userInfo + '@');\n        }\n        out.push(opt_domain);\n        if (opt_port != null) {\n            out.push(':' + opt_port);\n        }\n    }\n    if (opt_path != null) {\n        out.push(opt_path);\n    }\n    if (opt_queryData != null) {\n        out.push('?' + opt_queryData);\n    }\n    if (opt_fragment != null) {\n        out.push('#' + opt_fragment);\n    }\n    return out.join('');\n}\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {\\@link http://www.gbiv.com/protocols/uri/rfc/rfc3986.html#RFC2234} says\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * \\@internal\n */\nvar _splitRe = new RegExp('^' +\n    '(?:' +\n    '([^:/?#.]+)' +\n    ':)?' +\n    '(?://' +\n    '(?:([^/?#]*)@)?' +\n    '([\\\\w\\\\d\\\\-\\\\u0100-\\\\uffff.%]*)' +\n    '(?::([0-9]+))?' +\n    ')?' +\n    '([^?#]+)?' +\n    '(?:\\\\?([^#]*))?' +\n    '(?:#(.*))?' +\n    '$');\n/** @enum {number} */\nvar _ComponentIndex = {\n    Scheme: 1,\n    UserInfo: 2,\n    Domain: 3,\n    Port: 4,\n    Path: 5,\n    QueryData: 6,\n    Fragment: 7,\n};\n_ComponentIndex[_ComponentIndex.Scheme] = \"Scheme\";\n_ComponentIndex[_ComponentIndex.UserInfo] = \"UserInfo\";\n_ComponentIndex[_ComponentIndex.Domain] = \"Domain\";\n_ComponentIndex[_ComponentIndex.Port] = \"Port\";\n_ComponentIndex[_ComponentIndex.Path] = \"Path\";\n_ComponentIndex[_ComponentIndex.QueryData] = \"QueryData\";\n_ComponentIndex[_ComponentIndex.Fragment] = \"Fragment\";\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {?} uri The URI string to examine.\n * @return {?} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\nfunction _split(uri) {\n    return /** @type {?} */ ((uri.match(_splitRe)));\n}\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {?} path A non-empty path component.\n * @return {?} Path component with removed dot segments.\n */\nfunction _removeDotSegments(path$$1) {\n    if (path$$1 == '/')\n        return '/';\n    var /** @type {?} */ leadingSlash = path$$1[0] == '/' ? '/' : '';\n    var /** @type {?} */ trailingSlash = path$$1[path$$1.length - 1] === '/' ? '/' : '';\n    var /** @type {?} */ segments = path$$1.split('/');\n    var /** @type {?} */ out = [];\n    var /** @type {?} */ up = 0;\n    for (var /** @type {?} */ pos = 0; pos < segments.length; pos++) {\n        var /** @type {?} */ segment = segments[pos];\n        switch (segment) {\n            case '':\n            case '.':\n                break;\n            case '..':\n                if (out.length > 0) {\n                    out.pop();\n                }\n                else {\n                    up++;\n                }\n                break;\n            default:\n                out.push(segment);\n        }\n    }\n    if (leadingSlash == '') {\n        while (up-- > 0) {\n            out.unshift('..');\n        }\n        if (out.length === 0)\n            out.push('.');\n    }\n    return leadingSlash + out.join('/') + trailingSlash;\n}\n/**\n * Takes an array of the parts from split and canonicalizes the path part\n * and then joins all the parts.\n * @param {?} parts\n * @return {?}\n */\nfunction _joinAndCanonicalizePath(parts) {\n    var /** @type {?} */ path$$1 = parts[_ComponentIndex.Path];\n    path$$1 = path$$1 == null ? '' : _removeDotSegments(path$$1);\n    parts[_ComponentIndex.Path] = path$$1;\n    return _buildFromEncodedParts(parts[_ComponentIndex.Scheme], parts[_ComponentIndex.UserInfo], parts[_ComponentIndex.Domain], parts[_ComponentIndex.Port], path$$1, parts[_ComponentIndex.QueryData], parts[_ComponentIndex.Fragment]);\n}\n/**\n * Resolves a URL.\n * @param {?} base The URL acting as the base URL.\n * @param {?} url\n * @return {?}\n */\nfunction _resolveUrl(base, url) {\n    var /** @type {?} */ parts = _split(encodeURI(url));\n    var /** @type {?} */ baseParts = _split(base);\n    if (parts[_ComponentIndex.Scheme] != null) {\n        return _joinAndCanonicalizePath(parts);\n    }\n    else {\n        parts[_ComponentIndex.Scheme] = baseParts[_ComponentIndex.Scheme];\n    }\n    for (var /** @type {?} */ i = _ComponentIndex.Scheme; i <= _ComponentIndex.Port; i++) {\n        if (parts[i] == null) {\n            parts[i] = baseParts[i];\n        }\n    }\n    if (parts[_ComponentIndex.Path][0] == '/') {\n        return _joinAndCanonicalizePath(parts);\n    }\n    var /** @type {?} */ path$$1 = baseParts[_ComponentIndex.Path];\n    if (path$$1 == null)\n        path$$1 = '/';\n    var /** @type {?} */ index = path$$1.lastIndexOf('/');\n    path$$1 = path$$1.substring(0, index + 1) + parts[_ComponentIndex.Path];\n    parts[_ComponentIndex.Path] = path$$1;\n    return _joinAndCanonicalizePath(parts);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface for retrieving documents by URL that the compiler uses\n * to load templates.\n */\nvar ResourceLoader = (function () {\n    function ResourceLoader() {\n    }\n    /**\n     * @param {?} url\n     * @return {?}\n     */\n    ResourceLoader.prototype.get = /**\n     * @param {?} url\n     * @return {?}\n     */\n    function (url) { return ''; };\n    return ResourceLoader;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extract i18n messages from source code\n */\n/**\n * The host of the Extractor disconnects the implementation from TypeScript / other language\n * services and from underlying file systems.\n * @record\n */\n\nvar Extractor = (function () {\n    function Extractor(host, staticSymbolResolver, messageBundle, metadataResolver) {\n        this.host = host;\n        this.staticSymbolResolver = staticSymbolResolver;\n        this.messageBundle = messageBundle;\n        this.metadataResolver = metadataResolver;\n    }\n    /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    Extractor.prototype.extract = /**\n     * @param {?} rootFiles\n     * @return {?}\n     */\n    function (rootFiles) {\n        var _this = this;\n        var _a = analyzeAndValidateNgModules(rootFiles, this.host, this.staticSymbolResolver, this.metadataResolver), files = _a.files, ngModules = _a.ngModules;\n        return Promise\n            .all(ngModules.map(function (ngModule) {\n            return _this.metadataResolver.loadNgModuleDirectiveAndPipeMetadata(ngModule.type.reference, false);\n        }))\n            .then(function () {\n            var /** @type {?} */ errors = [];\n            files.forEach(function (file) {\n                var /** @type {?} */ compMetas = [];\n                file.directives.forEach(function (directiveType) {\n                    var /** @type {?} */ dirMeta = _this.metadataResolver.getDirectiveMetadata(directiveType);\n                    if (dirMeta && dirMeta.isComponent) {\n                        compMetas.push(dirMeta);\n                    }\n                });\n                compMetas.forEach(function (compMeta) {\n                    var /** @type {?} */ html = /** @type {?} */ ((/** @type {?} */ ((compMeta.template)).template));\n                    var /** @type {?} */ interpolationConfig = InterpolationConfig.fromArray(/** @type {?} */ ((compMeta.template)).interpolation);\n                    errors.push.apply(errors, /** @type {?} */ ((_this.messageBundle.updateFromTemplate(html, file.fileName, interpolationConfig))));\n                });\n            });\n            if (errors.length) {\n                throw new Error(errors.map(function (e) { return e.toString(); }).join('\\n'));\n            }\n            return _this.messageBundle;\n        });\n    };\n    /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    Extractor.create = /**\n     * @param {?} host\n     * @param {?} locale\n     * @return {?}\n     */\n    function (host, locale) {\n        var /** @type {?} */ htmlParser = new HtmlParser();\n        var /** @type {?} */ urlResolver = createAotUrlResolver(host);\n        var /** @type {?} */ symbolCache = new StaticSymbolCache();\n        var /** @type {?} */ summaryResolver = new AotSummaryResolver(host, symbolCache);\n        var /** @type {?} */ staticSymbolResolver = new StaticSymbolResolver(host, symbolCache, summaryResolver);\n        var /** @type {?} */ staticReflector = new StaticReflector(summaryResolver, staticSymbolResolver);\n        var /** @type {?} */ config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation.Emulated, useJit: false });\n        var /** @type {?} */ normalizer = new DirectiveNormalizer({ get: function (url) { return host.loadResource(url); } }, urlResolver, htmlParser, config);\n        var /** @type {?} */ elementSchemaRegistry = new DomElementSchemaRegistry();\n        var /** @type {?} */ resolver = new CompileMetadataResolver(config, htmlParser, new NgModuleResolver(staticReflector), new DirectiveResolver(staticReflector), new PipeResolver(staticReflector), summaryResolver, elementSchemaRegistry, normalizer, console, symbolCache, staticReflector);\n        // TODO(vicb): implicit tags & attributes\n        var /** @type {?} */ messageBundle = new MessageBundle(htmlParser, [], {}, locale);\n        var /** @type {?} */ extractor = new Extractor(host, staticSymbolResolver, messageBundle, resolver);\n        return { extractor: extractor, staticReflector: staticReflector };\n    };\n    return Extractor;\n}());\n\n\n\n\n\nvar compiler = Object.freeze({\n\tcore: core,\n\tCompilerConfig: CompilerConfig,\n\tpreserveWhitespacesDefault: preserveWhitespacesDefault,\n\tisLoweredSymbol: isLoweredSymbol,\n\tcreateLoweredSymbol: createLoweredSymbol,\n\tIdentifiers: Identifiers,\n\tJitCompiler: JitCompiler,\n\tDirectiveResolver: DirectiveResolver,\n\tPipeResolver: PipeResolver,\n\tNgModuleResolver: NgModuleResolver,\n\tDEFAULT_INTERPOLATION_CONFIG: DEFAULT_INTERPOLATION_CONFIG,\n\tInterpolationConfig: InterpolationConfig,\n\tNgModuleCompiler: NgModuleCompiler,\n\tAssertNotNull: AssertNotNull,\n\tBinaryOperator: BinaryOperator,\n\tBinaryOperatorExpr: BinaryOperatorExpr,\n\tBuiltinMethod: BuiltinMethod,\n\tBuiltinVar: BuiltinVar,\n\tCastExpr: CastExpr,\n\tClassStmt: ClassStmt,\n\tCommaExpr: CommaExpr,\n\tCommentStmt: CommentStmt,\n\tConditionalExpr: ConditionalExpr,\n\tDeclareFunctionStmt: DeclareFunctionStmt,\n\tDeclareVarStmt: DeclareVarStmt,\n\tExpressionStatement: ExpressionStatement,\n\tExternalExpr: ExternalExpr,\n\tExternalReference: ExternalReference,\n\tFunctionExpr: FunctionExpr,\n\tIfStmt: IfStmt,\n\tInstantiateExpr: InstantiateExpr,\n\tInvokeFunctionExpr: InvokeFunctionExpr,\n\tInvokeMethodExpr: InvokeMethodExpr,\n\tLiteralArrayExpr: LiteralArrayExpr,\n\tLiteralExpr: LiteralExpr,\n\tLiteralMapExpr: LiteralMapExpr,\n\tNotExpr: NotExpr,\n\tReadKeyExpr: ReadKeyExpr,\n\tReadPropExpr: ReadPropExpr,\n\tReadVarExpr: ReadVarExpr,\n\tReturnStatement: ReturnStatement,\n\tThrowStmt: ThrowStmt,\n\tTryCatchStmt: TryCatchStmt,\n\tWriteKeyExpr: WriteKeyExpr,\n\tWritePropExpr: WritePropExpr,\n\tWriteVarExpr: WriteVarExpr,\n\tStmtModifier: StmtModifier,\n\tStatement: Statement,\n\tcollectExternalReferences: collectExternalReferences,\n\tEmitterVisitorContext: EmitterVisitorContext,\n\tViewCompiler: ViewCompiler,\n\tgetParseErrors: getParseErrors,\n\tisSyntaxError: isSyntaxError,\n\tsyntaxError: syntaxError,\n\tVersion: Version,\n\tVERSION: VERSION$1,\n\tTextAst: TextAst,\n\tBoundTextAst: BoundTextAst,\n\tAttrAst: AttrAst,\n\tBoundElementPropertyAst: BoundElementPropertyAst,\n\tBoundEventAst: BoundEventAst,\n\tReferenceAst: ReferenceAst,\n\tVariableAst: VariableAst,\n\tElementAst: ElementAst,\n\tEmbeddedTemplateAst: EmbeddedTemplateAst,\n\tBoundDirectivePropertyAst: BoundDirectivePropertyAst,\n\tDirectiveAst: DirectiveAst,\n\tProviderAst: ProviderAst,\n\tProviderAstType: ProviderAstType,\n\tNgContentAst: NgContentAst,\n\tPropertyBindingType: PropertyBindingType,\n\tNullTemplateVisitor: NullTemplateVisitor,\n\tRecursiveTemplateAstVisitor: RecursiveTemplateAstVisitor,\n\ttemplateVisitAll: templateVisitAll,\n\tidentifierName: identifierName,\n\tidentifierModuleUrl: identifierModuleUrl,\n\tviewClassName: viewClassName,\n\trendererTypeName: rendererTypeName,\n\thostViewClassName: hostViewClassName,\n\tcomponentFactoryName: componentFactoryName,\n\tCompileSummaryKind: CompileSummaryKind,\n\ttokenName: tokenName,\n\ttokenReference: tokenReference,\n\tCompileStylesheetMetadata: CompileStylesheetMetadata,\n\tCompileTemplateMetadata: CompileTemplateMetadata,\n\tCompileDirectiveMetadata: CompileDirectiveMetadata,\n\tCompilePipeMetadata: CompilePipeMetadata,\n\tCompileNgModuleMetadata: CompileNgModuleMetadata,\n\tTransitiveCompileNgModuleMetadata: TransitiveCompileNgModuleMetadata,\n\tProviderMeta: ProviderMeta,\n\tflatten: flatten$1,\n\ttemplateSourceUrl: templateSourceUrl,\n\tsharedStylesheetJitUrl: sharedStylesheetJitUrl,\n\tngModuleJitUrl: ngModuleJitUrl,\n\ttemplateJitUrl: templateJitUrl,\n\tcreateAotUrlResolver: createAotUrlResolver,\n\tcreateAotCompiler: createAotCompiler,\n\tAotCompiler: AotCompiler,\n\tanalyzeNgModules: analyzeNgModules,\n\tanalyzeAndValidateNgModules: analyzeAndValidateNgModules,\n\tanalyzeFile: analyzeFile,\n\tmergeAnalyzedFiles: mergeAnalyzedFiles,\n\tGeneratedFile: GeneratedFile,\n\ttoTypeScript: toTypeScript,\n\tStaticReflector: StaticReflector,\n\tStaticSymbol: StaticSymbol,\n\tStaticSymbolCache: StaticSymbolCache,\n\tResolvedStaticSymbol: ResolvedStaticSymbol,\n\tStaticSymbolResolver: StaticSymbolResolver,\n\tunescapeIdentifier: unescapeIdentifier,\n\tAotSummaryResolver: AotSummaryResolver,\n\tAstPath: AstPath,\n\tSummaryResolver: SummaryResolver,\n\tJitSummaryResolver: JitSummaryResolver,\n\tCompileReflector: CompileReflector,\n\tcreateUrlResolverWithoutPackagePrefix: createUrlResolverWithoutPackagePrefix,\n\tcreateOfflineCompileUrlResolver: createOfflineCompileUrlResolver,\n\tUrlResolver: UrlResolver,\n\tgetUrlScheme: getUrlScheme,\n\tResourceLoader: ResourceLoader,\n\tElementSchemaRegistry: ElementSchemaRegistry,\n\tExtractor: Extractor,\n\tI18NHtmlParser: I18NHtmlParser,\n\tMessageBundle: MessageBundle,\n\tSerializer: Serializer,\n\tXliff: Xliff,\n\tXliff2: Xliff2,\n\tXmb: Xmb,\n\tXtb: Xtb,\n\tDirectiveNormalizer: DirectiveNormalizer,\n\tParserError: ParserError,\n\tParseSpan: ParseSpan,\n\tAST: AST,\n\tQuote: Quote,\n\tEmptyExpr: EmptyExpr,\n\tImplicitReceiver: ImplicitReceiver,\n\tChain: Chain,\n\tConditional: Conditional,\n\tPropertyRead: PropertyRead,\n\tPropertyWrite: PropertyWrite,\n\tSafePropertyRead: SafePropertyRead,\n\tKeyedRead: KeyedRead,\n\tKeyedWrite: KeyedWrite,\n\tBindingPipe: BindingPipe,\n\tLiteralPrimitive: LiteralPrimitive,\n\tLiteralArray: LiteralArray,\n\tLiteralMap: LiteralMap,\n\tInterpolation: Interpolation,\n\tBinary: Binary,\n\tPrefixNot: PrefixNot,\n\tNonNullAssert: NonNullAssert,\n\tMethodCall: MethodCall,\n\tSafeMethodCall: SafeMethodCall,\n\tFunctionCall: FunctionCall,\n\tASTWithSource: ASTWithSource,\n\tTemplateBinding: TemplateBinding,\n\tNullAstVisitor: NullAstVisitor,\n\tRecursiveAstVisitor: RecursiveAstVisitor,\n\tAstTransformer: AstTransformer,\n\tvisitAstChildren: visitAstChildren,\n\tTokenType: TokenType,\n\tLexer: Lexer,\n\tToken: Token,\n\tEOF: EOF,\n\tisIdentifier: isIdentifier,\n\tisQuote: isQuote,\n\tSplitInterpolation: SplitInterpolation,\n\tTemplateBindingParseResult: TemplateBindingParseResult,\n\tParser: Parser,\n\t_ParseAST: _ParseAST,\n\tERROR_COMPONENT_TYPE: ERROR_COMPONENT_TYPE,\n\tCompileMetadataResolver: CompileMetadataResolver,\n\tText: Text,\n\tExpansion: Expansion,\n\tExpansionCase: ExpansionCase,\n\tAttribute: Attribute$1,\n\tElement: Element,\n\tComment: Comment,\n\tvisitAll: visitAll,\n\tRecursiveVisitor: RecursiveVisitor,\n\tfindNode: findNode,\n\tParseTreeResult: ParseTreeResult,\n\tTreeError: TreeError,\n\tHtmlParser: HtmlParser,\n\tHtmlTagDefinition: HtmlTagDefinition,\n\tgetHtmlTagDefinition: getHtmlTagDefinition,\n\tTagContentType: TagContentType,\n\tsplitNsName: splitNsName,\n\tisNgContainer: isNgContainer,\n\tisNgContent: isNgContent,\n\tisNgTemplate: isNgTemplate,\n\tgetNsPrefix: getNsPrefix,\n\tmergeNsAndName: mergeNsAndName,\n\tNAMED_ENTITIES: NAMED_ENTITIES,\n\tNGSP_UNICODE: NGSP_UNICODE,\n\tdebugOutputAstAsTypeScript: debugOutputAstAsTypeScript,\n\tTypeScriptEmitter: TypeScriptEmitter,\n\tParseLocation: ParseLocation,\n\tParseSourceFile: ParseSourceFile,\n\tParseSourceSpan: ParseSourceSpan,\n\tParseErrorLevel: ParseErrorLevel,\n\tParseError: ParseError,\n\ttypeSourceSpan: typeSourceSpan,\n\tDomElementSchemaRegistry: DomElementSchemaRegistry,\n\tCssSelector: CssSelector,\n\tSelectorMatcher: SelectorMatcher,\n\tSelectorListContext: SelectorListContext,\n\tSelectorContext: SelectorContext,\n\tStylesCompileDependency: StylesCompileDependency,\n\tCompiledStylesheet: CompiledStylesheet,\n\tStyleCompiler: StyleCompiler,\n\tTemplateParseError: TemplateParseError,\n\tTemplateParseResult: TemplateParseResult,\n\tTemplateParser: TemplateParser,\n\tsplitClasses: splitClasses,\n\tcreateElementCssSelector: createElementCssSelector$1,\n\tremoveSummaryDuplicates: removeSummaryDuplicates\n});\n\nvar commonjsGlobal = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n\n\n\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * An enumeration of basic types.\n *\n * @experimental\n */\nvar BuiltinType;\n(function (BuiltinType) {\n    /**\n     * The type is a type that can hold any other type.\n     */\n    BuiltinType[BuiltinType[\"Any\"] = 0] = \"Any\";\n    /**\n     * The type of a string literal.\n     */\n    BuiltinType[BuiltinType[\"String\"] = 1] = \"String\";\n    /**\n     * The type of a numeric literal.\n     */\n    BuiltinType[BuiltinType[\"Number\"] = 2] = \"Number\";\n    /**\n     * The type of the `true` and `false` literals.\n     */\n    BuiltinType[BuiltinType[\"Boolean\"] = 3] = \"Boolean\";\n    /**\n     * The type of the `undefined` literal.\n     */\n    BuiltinType[BuiltinType[\"Undefined\"] = 4] = \"Undefined\";\n    /**\n     * the type of the `null` literal.\n     */\n    BuiltinType[BuiltinType[\"Null\"] = 5] = \"Null\";\n    /**\n     * the type is an unbound type parameter.\n     */\n    BuiltinType[BuiltinType[\"Unbound\"] = 6] = \"Unbound\";\n    /**\n     * Not a built-in type.\n     */\n    BuiltinType[BuiltinType[\"Other\"] = 7] = \"Other\";\n})(BuiltinType = exports.BuiltinType || (exports.BuiltinType = {}));\n\n});\n\nvar compiler_1 = ( compiler && undefined ) || compiler;\n\nvar expression_type = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind = exports.DiagnosticKind || (exports.DiagnosticKind = {}));\nvar TypeDiagnostic = (function () {\n    function TypeDiagnostic(kind, message, ast) {\n        this.kind = kind;\n        this.message = message;\n        this.ast = ast;\n    }\n    return TypeDiagnostic;\n}());\nexports.TypeDiagnostic = TypeDiagnostic;\n// AstType calculatetype of the ast given AST element.\nvar AstType = (function () {\n    function AstType(scope, query, context) {\n        this.scope = scope;\n        this.query = query;\n        this.context = context;\n    }\n    AstType.prototype.getType = function (ast) { return ast.visit(this); };\n    AstType.prototype.getDiagnostics = function (ast) {\n        this.diagnostics = [];\n        var type = ast.visit(this);\n        if (this.context.event && type.callable) {\n            this.reportWarning('Unexpected callable expression. Expected a method call', ast);\n        }\n        return this.diagnostics;\n    };\n    AstType.prototype.visitBinary = function (ast) {\n        var _this = this;\n        // Treat undefined and null as other.\n        function normalize(kind, other) {\n            switch (kind) {\n                case symbols.BuiltinType.Undefined:\n                case symbols.BuiltinType.Null:\n                    return normalize(other, symbols.BuiltinType.Other);\n            }\n            return kind;\n        }\n        var getType = function (ast, operation) {\n            var type = _this.getType(ast);\n            if (type.nullable) {\n                switch (operation) {\n                    case '&&':\n                    case '||':\n                    case '==':\n                    case '!=':\n                    case '===':\n                    case '!==':\n                        // Nullable allowed.\n                        break;\n                    default:\n                        _this.reportError(\"The expression might be null\", ast);\n                        break;\n                }\n                return _this.query.getNonNullableType(type);\n            }\n            return type;\n        };\n        var leftType = getType(ast.left, ast.operation);\n        var rightType = getType(ast.right, ast.operation);\n        var leftRawKind = this.query.getTypeKind(leftType);\n        var rightRawKind = this.query.getTypeKind(rightType);\n        var leftKind = normalize(leftRawKind, rightRawKind);\n        var rightKind = normalize(rightRawKind, leftRawKind);\n        // The following swtich implements operator typing similar to the\n        // type production tables in the TypeScript specification.\n        // https://github.com/Microsoft/TypeScript/blob/v1.8.10/doc/spec.md#4.19\n        var operKind = leftKind << 8 | rightKind;\n        switch (ast.operation) {\n            case '*':\n            case '/':\n            case '%':\n            case '-':\n            case '<<':\n            case '>>':\n            case '>>>':\n            case '&':\n            case '^':\n            case '|':\n                switch (operKind) {\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols.BuiltinType.Number);\n                    default:\n                        var errorAst = ast.left;\n                        switch (leftKind) {\n                            case symbols.BuiltinType.Any:\n                            case symbols.BuiltinType.Number:\n                                errorAst = ast.right;\n                                break;\n                        }\n                        return this.reportError('Expected a numeric type', errorAst);\n                }\n            case '+':\n                switch (operKind) {\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Other:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Any:\n                        return this.anyType;\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Other:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.String:\n                        return this.query.getBuiltinType(symbols.BuiltinType.String);\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Number:\n                        return this.query.getBuiltinType(symbols.BuiltinType.Number);\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Number:\n                        return this.reportError('Expected a number type', ast.left);\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Other:\n                        return this.reportError('Expected a number type', ast.right);\n                    default:\n                        return this.reportError('Expected operands to be a string or number type', ast);\n                }\n            case '>':\n            case '<':\n            case '<=':\n            case '>=':\n            case '==':\n            case '!=':\n            case '===':\n            case '!==':\n                switch (operKind) {\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Any << 8 | symbols.BuiltinType.Other:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Boolean << 8 | symbols.BuiltinType.Boolean:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Number << 8 | symbols.BuiltinType.Number:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.String << 8 | symbols.BuiltinType.String:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Any:\n                    case symbols.BuiltinType.Other << 8 | symbols.BuiltinType.Other:\n                        return this.query.getBuiltinType(symbols.BuiltinType.Boolean);\n                    default:\n                        return this.reportError('Expected the operants to be of similar type or any', ast);\n                }\n            case '&&':\n                return rightType;\n            case '||':\n                return this.query.getTypeUnion(leftType, rightType);\n        }\n        return this.reportError(\"Unrecognized operator \" + ast.operation, ast);\n    };\n    AstType.prototype.visitChain = function (ast) {\n        if (this.diagnostics) {\n            // If we are producing diagnostics, visit the children\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // The type of a chain is always undefined.\n        return this.query.getBuiltinType(symbols.BuiltinType.Undefined);\n    };\n    AstType.prototype.visitConditional = function (ast) {\n        // The type of a conditional is the union of the true and false conditions.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.query.getTypeUnion(this.getType(ast.trueExp), this.getType(ast.falseExp));\n    };\n    AstType.prototype.visitFunctionCall = function (ast) {\n        var _this = this;\n        // The type of a function call is the return type of the selected signature.\n        // The signature is selected based on the types of the arguments. Angular doesn't\n        // support contextual typing of arguments so this is simpler than TypeScript's\n        // version.\n        var args = ast.args.map(function (arg) { return _this.getType(arg); });\n        var target = this.getType(ast.target);\n        if (!target || !target.callable)\n            return this.reportError('Call target is not callable', ast);\n        var signature = target.selectSignature(args);\n        if (signature)\n            return signature.result;\n        // TODO: Consider a better error message here.\n        return this.reportError('Unable no compatible signature found for call', ast);\n    };\n    AstType.prototype.visitImplicitReceiver = function (ast) {\n        var _this = this;\n        // Return a pseudo-symbol for the implicit receiver.\n        // The members of the implicit receiver are what is defined by the\n        // scope passed into this class.\n        return {\n            name: '$implict',\n            kind: 'component',\n            language: 'ng-template',\n            type: undefined,\n            container: undefined,\n            callable: false,\n            nullable: false,\n            public: true,\n            definition: undefined,\n            members: function () { return _this.scope; },\n            signatures: function () { return []; },\n            selectSignature: function (types) { return undefined; },\n            indexed: function (argument) { return undefined; }\n        };\n    };\n    AstType.prototype.visitInterpolation = function (ast) {\n        // If we are producing diagnostics, visit the children.\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        return this.undefinedType;\n    };\n    AstType.prototype.visitKeyedRead = function (ast) {\n        var targetType = this.getType(ast.obj);\n        var keyType = this.getType(ast.key);\n        var result = targetType.indexed(keyType);\n        return result || this.anyType;\n    };\n    AstType.prototype.visitKeyedWrite = function (ast) {\n        // The write of a type is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitLiteralArray = function (ast) {\n        var _this = this;\n        // A type literal is an array type of the union of the elements\n        return this.query.getArrayType((_a = this.query).getTypeUnion.apply(_a, ast.expressions.map(function (element) { return _this.getType(element); })));\n        var _a;\n    };\n    AstType.prototype.visitLiteralMap = function (ast) {\n        // If we are producing diagnostics, visit the children\n        if (this.diagnostics) {\n            compiler_1.visitAstChildren(ast, this);\n        }\n        // TODO: Return a composite type.\n        return this.anyType;\n    };\n    AstType.prototype.visitLiteralPrimitive = function (ast) {\n        // The type of a literal primitive depends on the value of the literal.\n        switch (ast.value) {\n            case true:\n            case false:\n                return this.query.getBuiltinType(symbols.BuiltinType.Boolean);\n            case null:\n                return this.query.getBuiltinType(symbols.BuiltinType.Null);\n            case undefined:\n                return this.query.getBuiltinType(symbols.BuiltinType.Undefined);\n            default:\n                switch (typeof ast.value) {\n                    case 'string':\n                        return this.query.getBuiltinType(symbols.BuiltinType.String);\n                    case 'number':\n                        return this.query.getBuiltinType(symbols.BuiltinType.Number);\n                    default:\n                        return this.reportError('Unrecognized primitive', ast);\n                }\n        }\n    };\n    AstType.prototype.visitMethodCall = function (ast) {\n        return this.resolveMethodCall(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPipe = function (ast) {\n        var _this = this;\n        // The type of a pipe node is the return type of the pipe's transform method. The table returned\n        // by getPipes() is expected to contain symbols with the corresponding transform method type.\n        var pipe = this.query.getPipes().get(ast.name);\n        if (!pipe)\n            return this.reportError(\"No pipe by the name \" + ast.name + \" found\", ast);\n        var expType = this.getType(ast.exp);\n        var signature = pipe.selectSignature([expType].concat(ast.args.map(function (arg) { return _this.getType(arg); })));\n        if (!signature)\n            return this.reportError('Unable to resolve signature for pipe invocation', ast);\n        return signature.result;\n    };\n    AstType.prototype.visitPrefixNot = function (ast) {\n        // The type of a prefix ! is always boolean.\n        return this.query.getBuiltinType(symbols.BuiltinType.Boolean);\n    };\n    AstType.prototype.visitNonNullAssert = function (ast) {\n        var expressionType = this.getType(ast.expression);\n        return this.query.getNonNullableType(expressionType);\n    };\n    AstType.prototype.visitPropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.getType(ast.receiver), ast);\n    };\n    AstType.prototype.visitPropertyWrite = function (ast) {\n        // The type of a write is the type of the value being written.\n        return this.getType(ast.value);\n    };\n    AstType.prototype.visitQuote = function (ast) {\n        // The type of a quoted expression is any.\n        return this.query.getBuiltinType(symbols.BuiltinType.Any);\n    };\n    AstType.prototype.visitSafeMethodCall = function (ast) {\n        return this.resolveMethodCall(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    AstType.prototype.visitSafePropertyRead = function (ast) {\n        return this.resolvePropertyRead(this.query.getNonNullableType(this.getType(ast.receiver)), ast);\n    };\n    Object.defineProperty(AstType.prototype, \"anyType\", {\n        get: function () {\n            var result = this._anyType;\n            if (!result) {\n                result = this._anyType = this.query.getBuiltinType(symbols.BuiltinType.Any);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AstType.prototype, \"undefinedType\", {\n        get: function () {\n            var result = this._undefinedType;\n            if (!result) {\n                result = this._undefinedType = this.query.getBuiltinType(symbols.BuiltinType.Undefined);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AstType.prototype.resolveMethodCall = function (receiverType, ast) {\n        var _this = this;\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a method is the selected methods result type.\n        var method = receiverType.members().get(ast.name);\n        if (!method)\n            return this.reportError(\"Unknown method '\" + ast.name + \"'\", ast);\n        if (!method.type)\n            return this.reportError(\"Could not find a type for '\" + ast.name + \"'\", ast);\n        if (!method.type.callable)\n            return this.reportError(\"Member '\" + ast.name + \"' is not callable\", ast);\n        var signature = method.type.selectSignature(ast.args.map(function (arg) { return _this.getType(arg); }));\n        if (!signature)\n            return this.reportError(\"Unable to resolve signature for call of method \" + ast.name, ast);\n        return signature.result;\n    };\n    AstType.prototype.resolvePropertyRead = function (receiverType, ast) {\n        if (this.isAny(receiverType)) {\n            return this.anyType;\n        }\n        // The type of a property read is the seelcted member's type.\n        var member = receiverType.members().get(ast.name);\n        if (!member) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo =\n                    'The component declaration, template variable declarations, and element references do';\n            }\n            else if (receiverType.nullable) {\n                return this.reportError(\"The expression might be null\", ast.receiver);\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"' does\";\n            }\n            return this.reportError(\"Identifier '\" + ast.name + \"' is not defined. \" + receiverInfo + \" not contain such a member\", ast);\n        }\n        if (!member.public) {\n            var receiverInfo = receiverType.name;\n            if (receiverInfo == '$implict') {\n                receiverInfo = 'the component';\n            }\n            else {\n                receiverInfo = \"'\" + receiverInfo + \"'\";\n            }\n            this.reportWarning(\"Identifier '\" + ast.name + \"' refers to a private member of \" + receiverInfo, ast);\n        }\n        return member.type;\n    };\n    AstType.prototype.reportError = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Error, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.reportWarning = function (message, ast) {\n        if (this.diagnostics) {\n            this.diagnostics.push(new TypeDiagnostic(DiagnosticKind.Warning, message, ast));\n        }\n        return this.anyType;\n    };\n    AstType.prototype.isAny = function (symbol) {\n        return !symbol || this.query.getTypeKind(symbol) == symbols.BuiltinType.Any ||\n            (!!symbol.type && this.isAny(symbol.type));\n    };\n    return AstType;\n}());\nexports.AstType = AstType;\n\n});\n\nvar expression_diagnostics = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nfunction getTemplateExpressionDiagnostics(info) {\n    var visitor = new ExpressionDiagnosticsVisitor(info, function (path$$1, includeEvent) {\n        return getExpressionScope(info, path$$1, includeEvent);\n    });\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return visitor.diagnostics;\n}\nexports.getTemplateExpressionDiagnostics = getTemplateExpressionDiagnostics;\nfunction getExpressionDiagnostics(scope, ast, query, context) {\n    if (context === void 0) { context = {}; }\n    var analyzer = new expression_type.AstType(scope, query, context);\n    analyzer.getDiagnostics(ast);\n    return analyzer.diagnostics;\n}\nexports.getExpressionDiagnostics = getExpressionDiagnostics;\nfunction getReferences(info) {\n    var result = [];\n    function processReferences(references) {\n        var _loop_1 = function (reference) {\n            var type = undefined;\n            if (reference.value) {\n                type = info.query.getTypeSymbol(compiler_1.tokenReference(reference.value));\n            }\n            result.push({\n                name: reference.name,\n                kind: 'reference',\n                type: type || info.query.getBuiltinType(symbols.BuiltinType.Any),\n                get definition() { return getDefinitionOf(info, reference); }\n            });\n        };\n        for (var _i = 0, references_1 = references; _i < references_1.length; _i++) {\n            var reference = references_1[_i];\n            _loop_1(reference);\n        }\n    }\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            _super.prototype.visitElement.call(this, ast, context);\n            processReferences(ast.references);\n        };\n        return class_1;\n    }(compiler_1.RecursiveTemplateAstVisitor));\n    compiler_1.templateVisitAll(visitor, info.templateAst);\n    return result;\n}\nfunction getDefinitionOf(info, ast) {\n    if (info.fileName) {\n        var templateOffset = info.offset;\n        return [{\n                fileName: info.fileName,\n                span: {\n                    start: ast.sourceSpan.start.offset + templateOffset,\n                    end: ast.sourceSpan.end.offset + templateOffset\n                }\n            }];\n    }\n}\nfunction getVarDeclarations(info, path$$1) {\n    var result = [];\n    var current = path$$1.tail;\n    while (current) {\n        if (current instanceof compiler_1.EmbeddedTemplateAst) {\n            var _loop_2 = function (variable) {\n                var name_1 = variable.name;\n                // Find the first directive with a context.\n                var context = current.directives.map(function (d) { return info.query.getTemplateContext(d.directive.type.reference); })\n                    .find(function (c) { return !!c; });\n                // Determine the type of the context field referenced by variable.value.\n                var type = undefined;\n                if (context) {\n                    var value = context.get(variable.value);\n                    if (value) {\n                        type = value.type;\n                        var kind = info.query.getTypeKind(type);\n                        if (kind === symbols.BuiltinType.Any || kind == symbols.BuiltinType.Unbound) {\n                            // The any type is not very useful here. For special cases, such as ngFor, we can do\n                            // better.\n                            type = refinedVariableType(type, info, current);\n                        }\n                    }\n                }\n                if (!type) {\n                    type = info.query.getBuiltinType(symbols.BuiltinType.Any);\n                }\n                result.push({\n                    name: name_1,\n                    kind: 'variable', type: type, get definition() { return getDefinitionOf(info, variable); }\n                });\n            };\n            for (var _i = 0, _a = current.variables; _i < _a.length; _i++) {\n                var variable = _a[_i];\n                _loop_2(variable);\n            }\n        }\n        current = path$$1.parentOf(current);\n    }\n    return result;\n}\nfunction refinedVariableType(type, info, templateElement) {\n    // Special case the ngFor directive\n    var ngForDirective = templateElement.directives.find(function (d) {\n        var name = compiler_1.identifierName(d.directive.type);\n        return name == 'NgFor' || name == 'NgForOf';\n    });\n    if (ngForDirective) {\n        var ngForOfBinding = ngForDirective.inputs.find(function (i) { return i.directiveName == 'ngForOf'; });\n        if (ngForOfBinding) {\n            var bindingType = new expression_type.AstType(info.members, info.query, {}).getType(ngForOfBinding.value);\n            if (bindingType) {\n                var result = info.query.getElementType(bindingType);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n    }\n    // We can't do better, return any\n    return info.query.getBuiltinType(symbols.BuiltinType.Any);\n}\nfunction getEventDeclaration(info, includeEvent) {\n    var result = [];\n    if (includeEvent) {\n        // TODO: Determine the type of the event parameter based on the Observable<T> or EventEmitter<T>\n        // of the event.\n        result = [{ name: '$event', kind: 'variable', type: info.query.getBuiltinType(symbols.BuiltinType.Any) }];\n    }\n    return result;\n}\nfunction getExpressionScope(info, path$$1, includeEvent) {\n    var result = info.members;\n    var references = getReferences(info);\n    var variables = getVarDeclarations(info, path$$1);\n    var events = getEventDeclaration(info, includeEvent);\n    if (references.length || variables.length || events.length) {\n        var referenceTable = info.query.createSymbolTable(references);\n        var variableTable = info.query.createSymbolTable(variables);\n        var eventsTable = info.query.createSymbolTable(events);\n        result = info.query.mergeSymbolTable([result, referenceTable, variableTable, eventsTable]);\n    }\n    return result;\n}\nexports.getExpressionScope = getExpressionScope;\nvar ExpressionDiagnosticsVisitor = (function (_super) {\n    __extends(ExpressionDiagnosticsVisitor, _super);\n    function ExpressionDiagnosticsVisitor(info, getExpressionScope) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.getExpressionScope = getExpressionScope;\n        _this.diagnostics = [];\n        _this.path = new compiler_1.AstPath([]);\n        return _this;\n    }\n    ExpressionDiagnosticsVisitor.prototype.visitDirective = function (ast, context) {\n        // Override the default child visitor to ignore the host properties of a directive.\n        if (ast.inputs && ast.inputs.length) {\n            compiler_1.templateVisitAll(this, ast.inputs, context);\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitBoundText = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, ast.sourceSpan.start.offset, false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElementProperty = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEvent = function (ast) {\n        this.push(ast);\n        this.diagnoseExpression(ast.handler, this.attributeValueLocation(ast), true);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitVariable = function (ast) {\n        var directive = this.directiveSummary;\n        if (directive && ast.value) {\n            var context = this.info.query.getTemplateContext(directive.type.reference);\n            if (context && !context.has(ast.value)) {\n                if (ast.value === '$implicit') {\n                    this.reportError('The template context does not have an implicit value', spanOf(ast.sourceSpan));\n                }\n                else {\n                    this.reportError(\"The template context does not defined a member called '\" + ast.value + \"'\", spanOf(ast.sourceSpan));\n                }\n            }\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitElement = function (ast, context) {\n        this.push(ast);\n        _super.prototype.visitElement.call(this, ast, context);\n        this.pop();\n    };\n    ExpressionDiagnosticsVisitor.prototype.visitEmbeddedTemplate = function (ast, context) {\n        var previousDirectiveSummary = this.directiveSummary;\n        this.push(ast);\n        // Find directive that refernces this template\n        this.directiveSummary =\n            ast.directives.map(function (d) { return d.directive; }).find(function (d) { return hasTemplateReference(d.type); });\n        // Process children\n        _super.prototype.visitEmbeddedTemplate.call(this, ast, context);\n        this.pop();\n        this.directiveSummary = previousDirectiveSummary;\n    };\n    ExpressionDiagnosticsVisitor.prototype.attributeValueLocation = function (ast) {\n        var path$$1 = compiler_1.findNode(this.info.htmlAst, ast.sourceSpan.start.offset);\n        var last = path$$1.tail;\n        if (last instanceof compiler_1.Attribute && last.valueSpan) {\n            // Add 1 for the quote.\n            return last.valueSpan.start.offset + 1;\n        }\n        return ast.sourceSpan.start.offset;\n    };\n    ExpressionDiagnosticsVisitor.prototype.diagnoseExpression = function (ast, offset, includeEvent) {\n        var _this = this;\n        var scope = this.getExpressionScope(this.path, includeEvent);\n        (_a = this.diagnostics).push.apply(_a, getExpressionDiagnostics(scope, ast, this.info.query, {\n            event: includeEvent\n        }).map(function (d) { return ({\n            span: offsetSpan(d.ast.span, offset + _this.info.offset),\n            kind: d.kind,\n            message: d.message\n        }); }));\n        var _a;\n    };\n    ExpressionDiagnosticsVisitor.prototype.push = function (ast) { this.path.push(ast); };\n    ExpressionDiagnosticsVisitor.prototype.pop = function () { this.path.pop(); };\n    ExpressionDiagnosticsVisitor.prototype.reportError = function (message, span) {\n        if (span) {\n            this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Error, message: message });\n        }\n    };\n    ExpressionDiagnosticsVisitor.prototype.reportWarning = function (message, span) {\n        this.diagnostics.push({ span: offsetSpan(span, this.info.offset), kind: expression_type.DiagnosticKind.Warning, message: message });\n    };\n    return ExpressionDiagnosticsVisitor;\n}(compiler_1.RecursiveTemplateAstVisitor));\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                compiler_1.identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction spanOf(sourceSpan) {\n    return { start: sourceSpan.start.offset, end: sourceSpan.end.offset };\n}\n\n});\n\nvar typescript_symbols = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n// In TypeScript 2.1 these flags moved\n// These helpers work for both 2.0 and 2.1.\nvar isPrivate = ts__default.ModifierFlags ?\n    (function (node) {\n        return !!(ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Private);\n    }) :\n    (function (node) { return !!(node.flags & ts__default.NodeFlags.Private); });\nvar isReferenceType = ts__default.ObjectFlags ?\n    (function (type) {\n        return !!(type.flags & ts__default.TypeFlags.Object &&\n            type.objectFlags & ts__default.ObjectFlags.Reference);\n    }) :\n    (function (type) { return !!(type.flags & ts__default.TypeFlags.Reference); });\nfunction getSymbolQuery(program, checker, source, fetchPipes) {\n    return new TypeScriptSymbolQuery(program, checker, source, fetchPipes);\n}\nexports.getSymbolQuery = getSymbolQuery;\nfunction getClassMembers(program, checker, staticSymbol) {\n    var declaration = getClassFromStaticSymbol(program, staticSymbol);\n    if (declaration) {\n        var type = checker.getTypeAtLocation(declaration);\n        var node = program.getSourceFile(staticSymbol.filePath);\n        return new TypeWrapper(type, { node: node, program: program, checker: checker }).members();\n    }\n}\nexports.getClassMembers = getClassMembers;\nfunction getClassMembersFromDeclaration(program, checker, source, declaration) {\n    var type = checker.getTypeAtLocation(declaration);\n    return new TypeWrapper(type, { node: source, program: program, checker: checker }).members();\n}\nexports.getClassMembersFromDeclaration = getClassMembersFromDeclaration;\nfunction getClassFromStaticSymbol(program, type) {\n    var source = program.getSourceFile(type.filePath);\n    if (source) {\n        return ts__default.forEachChild(source, function (child) {\n            if (child.kind === ts__default.SyntaxKind.ClassDeclaration) {\n                var classDeclaration = child;\n                if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                    return classDeclaration;\n                }\n            }\n        });\n    }\n    return undefined;\n}\nexports.getClassFromStaticSymbol = getClassFromStaticSymbol;\nfunction getPipesTable(source, program, checker, pipes) {\n    return new PipesTable(pipes, { program: program, checker: checker, node: source });\n}\nexports.getPipesTable = getPipesTable;\nvar TypeScriptSymbolQuery = (function () {\n    function TypeScriptSymbolQuery(program, checker, source, fetchPipes) {\n        this.program = program;\n        this.checker = checker;\n        this.source = source;\n        this.fetchPipes = fetchPipes;\n        this.typeCache = new Map();\n    }\n    TypeScriptSymbolQuery.prototype.getTypeKind = function (symbol) { return typeKindOf(this.getTsTypeOf(symbol)); };\n    TypeScriptSymbolQuery.prototype.getBuiltinType = function (kind) {\n        var result = this.typeCache.get(kind);\n        if (!result) {\n            var type = getBuiltinTypeFromTs(kind, { checker: this.checker, node: this.source, program: this.program });\n            result =\n                new TypeWrapper(type, { program: this.program, checker: this.checker, node: this.source });\n            this.typeCache.set(kind, result);\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeUnion = function () {\n        var types = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            types[_i] = arguments[_i];\n        }\n        // No API exists so return any if the types are not all the same type.\n        var result = undefined;\n        if (types.length) {\n            result = types[0];\n            for (var i = 1; i < types.length; i++) {\n                if (types[i] != result) {\n                    result = undefined;\n                    break;\n                }\n            }\n        }\n        return result || this.getBuiltinType(symbols.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getArrayType = function (type) { return this.getBuiltinType(symbols.BuiltinType.Any); };\n    TypeScriptSymbolQuery.prototype.getElementType = function (type) {\n        if (type instanceof TypeWrapper) {\n            var elementType = getTypeParameterOf(type.tsType, 'Array');\n            if (elementType) {\n                return new TypeWrapper(elementType, type.context);\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getNonNullableType = function (symbol) {\n        if (symbol instanceof TypeWrapper && (typeof this.checker.getNonNullableType == 'function')) {\n            var tsType = symbol.tsType;\n            var nonNullableType = this.checker.getNonNullableType(tsType);\n            if (nonNullableType != tsType) {\n                return new TypeWrapper(nonNullableType, symbol.context);\n            }\n            else if (nonNullableType == tsType) {\n                return symbol;\n            }\n        }\n        return this.getBuiltinType(symbols.BuiltinType.Any);\n    };\n    TypeScriptSymbolQuery.prototype.getPipes = function () {\n        var result = this.pipesCache;\n        if (!result) {\n            result = this.pipesCache = this.fetchPipes();\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateContext = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        if (typeSymbol) {\n            var contextType = this.getTemplateRefContextType(typeSymbol);\n            if (contextType)\n                return new SymbolWrapper(contextType, context).members();\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTypeSymbol = function (type) {\n        var context = { node: this.source, program: this.program, checker: this.checker };\n        var typeSymbol = findClassSymbolInContext(type, context);\n        return typeSymbol && new SymbolWrapper(typeSymbol, context);\n    };\n    TypeScriptSymbolQuery.prototype.createSymbolTable = function (symbols$$2) {\n        var result = new MapSymbolTable();\n        result.addAll(symbols$$2.map(function (s) { return new DeclaredSymbol(s); }));\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.mergeSymbolTable = function (symbolTables) {\n        var result = new MapSymbolTable();\n        for (var _i = 0, symbolTables_1 = symbolTables; _i < symbolTables_1.length; _i++) {\n            var symbolTable = symbolTables_1[_i];\n            result.addAll(symbolTable.values());\n        }\n        return result;\n    };\n    TypeScriptSymbolQuery.prototype.getSpanAt = function (line, column) {\n        return spanAt(this.source, line, column);\n    };\n    TypeScriptSymbolQuery.prototype.getTemplateRefContextType = function (typeSymbol) {\n        var type = this.checker.getTypeOfSymbolAtLocation(typeSymbol, this.source);\n        var constructor = type.symbol && type.symbol.members &&\n            getFromSymbolTable(type.symbol.members, '__constructor');\n        if (constructor) {\n            var constructorDeclaration = constructor.declarations[0];\n            for (var _i = 0, _a = constructorDeclaration.parameters; _i < _a.length; _i++) {\n                var parameter = _a[_i];\n                var type_1 = this.checker.getTypeAtLocation(parameter.type);\n                if (type_1.symbol.name == 'TemplateRef' && isReferenceType(type_1)) {\n                    var typeReference = type_1;\n                    if (typeReference.typeArguments && typeReference.typeArguments.length === 1) {\n                        return typeReference.typeArguments[0].symbol;\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptSymbolQuery.prototype.getTsTypeOf = function (symbol) {\n        var type = this.getTypeWrapper(symbol);\n        return type && type.tsType;\n    };\n    TypeScriptSymbolQuery.prototype.getTypeWrapper = function (symbol) {\n        var type = undefined;\n        if (symbol instanceof TypeWrapper) {\n            type = symbol;\n        }\n        else if (symbol.type instanceof TypeWrapper) {\n            type = symbol.type;\n        }\n        return type;\n    };\n    return TypeScriptSymbolQuery;\n}());\nfunction typeCallable(type) {\n    var signatures = type.getCallSignatures();\n    return signatures && signatures.length != 0;\n}\nfunction signaturesOf(type, context) {\n    return type.getCallSignatures().map(function (s) { return new SignatureWrapper(s, context); });\n}\nfunction selectSignature(type, context, types) {\n    // TODO: Do a better job of selecting the right signature.\n    var signatures = type.getCallSignatures();\n    return signatures.length ? new SignatureWrapper(signatures[0], context) : undefined;\n}\nvar TypeWrapper = (function () {\n    function TypeWrapper(tsType, context) {\n        this.tsType = tsType;\n        this.context = context;\n        this.kind = 'type';\n        this.language = 'typescript';\n        this.type = undefined;\n        this.container = undefined;\n        this.public = true;\n        if (!tsType) {\n            throw Error('Internal: null type');\n        }\n    }\n    Object.defineProperty(TypeWrapper.prototype, \"name\", {\n        get: function () {\n            var symbol = this.tsType.symbol;\n            return (symbol && symbol.name) || '<anonymous>';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"nullable\", {\n        get: function () {\n            return this.context.checker.getNonNullableType(this.tsType) != this.tsType;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeWrapper.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeWrapper.prototype.members = function () {\n        return new SymbolTableWrapper(this.tsType.getProperties(), this.context);\n    };\n    TypeWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    TypeWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    TypeWrapper.prototype.indexed = function (argument) { return undefined; };\n    return TypeWrapper;\n}());\nvar SymbolWrapper = (function () {\n    function SymbolWrapper(symbol, context) {\n        this.context = context;\n        this.nullable = false;\n        this.language = 'typescript';\n        this.symbol = symbol && context && (symbol.flags & ts__default.SymbolFlags.Alias) ?\n            context.checker.getAliasedSymbol(symbol) :\n            symbol;\n    }\n    Object.defineProperty(SymbolWrapper.prototype, \"name\", {\n        get: function () { return this.symbol.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"kind\", {\n        get: function () { return this.callable ? 'method' : 'property'; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"container\", {\n        get: function () { return getContainerOf(this.symbol, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"public\", {\n        get: function () {\n            // Symbols that are not explicitly made private are public.\n            return !isSymbolPrivate(this.symbol);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"callable\", {\n        get: function () { return typeCallable(this.tsType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SymbolWrapper.prototype, \"definition\", {\n        get: function () { return definitionFromTsSymbol(this.symbol); },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolWrapper.prototype.members = function () {\n        if (!this._members) {\n            if ((this.symbol.flags & (ts__default.SymbolFlags.Class | ts__default.SymbolFlags.Interface)) != 0) {\n                var declaredType = this.context.checker.getDeclaredTypeOfSymbol(this.symbol);\n                var typeWrapper = new TypeWrapper(declaredType, this.context);\n                this._members = typeWrapper.members();\n            }\n            else {\n                this._members = new SymbolTableWrapper(this.symbol.members, this.context);\n            }\n        }\n        return this._members;\n    };\n    SymbolWrapper.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    SymbolWrapper.prototype.selectSignature = function (types) {\n        return selectSignature(this.tsType, this.context, types);\n    };\n    SymbolWrapper.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(SymbolWrapper.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                type = this._tsType =\n                    this.context.checker.getTypeOfSymbolAtLocation(this.symbol, this.context.node);\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SymbolWrapper;\n}());\nvar DeclaredSymbol = (function () {\n    function DeclaredSymbol(declaration) {\n        this.declaration = declaration;\n        this.language = 'ng-template';\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(DeclaredSymbol.prototype, \"name\", {\n        get: function () { return this.declaration.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"kind\", {\n        get: function () { return this.declaration.kind; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"container\", {\n        get: function () { return undefined; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"type\", {\n        get: function () { return this.declaration.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"callable\", {\n        get: function () { return this.declaration.type.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DeclaredSymbol.prototype, \"definition\", {\n        get: function () { return this.declaration.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    DeclaredSymbol.prototype.members = function () { return this.declaration.type.members(); };\n    DeclaredSymbol.prototype.signatures = function () { return this.declaration.type.signatures(); };\n    DeclaredSymbol.prototype.selectSignature = function (types) {\n        return this.declaration.type.selectSignature(types);\n    };\n    DeclaredSymbol.prototype.indexed = function (argument) { return undefined; };\n    return DeclaredSymbol;\n}());\nvar SignatureWrapper = (function () {\n    function SignatureWrapper(signature, context) {\n        this.signature = signature;\n        this.context = context;\n    }\n    Object.defineProperty(SignatureWrapper.prototype, \"arguments\", {\n        get: function () {\n            return new SymbolTableWrapper(this.signature.getParameters(), this.context);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureWrapper.prototype, \"result\", {\n        get: function () { return new TypeWrapper(this.signature.getReturnType(), this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureWrapper;\n}());\nvar SignatureResultOverride = (function () {\n    function SignatureResultOverride(signature, resultType) {\n        this.signature = signature;\n        this.resultType = resultType;\n    }\n    Object.defineProperty(SignatureResultOverride.prototype, \"arguments\", {\n        get: function () { return this.signature.arguments; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SignatureResultOverride.prototype, \"result\", {\n        get: function () { return this.resultType; },\n        enumerable: true,\n        configurable: true\n    });\n    return SignatureResultOverride;\n}());\nvar toSymbolTable = isTypescriptVersion('2.2') ?\n    (function (symbols$$2) {\n        var result = new Map();\n        for (var _i = 0, symbols_2 = symbols$$2; _i < symbols_2.length; _i++) {\n            var symbol = symbols_2[_i];\n            result.set(symbol.name, symbol);\n        }\n        return result;\n    }) :\n    (function (symbols$$2) {\n        var result = {};\n        for (var _i = 0, symbols_3 = symbols$$2; _i < symbols_3.length; _i++) {\n            var symbol = symbols_3[_i];\n            result[symbol.name] = symbol;\n        }\n        return result;\n    });\nfunction toSymbols(symbolTable) {\n    if (!symbolTable)\n        return [];\n    var table = symbolTable;\n    if (typeof table.values === 'function') {\n        return Array.from(table.values());\n    }\n    var result = [];\n    var own = typeof table.hasOwnProperty === 'function' ?\n        function (name) { return table.hasOwnProperty(name); } :\n        function (name) { return !!table[name]; };\n    for (var name_1 in table) {\n        if (own(name_1)) {\n            result.push(table[name_1]);\n        }\n    }\n    return result;\n}\nvar SymbolTableWrapper = (function () {\n    function SymbolTableWrapper(symbols$$2, context) {\n        this.context = context;\n        symbols$$2 = symbols$$2 || [];\n        if (Array.isArray(symbols$$2)) {\n            this.symbols = symbols$$2;\n            this.symbolTable = toSymbolTable(symbols$$2);\n        }\n        else {\n            this.symbols = toSymbols(symbols$$2);\n            this.symbolTable = symbols$$2;\n        }\n    }\n    Object.defineProperty(SymbolTableWrapper.prototype, \"size\", {\n        get: function () { return this.symbols.length; },\n        enumerable: true,\n        configurable: true\n    });\n    SymbolTableWrapper.prototype.get = function (key) {\n        var symbol = getFromSymbolTable(this.symbolTable, key);\n        return symbol ? new SymbolWrapper(symbol, this.context) : undefined;\n    };\n    SymbolTableWrapper.prototype.has = function (key) {\n        var table = this.symbolTable;\n        return (typeof table.has === 'function') ? table.has(key) : table[key] != null;\n    };\n    SymbolTableWrapper.prototype.values = function () {\n        var _this = this;\n        return this.symbols.map(function (s) { return new SymbolWrapper(s, _this.context); });\n    };\n    return SymbolTableWrapper;\n}());\nvar MapSymbolTable = (function () {\n    function MapSymbolTable() {\n        this.map = new Map();\n        this._values = [];\n    }\n    Object.defineProperty(MapSymbolTable.prototype, \"size\", {\n        get: function () { return this.map.size; },\n        enumerable: true,\n        configurable: true\n    });\n    MapSymbolTable.prototype.get = function (key) { return this.map.get(key); };\n    MapSymbolTable.prototype.add = function (symbol) {\n        if (this.map.has(symbol.name)) {\n            var previous = this.map.get(symbol.name);\n            this._values[this._values.indexOf(previous)] = symbol;\n        }\n        this.map.set(symbol.name, symbol);\n        this._values.push(symbol);\n    };\n    MapSymbolTable.prototype.addAll = function (symbols$$2) {\n        for (var _i = 0, symbols_4 = symbols$$2; _i < symbols_4.length; _i++) {\n            var symbol = symbols_4[_i];\n            this.add(symbol);\n        }\n    };\n    MapSymbolTable.prototype.has = function (key) { return this.map.has(key); };\n    MapSymbolTable.prototype.values = function () {\n        // Switch to this.map.values once iterables are supported by the target language.\n        return this._values;\n    };\n    return MapSymbolTable;\n}());\nvar PipesTable = (function () {\n    function PipesTable(pipes, context) {\n        this.pipes = pipes;\n        this.context = context;\n    }\n    Object.defineProperty(PipesTable.prototype, \"size\", {\n        get: function () { return this.pipes.length; },\n        enumerable: true,\n        configurable: true\n    });\n    PipesTable.prototype.get = function (key) {\n        var pipe = this.pipes.find(function (pipe) { return pipe.name == key; });\n        if (pipe) {\n            return new PipeSymbol(pipe, this.context);\n        }\n    };\n    PipesTable.prototype.has = function (key) { return this.pipes.find(function (pipe) { return pipe.name == key; }) != null; };\n    PipesTable.prototype.values = function () {\n        var _this = this;\n        return this.pipes.map(function (pipe) { return new PipeSymbol(pipe, _this.context); });\n    };\n    return PipesTable;\n}());\nvar PipeSymbol = (function () {\n    function PipeSymbol(pipe, context) {\n        this.pipe = pipe;\n        this.context = context;\n        this.kind = 'pipe';\n        this.language = 'typescript';\n        this.container = undefined;\n        this.callable = true;\n        this.nullable = false;\n        this.public = true;\n    }\n    Object.defineProperty(PipeSymbol.prototype, \"name\", {\n        get: function () { return this.pipe.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"type\", {\n        get: function () { return new TypeWrapper(this.tsType, this.context); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PipeSymbol.prototype, \"definition\", {\n        get: function () {\n            var symbol = this.tsType.getSymbol();\n            return symbol ? definitionFromTsSymbol(symbol) : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.members = function () { return EmptyTable.instance; };\n    PipeSymbol.prototype.signatures = function () { return signaturesOf(this.tsType, this.context); };\n    PipeSymbol.prototype.selectSignature = function (types) {\n        var signature = selectSignature(this.tsType, this.context, types);\n        if (types.length == 1) {\n            var parameterType = types[0];\n            if (parameterType instanceof TypeWrapper) {\n                var resultType = undefined;\n                switch (this.name) {\n                    case 'async':\n                        switch (parameterType.name) {\n                            case 'Observable':\n                            case 'Promise':\n                            case 'EventEmitter':\n                                resultType = getTypeParameterOf(parameterType.tsType, parameterType.name);\n                                break;\n                            default:\n                                resultType = getBuiltinTypeFromTs(symbols.BuiltinType.Any, this.context);\n                                break;\n                        }\n                        break;\n                    case 'slice':\n                        resultType = getTypeParameterOf(parameterType.tsType, 'Array');\n                        break;\n                }\n                if (resultType) {\n                    signature = new SignatureResultOverride(signature, new TypeWrapper(resultType, parameterType.context));\n                }\n            }\n        }\n        return signature;\n    };\n    PipeSymbol.prototype.indexed = function (argument) { return undefined; };\n    Object.defineProperty(PipeSymbol.prototype, \"tsType\", {\n        get: function () {\n            var type = this._tsType;\n            if (!type) {\n                var classSymbol = this.findClassSymbol(this.pipe.type.reference);\n                if (classSymbol) {\n                    type = this._tsType = this.findTransformMethodType(classSymbol);\n                }\n                if (!type) {\n                    type = this._tsType = getBuiltinTypeFromTs(symbols.BuiltinType.Any, this.context);\n                }\n            }\n            return type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PipeSymbol.prototype.findClassSymbol = function (type) {\n        return findClassSymbolInContext(type, this.context);\n    };\n    PipeSymbol.prototype.findTransformMethodType = function (classSymbol) {\n        var classType = this.context.checker.getDeclaredTypeOfSymbol(classSymbol);\n        if (classType) {\n            var transform = classType.getProperty('transform');\n            if (transform) {\n                return this.context.checker.getTypeOfSymbolAtLocation(transform, this.context.node);\n            }\n        }\n    };\n    return PipeSymbol;\n}());\nfunction findClassSymbolInContext(type, context) {\n    var sourceFile = context.program.getSourceFile(type.filePath);\n    if (sourceFile) {\n        var moduleSymbol = sourceFile.module || sourceFile.symbol;\n        var exports_1 = context.checker.getExportsOfModule(moduleSymbol);\n        return (exports_1 || []).find(function (symbol) { return symbol.name == type.name; });\n    }\n}\nvar EmptyTable = (function () {\n    function EmptyTable() {\n        this.size = 0;\n    }\n    EmptyTable.prototype.get = function (key) { return undefined; };\n    EmptyTable.prototype.has = function (key) { return false; };\n    EmptyTable.prototype.values = function () { return []; };\n    EmptyTable.instance = new EmptyTable();\n    return EmptyTable;\n}());\nfunction isSymbolPrivate(s) {\n    return !!s.valueDeclaration && isPrivate(s.valueDeclaration);\n}\nfunction getBuiltinTypeFromTs(kind, context) {\n    var type;\n    var checker = context.checker;\n    var node = context.node;\n    switch (kind) {\n        case symbols.BuiltinType.Any:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.AsExpression,\n                expression: { kind: ts__default.SyntaxKind.TrueKeyword },\n                type: { kind: ts__default.SyntaxKind.AnyKeyword }\n            }, node));\n            break;\n        case symbols.BuiltinType.Boolean:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.TrueKeyword }, node));\n            break;\n        case symbols.BuiltinType.Null:\n            type =\n                checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NullKeyword }, node));\n            break;\n        case symbols.BuiltinType.Number:\n            var numeric = { kind: ts__default.SyntaxKind.NumericLiteral };\n            setParents({ kind: ts__default.SyntaxKind.ExpressionStatement, expression: numeric }, node);\n            type = checker.getTypeAtLocation(numeric);\n            break;\n        case symbols.BuiltinType.String:\n            type = checker.getTypeAtLocation(setParents({ kind: ts__default.SyntaxKind.NoSubstitutionTemplateLiteral }, node));\n            break;\n        case symbols.BuiltinType.Undefined:\n            type = checker.getTypeAtLocation(setParents({\n                kind: ts__default.SyntaxKind.VoidExpression,\n                expression: { kind: ts__default.SyntaxKind.NumericLiteral }\n            }, node));\n            break;\n        default:\n            throw new Error(\"Internal error, unhandled literal kind \" + kind + \":\" + symbols.BuiltinType[kind]);\n    }\n    return type;\n}\nfunction setParents(node, parent) {\n    node.parent = parent;\n    ts__default.forEachChild(node, function (child) { return setParents(child, node); });\n    return node;\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts__default.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts__default.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts__default.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts__default.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\nfunction definitionFromTsSymbol(symbol) {\n    var declarations = symbol.declarations;\n    if (declarations) {\n        return declarations.map(function (declaration) {\n            var sourceFile = declaration.getSourceFile();\n            return {\n                fileName: sourceFile.fileName,\n                span: { start: declaration.getStart(), end: declaration.getEnd() }\n            };\n        });\n    }\n}\nfunction parentDeclarationOf(node) {\n    while (node) {\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ClassDeclaration:\n            case ts__default.SyntaxKind.InterfaceDeclaration:\n                return node;\n            case ts__default.SyntaxKind.SourceFile:\n                return undefined;\n        }\n        node = node.parent;\n    }\n}\nfunction getContainerOf(symbol, context) {\n    if (symbol.getFlags() & ts__default.SymbolFlags.ClassMember && symbol.declarations) {\n        for (var _i = 0, _a = symbol.declarations; _i < _a.length; _i++) {\n            var declaration = _a[_i];\n            var parent_1 = parentDeclarationOf(declaration);\n            if (parent_1) {\n                var type = context.checker.getTypeAtLocation(parent_1);\n                if (type) {\n                    return new TypeWrapper(type, context);\n                }\n            }\n        }\n    }\n}\nfunction getTypeParameterOf(type, name) {\n    if (type && type.symbol && type.symbol.name == name) {\n        var typeArguments = type.typeArguments;\n        if (typeArguments && typeArguments.length <= 1) {\n            return typeArguments[0];\n        }\n    }\n}\nfunction typeKindOf(type) {\n    if (type) {\n        if (type.flags & ts__default.TypeFlags.Any) {\n            return symbols.BuiltinType.Any;\n        }\n        else if (type.flags & (ts__default.TypeFlags.String | ts__default.TypeFlags.StringLike | ts__default.TypeFlags.StringLiteral)) {\n            return symbols.BuiltinType.String;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Number | ts__default.TypeFlags.NumberLike)) {\n            return symbols.BuiltinType.Number;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Undefined)) {\n            return symbols.BuiltinType.Undefined;\n        }\n        else if (type.flags & (ts__default.TypeFlags.Null)) {\n            return symbols.BuiltinType.Null;\n        }\n        else if (type.flags & ts__default.TypeFlags.Union) {\n            // If all the constituent types of a union are the same kind, it is also that kind.\n            var candidate = null;\n            var unionType = type;\n            if (unionType.types.length > 0) {\n                candidate = typeKindOf(unionType.types[0]);\n                for (var _i = 0, _a = unionType.types; _i < _a.length; _i++) {\n                    var subType = _a[_i];\n                    if (candidate != typeKindOf(subType)) {\n                        return symbols.BuiltinType.Other;\n                    }\n                }\n            }\n            if (candidate != null) {\n                return candidate;\n            }\n        }\n        else if (type.flags & ts__default.TypeFlags.TypeParameter) {\n            return symbols.BuiltinType.Unbound;\n        }\n    }\n    return symbols.BuiltinType.Other;\n}\nfunction getFromSymbolTable(symbolTable, key) {\n    var table = symbolTable;\n    var symbol;\n    if (typeof table.get === 'function') {\n        // TS 2.2 uses a Map\n        symbol = table.get(key);\n    }\n    else {\n        // TS pre-2.2 uses an object\n        symbol = table[key];\n    }\n    return symbol;\n}\nfunction toNumbers(value) {\n    return value ? value.split('.').map(function (v) { return +v; }) : [];\n}\nfunction compareNumbers(a, b) {\n    for (var i = 0; i < a.length && i < b.length; i++) {\n        if (a[i] > b[i])\n            return 1;\n        if (a[i] < b[i])\n            return -1;\n    }\n    return 0;\n}\nfunction isTypescriptVersion(low, high) {\n    var tsNumbers = toNumbers(ts__default.version);\n    return compareNumbers(toNumbers(low), tsNumbers) <= 0 &&\n        compareNumbers(toNumbers(high), tsNumbers) >= 0;\n}\n\n});\n\nvar schema = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Metadata Schema\n// If you make a backwards incompatible change to the schema, increment the METADTA_VERSION number.\n// If you make a backwards compatible change to the metadata (such as adding an option field) then\n// leave METADATA_VERSION the same. If possible, supply as many versions of the metadata that can\n// represent the semantics of the file in an array. For example, when generating a version 2 file,\n// if version 1 can accurately represent the metadata, generate both version 1 and version 2 in\n// an array.\nexports.METADATA_VERSION = 4;\nfunction isModuleMetadata(value) {\n    return value && value.__symbolic === 'module';\n}\nexports.isModuleMetadata = isModuleMetadata;\nfunction isClassMetadata(value) {\n    return value && value.__symbolic === 'class';\n}\nexports.isClassMetadata = isClassMetadata;\nfunction isInterfaceMetadata(value) {\n    return value && value.__symbolic === 'interface';\n}\nexports.isInterfaceMetadata = isInterfaceMetadata;\nfunction isMemberMetadata(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'constructor':\n            case 'method':\n            case 'property':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMemberMetadata = isMemberMetadata;\nfunction isMethodMetadata(value) {\n    return value && (value.__symbolic === 'constructor' || value.__symbolic === 'method');\n}\nexports.isMethodMetadata = isMethodMetadata;\nfunction isConstructorMetadata(value) {\n    return value && value.__symbolic === 'constructor';\n}\nexports.isConstructorMetadata = isConstructorMetadata;\nfunction isFunctionMetadata(value) {\n    return value && value.__symbolic === 'function';\n}\nexports.isFunctionMetadata = isFunctionMetadata;\nfunction isMetadataSymbolicExpression(value) {\n    if (value) {\n        switch (value.__symbolic) {\n            case 'binary':\n            case 'call':\n            case 'index':\n            case 'new':\n            case 'pre':\n            case 'reference':\n            case 'select':\n            case 'spread':\n            case 'if':\n                return true;\n        }\n    }\n    return false;\n}\nexports.isMetadataSymbolicExpression = isMetadataSymbolicExpression;\nfunction isMetadataSymbolicBinaryExpression(value) {\n    return value && value.__symbolic === 'binary';\n}\nexports.isMetadataSymbolicBinaryExpression = isMetadataSymbolicBinaryExpression;\nfunction isMetadataSymbolicIndexExpression(value) {\n    return value && value.__symbolic === 'index';\n}\nexports.isMetadataSymbolicIndexExpression = isMetadataSymbolicIndexExpression;\nfunction isMetadataSymbolicCallExpression(value) {\n    return value && (value.__symbolic === 'call' || value.__symbolic === 'new');\n}\nexports.isMetadataSymbolicCallExpression = isMetadataSymbolicCallExpression;\nfunction isMetadataSymbolicPrefixExpression(value) {\n    return value && value.__symbolic === 'pre';\n}\nexports.isMetadataSymbolicPrefixExpression = isMetadataSymbolicPrefixExpression;\nfunction isMetadataSymbolicIfExpression(value) {\n    return value && value.__symbolic === 'if';\n}\nexports.isMetadataSymbolicIfExpression = isMetadataSymbolicIfExpression;\nfunction isMetadataGlobalReferenceExpression(value) {\n    return value && value.name && !value.module && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataGlobalReferenceExpression = isMetadataGlobalReferenceExpression;\nfunction isMetadataModuleReferenceExpression(value) {\n    return value && value.module && !value.name && !value.default &&\n        isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataModuleReferenceExpression = isMetadataModuleReferenceExpression;\nfunction isMetadataImportedSymbolReferenceExpression(value) {\n    return value && value.module && !!value.name && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportedSymbolReferenceExpression = isMetadataImportedSymbolReferenceExpression;\nfunction isMetadataImportDefaultReference(value) {\n    return value.module && value.default && isMetadataSymbolicReferenceExpression(value);\n}\nexports.isMetadataImportDefaultReference = isMetadataImportDefaultReference;\nfunction isMetadataSymbolicReferenceExpression(value) {\n    return value && value.__symbolic === 'reference';\n}\nexports.isMetadataSymbolicReferenceExpression = isMetadataSymbolicReferenceExpression;\nfunction isMetadataSymbolicSelectExpression(value) {\n    return value && value.__symbolic === 'select';\n}\nexports.isMetadataSymbolicSelectExpression = isMetadataSymbolicSelectExpression;\nfunction isMetadataSymbolicSpreadExpression(value) {\n    return value && value.__symbolic === 'spread';\n}\nexports.isMetadataSymbolicSpreadExpression = isMetadataSymbolicSpreadExpression;\nfunction isMetadataError(value) {\n    return value && value.__symbolic === 'error';\n}\nexports.isMetadataError = isMetadataError;\n\n});\n\nvar evaluator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n// In TypeScript 2.1 the spread element kind was renamed.\nvar spreadElementSyntaxKind = ts__default.SyntaxKind.SpreadElement || ts__default.SyntaxKind.SpreadElementExpression;\nfunction isMethodCallOf(callExpression, memberName) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.PropertyAccessExpression) {\n        var propertyAccessExpression = expression;\n        var name_1 = propertyAccessExpression.name;\n        if (name_1.kind == ts__default.SyntaxKind.Identifier) {\n            return name_1.text === memberName;\n        }\n    }\n    return false;\n}\nfunction isCallOf(callExpression, ident) {\n    var expression = callExpression.expression;\n    if (expression.kind === ts__default.SyntaxKind.Identifier) {\n        var identifier = expression;\n        return identifier.text === ident;\n    }\n    return false;\n}\n/**\n * ts.forEachChild stops iterating children when the callback return a truthy value.\n * This method inverts this to implement an `every` style iterator. It will return\n * true if every call to `cb` returns `true`.\n */\nfunction everyNodeChild(node, cb) {\n    return !ts__default.forEachChild(node, function (node) { return !cb(node); });\n}\nfunction isPrimitive(value) {\n    return Object(value) !== value;\n}\nexports.isPrimitive = isPrimitive;\nfunction isDefined(obj) {\n    return obj !== undefined;\n}\nfunction getSourceFileOfNode(node) {\n    while (node && node.kind != ts__default.SyntaxKind.SourceFile) {\n        node = node.parent;\n    }\n    return node;\n}\n/* @internal */\nfunction errorSymbol(message, node, context, sourceFile) {\n    var result = undefined;\n    if (node) {\n        sourceFile = sourceFile || getSourceFileOfNode(node);\n        if (sourceFile) {\n            var _a = ts__default.getLineAndCharacterOfPosition(sourceFile, node.getStart(sourceFile)), line = _a.line, character = _a.character;\n            result = { __symbolic: 'error', message: message, line: line, character: character };\n        }\n    }\n    if (!result) {\n        result = { __symbolic: 'error', message: message };\n    }\n    if (context) {\n        result.context = context;\n    }\n    return result;\n}\nexports.errorSymbol = errorSymbol;\n/**\n * Produce a symbolic representation of an expression folding values into their final value when\n * possible.\n */\nvar Evaluator = (function () {\n    function Evaluator(symbols, nodeMap, options, recordExport) {\n        if (options === void 0) { options = {}; }\n        this.symbols = symbols;\n        this.nodeMap = nodeMap;\n        this.options = options;\n        this.recordExport = recordExport;\n    }\n    Evaluator.prototype.nameOf = function (node) {\n        if (node && node.kind == ts__default.SyntaxKind.Identifier) {\n            return node.text;\n        }\n        var result = node && this.evaluateNode(node);\n        if (schema.isMetadataError(result) || typeof result === 'string') {\n            return result;\n        }\n        else {\n            return errorSymbol('Name expected', node, { received: (node && node.getText()) || '<missing>' });\n        }\n    };\n    /**\n     * Returns true if the expression represented by `node` can be folded into a literal expression.\n     *\n     * For example, a literal is always foldable. This means that literal expressions such as `1.2`\n     * `\"Some value\"` `true` `false` are foldable.\n     *\n     * - An object literal is foldable if all the properties in the literal are foldable.\n     * - An array literal is foldable if all the elements are foldable.\n     * - A call is foldable if it is a call to a Array.prototype.concat or a call to CONST_EXPR.\n     * - A property access is foldable if the object is foldable.\n     * - A array index is foldable if index expression is foldable and the array is foldable.\n     * - Binary operator expressions are foldable if the left and right expressions are foldable and\n     *   it is one of '+', '-', '*', '/', '%', '||', and '&&'.\n     * - An identifier is foldable if a value can be found for its symbol in the evaluator symbol\n     *   table.\n     */\n    Evaluator.prototype.isFoldable = function (node) {\n        return this.isFoldableWorker(node, new Map());\n    };\n    Evaluator.prototype.isFoldableWorker = function (node, folding) {\n        var _this = this;\n        if (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ObjectLiteralExpression:\n                    return everyNodeChild(node, function (child) {\n                        if (child.kind === ts__default.SyntaxKind.PropertyAssignment) {\n                            var propertyAssignment = child;\n                            return _this.isFoldableWorker(propertyAssignment.initializer, folding);\n                        }\n                        return false;\n                    });\n                case ts__default.SyntaxKind.ArrayLiteralExpression:\n                    return everyNodeChild(node, function (child) { return _this.isFoldableWorker(child, folding); });\n                case ts__default.SyntaxKind.CallExpression:\n                    var callExpression = node;\n                    // We can fold a <array>.concat(<v>).\n                    if (isMethodCallOf(callExpression, 'concat') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1) {\n                        var arrayNode = callExpression.expression.expression;\n                        if (this.isFoldableWorker(arrayNode, folding) &&\n                            this.isFoldableWorker(callExpression.arguments[0], folding)) {\n                            // It needs to be an array.\n                            var arrayValue = this.evaluateNode(arrayNode);\n                            if (arrayValue && Array.isArray(arrayValue)) {\n                                return true;\n                            }\n                        }\n                    }\n                    // We can fold a call to CONST_EXPR\n                    if (isCallOf(callExpression, 'CONST_EXPR') &&\n                        arrayOrEmpty(callExpression.arguments).length === 1)\n                        return this.isFoldableWorker(callExpression.arguments[0], folding);\n                    return false;\n                case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n                case ts__default.SyntaxKind.StringLiteral:\n                case ts__default.SyntaxKind.NumericLiteral:\n                case ts__default.SyntaxKind.NullKeyword:\n                case ts__default.SyntaxKind.TrueKeyword:\n                case ts__default.SyntaxKind.FalseKeyword:\n                case ts__default.SyntaxKind.TemplateHead:\n                case ts__default.SyntaxKind.TemplateMiddle:\n                case ts__default.SyntaxKind.TemplateTail:\n                    return true;\n                case ts__default.SyntaxKind.ParenthesizedExpression:\n                    var parenthesizedExpression = node;\n                    return this.isFoldableWorker(parenthesizedExpression.expression, folding);\n                case ts__default.SyntaxKind.BinaryExpression:\n                    var binaryExpression = node;\n                    switch (binaryExpression.operatorToken.kind) {\n                        case ts__default.SyntaxKind.PlusToken:\n                        case ts__default.SyntaxKind.MinusToken:\n                        case ts__default.SyntaxKind.AsteriskToken:\n                        case ts__default.SyntaxKind.SlashToken:\n                        case ts__default.SyntaxKind.PercentToken:\n                        case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                        case ts__default.SyntaxKind.BarBarToken:\n                            return this.isFoldableWorker(binaryExpression.left, folding) &&\n                                this.isFoldableWorker(binaryExpression.right, folding);\n                        default:\n                            return false;\n                    }\n                case ts__default.SyntaxKind.PropertyAccessExpression:\n                    var propertyAccessExpression = node;\n                    return this.isFoldableWorker(propertyAccessExpression.expression, folding);\n                case ts__default.SyntaxKind.ElementAccessExpression:\n                    var elementAccessExpression = node;\n                    return this.isFoldableWorker(elementAccessExpression.expression, folding) &&\n                        this.isFoldableWorker(elementAccessExpression.argumentExpression, folding);\n                case ts__default.SyntaxKind.Identifier:\n                    var identifier = node;\n                    var reference = this.symbols.resolve(identifier.text);\n                    if (reference !== undefined && isPrimitive(reference)) {\n                        return true;\n                    }\n                    break;\n                case ts__default.SyntaxKind.TemplateExpression:\n                    var templateExpression = node;\n                    return templateExpression.templateSpans.every(function (span) { return _this.isFoldableWorker(span.expression, folding); });\n            }\n        }\n        return false;\n    };\n    /**\n     * Produce a JSON serialiable object representing `node`. The foldable values in the expression\n     * tree are folded. For example, a node representing `1 + 2` is folded into `3`.\n     */\n    Evaluator.prototype.evaluateNode = function (node, preferReference) {\n        var _this = this;\n        var t = this;\n        var error;\n        function recordEntry(entry, node) {\n            if (t.options.substituteExpression) {\n                var newEntry = t.options.substituteExpression(entry, node);\n                if (t.recordExport && newEntry != entry && schema.isMetadataGlobalReferenceExpression(newEntry)) {\n                    t.recordExport(newEntry.name, entry);\n                }\n                entry = newEntry;\n            }\n            t.nodeMap.set(entry, node);\n            return entry;\n        }\n        function isFoldableError(value) {\n            return !t.options.verboseInvalidExpression && schema.isMetadataError(value);\n        }\n        var resolveName = function (name, preferReference) {\n            var reference = _this.symbols.resolve(name, preferReference);\n            if (reference === undefined) {\n                // Encode as a global reference. StaticReflector will check the reference.\n                return recordEntry({ __symbolic: 'reference', name: name }, node);\n            }\n            return reference;\n        };\n        switch (node.kind) {\n            case ts__default.SyntaxKind.ObjectLiteralExpression:\n                var obj_1 = {};\n                var quoted_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    switch (child.kind) {\n                        case ts__default.SyntaxKind.ShorthandPropertyAssignment:\n                        case ts__default.SyntaxKind.PropertyAssignment:\n                            var assignment = child;\n                            if (assignment.name.kind == ts__default.SyntaxKind.StringLiteral) {\n                                var name_2 = assignment.name.text;\n                                quoted_1.push(name_2);\n                            }\n                            var propertyName = _this.nameOf(assignment.name);\n                            if (isFoldableError(propertyName)) {\n                                error = propertyName;\n                                return true;\n                            }\n                            var propertyValue = isPropertyAssignment(assignment) ?\n                                _this.evaluateNode(assignment.initializer, /* preferReference */ true) :\n                                resolveName(propertyName, /* preferReference */ true);\n                            if (isFoldableError(propertyValue)) {\n                                error = propertyValue;\n                                return true; // Stop the forEachChild.\n                            }\n                            else {\n                                obj_1[propertyName] = isPropertyAssignment(assignment) ?\n                                    recordEntry(propertyValue, assignment.initializer) :\n                                    propertyValue;\n                            }\n                    }\n                });\n                if (error)\n                    return error;\n                if (this.options.quotedNames && quoted_1.length) {\n                    obj_1['$quoted$'] = quoted_1;\n                }\n                return recordEntry(obj_1, node);\n            case ts__default.SyntaxKind.ArrayLiteralExpression:\n                var arr_1 = [];\n                ts__default.forEachChild(node, function (child) {\n                    var value = _this.evaluateNode(child, /* preferReference */ true);\n                    // Check for error\n                    if (isFoldableError(value)) {\n                        error = value;\n                        return true; // Stop the forEachChild.\n                    }\n                    // Handle spread expressions\n                    if (schema.isMetadataSymbolicSpreadExpression(value)) {\n                        if (Array.isArray(value.expression)) {\n                            for (var _i = 0, _a = value.expression; _i < _a.length; _i++) {\n                                var spreadValue = _a[_i];\n                                arr_1.push(spreadValue);\n                            }\n                            return;\n                        }\n                    }\n                    arr_1.push(value);\n                });\n                if (error)\n                    return error;\n                return recordEntry(arr_1, node);\n            case spreadElementSyntaxKind:\n                var spreadExpression = this.evaluateNode(node.expression);\n                return recordEntry({ __symbolic: 'spread', expression: spreadExpression }, node);\n            case ts__default.SyntaxKind.CallExpression:\n                var callExpression = node;\n                if (isCallOf(callExpression, 'forwardRef') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    var firstArgument = callExpression.arguments[0];\n                    if (firstArgument.kind == ts__default.SyntaxKind.ArrowFunction) {\n                        var arrowFunction = firstArgument;\n                        return recordEntry(this.evaluateNode(arrowFunction.body), node);\n                    }\n                }\n                var args = arrayOrEmpty(callExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && args.some(schema.isMetadataError)) {\n                    return args.find(schema.isMetadataError);\n                }\n                if (this.isFoldable(callExpression)) {\n                    if (isMethodCallOf(callExpression, 'concat')) {\n                        var arrayValue = this.evaluateNode(callExpression.expression.expression);\n                        if (isFoldableError(arrayValue))\n                            return arrayValue;\n                        return arrayValue.concat(args[0]);\n                    }\n                }\n                // Always fold a CONST_EXPR even if the argument is not foldable.\n                if (isCallOf(callExpression, 'CONST_EXPR') &&\n                    arrayOrEmpty(callExpression.arguments).length === 1) {\n                    return recordEntry(args[0], node);\n                }\n                var expression = this.evaluateNode(callExpression.expression);\n                if (isFoldableError(expression)) {\n                    return recordEntry(expression, node);\n                }\n                var result = { __symbolic: 'call', expression: expression };\n                if (args && args.length) {\n                    result.arguments = args;\n                }\n                return recordEntry(result, node);\n            case ts__default.SyntaxKind.NewExpression:\n                var newExpression = node;\n                var newArgs = arrayOrEmpty(newExpression.arguments).map(function (arg) { return _this.evaluateNode(arg); });\n                if (!this.options.verboseInvalidExpression && newArgs.some(schema.isMetadataError)) {\n                    return recordEntry(newArgs.find(schema.isMetadataError), node);\n                }\n                var newTarget = this.evaluateNode(newExpression.expression);\n                if (schema.isMetadataError(newTarget)) {\n                    return recordEntry(newTarget, node);\n                }\n                var call = { __symbolic: 'new', expression: newTarget };\n                if (newArgs.length) {\n                    call.arguments = newArgs;\n                }\n                return recordEntry(call, node);\n            case ts__default.SyntaxKind.PropertyAccessExpression: {\n                var propertyAccessExpression = node;\n                var expression_1 = this.evaluateNode(propertyAccessExpression.expression);\n                if (isFoldableError(expression_1)) {\n                    return recordEntry(expression_1, node);\n                }\n                var member = this.nameOf(propertyAccessExpression.name);\n                if (isFoldableError(member)) {\n                    return recordEntry(member, node);\n                }\n                if (expression_1 && this.isFoldable(propertyAccessExpression.expression))\n                    return expression_1[member];\n                if (schema.isMetadataModuleReferenceExpression(expression_1)) {\n                    // A select into a module reference and be converted into a reference to the symbol\n                    // in the module\n                    return recordEntry({ __symbolic: 'reference', module: expression_1.module, name: member }, node);\n                }\n                return recordEntry({ __symbolic: 'select', expression: expression_1, member: member }, node);\n            }\n            case ts__default.SyntaxKind.ElementAccessExpression: {\n                var elementAccessExpression = node;\n                var expression_2 = this.evaluateNode(elementAccessExpression.expression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (!elementAccessExpression.argumentExpression) {\n                    return recordEntry(errorSymbol('Expression form not supported', node), node);\n                }\n                var index = this.evaluateNode(elementAccessExpression.argumentExpression);\n                if (isFoldableError(expression_2)) {\n                    return recordEntry(expression_2, node);\n                }\n                if (this.isFoldable(elementAccessExpression.expression) &&\n                    this.isFoldable(elementAccessExpression.argumentExpression))\n                    return expression_2[index];\n                return recordEntry({ __symbolic: 'index', expression: expression_2, index: index }, node);\n            }\n            case ts__default.SyntaxKind.Identifier:\n                var identifier = node;\n                var name_3 = identifier.text;\n                return resolveName(name_3, preferReference);\n            case ts__default.SyntaxKind.TypeReference:\n                var typeReferenceNode = node;\n                var typeNameNode_1 = typeReferenceNode.typeName;\n                var getReference = function (node) {\n                    if (typeNameNode_1.kind === ts__default.SyntaxKind.QualifiedName) {\n                        var qualifiedName = node;\n                        var left_1 = _this.evaluateNode(qualifiedName.left);\n                        if (schema.isMetadataModuleReferenceExpression(left_1)) {\n                            return recordEntry({\n                                __symbolic: 'reference',\n                                module: left_1.module,\n                                name: qualifiedName.right.text\n                            }, node);\n                        }\n                        // Record a type reference to a declared type as a select.\n                        return { __symbolic: 'select', expression: left_1, member: qualifiedName.right.text };\n                    }\n                    else {\n                        var identifier_1 = typeNameNode_1;\n                        var symbol = _this.symbols.resolve(identifier_1.text);\n                        if (isFoldableError(symbol) || schema.isMetadataSymbolicReferenceExpression(symbol)) {\n                            return recordEntry(symbol, node);\n                        }\n                        return recordEntry(errorSymbol('Could not resolve type', node, { typeName: identifier_1.text }), node);\n                    }\n                };\n                var typeReference = getReference(typeNameNode_1);\n                if (isFoldableError(typeReference)) {\n                    return recordEntry(typeReference, node);\n                }\n                if (!schema.isMetadataModuleReferenceExpression(typeReference) &&\n                    typeReferenceNode.typeArguments && typeReferenceNode.typeArguments.length) {\n                    var args_1 = typeReferenceNode.typeArguments.map(function (element) { return _this.evaluateNode(element); });\n                    // TODO: Remove typecast when upgraded to 2.0 as it will be corretly inferred.\n                    // Some versions of 1.9 do not infer this correctly.\n                    typeReference.arguments = args_1;\n                }\n                return recordEntry(typeReference, node);\n            case ts__default.SyntaxKind.UnionType:\n                var unionType = node;\n                // Remove null and undefined from the list of unions.\n                var references = unionType.types\n                    .filter(function (n) { return n.kind != ts__default.SyntaxKind.NullKeyword &&\n                    n.kind != ts__default.SyntaxKind.UndefinedKeyword; })\n                    .map(function (n) { return _this.evaluateNode(n); });\n                // The remmaining reference must be the same. If two have type arguments consider them\n                // different even if the type arguments are the same.\n                var candidate = null;\n                for (var i = 0; i < references.length; i++) {\n                    var reference = references[i];\n                    if (schema.isMetadataSymbolicReferenceExpression(reference)) {\n                        if (candidate) {\n                            if (reference.name == candidate.name &&\n                                reference.module == candidate.module && !reference.arguments) {\n                                candidate = reference;\n                            }\n                        }\n                        else {\n                            candidate = reference;\n                        }\n                    }\n                    else {\n                        return reference;\n                    }\n                }\n                if (candidate)\n                    return candidate;\n                break;\n            case ts__default.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts__default.SyntaxKind.StringLiteral:\n            case ts__default.SyntaxKind.TemplateHead:\n            case ts__default.SyntaxKind.TemplateTail:\n            case ts__default.SyntaxKind.TemplateMiddle:\n                return node.text;\n            case ts__default.SyntaxKind.NumericLiteral:\n                return parseFloat(node.text);\n            case ts__default.SyntaxKind.AnyKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'any' }, node);\n            case ts__default.SyntaxKind.StringKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'string' }, node);\n            case ts__default.SyntaxKind.NumberKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'number' }, node);\n            case ts__default.SyntaxKind.BooleanKeyword:\n                return recordEntry({ __symbolic: 'reference', name: 'boolean' }, node);\n            case ts__default.SyntaxKind.ArrayType:\n                var arrayTypeNode = node;\n                return recordEntry({\n                    __symbolic: 'reference',\n                    name: 'Array',\n                    arguments: [this.evaluateNode(arrayTypeNode.elementType)]\n                }, node);\n            case ts__default.SyntaxKind.NullKeyword:\n                return null;\n            case ts__default.SyntaxKind.TrueKeyword:\n                return true;\n            case ts__default.SyntaxKind.FalseKeyword:\n                return false;\n            case ts__default.SyntaxKind.ParenthesizedExpression:\n                var parenthesizedExpression = node;\n                return this.evaluateNode(parenthesizedExpression.expression);\n            case ts__default.SyntaxKind.TypeAssertionExpression:\n                var typeAssertion = node;\n                return this.evaluateNode(typeAssertion.expression);\n            case ts__default.SyntaxKind.PrefixUnaryExpression:\n                var prefixUnaryExpression = node;\n                var operand = this.evaluateNode(prefixUnaryExpression.operand);\n                if (isDefined(operand) && isPrimitive(operand)) {\n                    switch (prefixUnaryExpression.operator) {\n                        case ts__default.SyntaxKind.PlusToken:\n                            return +operand;\n                        case ts__default.SyntaxKind.MinusToken:\n                            return -operand;\n                        case ts__default.SyntaxKind.TildeToken:\n                            return ~operand;\n                        case ts__default.SyntaxKind.ExclamationToken:\n                            return !operand;\n                    }\n                }\n                var operatorText = void 0;\n                switch (prefixUnaryExpression.operator) {\n                    case ts__default.SyntaxKind.PlusToken:\n                        operatorText = '+';\n                        break;\n                    case ts__default.SyntaxKind.MinusToken:\n                        operatorText = '-';\n                        break;\n                    case ts__default.SyntaxKind.TildeToken:\n                        operatorText = '~';\n                        break;\n                    case ts__default.SyntaxKind.ExclamationToken:\n                        operatorText = '!';\n                        break;\n                    default:\n                        return undefined;\n                }\n                return recordEntry({ __symbolic: 'pre', operator: operatorText, operand: operand }, node);\n            case ts__default.SyntaxKind.BinaryExpression:\n                var binaryExpression = node;\n                var left = this.evaluateNode(binaryExpression.left);\n                var right = this.evaluateNode(binaryExpression.right);\n                if (isDefined(left) && isDefined(right)) {\n                    if (isPrimitive(left) && isPrimitive(right))\n                        switch (binaryExpression.operatorToken.kind) {\n                            case ts__default.SyntaxKind.BarBarToken:\n                                return left || right;\n                            case ts__default.SyntaxKind.AmpersandAmpersandToken:\n                                return left && right;\n                            case ts__default.SyntaxKind.AmpersandToken:\n                                return left & right;\n                            case ts__default.SyntaxKind.BarToken:\n                                return left | right;\n                            case ts__default.SyntaxKind.CaretToken:\n                                return left ^ right;\n                            case ts__default.SyntaxKind.EqualsEqualsToken:\n                                return left == right;\n                            case ts__default.SyntaxKind.ExclamationEqualsToken:\n                                return left != right;\n                            case ts__default.SyntaxKind.EqualsEqualsEqualsToken:\n                                return left === right;\n                            case ts__default.SyntaxKind.ExclamationEqualsEqualsToken:\n                                return left !== right;\n                            case ts__default.SyntaxKind.LessThanToken:\n                                return left < right;\n                            case ts__default.SyntaxKind.GreaterThanToken:\n                                return left > right;\n                            case ts__default.SyntaxKind.LessThanEqualsToken:\n                                return left <= right;\n                            case ts__default.SyntaxKind.GreaterThanEqualsToken:\n                                return left >= right;\n                            case ts__default.SyntaxKind.LessThanLessThanToken:\n                                return left << right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanToken:\n                                return left >> right;\n                            case ts__default.SyntaxKind.GreaterThanGreaterThanGreaterThanToken:\n                                return left >>> right;\n                            case ts__default.SyntaxKind.PlusToken:\n                                return left + right;\n                            case ts__default.SyntaxKind.MinusToken:\n                                return left - right;\n                            case ts__default.SyntaxKind.AsteriskToken:\n                                return left * right;\n                            case ts__default.SyntaxKind.SlashToken:\n                                return left / right;\n                            case ts__default.SyntaxKind.PercentToken:\n                                return left % right;\n                        }\n                    return recordEntry({\n                        __symbolic: 'binop',\n                        operator: binaryExpression.operatorToken.getText(),\n                        left: left,\n                        right: right\n                    }, node);\n                }\n                break;\n            case ts__default.SyntaxKind.ConditionalExpression:\n                var conditionalExpression = node;\n                var condition = this.evaluateNode(conditionalExpression.condition);\n                var thenExpression = this.evaluateNode(conditionalExpression.whenTrue);\n                var elseExpression = this.evaluateNode(conditionalExpression.whenFalse);\n                if (isPrimitive(condition)) {\n                    return condition ? thenExpression : elseExpression;\n                }\n                return recordEntry({ __symbolic: 'if', condition: condition, thenExpression: thenExpression, elseExpression: elseExpression }, node);\n            case ts__default.SyntaxKind.FunctionExpression:\n            case ts__default.SyntaxKind.ArrowFunction:\n                return recordEntry(errorSymbol('Function call not supported', node), node);\n            case ts__default.SyntaxKind.TaggedTemplateExpression:\n                return recordEntry(errorSymbol('Tagged template expressions are not supported in metadata', node), node);\n            case ts__default.SyntaxKind.TemplateExpression:\n                var templateExpression = node;\n                if (this.isFoldable(node)) {\n                    return templateExpression.templateSpans.reduce(function (previous, current) { return previous + _this.evaluateNode(current.expression) +\n                        _this.evaluateNode(current.literal); }, this.evaluateNode(templateExpression.head));\n                }\n                else {\n                    return templateExpression.templateSpans.reduce(function (previous, current) {\n                        var expr = _this.evaluateNode(current.expression);\n                        var literal = _this.evaluateNode(current.literal);\n                        if (isFoldableError(expr))\n                            return expr;\n                        if (isFoldableError(literal))\n                            return literal;\n                        if (typeof previous === 'string' && typeof expr === 'string' &&\n                            typeof literal === 'string') {\n                            return previous + expr + literal;\n                        }\n                        var result = expr;\n                        if (previous !== '') {\n                            result = { __symbolic: 'binop', operator: '+', left: previous, right: expr };\n                        }\n                        if (literal != '') {\n                            result = { __symbolic: 'binop', operator: '+', left: result, right: literal };\n                        }\n                        return result;\n                    }, this.evaluateNode(templateExpression.head));\n                }\n            case ts__default.SyntaxKind.AsExpression:\n                var asExpression = node;\n                return this.evaluateNode(asExpression.expression);\n            case ts__default.SyntaxKind.ClassExpression:\n                return { __symbolic: 'class' };\n        }\n        return recordEntry(errorSymbol('Expression form not supported', node), node);\n    };\n    return Evaluator;\n}());\nexports.Evaluator = Evaluator;\nfunction isPropertyAssignment(node) {\n    return node.kind == ts__default.SyntaxKind.PropertyAssignment;\n}\nvar empty = ts__default.createNodeArray();\nfunction arrayOrEmpty(v) {\n    return v || empty;\n}\n\n});\n\nvar symbols$2 = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\nvar Symbols = (function () {\n    function Symbols(sourceFile) {\n        this.sourceFile = sourceFile;\n        this.references = new Map();\n    }\n    Symbols.prototype.resolve = function (name, preferReference) {\n        return (preferReference && this.references.get(name)) || this.symbols.get(name);\n    };\n    Symbols.prototype.define = function (name, value) { this.symbols.set(name, value); };\n    Symbols.prototype.defineReference = function (name, value) {\n        this.references.set(name, value);\n    };\n    Symbols.prototype.has = function (name) { return this.symbols.has(name); };\n    Object.defineProperty(Symbols.prototype, \"symbols\", {\n        get: function () {\n            var result = this._symbols;\n            if (!result) {\n                result = this._symbols = new Map();\n                populateBuiltins(result);\n                this.buildImports();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Symbols.prototype.buildImports = function () {\n        var _this = this;\n        var symbols = this._symbols;\n        // Collect the imported symbols into this.symbols\n        var stripQuotes = function (s) { return s.replace(/^['\"]|['\"]$/g, ''); };\n        var visit = function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ImportEqualsDeclaration:\n                    var importEqualsDeclaration = node;\n                    if (importEqualsDeclaration.moduleReference.kind ===\n                        ts__default.SyntaxKind.ExternalModuleReference) {\n                        var externalReference = importEqualsDeclaration.moduleReference;\n                        if (externalReference.expression) {\n                            // An `import <identifier> = require(<module-specifier>);\n                            if (!externalReference.expression.parent) {\n                                // The `parent` field of a node is set by the TypeScript binder (run as\n                                // part of the type checker). Setting it here allows us to call `getText()`\n                                // even if the `SourceFile` was not type checked (which looks for `SourceFile`\n                                // in the parent chain). This doesn't damage the node as the binder unconditionally\n                                // sets the parent.\n                                externalReference.expression.parent = externalReference;\n                                externalReference.parent = _this.sourceFile;\n                            }\n                            var from_1 = stripQuotes(externalReference.expression.getText());\n                            symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'reference', module: from_1 });\n                            break;\n                        }\n                    }\n                    symbols.set(importEqualsDeclaration.name.text, { __symbolic: 'error', message: \"Unsupported import syntax\" });\n                    break;\n                case ts__default.SyntaxKind.ImportDeclaration:\n                    var importDecl = node;\n                    if (!importDecl.importClause) {\n                        // An `import <module-specifier>` clause which does not bring symbols into scope.\n                        break;\n                    }\n                    if (!importDecl.moduleSpecifier.parent) {\n                        // See note above in the `ImportEqualDeclaration` case.\n                        importDecl.moduleSpecifier.parent = importDecl;\n                        importDecl.parent = _this.sourceFile;\n                    }\n                    var from = stripQuotes(importDecl.moduleSpecifier.getText());\n                    if (importDecl.importClause.name) {\n                        // An `import <identifier> form <module-specifier>` clause. Record the defualt symbol.\n                        symbols.set(importDecl.importClause.name.text, { __symbolic: 'reference', module: from, default: true });\n                    }\n                    var bindings = importDecl.importClause.namedBindings;\n                    if (bindings) {\n                        switch (bindings.kind) {\n                            case ts__default.SyntaxKind.NamedImports:\n                                // An `import { [<identifier> [, <identifier>] } from <module-specifier>` clause\n                                for (var _i = 0, _a = bindings.elements; _i < _a.length; _i++) {\n                                    var binding = _a[_i];\n                                    symbols.set(binding.name.text, {\n                                        __symbolic: 'reference',\n                                        module: from,\n                                        name: binding.propertyName ? binding.propertyName.text : binding.name.text\n                                    });\n                                }\n                                break;\n                            case ts__default.SyntaxKind.NamespaceImport:\n                                // An `input * as <identifier> from <module-specifier>` clause.\n                                symbols.set(bindings.name.text, { __symbolic: 'reference', module: from });\n                                break;\n                        }\n                    }\n                    break;\n            }\n            ts__default.forEachChild(node, visit);\n        };\n        if (this.sourceFile) {\n            ts__default.forEachChild(this.sourceFile, visit);\n        }\n    };\n    return Symbols;\n}());\nexports.Symbols = Symbols;\nfunction populateBuiltins(symbols) {\n    // From lib.core.d.ts (all \"define const\")\n    ['Object', 'Function', 'String', 'Number', 'Array', 'Boolean', 'Map', 'NaN', 'Infinity', 'Math',\n        'Date', 'RegExp', 'Error', 'Error', 'EvalError', 'RangeError', 'ReferenceError', 'SyntaxError',\n        'TypeError', 'URIError', 'JSON', 'ArrayBuffer', 'DataView', 'Int8Array', 'Uint8Array',\n        'Uint8ClampedArray', 'Uint16Array', 'Int16Array', 'Int32Array', 'Uint32Array', 'Float32Array',\n        'Float64Array']\n        .forEach(function (name) { return symbols.set(name, { __symbolic: 'reference', name: name }); });\n}\n\n});\n\nvar collector = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\nvar isStatic = function (node) { return ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Static; };\n/**\n * Collect decorator metadata from a TypeScript module.\n */\nvar MetadataCollector = (function () {\n    function MetadataCollector(options) {\n        if (options === void 0) { options = {}; }\n        this.options = options;\n    }\n    /**\n     * Returns a JSON.stringify friendly form describing the decorators of the exported classes from\n     * the source file that is expected to correspond to a module.\n     */\n    MetadataCollector.prototype.getMetadata = function (sourceFile, strict, substituteExpression) {\n        var _this = this;\n        if (strict === void 0) { strict = false; }\n        var locals = new symbols$2.Symbols(sourceFile);\n        var nodeMap = new Map();\n        var composedSubstituter = substituteExpression && this.options.substituteExpression ?\n            function (value, node) {\n                return _this.options.substituteExpression(substituteExpression(value, node), node);\n            } :\n            substituteExpression;\n        var evaluatorOptions = substituteExpression ? __assign({}, this.options, { substituteExpression: composedSubstituter }) :\n            this.options;\n        var metadata;\n        var evaluator$$1 = new evaluator.Evaluator(locals, nodeMap, evaluatorOptions, function (name, value) {\n            if (!metadata)\n                metadata = {};\n            metadata[name] = value;\n        });\n        var exports = undefined;\n        function objFromDecorator(decoratorNode) {\n            return evaluator$$1.evaluateNode(decoratorNode.expression);\n        }\n        function recordEntry(entry, node) {\n            nodeMap.set(entry, node);\n            return entry;\n        }\n        function errorSym(message, node, context) {\n            return evaluator.errorSymbol(message, node, context, sourceFile);\n        }\n        function maybeGetSimpleFunction(functionDeclaration) {\n            if (functionDeclaration.name && functionDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                var nameNode = functionDeclaration.name;\n                var functionName = nameNode.text;\n                var functionBody = functionDeclaration.body;\n                if (functionBody && functionBody.statements.length == 1) {\n                    var statement = functionBody.statements[0];\n                    if (statement.kind === ts__default.SyntaxKind.ReturnStatement) {\n                        var returnStatement = statement;\n                        if (returnStatement.expression) {\n                            var func = {\n                                __symbolic: 'function',\n                                parameters: namesOf(functionDeclaration.parameters),\n                                value: evaluator$$1.evaluateNode(returnStatement.expression)\n                            };\n                            if (functionDeclaration.parameters.some(function (p) { return p.initializer != null; })) {\n                                func.defaults = functionDeclaration.parameters.map(function (p) { return p.initializer && evaluator$$1.evaluateNode(p.initializer); });\n                            }\n                            return recordEntry({ func: func, name: functionName }, functionDeclaration);\n                        }\n                    }\n                }\n            }\n        }\n        function classMetadataOf(classDeclaration) {\n            var result = { __symbolic: 'class' };\n            function getDecorators(decorators) {\n                if (decorators && decorators.length)\n                    return decorators.map(function (decorator) { return objFromDecorator(decorator); });\n                return undefined;\n            }\n            function referenceFrom(node) {\n                var result = evaluator$$1.evaluateNode(node);\n                if (schema.isMetadataError(result) || schema.isMetadataSymbolicReferenceExpression(result) ||\n                    schema.isMetadataSymbolicSelectExpression(result)) {\n                    return result;\n                }\n                else {\n                    return errorSym('Symbol reference expected', node);\n                }\n            }\n            // Add class parents\n            if (classDeclaration.heritageClauses) {\n                classDeclaration.heritageClauses.forEach(function (hc) {\n                    if (hc.token === ts__default.SyntaxKind.ExtendsKeyword && hc.types) {\n                        hc.types.forEach(function (type) { return result.extends = referenceFrom(type.expression); });\n                    }\n                });\n            }\n            // Add arity if the type is generic\n            var typeParameters = classDeclaration.typeParameters;\n            if (typeParameters && typeParameters.length) {\n                result.arity = typeParameters.length;\n            }\n            // Add class decorators\n            if (classDeclaration.decorators) {\n                result.decorators = getDecorators(classDeclaration.decorators);\n            }\n            // member decorators\n            var members = null;\n            function recordMember(name, metadata) {\n                if (!members)\n                    members = {};\n                var data = members.hasOwnProperty(name) ? members[name] : [];\n                data.push(metadata);\n                members[name] = data;\n            }\n            // static member\n            var statics = null;\n            function recordStaticMember(name, value) {\n                if (!statics)\n                    statics = {};\n                statics[name] = value;\n            }\n            for (var _i = 0, _a = classDeclaration.members; _i < _a.length; _i++) {\n                var member = _a[_i];\n                var isConstructor = false;\n                switch (member.kind) {\n                    case ts__default.SyntaxKind.Constructor:\n                    case ts__default.SyntaxKind.MethodDeclaration:\n                        isConstructor = member.kind === ts__default.SyntaxKind.Constructor;\n                        var method = member;\n                        if (isStatic(method)) {\n                            var maybeFunc = maybeGetSimpleFunction(method);\n                            if (maybeFunc) {\n                                recordStaticMember(maybeFunc.name, maybeFunc.func);\n                            }\n                            continue;\n                        }\n                        var methodDecorators = getDecorators(method.decorators);\n                        var parameters = method.parameters;\n                        var parameterDecoratorData = [];\n                        var parametersData = [];\n                        var hasDecoratorData = false;\n                        var hasParameterData = false;\n                        for (var _b = 0, parameters_1 = parameters; _b < parameters_1.length; _b++) {\n                            var parameter = parameters_1[_b];\n                            var parameterData = getDecorators(parameter.decorators);\n                            parameterDecoratorData.push(parameterData);\n                            hasDecoratorData = hasDecoratorData || !!parameterData;\n                            if (isConstructor) {\n                                if (parameter.type) {\n                                    parametersData.push(referenceFrom(parameter.type));\n                                }\n                                else {\n                                    parametersData.push(null);\n                                }\n                                hasParameterData = true;\n                            }\n                        }\n                        var data = { __symbolic: isConstructor ? 'constructor' : 'method' };\n                        var name_1 = isConstructor ? '__ctor__' : evaluator$$1.nameOf(member.name);\n                        if (methodDecorators) {\n                            data.decorators = methodDecorators;\n                        }\n                        if (hasDecoratorData) {\n                            data.parameterDecorators = parameterDecoratorData;\n                        }\n                        if (hasParameterData) {\n                            data.parameters = parametersData;\n                        }\n                        if (!schema.isMetadataError(name_1)) {\n                            recordMember(name_1, data);\n                        }\n                        break;\n                    case ts__default.SyntaxKind.PropertyDeclaration:\n                    case ts__default.SyntaxKind.GetAccessor:\n                    case ts__default.SyntaxKind.SetAccessor:\n                        var property = member;\n                        if (isStatic(property)) {\n                            var name_2 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_2)) {\n                                if (property.initializer) {\n                                    var value = evaluator$$1.evaluateNode(property.initializer);\n                                    recordStaticMember(name_2, value);\n                                }\n                                else {\n                                    recordStaticMember(name_2, errorSym('Variable not initialized', property.name));\n                                }\n                            }\n                        }\n                        var propertyDecorators = getDecorators(property.decorators);\n                        if (propertyDecorators) {\n                            var name_3 = evaluator$$1.nameOf(property.name);\n                            if (!schema.isMetadataError(name_3)) {\n                                recordMember(name_3, { __symbolic: 'property', decorators: propertyDecorators });\n                            }\n                        }\n                        break;\n                }\n            }\n            if (members) {\n                result.members = members;\n            }\n            if (statics) {\n                result.statics = statics;\n            }\n            return recordEntry(result, classDeclaration);\n        }\n        // Collect all exported symbols from an exports clause.\n        var exportMap = new Map();\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // If there is a module specifier there is also an exportClause\n                        exportClause.elements.forEach(function (spec) {\n                            var exportedAs = spec.name.text;\n                            var name = (spec.propertyName || spec.name).text;\n                            exportMap.set(name, exportedAs);\n                        });\n                    }\n            }\n        });\n        var isExport = function (node) {\n            return sourceFile.isDeclarationFile || ts__default.getCombinedModifierFlags(node) & ts__default.ModifierFlags.Export;\n        };\n        var isExportedIdentifier = function (identifier) {\n            return identifier && exportMap.has(identifier.text);\n        };\n        var isExported = function (node) {\n            return isExport(node) || isExportedIdentifier(node.name);\n        };\n        var exportedIdentifierName = function (identifier) {\n            return identifier && (exportMap.get(identifier.text) || identifier.text);\n        };\n        var exportedName = function (node) { return exportedIdentifierName(node.name); };\n        // Predeclare classes and functions\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var className = classDeclaration.name.text;\n                        if (isExported(classDeclaration)) {\n                            locals.define(className, { __symbolic: 'reference', name: exportedName(classDeclaration) });\n                        }\n                        else {\n                            locals.define(className, errorSym('Reference to non-exported class', node, { className: className }));\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name) {\n                        var interfaceName = interfaceDeclaration.name.text;\n                        // All references to interfaces should be converted to references to `any`.\n                        locals.define(interfaceName, { __symbolic: 'reference', name: 'any' });\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    var functionDeclaration = node;\n                    if (!isExported(functionDeclaration)) {\n                        // Report references to this function as an error.\n                        var nameNode = functionDeclaration.name;\n                        if (nameNode && nameNode.text) {\n                            locals.define(nameNode.text, errorSym('Reference to a non-exported function', nameNode, { name: nameNode.text }));\n                        }\n                    }\n                    break;\n            }\n        });\n        ts__default.forEachChild(sourceFile, function (node) {\n            switch (node.kind) {\n                case ts__default.SyntaxKind.ExportDeclaration:\n                    // Record export declarations\n                    var exportDeclaration = node;\n                    var moduleSpecifier = exportDeclaration.moduleSpecifier, exportClause = exportDeclaration.exportClause;\n                    if (!moduleSpecifier) {\n                        // no module specifier -> export {propName as name};\n                        if (exportClause) {\n                            exportClause.elements.forEach(function (spec) {\n                                var name = spec.name.text;\n                                // If the symbol was not already exported, export a reference since it is a\n                                // reference to an import\n                                if (!metadata || !metadata[name]) {\n                                    var propNode = spec.propertyName || spec.name;\n                                    var value = evaluator$$1.evaluateNode(propNode);\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name] = recordEntry(value, node);\n                                }\n                            });\n                        }\n                    }\n                    if (moduleSpecifier && moduleSpecifier.kind == ts__default.SyntaxKind.StringLiteral) {\n                        // Ignore exports that don't have string literals as exports.\n                        // This is allowed by the syntax but will be flagged as an error by the type checker.\n                        var from = moduleSpecifier.text;\n                        var moduleExport = { from: from };\n                        if (exportClause) {\n                            moduleExport.export = exportClause.elements.map(function (spec) { return spec.propertyName ? { name: spec.propertyName.text, as: spec.name.text } :\n                                spec.name.text; });\n                        }\n                        if (!exports)\n                            exports = [];\n                        exports.push(moduleExport);\n                    }\n                    break;\n                case ts__default.SyntaxKind.ClassDeclaration:\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        if (isExported(classDeclaration)) {\n                            var name_4 = exportedName(classDeclaration);\n                            if (name_4) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[name_4] = classMetadataOf(classDeclaration);\n                            }\n                        }\n                    }\n                    // Otherwise don't record metadata for the class.\n                    break;\n                case ts__default.SyntaxKind.TypeAliasDeclaration:\n                    var typeDeclaration = node;\n                    if (typeDeclaration.name && isExported(typeDeclaration)) {\n                        var name_5 = exportedName(typeDeclaration);\n                        if (name_5) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_5] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.InterfaceDeclaration:\n                    var interfaceDeclaration = node;\n                    if (interfaceDeclaration.name && isExported(interfaceDeclaration)) {\n                        var name_6 = exportedName(interfaceDeclaration);\n                        if (name_6) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_6] = { __symbolic: 'interface' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.FunctionDeclaration:\n                    // Record functions that return a single value. Record the parameter\n                    // names substitution will be performed by the StaticReflector.\n                    var functionDeclaration = node;\n                    if (isExported(functionDeclaration) && functionDeclaration.name) {\n                        var name_7 = exportedName(functionDeclaration);\n                        var maybeFunc = maybeGetSimpleFunction(functionDeclaration);\n                        if (name_7) {\n                            if (!metadata)\n                                metadata = {};\n                            metadata[name_7] =\n                                maybeFunc ? recordEntry(maybeFunc.func, node) : { __symbolic: 'function' };\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.EnumDeclaration:\n                    var enumDeclaration = node;\n                    if (isExported(enumDeclaration)) {\n                        var enumValueHolder = {};\n                        var enumName = exportedName(enumDeclaration);\n                        var nextDefaultValue = 0;\n                        var writtenMembers = 0;\n                        for (var _i = 0, _a = enumDeclaration.members; _i < _a.length; _i++) {\n                            var member = _a[_i];\n                            var enumValue = void 0;\n                            if (!member.initializer) {\n                                enumValue = nextDefaultValue;\n                            }\n                            else {\n                                enumValue = evaluator$$1.evaluateNode(member.initializer);\n                            }\n                            var name_8 = undefined;\n                            if (member.name.kind == ts__default.SyntaxKind.Identifier) {\n                                var identifier = member.name;\n                                name_8 = identifier.text;\n                                enumValueHolder[name_8] = enumValue;\n                                writtenMembers++;\n                            }\n                            if (typeof enumValue === 'number') {\n                                nextDefaultValue = enumValue + 1;\n                            }\n                            else if (name_8) {\n                                nextDefaultValue = {\n                                    __symbolic: 'binary',\n                                    operator: '+',\n                                    left: {\n                                        __symbolic: 'select',\n                                        expression: recordEntry({ __symbolic: 'reference', name: enumName }, node), name: name_8\n                                    }\n                                };\n                            }\n                            else {\n                                nextDefaultValue =\n                                    recordEntry(errorSym('Unsuppported enum member name', member.name), node);\n                            }\n                        }\n                        if (writtenMembers) {\n                            if (enumName) {\n                                if (!metadata)\n                                    metadata = {};\n                                metadata[enumName] = recordEntry(enumValueHolder, node);\n                            }\n                        }\n                    }\n                    break;\n                case ts__default.SyntaxKind.VariableStatement:\n                    var variableStatement = node;\n                    var _loop_1 = function (variableDeclaration) {\n                        if (variableDeclaration.name.kind == ts__default.SyntaxKind.Identifier) {\n                            var nameNode = variableDeclaration.name;\n                            var varValue = void 0;\n                            if (variableDeclaration.initializer) {\n                                varValue = evaluator$$1.evaluateNode(variableDeclaration.initializer);\n                            }\n                            else {\n                                varValue = recordEntry(errorSym('Variable not initialized', nameNode), nameNode);\n                            }\n                            var exported = false;\n                            if (isExport(variableStatement) || isExport(variableDeclaration) ||\n                                isExportedIdentifier(nameNode)) {\n                                var name_9 = exportedIdentifierName(nameNode);\n                                if (name_9) {\n                                    if (!metadata)\n                                        metadata = {};\n                                    metadata[name_9] = recordEntry(varValue, node);\n                                }\n                                exported = true;\n                            }\n                            if (typeof varValue == 'string' || typeof varValue == 'number' ||\n                                typeof varValue == 'boolean') {\n                                locals.define(nameNode.text, varValue);\n                                if (exported) {\n                                    locals.defineReference(nameNode.text, { __symbolic: 'reference', name: nameNode.text });\n                                }\n                            }\n                            else if (!exported) {\n                                if (varValue && !schema.isMetadataError(varValue)) {\n                                    locals.define(nameNode.text, recordEntry(varValue, node));\n                                }\n                                else {\n                                    locals.define(nameNode.text, recordEntry(errorSym('Reference to a local symbol', nameNode, { name: nameNode.text }), node));\n                                }\n                            }\n                        }\n                        else {\n                            // Destructuring (or binding) declarations are not supported,\n                            // var {<identifier>[, <identifier>]+} = <expression>;\n                            //   or\n                            // var [<identifier>[, <identifier}+] = <expression>;\n                            // are not supported.\n                            var report_1 = function (nameNode) {\n                                switch (nameNode.kind) {\n                                    case ts__default.SyntaxKind.Identifier:\n                                        var name_10 = nameNode;\n                                        var varValue = errorSym('Destructuring not supported', name_10);\n                                        locals.define(name_10.text, varValue);\n                                        if (isExport(node)) {\n                                            if (!metadata)\n                                                metadata = {};\n                                            metadata[name_10.text] = varValue;\n                                        }\n                                        break;\n                                    case ts__default.SyntaxKind.BindingElement:\n                                        var bindingElement = nameNode;\n                                        report_1(bindingElement.name);\n                                        break;\n                                    case ts__default.SyntaxKind.ObjectBindingPattern:\n                                    case ts__default.SyntaxKind.ArrayBindingPattern:\n                                        var bindings = nameNode;\n                                        bindings.elements.forEach(report_1);\n                                        break;\n                                }\n                            };\n                            report_1(variableDeclaration.name);\n                        }\n                    };\n                    for (var _b = 0, _c = variableStatement.declarationList.declarations; _b < _c.length; _b++) {\n                        var variableDeclaration = _c[_b];\n                        _loop_1(variableDeclaration);\n                    }\n                    break;\n            }\n        });\n        if (metadata || exports) {\n            if (!metadata)\n                metadata = {};\n            else if (strict) {\n                validateMetadata(sourceFile, nodeMap, metadata);\n            }\n            var result = {\n                __symbolic: 'module',\n                version: this.options.version || schema.METADATA_VERSION, metadata: metadata\n            };\n            if (exports)\n                result.exports = exports;\n            return result;\n        }\n    };\n    return MetadataCollector;\n}());\nexports.MetadataCollector = MetadataCollector;\n// This will throw if the metadata entry given contains an error node.\nfunction validateMetadata(sourceFile, nodeMap, metadata) {\n    var locals = new Set(['Array', 'Object', 'Set', 'Map', 'string', 'number', 'any']);\n    function validateExpression(expression) {\n        if (!expression) {\n            return;\n        }\n        else if (Array.isArray(expression)) {\n            expression.forEach(validateExpression);\n        }\n        else if (typeof expression === 'object' && !expression.hasOwnProperty('__symbolic')) {\n            Object.getOwnPropertyNames(expression).forEach(function (v) { return validateExpression(expression[v]); });\n        }\n        else if (schema.isMetadataError(expression)) {\n            reportError(expression);\n        }\n        else if (schema.isMetadataGlobalReferenceExpression(expression)) {\n            if (!locals.has(expression.name)) {\n                var reference = metadata[expression.name];\n                if (reference) {\n                    validateExpression(reference);\n                }\n            }\n        }\n        else if (schema.isFunctionMetadata(expression)) {\n            validateFunction(expression);\n        }\n        else if (schema.isMetadataSymbolicExpression(expression)) {\n            switch (expression.__symbolic) {\n                case 'binary':\n                    var binaryExpression = expression;\n                    validateExpression(binaryExpression.left);\n                    validateExpression(binaryExpression.right);\n                    break;\n                case 'call':\n                case 'new':\n                    var callExpression = expression;\n                    validateExpression(callExpression.expression);\n                    if (callExpression.arguments)\n                        callExpression.arguments.forEach(validateExpression);\n                    break;\n                case 'index':\n                    var indexExpression = expression;\n                    validateExpression(indexExpression.expression);\n                    validateExpression(indexExpression.index);\n                    break;\n                case 'pre':\n                    var prefixExpression = expression;\n                    validateExpression(prefixExpression.operand);\n                    break;\n                case 'select':\n                    var selectExpression = expression;\n                    validateExpression(selectExpression.expression);\n                    break;\n                case 'spread':\n                    var spreadExpression = expression;\n                    validateExpression(spreadExpression.expression);\n                    break;\n                case 'if':\n                    var ifExpression = expression;\n                    validateExpression(ifExpression.condition);\n                    validateExpression(ifExpression.elseExpression);\n                    validateExpression(ifExpression.thenExpression);\n                    break;\n            }\n        }\n    }\n    function validateMember(classData, member) {\n        if (member.decorators) {\n            member.decorators.forEach(validateExpression);\n        }\n        if (schema.isMethodMetadata(member) && member.parameterDecorators) {\n            member.parameterDecorators.forEach(validateExpression);\n        }\n        // Only validate parameters of classes for which we know that are used with our DI\n        if (classData.decorators && schema.isConstructorMetadata(member) && member.parameters) {\n            member.parameters.forEach(validateExpression);\n        }\n    }\n    function validateClass(classData) {\n        if (classData.decorators) {\n            classData.decorators.forEach(validateExpression);\n        }\n        if (classData.members) {\n            Object.getOwnPropertyNames(classData.members)\n                .forEach(function (name) { return classData.members[name].forEach(function (m) { return validateMember(classData, m); }); });\n        }\n        if (classData.statics) {\n            Object.getOwnPropertyNames(classData.statics).forEach(function (name) {\n                var staticMember = classData.statics[name];\n                if (schema.isFunctionMetadata(staticMember)) {\n                    validateExpression(staticMember.value);\n                }\n                else {\n                    validateExpression(staticMember);\n                }\n            });\n        }\n    }\n    function validateFunction(functionDeclaration) {\n        if (functionDeclaration.value) {\n            var oldLocals = locals;\n            if (functionDeclaration.parameters) {\n                locals = new Set(oldLocals.values());\n                if (functionDeclaration.parameters)\n                    functionDeclaration.parameters.forEach(function (n) { return locals.add(n); });\n            }\n            validateExpression(functionDeclaration.value);\n            locals = oldLocals;\n        }\n    }\n    function shouldReportNode(node) {\n        if (node) {\n            var nodeStart = node.getStart();\n            return !(node.pos != nodeStart &&\n                sourceFile.text.substring(node.pos, nodeStart).indexOf('@dynamic') >= 0);\n        }\n        return true;\n    }\n    function reportError(error) {\n        var node = nodeMap.get(error);\n        if (shouldReportNode(node)) {\n            var lineInfo = error.line != undefined ?\n                error.character != undefined ? \":\" + (error.line + 1) + \":\" + (error.character + 1) :\n                    \":\" + (error.line + 1) :\n                '';\n            throw new Error(\"\" + sourceFile.fileName + lineInfo + \": Metadata collected contains an error that will be reported at runtime: \" + expandedMessage(error) + \".\\n  \" + JSON.stringify(error));\n        }\n    }\n    Object.getOwnPropertyNames(metadata).forEach(function (name) {\n        var entry = metadata[name];\n        try {\n            if (schema.isClassMetadata(entry)) {\n                validateClass(entry);\n            }\n        }\n        catch (e) {\n            var node = nodeMap.get(entry);\n            if (shouldReportNode(node)) {\n                if (node) {\n                    var _a = sourceFile.getLineAndCharacterOfPosition(node.getStart()), line = _a.line, character = _a.character;\n                    throw new Error(sourceFile.fileName + \":\" + (line + 1) + \":\" + (character + 1) + \": Error encountered in metadata generated for exported symbol '\" + name + \"': \\n \" + e.message);\n                }\n                throw new Error(\"Error encountered in metadata generated for exported symbol \" + name + \": \\n \" + e.message);\n            }\n        }\n    });\n}\n// Collect parameter names from a function.\nfunction namesOf(parameters) {\n    var result = [];\n    function addNamesOf(name) {\n        if (name.kind == ts__default.SyntaxKind.Identifier) {\n            var identifier = name;\n            result.push(identifier.text);\n        }\n        else {\n            var bindingPattern = name;\n            for (var _i = 0, _a = bindingPattern.elements; _i < _a.length; _i++) {\n                var element = _a[_i];\n                var name_11 = element.name;\n                if (name_11) {\n                    addNamesOf(name_11);\n                }\n            }\n        }\n    }\n    for (var _i = 0, parameters_2 = parameters; _i < parameters_2.length; _i++) {\n        var parameter = parameters_2[_i];\n        addNamesOf(parameter.name);\n    }\n    return result;\n}\nfunction expandedMessage(error) {\n    switch (error.message) {\n        case 'Reference to non-exported class':\n            if (error.context && error.context.className) {\n                return \"Reference to a non-exported class \" + error.context.className + \". Consider exporting the class\";\n            }\n            break;\n        case 'Variable not initialized':\n            return 'Only initialized variables and constants can be referenced because the value of this variable is needed by the template compiler';\n        case 'Destructuring not supported':\n            return 'Referencing an exported destructured variable or constant is not supported by the template compiler. Consider simplifying this to avoid destructuring';\n        case 'Could not resolve type':\n            if (error.context && error.context.typeName) {\n                return \"Could not resolve type \" + error.context.typeName;\n            }\n            break;\n        case 'Function call not supported':\n            var prefix = error.context && error.context.name ? \"Calling function '\" + error.context.name + \"', f\" : 'F';\n            return prefix +\n                'unction calls are not supported. Consider replacing the function or lambda with a reference to an exported function';\n        case 'Reference to a local symbol':\n            if (error.context && error.context.name) {\n                return \"Reference to a local (non-exported) symbol '\" + error.context.name + \"'. Consider exporting the symbol\";\n            }\n    }\n    return error.message;\n}\n\n});\n\nvar bundler = createCommonjsModule(function (module, exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\n\n\n// The character set used to produce private names.\nvar PRIVATE_NAME_CHARS = 'abcdefghijklmnopqrstuvwxyz';\nvar MetadataBundler = (function () {\n    function MetadataBundler(root, importAs, host) {\n        this.root = root;\n        this.importAs = importAs;\n        this.host = host;\n        this.symbolMap = new Map();\n        this.metadataCache = new Map();\n        this.exports = new Map();\n        this.rootModule = \"./\" + path__default.basename(root);\n    }\n    MetadataBundler.prototype.getMetadataBundle = function () {\n        // Export the root module. This also collects the transitive closure of all values referenced by\n        // the exports.\n        var exportedSymbols = this.exportAll(this.rootModule);\n        this.canonicalizeSymbols(exportedSymbols);\n        // TODO: exports? e.g. a module re-exports a symbol from another bundle\n        var metadata = this.getEntries(exportedSymbols);\n        var privates = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && s.isPrivate; })\n            .map(function (s) { return ({\n            privateName: s.privateName,\n            name: s.declaration.name,\n            module: s.declaration.module\n        }); });\n        var origins = Array.from(this.symbolMap.values())\n            .filter(function (s) { return s.referenced && !s.reexport; })\n            .reduce(function (p, s) {\n            p[s.isPrivate ? s.privateName : s.name] = s.declaration.module;\n            return p;\n        }, {});\n        var exports = this.getReExports(exportedSymbols);\n        return {\n            metadata: {\n                __symbolic: 'module',\n                version: schema.METADATA_VERSION,\n                exports: exports.length ? exports : undefined, metadata: metadata, origins: origins,\n                importAs: this.importAs\n            },\n            privates: privates\n        };\n    };\n    MetadataBundler.resolveModule = function (importName, from) {\n        return resolveModule(importName, from);\n    };\n    MetadataBundler.prototype.getMetadata = function (moduleName) {\n        var result = this.metadataCache.get(moduleName);\n        if (!result) {\n            if (moduleName.startsWith('.')) {\n                var fullModuleName = resolveModule(moduleName, this.root);\n                result = this.host.getMetadataFor(fullModuleName);\n            }\n            this.metadataCache.set(moduleName, result);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.exportAll = function (moduleName) {\n        var _this = this;\n        var module = this.getMetadata(moduleName);\n        var result = this.exports.get(moduleName);\n        if (result) {\n            return result;\n        }\n        result = [];\n        var exportSymbol = function (exportedSymbol, exportAs) {\n            var symbol = _this.symbolOf(moduleName, exportAs);\n            result.push(symbol);\n            exportedSymbol.reexportedAs = symbol;\n            symbol.exports = exportedSymbol;\n        };\n        // Export all the symbols defined in this module.\n        if (module && module.metadata) {\n            for (var key in module.metadata) {\n                var data = module.metadata[key];\n                if (schema.isMetadataImportedSymbolReferenceExpression(data)) {\n                    // This is a re-export of an imported symbol. Record this as a re-export.\n                    var exportFrom = resolveModule(data.module, moduleName);\n                    this.exportAll(exportFrom);\n                    var symbol = this.symbolOf(exportFrom, data.name);\n                    exportSymbol(symbol, key);\n                }\n                else {\n                    // Record that this symbol is exported by this module.\n                    result.push(this.symbolOf(moduleName, key));\n                }\n            }\n        }\n        // Export all the re-exports from this module\n        if (module && module.exports) {\n            for (var _i = 0, _a = module.exports; _i < _a.length; _i++) {\n                var exportDeclaration = _a[_i];\n                var exportFrom = resolveModule(exportDeclaration.from, moduleName);\n                // Record all the exports from the module even if we don't use it directly.\n                var exportedSymbols = this.exportAll(exportFrom);\n                if (exportDeclaration.export) {\n                    // Re-export all the named exports from a module.\n                    for (var _b = 0, _c = exportDeclaration.export; _b < _c.length; _b++) {\n                        var exportItem = _c[_b];\n                        var name_1 = typeof exportItem == 'string' ? exportItem : exportItem.name;\n                        var exportAs = typeof exportItem == 'string' ? exportItem : exportItem.as;\n                        var symbol = this.symbolOf(exportFrom, name_1);\n                        if (exportedSymbols && exportedSymbols.length == 1 && exportedSymbols[0].reexport &&\n                            exportedSymbols[0].name == '*') {\n                            // This is a named export from a module we have no metadata about. Record the named\n                            // export as a re-export.\n                            symbol.reexport = true;\n                        }\n                        exportSymbol(this.symbolOf(exportFrom, name_1), exportAs);\n                    }\n                }\n                else {\n                    // Re-export all the symbols from the module\n                    var exportedSymbols_1 = this.exportAll(exportFrom);\n                    for (var _d = 0, exportedSymbols_2 = exportedSymbols_1; _d < exportedSymbols_2.length; _d++) {\n                        var exportedSymbol = exportedSymbols_2[_d];\n                        var name_2 = exportedSymbol.name;\n                        exportSymbol(exportedSymbol, name_2);\n                    }\n                }\n            }\n        }\n        if (!module) {\n            // If no metadata is found for this import then it is considered external to the\n            // library and should be recorded as a re-export in the final metadata if it is\n            // eventually re-exported.\n            var symbol = this.symbolOf(moduleName, '*');\n            symbol.reexport = true;\n            result.push(symbol);\n        }\n        this.exports.set(moduleName, result);\n        return result;\n    };\n    /**\n     * Fill in the canonicalSymbol which is the symbol that should be imported by factories.\n     * The canonical symbol is the one exported by the index file for the bundle or definition\n     * symbol for private symbols that are not exported by bundle index.\n     */\n    MetadataBundler.prototype.canonicalizeSymbols = function (exportedSymbols) {\n        var symbols = Array.from(this.symbolMap.values());\n        this.exported = new Set(exportedSymbols);\n        symbols.forEach(this.canonicalizeSymbol, this);\n    };\n    MetadataBundler.prototype.canonicalizeSymbol = function (symbol) {\n        var rootExport = getRootExport(symbol);\n        var declaration = getSymbolDeclaration(symbol);\n        var isPrivate = !this.exported.has(rootExport);\n        var canonicalSymbol = isPrivate ? declaration : rootExport;\n        symbol.isPrivate = isPrivate;\n        symbol.declaration = declaration;\n        symbol.canonicalSymbol = canonicalSymbol;\n        symbol.reexport = declaration.reexport;\n    };\n    MetadataBundler.prototype.getEntries = function (exportedSymbols) {\n        var _this = this;\n        var result = {};\n        var exportedNames = new Set(exportedSymbols.map(function (s) { return s.name; }));\n        var privateName = 0;\n        function newPrivateName() {\n            while (true) {\n                var digits = [];\n                var index = privateName++;\n                var base = PRIVATE_NAME_CHARS;\n                while (!digits.length || index > 0) {\n                    digits.unshift(base[index % base.length]);\n                    index = Math.floor(index / base.length);\n                }\n                digits.unshift('\\u0275');\n                var result_1 = digits.join('');\n                if (!exportedNames.has(result_1))\n                    return result_1;\n            }\n        }\n        exportedSymbols.forEach(function (symbol) { return _this.convertSymbol(symbol); });\n        var symbolsMap = new Map();\n        Array.from(this.symbolMap.values()).forEach(function (symbol) {\n            if (symbol.referenced && !symbol.reexport) {\n                var name_3 = symbol.name;\n                var identifier = symbol.declaration.module + \":\" + symbol.declaration.name;\n                if (symbol.isPrivate && !symbol.privateName) {\n                    name_3 = newPrivateName();\n                    symbol.privateName = name_3;\n                }\n                if (symbolsMap.has(identifier)) {\n                    var names = symbolsMap.get(identifier);\n                    names.push(name_3);\n                }\n                else {\n                    symbolsMap.set(identifier, [name_3]);\n                }\n                result[name_3] = symbol.value;\n            }\n        });\n        // check for duplicated entries\n        symbolsMap.forEach(function (names, identifier) {\n            if (names.length > 1) {\n                var _a = identifier.split(':'), module_1 = _a[0], declaredName = _a[1];\n                // prefer the export that uses the declared name (if any)\n                var reference_1 = names.indexOf(declaredName);\n                if (reference_1 === -1) {\n                    reference_1 = 0;\n                }\n                // keep one entry and replace the others by references\n                names.forEach(function (name, i) {\n                    if (i !== reference_1) {\n                        result[name] = { __symbolic: 'reference', name: names[reference_1] };\n                    }\n                });\n            }\n        });\n        return result;\n    };\n    MetadataBundler.prototype.getReExports = function (exportedSymbols) {\n        var modules = new Map();\n        var exportAlls = new Set();\n        for (var _i = 0, exportedSymbols_3 = exportedSymbols; _i < exportedSymbols_3.length; _i++) {\n            var symbol = exportedSymbols_3[_i];\n            if (symbol.reexport) {\n                // symbol.declaration is guarenteed to be defined during the phase this method is called.\n                var declaration = symbol.declaration;\n                var module_2 = declaration.module;\n                if (declaration.name == '*') {\n                    // Reexport all the symbols.\n                    exportAlls.add(declaration.module);\n                }\n                else {\n                    // Re-export the symbol as the exported name.\n                    var entry = modules.get(module_2);\n                    if (!entry) {\n                        entry = [];\n                        modules.set(module_2, entry);\n                    }\n                    var as = symbol.name;\n                    var name_4 = declaration.name;\n                    entry.push({ name: name_4, as: as });\n                }\n            }\n        }\n        return Array.from(exportAlls.values()).map(function (from) { return ({ from: from }); }).concat(Array.from(modules.entries()).map(function (_a) {\n            var from = _a[0], exports = _a[1];\n            return ({ export: exports, from: from });\n        }));\n    };\n    MetadataBundler.prototype.convertSymbol = function (symbol) {\n        // canonicalSymbol is ensured to be defined before this is called.\n        var canonicalSymbol = symbol.canonicalSymbol;\n        if (!canonicalSymbol.referenced) {\n            canonicalSymbol.referenced = true;\n            // declaration is ensured to be definded before this method is called.\n            var declaration = canonicalSymbol.declaration;\n            var module_3 = this.getMetadata(declaration.module);\n            if (module_3) {\n                var value = module_3.metadata[declaration.name];\n                if (value && !declaration.name.startsWith('___')) {\n                    canonicalSymbol.value = this.convertEntry(declaration.module, value);\n                }\n            }\n        }\n    };\n    MetadataBundler.prototype.convertEntry = function (moduleName, value) {\n        if (schema.isClassMetadata(value)) {\n            return this.convertClass(moduleName, value);\n        }\n        if (schema.isFunctionMetadata(value)) {\n            return this.convertFunction(moduleName, value);\n        }\n        if (schema.isInterfaceMetadata(value)) {\n            return value;\n        }\n        return this.convertValue(moduleName, value);\n    };\n    MetadataBundler.prototype.convertClass = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'class',\n            arity: value.arity,\n            extends: this.convertExpression(moduleName, value.extends),\n            decorators: value.decorators && value.decorators.map(function (d) { return _this.convertExpression(moduleName, d); }),\n            members: this.convertMembers(moduleName, value.members),\n            statics: value.statics && this.convertStatics(moduleName, value.statics)\n        };\n    };\n    MetadataBundler.prototype.convertMembers = function (moduleName, members) {\n        var _this = this;\n        var result = {};\n        for (var name_5 in members) {\n            var value = members[name_5];\n            result[name_5] = value.map(function (v) { return _this.convertMember(moduleName, v); });\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertMember = function (moduleName, member) {\n        var _this = this;\n        var result = { __symbolic: member.__symbolic };\n        result.decorators =\n            member.decorators && member.decorators.map(function (d) { return _this.convertExpression(moduleName, d); });\n        if (schema.isMethodMetadata(member)) {\n            result.parameterDecorators = member.parameterDecorators &&\n                member.parameterDecorators.map(function (d) { return d && d.map(function (p) { return _this.convertExpression(moduleName, p); }); });\n            if (schema.isConstructorMetadata(member)) {\n                if (member.parameters) {\n                    result.parameters =\n                        member.parameters.map(function (p) { return _this.convertExpression(moduleName, p); });\n                }\n            }\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertStatics = function (moduleName, statics) {\n        var result = {};\n        for (var key in statics) {\n            var value = statics[key];\n            result[key] = schema.isFunctionMetadata(value) ? this.convertFunction(moduleName, value) : value;\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertFunction = function (moduleName, value) {\n        var _this = this;\n        return {\n            __symbolic: 'function',\n            parameters: value.parameters,\n            defaults: value.defaults && value.defaults.map(function (v) { return _this.convertValue(moduleName, v); }),\n            value: this.convertValue(moduleName, value.value)\n        };\n    };\n    MetadataBundler.prototype.convertValue = function (moduleName, value) {\n        var _this = this;\n        if (isPrimitive(value)) {\n            return value;\n        }\n        if (schema.isMetadataError(value)) {\n            return this.convertError(moduleName, value);\n        }\n        if (schema.isMetadataSymbolicExpression(value)) {\n            return this.convertExpression(moduleName, value);\n        }\n        if (Array.isArray(value)) {\n            return value.map(function (v) { return _this.convertValue(moduleName, v); });\n        }\n        // Otherwise it is a metadata object.\n        var object = value;\n        var result = {};\n        for (var key in object) {\n            result[key] = this.convertValue(moduleName, object[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.convertExpression = function (moduleName, value) {\n        if (value) {\n            switch (value.__symbolic) {\n                case 'error':\n                    return this.convertError(moduleName, value);\n                case 'reference':\n                    return this.convertReference(moduleName, value);\n                default:\n                    return this.convertExpressionNode(moduleName, value);\n            }\n        }\n        return value;\n    };\n    MetadataBundler.prototype.convertError = function (module, value) {\n        return {\n            __symbolic: 'error',\n            message: value.message,\n            line: value.line,\n            character: value.character,\n            context: value.context, module: module\n        };\n    };\n    MetadataBundler.prototype.convertReference = function (moduleName, value) {\n        var _this = this;\n        var createReference = function (symbol) {\n            var declaration = symbol.declaration;\n            if (declaration.module.startsWith('.')) {\n                // Reference to a symbol defined in the module. Ensure it is converted then return a\n                // references to the final symbol.\n                _this.convertSymbol(symbol);\n                return {\n                    __symbolic: 'reference',\n                    get name() {\n                        // Resolved lazily because private names are assigned late.\n                        var canonicalSymbol = symbol.canonicalSymbol;\n                        if (canonicalSymbol.isPrivate == null) {\n                            throw Error('Invalid state: isPrivate was not initialized');\n                        }\n                        return canonicalSymbol.isPrivate ? canonicalSymbol.privateName : canonicalSymbol.name;\n                    }\n                };\n            }\n            else {\n                // The symbol was a re-exported symbol from another module. Return a reference to the\n                // original imported symbol.\n                return { __symbolic: 'reference', name: declaration.name, module: declaration.module };\n            }\n        };\n        if (schema.isMetadataGlobalReferenceExpression(value)) {\n            var metadata = this.getMetadata(moduleName);\n            if (metadata && metadata.metadata && metadata.metadata[value.name]) {\n                // Reference to a symbol defined in the module\n                return createReference(this.canonicalSymbolOf(moduleName, value.name));\n            }\n            // If a reference has arguments, the arguments need to be converted.\n            if (value.arguments) {\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            // Global references without arguments (such as to Math or JSON) are unmodified.\n            return value;\n        }\n        if (schema.isMetadataImportedSymbolReferenceExpression(value)) {\n            // References to imported symbols are separated into two, references to bundled modules and\n            // references to modules external to the bundle. If the module reference is relative it is\n            // assumed to be in the bundle. If it is Global it is assumed to be outside the bundle.\n            // References to symbols outside the bundle are left unmodified. References to symbol inside\n            // the bundle need to be converted to a bundle import reference reachable from the bundle\n            // index.\n            if (value.module.startsWith('.')) {\n                // Reference is to a symbol defined inside the module. Convert the reference to a reference\n                // to the canonical symbol.\n                var referencedModule = resolveModule(value.module, moduleName);\n                var referencedName = value.name;\n                return createReference(this.canonicalSymbolOf(referencedModule, referencedName));\n            }\n            // Value is a reference to a symbol defined outside the module.\n            if (value.arguments) {\n                // If a reference has arguments the arguments need to be converted.\n                return {\n                    __symbolic: 'reference',\n                    name: value.name,\n                    module: value.module,\n                    arguments: value.arguments.map(function (a) { return _this.convertValue(moduleName, a); })\n                };\n            }\n            return value;\n        }\n        if (schema.isMetadataModuleReferenceExpression(value)) {\n            // Cannot support references to bundled modules as the internal modules of a bundle are erased\n            // by the bundler.\n            if (value.module.startsWith('.')) {\n                return {\n                    __symbolic: 'error',\n                    message: 'Unsupported bundled module reference',\n                    context: { module: value.module }\n                };\n            }\n            // References to unbundled modules are unmodified.\n            return value;\n        }\n    };\n    MetadataBundler.prototype.convertExpressionNode = function (moduleName, value) {\n        var result = { __symbolic: value.__symbolic };\n        for (var key in value) {\n            result[key] = this.convertValue(moduleName, value[key]);\n        }\n        return result;\n    };\n    MetadataBundler.prototype.symbolOf = function (module, name) {\n        var symbolKey = module + \":\" + name;\n        var symbol = this.symbolMap.get(symbolKey);\n        if (!symbol) {\n            symbol = { module: module, name: name };\n            this.symbolMap.set(symbolKey, symbol);\n        }\n        return symbol;\n    };\n    MetadataBundler.prototype.canonicalSymbolOf = function (module, name) {\n        // Ensure the module has been seen.\n        this.exportAll(module);\n        var symbol = this.symbolOf(module, name);\n        if (!symbol.canonicalSymbol) {\n            this.canonicalizeSymbol(symbol);\n        }\n        return symbol;\n    };\n    return MetadataBundler;\n}());\nexports.MetadataBundler = MetadataBundler;\nvar CompilerHostAdapter = (function () {\n    function CompilerHostAdapter(host) {\n        this.host = host;\n        this.collector = new collector.MetadataCollector();\n    }\n    CompilerHostAdapter.prototype.getMetadataFor = function (fileName) {\n        var sourceFile = this.host.getSourceFile(fileName + '.ts', ts__default.ScriptTarget.Latest);\n        return this.collector.getMetadata(sourceFile);\n    };\n    return CompilerHostAdapter;\n}());\nexports.CompilerHostAdapter = CompilerHostAdapter;\nfunction resolveModule(importName, from) {\n    if (importName.startsWith('.') && from) {\n        var normalPath = path__default.normalize(path__default.join(path__default.dirname(from), importName));\n        if (!normalPath.startsWith('.') && from.startsWith('.')) {\n            // path.normalize() preserves leading '../' but not './'. This adds it back.\n            normalPath = \".\" + path__default.sep + normalPath;\n        }\n        // Replace windows path delimiters with forward-slashes. Otherwise the paths are not\n        // TypeScript compatible when building the bundle.\n        return normalPath.replace(/\\\\/g, '/');\n    }\n    return importName;\n}\nfunction isPrimitive(o) {\n    return o === null || (typeof o !== 'function' && typeof o !== 'object');\n}\nfunction getRootExport(symbol) {\n    return symbol.reexportedAs ? getRootExport(symbol.reexportedAs) : symbol;\n}\nfunction getSymbolDeclaration(symbol) {\n    return symbol.exports ? getSymbolDeclaration(symbol.exports) : symbol;\n}\n\n});\n\nvar index_writer = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar INDEX_HEADER = \"/**\\n * Generated bundle index. Do not edit.\\n */\\n\";\nfunction privateEntriesToIndex(index, privates) {\n    var results = [INDEX_HEADER];\n    // Export all of the index symbols.\n    results.push(\"export * from '\" + index + \"';\", '');\n    // Simplify the exports\n    var exports = new Map();\n    for (var _i = 0, privates_1 = privates; _i < privates_1.length; _i++) {\n        var entry = privates_1[_i];\n        var entries = exports.get(entry.module);\n        if (!entries) {\n            entries = [];\n            exports.set(entry.module, entries);\n        }\n        entries.push(entry);\n    }\n    var compareEntries = compare(function (e) { return e.name; });\n    var compareModules = compare(function (e) { return e[0]; });\n    var orderedExports = Array.from(exports)\n        .map(function (_a) {\n        var module = _a[0], entries = _a[1];\n        return [module, entries.sort(compareEntries)];\n    })\n        .sort(compareModules);\n    for (var _a = 0, orderedExports_1 = orderedExports; _a < orderedExports_1.length; _a++) {\n        var _b = orderedExports_1[_a], module_1 = _b[0], entries = _b[1];\n        var symbols = entries.map(function (e) { return e.name + \" as \" + e.privateName; });\n        results.push(\"export {\" + symbols + \"} from '\" + module_1 + \"';\");\n    }\n    return results.join('\\n');\n}\nexports.privateEntriesToIndex = privateEntriesToIndex;\nfunction compare(select) {\n    return function (a, b) {\n        var ak = select(a);\n        var bk = select(b);\n        return ak > bk ? 1 : ak < bk ? -1 : 0;\n    };\n}\n\n});\n\nvar bundle_index_host = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\n\n\nvar DTS = /\\.d\\.ts$/;\nvar JS_EXT = /(\\.js|)$/;\nfunction createSyntheticIndexHost(delegate, syntheticIndex) {\n    var normalSyntheticIndexName = path__default.normalize(syntheticIndex.name);\n    var indexContent = syntheticIndex.content;\n    var indexMetadata = syntheticIndex.metadata;\n    var newHost = Object.create(delegate);\n    newHost.fileExists = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName || delegate.fileExists(fileName);\n    };\n    newHost.readFile = function (fileName) {\n        return path__default.normalize(fileName) == normalSyntheticIndexName ? indexContent :\n            delegate.readFile(fileName);\n    };\n    newHost.getSourceFile =\n        function (fileName, languageVersion, onError) {\n            if (path__default.normalize(fileName) == normalSyntheticIndexName) {\n                return ts__default.createSourceFile(fileName, indexContent, languageVersion, true);\n            }\n            return delegate.getSourceFile(fileName, languageVersion, onError);\n        };\n    newHost.writeFile =\n        function (fileName, data, writeByteOrderMark, onError, sourceFiles) {\n            delegate.writeFile(fileName, data, writeByteOrderMark, onError, sourceFiles);\n            if (fileName.match(DTS) && sourceFiles && sourceFiles.length == 1 &&\n                path__default.normalize(sourceFiles[0].fileName) == normalSyntheticIndexName) {\n                // If we are writing the synthetic index, write the metadata along side.\n                var metadataName = fileName.replace(DTS, '.metadata.json');\n                fs__default.writeFileSync(metadataName, indexMetadata, { encoding: 'utf8' });\n            }\n        };\n    return newHost;\n}\nfunction createBundleIndexHost(ngOptions, rootFiles, host) {\n    var files = rootFiles.filter(function (f) { return !DTS.test(f); });\n    if (files.length != 1) {\n        return {\n            host: host,\n            errors: [{\n                    file: null,\n                    start: null,\n                    length: null,\n                    messageText: 'Angular compiler option \"flatModuleIndex\" requires one and only one .ts file in the \"files\" field.',\n                    category: ts__default.DiagnosticCategory.Error,\n                    code: 0\n                }]\n        };\n    }\n    var file = files[0];\n    var indexModule = file.replace(/\\.ts$/, '');\n    var bundler$$1 = new bundler.MetadataBundler(indexModule, ngOptions.flatModuleId, new bundler.CompilerHostAdapter(host));\n    var metadataBundle = bundler$$1.getMetadataBundle();\n    var metadata = JSON.stringify(metadataBundle.metadata);\n    var name = path__default.join(path__default.dirname(indexModule), ngOptions.flatModuleOutFile.replace(JS_EXT, '.ts'));\n    var libraryIndex = \"./\" + path__default.basename(indexModule);\n    var content = index_writer.privateEntriesToIndex(libraryIndex, metadataBundle.privates);\n    host = createSyntheticIndexHost(host, { name: name, content: content, metadata: metadata });\n    return { host: host, indexName: name };\n}\nexports.createBundleIndexHost = createBundleIndexHost;\n\n});\n\nvar index = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(collector);\n__export(schema);\n__export(bundle_index_host);\n\n});\n\nvar api = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_ERROR_CODE = 100;\nexports.UNKNOWN_ERROR_CODE = 500;\nexports.SOURCE = 'angular';\nfunction isTsDiagnostic(diagnostic) {\n    return diagnostic != null && diagnostic.source !== 'angular';\n}\nexports.isTsDiagnostic = isTsDiagnostic;\nfunction isNgDiagnostic(diagnostic) {\n    return diagnostic != null && diagnostic.source === 'angular';\n}\nexports.isNgDiagnostic = isNgDiagnostic;\nvar EmitFlags;\n(function (EmitFlags) {\n    EmitFlags[EmitFlags[\"DTS\"] = 1] = \"DTS\";\n    EmitFlags[EmitFlags[\"JS\"] = 2] = \"JS\";\n    EmitFlags[EmitFlags[\"Metadata\"] = 4] = \"Metadata\";\n    EmitFlags[EmitFlags[\"I18nBundle\"] = 8] = \"I18nBundle\";\n    EmitFlags[EmitFlags[\"Codegen\"] = 16] = \"Codegen\";\n    EmitFlags[EmitFlags[\"Default\"] = 19] = \"Default\";\n    EmitFlags[EmitFlags[\"All\"] = 31] = \"All\";\n})(EmitFlags = exports.EmitFlags || (exports.EmitFlags = {}));\n\n});\n\nvar util = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n\nexports.GENERATED_FILES = /(.*?)\\.(ngfactory|shim\\.ngstyle|ngstyle|ngsummary)\\.(js|d\\.ts|ts)$/;\nexports.DTS = /\\.d\\.ts$/;\n// Note: This is an internal property in TypeScript. Use it only for assertions and tests.\nfunction tsStructureIsReused(program) {\n    return program.structureIsReused;\n}\nexports.tsStructureIsReused = tsStructureIsReused;\nfunction createMessageDiagnostic(messageText) {\n    return {\n        file: undefined,\n        start: undefined,\n        length: undefined,\n        category: ts__default.DiagnosticCategory.Message, messageText: messageText,\n        code: api.DEFAULT_ERROR_CODE,\n        source: api.SOURCE,\n    };\n}\nexports.createMessageDiagnostic = createMessageDiagnostic;\nfunction isInRootDir(fileName, options) {\n    return !options.rootDir || pathStartsWithPrefix(options.rootDir, fileName);\n}\nexports.isInRootDir = isInRootDir;\nfunction relativeToRootDirs(filePath, rootDirs) {\n    if (!filePath)\n        return filePath;\n    for (var _i = 0, _a = rootDirs || []; _i < _a.length; _i++) {\n        var dir = _a[_i];\n        var rel = pathStartsWithPrefix(dir, filePath);\n        if (rel) {\n            return rel;\n        }\n    }\n    return filePath;\n}\nexports.relativeToRootDirs = relativeToRootDirs;\nfunction pathStartsWithPrefix(prefix, fullPath) {\n    var rel = path__default.relative(prefix, fullPath);\n    return rel.startsWith('..') ? null : rel;\n}\n/**\n * Converts a ng.Diagnostic into a ts.Diagnostic.\n * This looses some information, and also uses an incomplete object as `file`.\n *\n * I.e. only use this where the API allows only a ts.Diagnostic.\n */\nfunction ngToTsDiagnostic(ng) {\n    var file;\n    var start;\n    var length;\n    if (ng.span) {\n        // Note: We can't use a real ts.SourceFile,\n        // but we can at least mirror the properties `fileName` and `text`, which\n        // are mostly used for error reporting.\n        file = { fileName: ng.span.start.file.url, text: ng.span.start.file.content };\n        start = ng.span.start.offset;\n        length = ng.span.end.offset - start;\n    }\n    return {\n        file: file,\n        messageText: ng.messageText,\n        category: ng.category,\n        code: ng.code, start: start, length: length,\n    };\n}\nexports.ngToTsDiagnostic = ngToTsDiagnostic;\n\n});\n\nvar metadata_reader = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __assign = (commonjsGlobal && commonjsGlobal.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\nfunction createMetadataReaderCache() {\n    var data = new Map();\n    return { data: data };\n}\nexports.createMetadataReaderCache = createMetadataReaderCache;\nfunction readMetadata(filePath, host, cache) {\n    var metadatas = cache && cache.data.get(filePath);\n    if (metadatas) {\n        return metadatas;\n    }\n    if (host.fileExists(filePath)) {\n        // If the file doesn't exists then we cannot return metadata for the file.\n        // This will occur if the user referenced a declared module for which no file\n        // exists for the module (i.e. jQuery or angularjs).\n        if (util.DTS.test(filePath)) {\n            metadatas = readMetadataFile(host, filePath);\n            if (!metadatas) {\n                // If there is a .d.ts file but no metadata file we need to produce a\n                // metadata from the .d.ts file as metadata files capture reexports\n                // (starting with v3).\n                metadatas = [upgradeMetadataWithDtsData(host, { '__symbolic': 'module', 'version': 1, 'metadata': {} }, filePath)];\n            }\n        }\n        else {\n            var metadata = host.getSourceFileMetadata(filePath);\n            metadatas = metadata ? [metadata] : [];\n        }\n    }\n    if (cache && (!host.cacheMetadata || host.cacheMetadata(filePath))) {\n        cache.data.set(filePath, metadatas);\n    }\n    return metadatas;\n}\nexports.readMetadata = readMetadata;\nfunction readMetadataFile(host, dtsFilePath) {\n    var metadataPath = dtsFilePath.replace(util.DTS, '.metadata.json');\n    if (!host.fileExists(metadataPath)) {\n        return undefined;\n    }\n    try {\n        var metadataOrMetadatas = JSON.parse(host.readFile(metadataPath));\n        var metadatas = metadataOrMetadatas ?\n            (Array.isArray(metadataOrMetadatas) ? metadataOrMetadatas : [metadataOrMetadatas]) :\n            [];\n        if (metadatas.length) {\n            var maxMetadata = metadatas.reduce(function (p, c) { return p.version > c.version ? p : c; });\n            if (maxMetadata.version < index.METADATA_VERSION) {\n                metadatas.push(upgradeMetadataWithDtsData(host, maxMetadata, dtsFilePath));\n            }\n        }\n        return metadatas;\n    }\n    catch (e) {\n        console.error(\"Failed to read JSON file \" + metadataPath);\n        throw e;\n    }\n}\nfunction upgradeMetadataWithDtsData(host, oldMetadata, dtsFilePath) {\n    // patch v1 to v3 by adding exports and the `extends` clause.\n    // patch v3 to v4 by adding `interface` symbols for TypeAlias\n    var newMetadata = {\n        '__symbolic': 'module',\n        'version': index.METADATA_VERSION,\n        'metadata': __assign({}, oldMetadata.metadata),\n    };\n    if (oldMetadata.exports) {\n        newMetadata.exports = oldMetadata.exports;\n    }\n    if (oldMetadata.importAs) {\n        newMetadata.importAs = oldMetadata.importAs;\n    }\n    if (oldMetadata.origins) {\n        newMetadata.origins = oldMetadata.origins;\n    }\n    var dtsMetadata = host.getSourceFileMetadata(dtsFilePath);\n    if (dtsMetadata) {\n        for (var prop in dtsMetadata.metadata) {\n            if (!newMetadata.metadata[prop]) {\n                newMetadata.metadata[prop] = dtsMetadata.metadata[prop];\n            }\n        }\n        // Only copy exports from exports from metadata prior to version 3.\n        // Starting with version 3 the collector began collecting exports and\n        // this should be redundant. Also, with bundler will rewrite the exports\n        // which will hoist the exports from modules referenced indirectly causing\n        // the imports to be different than the .d.ts files and using the .d.ts file\n        // exports would cause the StaticSymbolResolver to redirect symbols to the\n        // incorrect location.\n        if ((!oldMetadata.version || oldMetadata.version < 3) && dtsMetadata.exports) {\n            newMetadata.exports = dtsMetadata.exports;\n        }\n    }\n    return newMetadata;\n}\n\n});\n\nvar language_services = createCommonjsModule(function (module, exports) {\n\"use strict\";\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n\nThe API from compiler-cli that language-service can see.\nIt is important that none the exported modules require anything other than\nAngular modules and Typescript as this will indirectly add a dependency\nto the language service.\n\n*/\n\nexports.getExpressionDiagnostics = expression_diagnostics.getExpressionDiagnostics;\nexports.getExpressionScope = expression_diagnostics.getExpressionScope;\nexports.getTemplateExpressionDiagnostics = expression_diagnostics.getTemplateExpressionDiagnostics;\n\nexports.AstType = expression_type.AstType;\nexports.DiagnosticKind = expression_type.DiagnosticKind;\nexports.TypeDiagnostic = expression_type.TypeDiagnostic;\n\nexports.BuiltinType = symbols.BuiltinType;\n\nexports.getClassFromStaticSymbol = typescript_symbols.getClassFromStaticSymbol;\nexports.getClassMembers = typescript_symbols.getClassMembers;\nexports.getClassMembersFromDeclaration = typescript_symbols.getClassMembersFromDeclaration;\nexports.getPipesTable = typescript_symbols.getPipesTable;\nexports.getSymbolQuery = typescript_symbols.getSymbolQuery;\n\nexports.MetadataCollector = index.MetadataCollector;\n\nexports.createMetadataReaderCache = metadata_reader.createMetadataReaderCache;\nexports.readMetadata = metadata_reader.readMetadata;\n\n});\n\nvar language_services_2 = language_services.getExpressionScope;\nvar language_services_3 = language_services.getTemplateExpressionDiagnostics;\nvar language_services_4 = language_services.AstType;\nvar language_services_7 = language_services.BuiltinType;\nvar language_services_10 = language_services.getClassMembersFromDeclaration;\nvar language_services_11 = language_services.getPipesTable;\nvar language_services_12 = language_services.getSymbolQuery;\nvar language_services_13 = language_services.MetadataCollector;\nvar language_services_14 = language_services.createMetadataReaderCache;\nvar language_services_15 = language_services.readMetadata;\n\n// CommonJS / Node have global context exposed as \"global\" variable.\n// We don't want to include the whole node.d.ts this this compilation unit so we'll just fake\n// the global \"global\" var for now.\nvar __window$1 = typeof window !== 'undefined' && window;\nvar __self$1 = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global$1 = typeof commonjsGlobal !== 'undefined' && commonjsGlobal;\nvar _root = __window$1 || __global$1 || __self$1;\nvar root_1 = _root;\n// Workaround Closure Compiler restriction: The body of a goog.module cannot use throw.\n// This is needed when used with angular/tsickle which inserts a goog.module statement.\n// Wrap in IIFE\n(function () {\n    if (!_root) {\n        throw new Error('RxJS could not find any global context (window, self, global)');\n    }\n})();\n\n\nvar root = {\n\troot: root_1\n};\n\nfunction isFunction(x) {\n    return typeof x === 'function';\n}\nvar isFunction_2 = isFunction;\n\n\nvar isFunction_1 = {\n\tisFunction: isFunction_2\n};\n\nvar isArray_1 = Array.isArray || (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArray = {\n\tisArray: isArray_1\n};\n\nfunction isObject(x) {\n    return x != null && typeof x === 'object';\n}\nvar isObject_2 = isObject;\n\n\nvar isObject_1 = {\n\tisObject: isObject_2\n};\n\n// typeof any so that it we don't have to cast when comparing a result to the error object\nvar errorObject_1 = { e: {} };\n\n\nvar errorObject = {\n\terrorObject: errorObject_1\n};\n\nvar tryCatchTarget;\nfunction tryCatcher() {\n    try {\n        return tryCatchTarget.apply(this, arguments);\n    }\n    catch (e) {\n        errorObject.errorObject.e = e;\n        return errorObject.errorObject;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\nvar tryCatch_2 = tryCatch;\n\n\n\nvar tryCatch_1 = {\n\ttryCatch: tryCatch_2\n};\n\nvar __extends$2 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nvar UnsubscriptionError = (function (_super) {\n    __extends$2(UnsubscriptionError, _super);\n    function UnsubscriptionError(errors) {\n        _super.call(this);\n        this.errors = errors;\n        var err = Error.call(this, errors ?\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\n        this.name = err.name = 'UnsubscriptionError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return UnsubscriptionError;\n}(Error));\nvar UnsubscriptionError_2 = UnsubscriptionError;\n\n\nvar UnsubscriptionError_1 = {\n\tUnsubscriptionError: UnsubscriptionError_2\n};\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nvar Subscription = (function () {\n    /**\n     * @param {function(): void} [unsubscribe] A function describing how to\n     * perform the disposal of resources when the `unsubscribe` method is called.\n     */\n    function Subscription(unsubscribe) {\n        /**\n         * A flag to indicate whether this Subscription has already been unsubscribed.\n         * @type {boolean}\n         */\n        this.closed = false;\n        this._parent = null;\n        this._parents = null;\n        this._subscriptions = null;\n        if (unsubscribe) {\n            this._unsubscribe = unsubscribe;\n        }\n    }\n    /**\n     * Disposes the resources held by the subscription. May, for instance, cancel\n     * an ongoing Observable execution or cancel any other type of work that\n     * started when the Subscription was created.\n     * @return {void}\n     */\n    Subscription.prototype.unsubscribe = function () {\n        var hasErrors = false;\n        var errors;\n        if (this.closed) {\n            return;\n        }\n        var _a = this, _parent = _a._parent, _parents = _a._parents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;\n        this.closed = true;\n        this._parent = null;\n        this._parents = null;\n        // null out _subscriptions first so any child subscriptions that attempt\n        // to remove themselves from this subscription will noop\n        this._subscriptions = null;\n        var index = -1;\n        var len = _parents ? _parents.length : 0;\n        // if this._parent is null, then so is this._parents, and we\n        // don't have to remove ourselves from any parent subscriptions.\n        while (_parent) {\n            _parent.remove(this);\n            // if this._parents is null or index >= len,\n            // then _parent is set to null, and the loop exits\n            _parent = ++index < len && _parents[index] || null;\n        }\n        if (isFunction_1.isFunction(_unsubscribe)) {\n            var trial = tryCatch_1.tryCatch(_unsubscribe).call(this);\n            if (trial === errorObject.errorObject) {\n                hasErrors = true;\n                errors = errors || (errorObject.errorObject.e instanceof UnsubscriptionError_1.UnsubscriptionError ?\n                    flattenUnsubscriptionErrors(errorObject.errorObject.e.errors) : [errorObject.errorObject.e]);\n            }\n        }\n        if (isArray.isArray(_subscriptions)) {\n            index = -1;\n            len = _subscriptions.length;\n            while (++index < len) {\n                var sub = _subscriptions[index];\n                if (isObject_1.isObject(sub)) {\n                    var trial = tryCatch_1.tryCatch(sub.unsubscribe).call(sub);\n                    if (trial === errorObject.errorObject) {\n                        hasErrors = true;\n                        errors = errors || [];\n                        var err = errorObject.errorObject.e;\n                        if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {\n                            errors = errors.concat(flattenUnsubscriptionErrors(err.errors));\n                        }\n                        else {\n                            errors.push(err);\n                        }\n                    }\n                }\n            }\n        }\n        if (hasErrors) {\n            throw new UnsubscriptionError_1.UnsubscriptionError(errors);\n        }\n    };\n    /**\n     * Adds a tear down to be called during the unsubscribe() of this\n     * Subscription.\n     *\n     * If the tear down being added is a subscription that is already\n     * unsubscribed, is the same reference `add` is being called on, or is\n     * `Subscription.EMPTY`, it will not be added.\n     *\n     * If this subscription is already in an `closed` state, the passed\n     * tear down logic will be executed immediately.\n     *\n     * @param {TeardownLogic} teardown The additional logic to execute on\n     * teardown.\n     * @return {Subscription} Returns the Subscription used or created to be\n     * added to the inner subscriptions list. This Subscription can be used with\n     * `remove()` to remove the passed teardown logic from the inner subscriptions\n     * list.\n     */\n    Subscription.prototype.add = function (teardown) {\n        if (!teardown || (teardown === Subscription.EMPTY)) {\n            return Subscription.EMPTY;\n        }\n        if (teardown === this) {\n            return this;\n        }\n        var subscription = teardown;\n        switch (typeof teardown) {\n            case 'function':\n                subscription = new Subscription(teardown);\n            case 'object':\n                if (subscription.closed || typeof subscription.unsubscribe !== 'function') {\n                    return subscription;\n                }\n                else if (this.closed) {\n                    subscription.unsubscribe();\n                    return subscription;\n                }\n                else if (typeof subscription._addParent !== 'function' /* quack quack */) {\n                    var tmp = subscription;\n                    subscription = new Subscription();\n                    subscription._subscriptions = [tmp];\n                }\n                break;\n            default:\n                throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n        }\n        var subscriptions = this._subscriptions || (this._subscriptions = []);\n        subscriptions.push(subscription);\n        subscription._addParent(this);\n        return subscription;\n    };\n    /**\n     * Removes a Subscription from the internal list of subscriptions that will\n     * unsubscribe during the unsubscribe process of this Subscription.\n     * @param {Subscription} subscription The subscription to remove.\n     * @return {void}\n     */\n    Subscription.prototype.remove = function (subscription) {\n        var subscriptions = this._subscriptions;\n        if (subscriptions) {\n            var subscriptionIndex = subscriptions.indexOf(subscription);\n            if (subscriptionIndex !== -1) {\n                subscriptions.splice(subscriptionIndex, 1);\n            }\n        }\n    };\n    Subscription.prototype._addParent = function (parent) {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        if (!_parent || _parent === parent) {\n            // If we don't have a parent, or the new parent is the same as the\n            // current parent, then set this._parent to the new parent.\n            this._parent = parent;\n        }\n        else if (!_parents) {\n            // If there's already one parent, but not multiple, allocate an Array to\n            // store the rest of the parent Subscriptions.\n            this._parents = [parent];\n        }\n        else if (_parents.indexOf(parent) === -1) {\n            // Only add the new parent to the _parents list if it's not already there.\n            _parents.push(parent);\n        }\n    };\n    Subscription.EMPTY = (function (empty) {\n        empty.closed = true;\n        return empty;\n    }(new Subscription()));\n    return Subscription;\n}());\nvar Subscription_2 = Subscription;\nfunction flattenUnsubscriptionErrors(errors) {\n    return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);\n}\n\n\nvar Subscription_1 = {\n\tSubscription: Subscription_2\n};\n\nvar empty = {\n    closed: true,\n    next: function (value) { },\n    error: function (err) { throw err; },\n    complete: function () { }\n};\n\n\nvar Observer = {\n\tempty: empty\n};\n\nvar rxSubscriber = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nvar Symbol = root.root.Symbol;\nexports.rxSubscriber = (typeof Symbol === 'function' && typeof Symbol.for === 'function') ?\n    Symbol.for('rxSubscriber') : '@@rxSubscriber';\n/**\n * @deprecated use rxSubscriber instead\n */\nexports.$$rxSubscriber = exports.rxSubscriber;\n\n});\n\nvar __extends$1 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nvar Subscriber = (function (_super) {\n    __extends$1(Subscriber, _super);\n    /**\n     * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n     * defined Observer or a `next` callback function.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     */\n    function Subscriber(destinationOrNext, error, complete) {\n        _super.call(this);\n        this.syncErrorValue = null;\n        this.syncErrorThrown = false;\n        this.syncErrorThrowable = false;\n        this.isStopped = false;\n        switch (arguments.length) {\n            case 0:\n                this.destination = Observer.empty;\n                break;\n            case 1:\n                if (!destinationOrNext) {\n                    this.destination = Observer.empty;\n                    break;\n                }\n                if (typeof destinationOrNext === 'object') {\n                    if (destinationOrNext instanceof Subscriber) {\n                        this.destination = destinationOrNext;\n                        this.destination.add(this);\n                    }\n                    else {\n                        this.syncErrorThrowable = true;\n                        this.destination = new SafeSubscriber(this, destinationOrNext);\n                    }\n                    break;\n                }\n            default:\n                this.syncErrorThrowable = true;\n                this.destination = new SafeSubscriber(this, destinationOrNext, error, complete);\n                break;\n        }\n    }\n    Subscriber.prototype[rxSubscriber.rxSubscriber] = function () { return this; };\n    /**\n     * A static factory for a Subscriber, given a (potentially partial) definition\n     * of an Observer.\n     * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n     * @param {function(e: ?any): void} [error] The `error` callback of an\n     * Observer.\n     * @param {function(): void} [complete] The `complete` callback of an\n     * Observer.\n     * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n     * Observer represented by the given arguments.\n     */\n    Subscriber.create = function (next, error, complete) {\n        var subscriber = new Subscriber(next, error, complete);\n        subscriber.syncErrorThrowable = false;\n        return subscriber;\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `next` from\n     * the Observable, with a value. The Observable may call this method 0 or more\n     * times.\n     * @param {T} [value] The `next` value.\n     * @return {void}\n     */\n    Subscriber.prototype.next = function (value) {\n        if (!this.isStopped) {\n            this._next(value);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive notifications of type `error` from\n     * the Observable, with an attached {@link Error}. Notifies the Observer that\n     * the Observable has experienced an error condition.\n     * @param {any} [err] The `error` exception.\n     * @return {void}\n     */\n    Subscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._error(err);\n        }\n    };\n    /**\n     * The {@link Observer} callback to receive a valueless notification of type\n     * `complete` from the Observable. Notifies the Observer that the Observable\n     * has finished sending push-based notifications.\n     * @return {void}\n     */\n    Subscriber.prototype.complete = function () {\n        if (!this.isStopped) {\n            this.isStopped = true;\n            this._complete();\n        }\n    };\n    Subscriber.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.isStopped = true;\n        _super.prototype.unsubscribe.call(this);\n    };\n    Subscriber.prototype._next = function (value) {\n        this.destination.next(value);\n    };\n    Subscriber.prototype._error = function (err) {\n        this.destination.error(err);\n        this.unsubscribe();\n    };\n    Subscriber.prototype._complete = function () {\n        this.destination.complete();\n        this.unsubscribe();\n    };\n    Subscriber.prototype._unsubscribeAndRecycle = function () {\n        var _a = this, _parent = _a._parent, _parents = _a._parents;\n        this._parent = null;\n        this._parents = null;\n        this.unsubscribe();\n        this.closed = false;\n        this.isStopped = false;\n        this._parent = _parent;\n        this._parents = _parents;\n        return this;\n    };\n    return Subscriber;\n}(Subscription_1.Subscription));\nvar Subscriber_2 = Subscriber;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SafeSubscriber = (function (_super) {\n    __extends$1(SafeSubscriber, _super);\n    function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {\n        _super.call(this);\n        this._parentSubscriber = _parentSubscriber;\n        var next;\n        var context = this;\n        if (isFunction_1.isFunction(observerOrNext)) {\n            next = observerOrNext;\n        }\n        else if (observerOrNext) {\n            next = observerOrNext.next;\n            error = observerOrNext.error;\n            complete = observerOrNext.complete;\n            if (observerOrNext !== Observer.empty) {\n                context = Object.create(observerOrNext);\n                if (isFunction_1.isFunction(context.unsubscribe)) {\n                    this.add(context.unsubscribe.bind(context));\n                }\n                context.unsubscribe = this.unsubscribe.bind(this);\n            }\n        }\n        this._context = context;\n        this._next = next;\n        this._error = error;\n        this._complete = complete;\n    }\n    SafeSubscriber.prototype.next = function (value) {\n        if (!this.isStopped && this._next) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (!_parentSubscriber.syncErrorThrowable) {\n                this.__tryOrUnsub(this._next, value);\n            }\n            else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.error = function (err) {\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._error) {\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(this._error, err);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, this._error, err);\n                    this.unsubscribe();\n                }\n            }\n            else if (!_parentSubscriber.syncErrorThrowable) {\n                this.unsubscribe();\n                throw err;\n            }\n            else {\n                _parentSubscriber.syncErrorValue = err;\n                _parentSubscriber.syncErrorThrown = true;\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.complete = function () {\n        var _this = this;\n        if (!this.isStopped) {\n            var _parentSubscriber = this._parentSubscriber;\n            if (this._complete) {\n                var wrappedComplete = function () { return _this._complete.call(_this._context); };\n                if (!_parentSubscriber.syncErrorThrowable) {\n                    this.__tryOrUnsub(wrappedComplete);\n                    this.unsubscribe();\n                }\n                else {\n                    this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n                    this.unsubscribe();\n                }\n            }\n            else {\n                this.unsubscribe();\n            }\n        }\n    };\n    SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            this.unsubscribe();\n            throw err;\n        }\n    };\n    SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {\n        try {\n            fn.call(this._context, value);\n        }\n        catch (err) {\n            parent.syncErrorValue = err;\n            parent.syncErrorThrown = true;\n            return true;\n        }\n        return false;\n    };\n    SafeSubscriber.prototype._unsubscribe = function () {\n        var _parentSubscriber = this._parentSubscriber;\n        this._context = null;\n        this._parentSubscriber = null;\n        _parentSubscriber.unsubscribe();\n    };\n    return SafeSubscriber;\n}(Subscriber));\n\n\nvar Subscriber_1 = {\n\tSubscriber: Subscriber_2\n};\n\nfunction toSubscriber(nextOrObserver, error, complete) {\n    if (nextOrObserver) {\n        if (nextOrObserver instanceof Subscriber_1.Subscriber) {\n            return nextOrObserver;\n        }\n        if (nextOrObserver[rxSubscriber.rxSubscriber]) {\n            return nextOrObserver[rxSubscriber.rxSubscriber]();\n        }\n    }\n    if (!nextOrObserver && !error && !complete) {\n        return new Subscriber_1.Subscriber(Observer.empty);\n    }\n    return new Subscriber_1.Subscriber(nextOrObserver, error, complete);\n}\nvar toSubscriber_2 = toSubscriber;\n\n\nvar toSubscriber_1 = {\n\ttoSubscriber: toSubscriber_2\n};\n\nvar observable = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction getSymbolObservable(context) {\n    var $$observable;\n    var Symbol = context.Symbol;\n    if (typeof Symbol === 'function') {\n        if (Symbol.observable) {\n            $$observable = Symbol.observable;\n        }\n        else {\n            $$observable = Symbol('observable');\n            Symbol.observable = $$observable;\n        }\n    }\n    else {\n        $$observable = '@@observable';\n    }\n    return $$observable;\n}\nexports.getSymbolObservable = getSymbolObservable;\nexports.observable = getSymbolObservable(root.root);\n/**\n * @deprecated use observable instead\n */\nexports.$$observable = exports.observable;\n\n});\n\n/* tslint:disable:no-empty */\nfunction noop$1() { }\nvar noop_2 = noop$1;\n\n\nvar noop_1 = {\n\tnoop: noop_2\n};\n\n/* tslint:enable:max-line-length */\nfunction pipe() {\n    var fns = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        fns[_i - 0] = arguments[_i];\n    }\n    return pipeFromArray(fns);\n}\nvar pipe_2 = pipe;\n/* @internal */\nfunction pipeFromArray(fns) {\n    if (!fns) {\n        return noop_1.noop;\n    }\n    if (fns.length === 1) {\n        return fns[0];\n    }\n    return function piped(input) {\n        return fns.reduce(function (prev, fn) { return fn(prev); }, input);\n    };\n}\nvar pipeFromArray_1 = pipeFromArray;\n\n\nvar pipe_1 = {\n\tpipe: pipe_2,\n\tpipeFromArray: pipeFromArray_1\n};\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nvar Observable = (function () {\n    /**\n     * @constructor\n     * @param {Function} subscribe the function that is called when the Observable is\n     * initially subscribed to. This function is given a Subscriber, to which new values\n     * can be `next`ed, or an `error` method can be called to raise an error, or\n     * `complete` can be called to notify of a successful completion.\n     */\n    function Observable(subscribe) {\n        this._isScalar = false;\n        if (subscribe) {\n            this._subscribe = subscribe;\n        }\n    }\n    /**\n     * Creates a new Observable, with this Observable as the source, and the passed\n     * operator defined as the new observable's operator.\n     * @method lift\n     * @param {Operator} operator the operator defining the operation to take on the observable\n     * @return {Observable} a new observable with the Operator applied\n     */\n    Observable.prototype.lift = function (operator) {\n        var observable$$1 = new Observable();\n        observable$$1.source = this;\n        observable$$1.operator = operator;\n        return observable$$1;\n    };\n    /**\n     * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n     *\n     * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n     *\n     * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n     * might be for example a function that you passed to a {@link create} static factory, but most of the time it is\n     * a library implementation, which defines what and when will be emitted by an Observable. This means that calling\n     * `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n     * thought.\n     *\n     * Apart from starting the execution of an Observable, this method allows you to listen for values\n     * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n     * following ways.\n     *\n     * The first way is creating an object that implements {@link Observer} interface. It should have methods\n     * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n     * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n     * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n     * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n     * do anything, you can simply omit it. Note however, that if `error` method is not provided, all errors will\n     * be left uncaught.\n     *\n     * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n     * This means you can provide three functions as arguments to `subscribe`, where first function is equivalent\n     * of a `next` method, second of an `error` method and third of a `complete` method. Just as in case of Observer,\n     * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n     * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n     * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n     *\n     * Whatever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n     * This object allows you to call `unsubscribe` on it, which in turn will stop work that an Observable does and will clean\n     * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n     * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n     *\n     * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n     * It is an Observable itself that decides when these functions will be called. For example {@link of}\n     * by default emits all its values synchronously. Always check documentation for how given Observable\n     * will behave when subscribed and if its default behavior can be modified with a {@link Scheduler}.\n     *\n     * @example <caption>Subscribe with an Observer</caption>\n     * const sumObserver = {\n     *   sum: 0,\n     *   next(value) {\n     *     console.log('Adding: ' + value);\n     *     this.sum = this.sum + value;\n     *   },\n     *   error() { // We actually could just remove this method,\n     *   },        // since we do not really care about errors right now.\n     *   complete() {\n     *     console.log('Sum equals: ' + this.sum);\n     *   }\n     * };\n     *\n     * Rx.Observable.of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n     * .subscribe(sumObserver);\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Subscribe with functions</caption>\n     * let sum = 0;\n     *\n     * Rx.Observable.of(1, 2, 3)\n     * .subscribe(\n     *   function(value) {\n     *     console.log('Adding: ' + value);\n     *     sum = sum + value;\n     *   },\n     *   undefined,\n     *   function() {\n     *     console.log('Sum equals: ' + sum);\n     *   }\n     * );\n     *\n     * // Logs:\n     * // \"Adding: 1\"\n     * // \"Adding: 2\"\n     * // \"Adding: 3\"\n     * // \"Sum equals: 6\"\n     *\n     *\n     * @example <caption>Cancel a subscription</caption>\n     * const subscription = Rx.Observable.interval(1000).subscribe(\n     *   num => console.log(num),\n     *   undefined,\n     *   () => console.log('completed!') // Will not be called, even\n     * );                                // when cancelling subscription\n     *\n     *\n     * setTimeout(() => {\n     *   subscription.unsubscribe();\n     *   console.log('unsubscribed!');\n     * }, 2500);\n     *\n     * // Logs:\n     * // 0 after 1s\n     * // 1 after 2s\n     * // \"unsubscribed!\" after 2.5s\n     *\n     *\n     * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n     *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n     *  Observable.\n     * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n     *  the error will be thrown as unhandled.\n     * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n     * @return {ISubscription} a subscription reference to the registered handlers\n     * @method subscribe\n     */\n    Observable.prototype.subscribe = function (observerOrNext, error, complete) {\n        var operator = this.operator;\n        var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);\n        if (operator) {\n            operator.call(sink, this.source);\n        }\n        else {\n            sink.add(this.source ? this._subscribe(sink) : this._trySubscribe(sink));\n        }\n        if (sink.syncErrorThrowable) {\n            sink.syncErrorThrowable = false;\n            if (sink.syncErrorThrown) {\n                throw sink.syncErrorValue;\n            }\n        }\n        return sink;\n    };\n    Observable.prototype._trySubscribe = function (sink) {\n        try {\n            return this._subscribe(sink);\n        }\n        catch (err) {\n            sink.syncErrorThrown = true;\n            sink.syncErrorValue = err;\n            sink.error(err);\n        }\n    };\n    /**\n     * @method forEach\n     * @param {Function} next a handler for each value emitted by the observable\n     * @param {PromiseConstructor} [PromiseCtor] a constructor function used to instantiate the Promise\n     * @return {Promise} a promise that either resolves on observable completion or\n     *  rejects with the handled error\n     */\n    Observable.prototype.forEach = function (next, PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            // Must be declared in a separate statement to avoid a RefernceError when\n            // accessing subscription below in the closure due to Temporal Dead Zone.\n            var subscription;\n            subscription = _this.subscribe(function (value) {\n                if (subscription) {\n                    // if there is a subscription, then we can surmise\n                    // the next handling is asynchronous. Any errors thrown\n                    // need to be rejected explicitly and unsubscribe must be\n                    // called manually\n                    try {\n                        next(value);\n                    }\n                    catch (err) {\n                        reject(err);\n                        subscription.unsubscribe();\n                    }\n                }\n                else {\n                    // if there is NO subscription, then we're getting a nexted\n                    // value synchronously during subscription. We can just call it.\n                    // If it errors, Observable's `subscribe` will ensure the\n                    // unsubscription logic is called, then synchronously rethrow the error.\n                    // After that, Promise will trap the error and send it\n                    // down the rejection path.\n                    next(value);\n                }\n            }, reject, resolve);\n        });\n    };\n    Observable.prototype._subscribe = function (subscriber) {\n        return this.source.subscribe(subscriber);\n    };\n    /**\n     * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n     * @method Symbol.observable\n     * @return {Observable} this instance of the observable\n     */\n    Observable.prototype[observable.observable] = function () {\n        return this;\n    };\n    /* tslint:enable:max-line-length */\n    /**\n     * Used to stitch together functional operators into a chain.\n     * @method pipe\n     * @return {Observable} the Observable result of all of the operators having\n     * been called in the order they were passed in.\n     *\n     * @example\n     *\n     * import { map, filter, scan } from 'rxjs/operators';\n     *\n     * Rx.Observable.interval(1000)\n     *   .pipe(\n     *     filter(x => x % 2 === 0),\n     *     map(x => x + x),\n     *     scan((acc, x) => acc + x)\n     *   )\n     *   .subscribe(x => console.log(x))\n     */\n    Observable.prototype.pipe = function () {\n        var operations = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operations[_i - 0] = arguments[_i];\n        }\n        if (operations.length === 0) {\n            return this;\n        }\n        return pipe_1.pipeFromArray(operations)(this);\n    };\n    /* tslint:enable:max-line-length */\n    Observable.prototype.toPromise = function (PromiseCtor) {\n        var _this = this;\n        if (!PromiseCtor) {\n            if (root.root.Rx && root.root.Rx.config && root.root.Rx.config.Promise) {\n                PromiseCtor = root.root.Rx.config.Promise;\n            }\n            else if (root.root.Promise) {\n                PromiseCtor = root.root.Promise;\n            }\n        }\n        if (!PromiseCtor) {\n            throw new Error('no Promise impl found');\n        }\n        return new PromiseCtor(function (resolve, reject) {\n            var value;\n            _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });\n        });\n    };\n    // HACK: Since TypeScript inherits static properties too, we have to\n    // fight against TypeScript here so Subject can have a different static create signature\n    /**\n     * Creates a new cold Observable by calling the Observable constructor\n     * @static true\n     * @owner Observable\n     * @method create\n     * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n     * @return {Observable} a new cold observable\n     */\n    Observable.create = function (subscribe) {\n        return new Observable(subscribe);\n    };\n    return Observable;\n}());\nvar Observable_2 = Observable;\n\n\nvar Observable_1 = {\n\tObservable: Observable_2\n};\n\nvar __extends$4 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ScalarObservable = (function (_super) {\n    __extends$4(ScalarObservable, _super);\n    function ScalarObservable(value, scheduler) {\n        _super.call(this);\n        this.value = value;\n        this.scheduler = scheduler;\n        this._isScalar = true;\n        if (scheduler) {\n            this._isScalar = false;\n        }\n    }\n    ScalarObservable.create = function (value, scheduler) {\n        return new ScalarObservable(value, scheduler);\n    };\n    ScalarObservable.dispatch = function (state) {\n        var done = state.done, value = state.value, subscriber = state.subscriber;\n        if (done) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(value);\n        if (subscriber.closed) {\n            return;\n        }\n        state.done = true;\n        this.schedule(state);\n    };\n    ScalarObservable.prototype._subscribe = function (subscriber) {\n        var value = this.value;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ScalarObservable.dispatch, 0, {\n                done: false, value: value, subscriber: subscriber\n            });\n        }\n        else {\n            subscriber.next(value);\n            if (!subscriber.closed) {\n                subscriber.complete();\n            }\n        }\n    };\n    return ScalarObservable;\n}(Observable_1.Observable));\nvar ScalarObservable_2 = ScalarObservable;\n\n\nvar ScalarObservable_1 = {\n\tScalarObservable: ScalarObservable_2\n};\n\nvar __extends$5 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar EmptyObservable = (function (_super) {\n    __extends$5(EmptyObservable, _super);\n    function EmptyObservable(scheduler) {\n        _super.call(this);\n        this.scheduler = scheduler;\n    }\n    /**\n     * Creates an Observable that emits no items to the Observer and immediately\n     * emits a complete notification.\n     *\n     * <span class=\"informal\">Just emits 'complete', and nothing else.\n     * </span>\n     *\n     * <img src=\"./img/empty.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the complete notification. It can be used for composing with other\n     * Observables, such as in a {@link mergeMap}.\n     *\n     * @example <caption>Emit the number 7, then complete.</caption>\n     * var result = Rx.Observable.empty().startWith(7);\n     * result.subscribe(x => console.log(x));\n     *\n     * @example <caption>Map and flatten only odd numbers to the sequence 'a', 'b', 'c'</caption>\n     * var interval = Rx.Observable.interval(1000);\n     * var result = interval.mergeMap(x =>\n     *   x % 2 === 1 ? Rx.Observable.of('a', 'b', 'c') : Rx.Observable.empty()\n     * );\n     * result.subscribe(x => console.log(x));\n     *\n     * // Results in the following to the console:\n     * // x is equal to the count on the interval eg(0,1,2,3,...)\n     * // x will occur every 1000ms\n     * // if x % 2 is equal to 1 print abc\n     * // if x % 2 is not equal to 1 nothing will be output\n     *\n     * @see {@link create}\n     * @see {@link never}\n     * @see {@link of}\n     * @see {@link throw}\n     *\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emission of the complete notification.\n     * @return {Observable} An \"empty\" Observable: emits only the complete\n     * notification.\n     * @static true\n     * @name empty\n     * @owner Observable\n     */\n    EmptyObservable.create = function (scheduler) {\n        return new EmptyObservable(scheduler);\n    };\n    EmptyObservable.dispatch = function (arg) {\n        var subscriber = arg.subscriber;\n        subscriber.complete();\n    };\n    EmptyObservable.prototype._subscribe = function (subscriber) {\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(EmptyObservable.dispatch, 0, { subscriber: subscriber });\n        }\n        else {\n            subscriber.complete();\n        }\n    };\n    return EmptyObservable;\n}(Observable_1.Observable));\nvar EmptyObservable_2 = EmptyObservable;\n\n\nvar EmptyObservable_1 = {\n\tEmptyObservable: EmptyObservable_2\n};\n\nfunction isScheduler(value) {\n    return value && typeof value.schedule === 'function';\n}\nvar isScheduler_2 = isScheduler;\n\n\nvar isScheduler_1 = {\n\tisScheduler: isScheduler_2\n};\n\nvar __extends$3 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ArrayObservable = (function (_super) {\n    __extends$3(ArrayObservable, _super);\n    function ArrayObservable(array, scheduler) {\n        _super.call(this);\n        this.array = array;\n        this.scheduler = scheduler;\n        if (!scheduler && array.length === 1) {\n            this._isScalar = true;\n            this.value = array[0];\n        }\n    }\n    ArrayObservable.create = function (array, scheduler) {\n        return new ArrayObservable(array, scheduler);\n    };\n    /**\n     * Creates an Observable that emits some values you specify as arguments,\n     * immediately one after the other, and then emits a complete notification.\n     *\n     * <span class=\"informal\">Emits the arguments you provide, then completes.\n     * </span>\n     *\n     * <img src=\"./img/of.png\" width=\"100%\">\n     *\n     * This static operator is useful for creating a simple Observable that only\n     * emits the arguments given, and the complete notification thereafter. It can\n     * be used for composing with other Observables, such as with {@link concat}.\n     * By default, it uses a `null` IScheduler, which means the `next`\n     * notifications are sent synchronously, although with a different IScheduler\n     * it is possible to determine when those notifications will be delivered.\n     *\n     * @example <caption>Emit 10, 20, 30, then 'a', 'b', 'c', then start ticking every second.</caption>\n     * var numbers = Rx.Observable.of(10, 20, 30);\n     * var letters = Rx.Observable.of('a', 'b', 'c');\n     * var interval = Rx.Observable.interval(1000);\n     * var result = numbers.concat(letters).concat(interval);\n     * result.subscribe(x => console.log(x));\n     *\n     * @see {@link create}\n     * @see {@link empty}\n     * @see {@link never}\n     * @see {@link throw}\n     *\n     * @param {...T} values Arguments that represent `next` values to be emitted.\n     * @param {Scheduler} [scheduler] A {@link IScheduler} to use for scheduling\n     * the emissions of the `next` notifications.\n     * @return {Observable<T>} An Observable that emits each given input value.\n     * @static true\n     * @name of\n     * @owner Observable\n     */\n    ArrayObservable.of = function () {\n        var array = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            array[_i - 0] = arguments[_i];\n        }\n        var scheduler = array[array.length - 1];\n        if (isScheduler_1.isScheduler(scheduler)) {\n            array.pop();\n        }\n        else {\n            scheduler = null;\n        }\n        var len = array.length;\n        if (len > 1) {\n            return new ArrayObservable(array, scheduler);\n        }\n        else if (len === 1) {\n            return new ScalarObservable_1.ScalarObservable(array[0], scheduler);\n        }\n        else {\n            return new EmptyObservable_1.EmptyObservable(scheduler);\n        }\n    };\n    ArrayObservable.dispatch = function (state) {\n        var array = state.array, index = state.index, count = state.count, subscriber = state.subscriber;\n        if (index >= count) {\n            subscriber.complete();\n            return;\n        }\n        subscriber.next(array[index]);\n        if (subscriber.closed) {\n            return;\n        }\n        state.index = index + 1;\n        this.schedule(state);\n    };\n    ArrayObservable.prototype._subscribe = function (subscriber) {\n        var index = 0;\n        var array = this.array;\n        var count = array.length;\n        var scheduler = this.scheduler;\n        if (scheduler) {\n            return scheduler.schedule(ArrayObservable.dispatch, 0, {\n                array: array, index: index, count: count, subscriber: subscriber\n            });\n        }\n        else {\n            for (var i = 0; i < count && !subscriber.closed; i++) {\n                subscriber.next(array[i]);\n            }\n            subscriber.complete();\n        }\n    };\n    return ArrayObservable;\n}(Observable_1.Observable));\nvar ArrayObservable_2 = ArrayObservable;\n\n\nvar ArrayObservable_1 = {\n\tArrayObservable: ArrayObservable_2\n};\n\nvar isArrayLike_1 = (function (x) { return x && typeof x.length === 'number'; });\n\n\nvar isArrayLike = {\n\tisArrayLike: isArrayLike_1\n};\n\nfunction isPromise$2(value) {\n    return value && typeof value.subscribe !== 'function' && typeof value.then === 'function';\n}\nvar isPromise_2 = isPromise$2;\n\n\nvar isPromise_1 = {\n\tisPromise: isPromise_2\n};\n\nvar iterator = createCommonjsModule(function (module, exports) {\n\"use strict\";\n\nfunction symbolIteratorPonyfill(root$$2) {\n    var Symbol = root$$2.Symbol;\n    if (typeof Symbol === 'function') {\n        if (!Symbol.iterator) {\n            Symbol.iterator = Symbol('iterator polyfill');\n        }\n        return Symbol.iterator;\n    }\n    else {\n        // [for Mozilla Gecko 27-35:](https://mzl.la/2ewE1zC)\n        var Set_1 = root$$2.Set;\n        if (Set_1 && typeof new Set_1()['@@iterator'] === 'function') {\n            return '@@iterator';\n        }\n        var Map_1 = root$$2.Map;\n        // required for compatability with es6-shim\n        if (Map_1) {\n            var keys = Object.getOwnPropertyNames(Map_1.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                // according to spec, Map.prototype[@@iterator] and Map.orototype.entries must be equal.\n                if (key !== 'entries' && key !== 'size' && Map_1.prototype[key] === Map_1.prototype['entries']) {\n                    return key;\n                }\n            }\n        }\n        return '@@iterator';\n    }\n}\nexports.symbolIteratorPonyfill = symbolIteratorPonyfill;\nexports.iterator = symbolIteratorPonyfill(root.root);\n/**\n * @deprecated use iterator instead\n */\nexports.$$iterator = exports.iterator;\n\n});\n\nvar __extends$7 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar InnerSubscriber = (function (_super) {\n    __extends$7(InnerSubscriber, _super);\n    function InnerSubscriber(parent, outerValue, outerIndex) {\n        _super.call(this);\n        this.parent = parent;\n        this.outerValue = outerValue;\n        this.outerIndex = outerIndex;\n        this.index = 0;\n    }\n    InnerSubscriber.prototype._next = function (value) {\n        this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n    };\n    InnerSubscriber.prototype._error = function (error) {\n        this.parent.notifyError(error, this);\n        this.unsubscribe();\n    };\n    InnerSubscriber.prototype._complete = function () {\n        this.parent.notifyComplete(this);\n        this.unsubscribe();\n    };\n    return InnerSubscriber;\n}(Subscriber_1.Subscriber));\nvar InnerSubscriber_2 = InnerSubscriber;\n\n\nvar InnerSubscriber_1 = {\n\tInnerSubscriber: InnerSubscriber_2\n};\n\nfunction subscribeToResult(outerSubscriber, result, outerValue, outerIndex) {\n    var destination = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex);\n    if (destination.closed) {\n        return null;\n    }\n    if (result instanceof Observable_1.Observable) {\n        if (result._isScalar) {\n            destination.next(result.value);\n            destination.complete();\n            return null;\n        }\n        else {\n            destination.syncErrorThrowable = true;\n            return result.subscribe(destination);\n        }\n    }\n    else if (isArrayLike.isArrayLike(result)) {\n        for (var i = 0, len = result.length; i < len && !destination.closed; i++) {\n            destination.next(result[i]);\n        }\n        if (!destination.closed) {\n            destination.complete();\n        }\n    }\n    else if (isPromise_1.isPromise(result)) {\n        result.then(function (value) {\n            if (!destination.closed) {\n                destination.next(value);\n                destination.complete();\n            }\n        }, function (err) { return destination.error(err); })\n            .then(null, function (err) {\n            // Escaping the Promise trap: globally throw unhandled errors\n            root.root.setTimeout(function () { throw err; });\n        });\n        return destination;\n    }\n    else if (result && typeof result[iterator.iterator] === 'function') {\n        var iterator$$1 = result[iterator.iterator]();\n        do {\n            var item = iterator$$1.next();\n            if (item.done) {\n                destination.complete();\n                break;\n            }\n            destination.next(item.value);\n            if (destination.closed) {\n                break;\n            }\n        } while (true);\n    }\n    else if (result && typeof result[observable.observable] === 'function') {\n        var obs = result[observable.observable]();\n        if (typeof obs.subscribe !== 'function') {\n            destination.error(new TypeError('Provided object does not correctly implement Symbol.observable'));\n        }\n        else {\n            return obs.subscribe(new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex));\n        }\n    }\n    else {\n        var value = isObject_1.isObject(result) ? 'an invalid object' : \"'\" + result + \"'\";\n        var msg = (\"You provided \" + value + \" where a stream was expected.\")\n            + ' You can provide an Observable, Promise, Array, or Iterable.';\n        destination.error(new TypeError(msg));\n    }\n    return null;\n}\nvar subscribeToResult_2 = subscribeToResult;\n\n\nvar subscribeToResult_1 = {\n\tsubscribeToResult: subscribeToResult_2\n};\n\nvar __extends$8 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar OuterSubscriber = (function (_super) {\n    __extends$8(OuterSubscriber, _super);\n    function OuterSubscriber() {\n        _super.apply(this, arguments);\n    }\n    OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.destination.next(innerValue);\n    };\n    OuterSubscriber.prototype.notifyError = function (error, innerSub) {\n        this.destination.error(error);\n    };\n    OuterSubscriber.prototype.notifyComplete = function (innerSub) {\n        this.destination.complete();\n    };\n    return OuterSubscriber;\n}(Subscriber_1.Subscriber));\nvar OuterSubscriber_2 = OuterSubscriber;\n\n\nvar OuterSubscriber_1 = {\n\tOuterSubscriber: OuterSubscriber_2\n};\n\nvar __extends$6 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n/* tslint:enable:max-line-length */\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * <img src=\"./img/mergeMap.png\" width=\"100%\">\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * @example <caption>Map and flatten each letter to an Observable ticking every 1 second</caption>\n * var letters = Rx.Observable.of('a', 'b', 'c');\n * var result = letters.mergeMap(x =>\n *   Rx.Observable.interval(1000).map(i => x+i)\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {function(outerValue: T, innerValue: I, outerIndex: number, innerIndex: number): any} [resultSelector]\n * A function to produce the value on the output Observable based on the values\n * and the indices of the source (outer) emission and the inner Observable\n * emission. The arguments passed to this function are:\n * - `outerValue`: the value that came from the source\n * - `innerValue`: the value that came from the projected Observable\n * - `outerIndex`: the \"index\" of the value that came from the source\n * - `innerIndex`: the \"index\" of the value from the projected Observable\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional `resultSelector`) to each item emitted\n * by the source Observable and merging the results of the Observables obtained\n * from this transformation.\n * @method mergeMap\n * @owner Observable\n */\nfunction mergeMap(project, resultSelector, concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return function mergeMapOperatorFunction(source) {\n        if (typeof resultSelector === 'number') {\n            concurrent = resultSelector;\n            resultSelector = null;\n        }\n        return source.lift(new MergeMapOperator(project, resultSelector, concurrent));\n    };\n}\nvar mergeMap_2 = mergeMap;\nvar MergeMapOperator = (function () {\n    function MergeMapOperator(project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n    }\n    MergeMapOperator.prototype.call = function (observer, source) {\n        return source.subscribe(new MergeMapSubscriber(observer, this.project, this.resultSelector, this.concurrent));\n    };\n    return MergeMapOperator;\n}());\nvar MergeMapOperator_1 = MergeMapOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar MergeMapSubscriber = (function (_super) {\n    __extends$6(MergeMapSubscriber, _super);\n    function MergeMapSubscriber(destination, project, resultSelector, concurrent) {\n        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n        _super.call(this, destination);\n        this.project = project;\n        this.resultSelector = resultSelector;\n        this.concurrent = concurrent;\n        this.hasCompleted = false;\n        this.buffer = [];\n        this.active = 0;\n        this.index = 0;\n    }\n    MergeMapSubscriber.prototype._next = function (value) {\n        if (this.active < this.concurrent) {\n            this._tryNext(value);\n        }\n        else {\n            this.buffer.push(value);\n        }\n    };\n    MergeMapSubscriber.prototype._tryNext = function (value) {\n        var result;\n        var index = this.index++;\n        try {\n            result = this.project(value, index);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.active++;\n        this._innerSub(result, value, index);\n    };\n    MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {\n        this.add(subscribeToResult_1.subscribeToResult(this, ish, value, index));\n    };\n    MergeMapSubscriber.prototype._complete = function () {\n        this.hasCompleted = true;\n        if (this.active === 0 && this.buffer.length === 0) {\n            this.destination.complete();\n        }\n    };\n    MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        if (this.resultSelector) {\n            this._notifyResultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        else {\n            this.destination.next(innerValue);\n        }\n    };\n    MergeMapSubscriber.prototype._notifyResultSelector = function (outerValue, innerValue, outerIndex, innerIndex) {\n        var result;\n        try {\n            result = this.resultSelector(outerValue, innerValue, outerIndex, innerIndex);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    };\n    MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {\n        var buffer = this.buffer;\n        this.remove(innerSub);\n        this.active--;\n        if (buffer.length > 0) {\n            this._next(buffer.shift());\n        }\n        else if (this.active === 0 && this.hasCompleted) {\n            this.destination.complete();\n        }\n    };\n    return MergeMapSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\nvar MergeMapSubscriber_1 = MergeMapSubscriber;\n\n\nvar mergeMap_1 = {\n\tmergeMap: mergeMap_2,\n\tMergeMapOperator: MergeMapOperator_1,\n\tMergeMapSubscriber: MergeMapSubscriber_1\n};\n\nfunction identity(x) {\n    return x;\n}\nvar identity_2 = identity;\n\n\nvar identity_1 = {\n\tidentity: identity_2\n};\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * <img src=\"./img/mergeAll.png\" width=\"100%\">\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Spawn a new interval Observable for each click event, and blend their outputs as one Observable</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000));\n * var firstOrder = higherOrder.mergeAll();\n * firstOrder.subscribe(x => console.log(x));\n *\n * @example <caption>Count from 0 to 9 every second for each click, but only allow 2 concurrent timers</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var higherOrder = clicks.map((ev) => Rx.Observable.interval(1000).take(10));\n * var firstOrder = higherOrder.mergeAll(2);\n * firstOrder.subscribe(x => console.log(x));\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switch}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nfunction mergeAll(concurrent) {\n    if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }\n    return mergeMap_1.mergeMap(identity_1.identity, null, concurrent);\n}\nvar mergeAll_2 = mergeAll;\n\n\nvar mergeAll_1 = {\n\tmergeAll: mergeAll_2\n};\n\n/* tslint:enable:max-line-length */\nfunction merge$3() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return function (source) { return source.lift.call(mergeStatic$1.apply(void 0, [source].concat(observables))); };\n}\nvar merge_2$2 = merge$3;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = Rx.Observable.merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = Rx.Observable.merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits it's max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits it's max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nfunction mergeStatic$1() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    var concurrent = Number.POSITIVE_INFINITY;\n    var scheduler = null;\n    var last = observables[observables.length - 1];\n    if (isScheduler_1.isScheduler(last)) {\n        scheduler = observables.pop();\n        if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n            concurrent = observables.pop();\n        }\n    }\n    else if (typeof last === 'number') {\n        concurrent = observables.pop();\n    }\n    if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {\n        return observables[0];\n    }\n    return mergeAll_1.mergeAll(concurrent)(new ArrayObservable_1.ArrayObservable(observables, scheduler));\n}\nvar mergeStatic_1 = mergeStatic$1;\n\n\nvar merge_1 = {\n\tmerge: merge_2$2,\n\tmergeStatic: mergeStatic_1\n};\n\nvar merge_2$1 = merge_1;\nvar mergeStatic = merge_2$1.mergeStatic;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * <img src=\"./img/merge.png\" width=\"100%\">\n *\n * `merge` subscribes to each given input Observable (either the source or an\n * Observable given as argument), and simply forwards (without doing any\n * transformation) all the values from all the input Observables to the output\n * Observable. The output Observable only completes once all input Observables\n * have completed. Any error delivered by an input Observable will be immediately\n * emitted on the output Observable.\n *\n * @example <caption>Merge together two Observables: 1s interval and clicks</caption>\n * var clicks = Rx.Observable.fromEvent(document, 'click');\n * var timer = Rx.Observable.interval(1000);\n * var clicksOrTimer = clicks.merge(timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * @example <caption>Merge together 3 Observables, but only 2 run concurrently</caption>\n * var timer1 = Rx.Observable.interval(1000).take(10);\n * var timer2 = Rx.Observable.interval(2000).take(6);\n * var timer3 = Rx.Observable.interval(500).take(10);\n * var concurrent = 2; // the argument\n * var merged = timer1.merge(timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {ObservableInput} other An input Observable to merge with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {Scheduler} [scheduler=null] The IScheduler to use for managing\n * concurrency of input Observables.\n * @return {Observable} An Observable that emits items that are the result of\n * every input Observable.\n * @method merge\n * @owner Observable\n */\nfunction merge$2() {\n    var observables = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        observables[_i - 0] = arguments[_i];\n    }\n    return merge_1.merge.apply(void 0, observables)(this);\n}\nvar merge_4 = merge$2;\n\n\nvar merge_3 = {\n\tmergeStatic: mergeStatic,\n\tmerge: merge_4\n};\n\nvar merge_2 = merge_3.mergeStatic;\n\nvar __extends$11 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nvar ObjectUnsubscribedError = (function (_super) {\n    __extends$11(ObjectUnsubscribedError, _super);\n    function ObjectUnsubscribedError() {\n        var err = _super.call(this, 'object unsubscribed');\n        this.name = err.name = 'ObjectUnsubscribedError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n    return ObjectUnsubscribedError;\n}(Error));\nvar ObjectUnsubscribedError_2 = ObjectUnsubscribedError;\n\n\nvar ObjectUnsubscribedError_1 = {\n\tObjectUnsubscribedError: ObjectUnsubscribedError_2\n};\n\nvar __extends$12 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar SubjectSubscription = (function (_super) {\n    __extends$12(SubjectSubscription, _super);\n    function SubjectSubscription(subject, subscriber) {\n        _super.call(this);\n        this.subject = subject;\n        this.subscriber = subscriber;\n        this.closed = false;\n    }\n    SubjectSubscription.prototype.unsubscribe = function () {\n        if (this.closed) {\n            return;\n        }\n        this.closed = true;\n        var subject = this.subject;\n        var observers = subject.observers;\n        this.subject = null;\n        if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n            return;\n        }\n        var subscriberIndex = observers.indexOf(this.subscriber);\n        if (subscriberIndex !== -1) {\n            observers.splice(subscriberIndex, 1);\n        }\n    };\n    return SubjectSubscription;\n}(Subscription_1.Subscription));\nvar SubjectSubscription_2 = SubjectSubscription;\n\n\nvar SubjectSubscription_1 = {\n\tSubjectSubscription: SubjectSubscription_2\n};\n\nvar __extends$10 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n\n/**\n * @class SubjectSubscriber<T>\n */\nvar SubjectSubscriber = (function (_super) {\n    __extends$10(SubjectSubscriber, _super);\n    function SubjectSubscriber(destination) {\n        _super.call(this, destination);\n        this.destination = destination;\n    }\n    return SubjectSubscriber;\n}(Subscriber_1.Subscriber));\nvar SubjectSubscriber_1 = SubjectSubscriber;\n/**\n * @class Subject<T>\n */\nvar Subject = (function (_super) {\n    __extends$10(Subject, _super);\n    function Subject() {\n        _super.call(this);\n        this.observers = [];\n        this.closed = false;\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    Subject.prototype[rxSubscriber.rxSubscriber] = function () {\n        return new SubjectSubscriber(this);\n    };\n    Subject.prototype.lift = function (operator) {\n        var subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    };\n    Subject.prototype.next = function (value) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        if (!this.isStopped) {\n            var observers = this.observers;\n            var len = observers.length;\n            var copy = observers.slice();\n            for (var i = 0; i < len; i++) {\n                copy[i].next(value);\n            }\n        }\n    };\n    Subject.prototype.error = function (err) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.hasError = true;\n        this.thrownError = err;\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].error(err);\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.complete = function () {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        this.isStopped = true;\n        var observers = this.observers;\n        var len = observers.length;\n        var copy = observers.slice();\n        for (var i = 0; i < len; i++) {\n            copy[i].complete();\n        }\n        this.observers.length = 0;\n    };\n    Subject.prototype.unsubscribe = function () {\n        this.isStopped = true;\n        this.closed = true;\n        this.observers = null;\n    };\n    Subject.prototype._trySubscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else {\n            return _super.prototype._trySubscribe.call(this, subscriber);\n        }\n    };\n    Subject.prototype._subscribe = function (subscriber) {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();\n        }\n        else if (this.hasError) {\n            subscriber.error(this.thrownError);\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else if (this.isStopped) {\n            subscriber.complete();\n            return Subscription_1.Subscription.EMPTY;\n        }\n        else {\n            this.observers.push(subscriber);\n            return new SubjectSubscription_1.SubjectSubscription(this, subscriber);\n        }\n    };\n    Subject.prototype.asObservable = function () {\n        var observable = new Observable_1.Observable();\n        observable.source = this;\n        return observable;\n    };\n    Subject.create = function (destination, source) {\n        return new AnonymousSubject(destination, source);\n    };\n    return Subject;\n}(Observable_1.Observable));\nvar Subject_2 = Subject;\n/**\n * @class AnonymousSubject<T>\n */\nvar AnonymousSubject = (function (_super) {\n    __extends$10(AnonymousSubject, _super);\n    function AnonymousSubject(destination, source) {\n        _super.call(this);\n        this.destination = destination;\n        this.source = source;\n    }\n    AnonymousSubject.prototype.next = function (value) {\n        var destination = this.destination;\n        if (destination && destination.next) {\n            destination.next(value);\n        }\n    };\n    AnonymousSubject.prototype.error = function (err) {\n        var destination = this.destination;\n        if (destination && destination.error) {\n            this.destination.error(err);\n        }\n    };\n    AnonymousSubject.prototype.complete = function () {\n        var destination = this.destination;\n        if (destination && destination.complete) {\n            this.destination.complete();\n        }\n    };\n    AnonymousSubject.prototype._subscribe = function (subscriber) {\n        var source = this.source;\n        if (source) {\n            return this.source.subscribe(subscriber);\n        }\n        else {\n            return Subscription_1.Subscription.EMPTY;\n        }\n    };\n    return AnonymousSubject;\n}(Subject));\nvar AnonymousSubject_1 = AnonymousSubject;\n\n\nvar Subject_1 = {\n\tSubjectSubscriber: SubjectSubscriber_1,\n\tSubject: Subject_2,\n\tAnonymousSubject: AnonymousSubject_1\n};\n\nvar __extends$13 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\nfunction refCount() {\n    return function refCountOperatorFunction(source) {\n        return source.lift(new RefCountOperator$1(source));\n    };\n}\nvar refCount_2 = refCount;\nvar RefCountOperator$1 = (function () {\n    function RefCountOperator(connectable) {\n        this.connectable = connectable;\n    }\n    RefCountOperator.prototype.call = function (subscriber, source) {\n        var connectable = this.connectable;\n        connectable._refCount++;\n        var refCounter = new RefCountSubscriber$1(subscriber, connectable);\n        var subscription = source.subscribe(refCounter);\n        if (!refCounter.closed) {\n            refCounter.connection = connectable.connect();\n        }\n        return subscription;\n    };\n    return RefCountOperator;\n}());\nvar RefCountSubscriber$1 = (function (_super) {\n    __extends$13(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar refCount_1 = {\n\trefCount: refCount_2\n};\n\nvar __extends$9 = (commonjsGlobal && commonjsGlobal.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\n\n\n\n\n\n/**\n * @class ConnectableObservable<T>\n */\nvar ConnectableObservable = (function (_super) {\n    __extends$9(ConnectableObservable, _super);\n    function ConnectableObservable(source, subjectFactory) {\n        _super.call(this);\n        this.source = source;\n        this.subjectFactory = subjectFactory;\n        this._refCount = 0;\n        this._isComplete = false;\n    }\n    ConnectableObservable.prototype._subscribe = function (subscriber) {\n        return this.getSubject().subscribe(subscriber);\n    };\n    ConnectableObservable.prototype.getSubject = function () {\n        var subject = this._subject;\n        if (!subject || subject.isStopped) {\n            this._subject = this.subjectFactory();\n        }\n        return this._subject;\n    };\n    ConnectableObservable.prototype.connect = function () {\n        var connection = this._connection;\n        if (!connection) {\n            this._isComplete = false;\n            connection = this._connection = new Subscription_1.Subscription();\n            connection.add(this.source\n                .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n            if (connection.closed) {\n                this._connection = null;\n                connection = Subscription_1.Subscription.EMPTY;\n            }\n            else {\n                this._connection = connection;\n            }\n        }\n        return connection;\n    };\n    ConnectableObservable.prototype.refCount = function () {\n        return refCount_1.refCount()(this);\n    };\n    return ConnectableObservable;\n}(Observable_1.Observable));\nvar ConnectableObservable_2 = ConnectableObservable;\nvar connectableProto = ConnectableObservable.prototype;\nvar connectableObservableDescriptor = {\n    operator: { value: null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null, writable: true },\n    _connection: { value: null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n};\nvar ConnectableSubscriber = (function (_super) {\n    __extends$9(ConnectableSubscriber, _super);\n    function ConnectableSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    ConnectableSubscriber.prototype._error = function (err) {\n        this._unsubscribe();\n        _super.prototype._error.call(this, err);\n    };\n    ConnectableSubscriber.prototype._complete = function () {\n        this.connectable._isComplete = true;\n        this._unsubscribe();\n        _super.prototype._complete.call(this);\n    };\n    ConnectableSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (connectable) {\n            this.connectable = null;\n            var connection = connectable._connection;\n            connectable._refCount = 0;\n            connectable._subject = null;\n            connectable._connection = null;\n            if (connection) {\n                connection.unsubscribe();\n            }\n        }\n    };\n    return ConnectableSubscriber;\n}(Subject_1.SubjectSubscriber));\nvar RefCountSubscriber = (function (_super) {\n    __extends$9(RefCountSubscriber, _super);\n    function RefCountSubscriber(destination, connectable) {\n        _super.call(this, destination);\n        this.connectable = connectable;\n    }\n    RefCountSubscriber.prototype._unsubscribe = function () {\n        var connectable = this.connectable;\n        if (!connectable) {\n            this.connection = null;\n            return;\n        }\n        this.connectable = null;\n        var refCount = connectable._refCount;\n        if (refCount <= 0) {\n            this.connection = null;\n            return;\n        }\n        connectable._refCount = refCount - 1;\n        if (refCount > 1) {\n            this.connection = null;\n            return;\n        }\n        ///\n        // Compare the local RefCountSubscriber's connection Subscription to the\n        // connection Subscription on the shared ConnectableObservable. In cases\n        // where the ConnectableObservable source synchronously emits values, and\n        // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n        // execution continues to here before the RefCountOperator has a chance to\n        // supply the RefCountSubscriber with the shared connection Subscription.\n        // For example:\n        // ```\n        // Observable.range(0, 10)\n        //   .publish()\n        //   .refCount()\n        //   .take(5)\n        //   .subscribe();\n        // ```\n        // In order to account for this case, RefCountSubscriber should only dispose\n        // the ConnectableObservable's shared connection Subscription if the\n        // connection Subscription exists, *and* either:\n        //   a. RefCountSubscriber doesn't have a reference to the shared connection\n        //      Subscription yet, or,\n        //   b. RefCountSubscriber's connection Subscription reference is identical\n        //      to the shared connection Subscription\n        ///\n        var connection = this.connection;\n        var sharedConnection = connectable._connection;\n        this.connection = null;\n        if (sharedConnection && (!connection || sharedConnection === connection)) {\n            sharedConnection.unsubscribe();\n        }\n    };\n    return RefCountSubscriber;\n}(Subscriber_1.Subscriber));\n\n\nvar ConnectableObservable_1 = {\n\tConnectableObservable: ConnectableObservable_2,\n\tconnectableObservableDescriptor: connectableObservableDescriptor\n};\n\n/* tslint:enable:max-line-length */\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * <img src=\"./img/multicast.png\" width=\"100%\">\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nfunction multicast(subjectOrSubjectFactory, selector) {\n    return function multicastOperatorFunction(source) {\n        var subjectFactory;\n        if (typeof subjectOrSubjectFactory === 'function') {\n            subjectFactory = subjectOrSubjectFactory;\n        }\n        else {\n            subjectFactory = function subjectFactory() {\n                return subjectOrSubjectFactory;\n            };\n        }\n        if (typeof selector === 'function') {\n            return source.lift(new MulticastOperator(subjectFactory, selector));\n        }\n        var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);\n        connectable.source = source;\n        connectable.subjectFactory = subjectFactory;\n        return connectable;\n    };\n}\nvar multicast_2 = multicast;\nvar MulticastOperator = (function () {\n    function MulticastOperator(subjectFactory, selector) {\n        this.subjectFactory = subjectFactory;\n        this.selector = selector;\n    }\n    MulticastOperator.prototype.call = function (subscriber, source) {\n        var selector = this.selector;\n        var subject = this.subjectFactory();\n        var subscription = selector(subject).subscribe(subscriber);\n        subscription.add(source.subscribe(subject));\n        return subscription;\n    };\n    return MulticastOperator;\n}());\nvar MulticastOperator_1 = MulticastOperator;\n\n\nvar multicast_1 = {\n\tmulticast: multicast_2,\n\tMulticastOperator: MulticastOperator_1\n};\n\nfunction shareSubjectFactory() {\n    return new Subject_1.Subject();\n}\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for .multicast(() => new Subject()).refCount().\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share$1() {\n    return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };\n}\nvar share_2$2 = share$1;\n\n\n\nvar share_1 = {\n\tshare: share_2$2\n};\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n *\n * This behaves similarly to .publish().refCount(), with a behavior difference when the source observable emits complete.\n * .publish().refCount() will not resubscribe to the original source, however .share() will resubscribe to the original source.\n * Observable.of(\"test\").publish().refCount() will not re-emit \"test\" on new subscriptions, Observable.of(\"test\").share() will\n * re-emit \"test\" to new subscriptions.\n *\n * <img src=\"./img/share.png\" width=\"100%\">\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nfunction share() {\n    return share_1.share()(this);\n}\nvar share_3 = share;\n\n/**\n * @license Angular v5.1.0-beta.0-faa6212\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * \\@stable\n */\nvar InjectionToken = (function () {\n    function InjectionToken(_desc) {\n        this._desc = _desc;\n        /**\n         * \\@internal\n         */\n        this.ngMetadataName = 'InjectionToken';\n    }\n    /**\n     * @return {?}\n     */\n    InjectionToken.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * ES7 syntax:\n *\n * ```\n * \\@ng.Component({...})\n * class MyClass {...}\n * ```\n * \\@stable\n * @record\n */\n\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__paramaters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @param {?=} chainFn\n * @return {?}\n */\nfunction makeDecorator(name, props, parentClass, chainFn) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {?} objOrType\n     * @return {?}\n     */\n    function DecoratorFactory(objOrType) {\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call(this, objOrType);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new (/** @type {?} */ (DecoratorFactory))(objOrType);\n        var /** @type {?} */ TypeDecorator = /** @type {?} */ (function TypeDecorator(cls) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                (/** @type {?} */ (cls))[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        });\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (DecoratorFactory)).annotationCls = DecoratorFactory;\n    return /** @type {?} */ (DecoratorFactory);\n}\n/**\n * @param {?=} props\n * @return {?}\n */\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var /** @type {?} */ values = props.apply(void 0, args);\n            for (var /** @type {?} */ propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\n/**\n * @param {?} name\n * @param {?=} props\n * @param {?=} parentClass\n * @return {?}\n */\nfunction makeParamDecorator(name, props, parentClass) {\n    var /** @type {?} */ metaCtor = makeMetadataCtor(props);\n    /**\n     * @param {...?} args\n     * @return {?}\n     */\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var /** @type {?} */ annotationInstance = new ((_a = (/** @type {?} */ (ParamDecoratorFactory))).bind.apply(_a, [void 0].concat(args)))();\n        (/** @type {?} */ (ParamDecorator)).annotation = annotationInstance;\n        return ParamDecorator;\n        /**\n         * @param {?} cls\n         * @param {?} unusedKey\n         * @param {?} index\n         * @return {?}\n         */\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var /** @type {?} */ parameters = cls.hasOwnProperty(PARAMETERS) ?\n                (/** @type {?} */ (cls))[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    (/** @type {?} */ (ParamDecoratorFactory)).annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * \\@NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * \\@experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Type of the Attribute decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Attribute decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Attribute$1$1 = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ChangeDetectionStrategy$1 = {\n    /**\n       * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n       */\n    OnPush: 0,\n    /**\n       * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n       */\n    Default: 1,\n};\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.OnPush] = \"OnPush\";\nChangeDetectionStrategy$1[ChangeDetectionStrategy$1.Default] = \"Default\";\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Directive decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Directive decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Directive$1 = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Type of the Component decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Component decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Component$1 = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (__assign({ changeDetection: ChangeDetectionStrategy$1.Default }, c));\n}, Directive$1);\n/**\n * Type of the Pipe decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Pipe decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Pipe$1 = makeDecorator('Pipe', function (p) { return (__assign({ pure: true }, p)); });\n/**\n * Type of the NgModule decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * NgModule decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar NgModule$1 = makeDecorator('NgModule', function (ngModule) { return ngModule; });\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar ViewEncapsulation$1 = {\n    /**\n       * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n       * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n       * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n       * selectors.\n       *\n       * This is the default option.\n       */\n    Emulated: 0,\n    /**\n       * Use the native encapsulation mechanism of the renderer.\n       *\n       * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n       * creating a ShadowRoot for Component's Host Element.\n       */\n    Native: 1,\n    /**\n       * Don't provide any template or style encapsulation.\n       */\n    None: 2,\n};\nViewEncapsulation$1[ViewEncapsulation$1.Emulated] = \"Emulated\";\nViewEncapsulation$1[ViewEncapsulation$1.Native] = \"Native\";\nViewEncapsulation$1[ViewEncapsulation$1.None] = \"None\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents the version of Angular\n *\n * \\@stable\n */\nvar Version$1 = (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * \\@stable\n */\nvar VERSION$2 = new Version$1('5.1.0-beta.0-faa6212');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type of the Inject decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Inject decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Inject$1 = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Type of the Optional decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Optional decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Type of the Injectable decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Injectable decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Injectable = makeDecorator('Injectable');\n/**\n * Type of the Self decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Self decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * Type of the SkipSelf decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * SkipSelf decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Type of the Host decorator / constructor function.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Host decorator and metadata.\n *\n * \\@stable\n * \\@Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar _symbolIterator = null;\n/**\n * @return {?}\n */\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var /** @type {?} */ Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var /** @type {?} */ keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n                var /** @type {?} */ key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    (/** @type {?} */ (Map)).prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction scheduleMicroTask(fn) {\n    Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction stringify$1(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify$1).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var /** @type {?} */ res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var /** @type {?} */ newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An interface that a function passed into {\\@link forwardRef} has to implement.\n *\n * ### Example\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref_fn'}\n * \\@experimental\n * @record\n */\n\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * \\@experimental\n * @param {?} forwardRefFn\n * @return {?}\n */\nfunction forwardRef(forwardRefFn) {\n    (/** @type {?} */ (forwardRefFn)).__forward_ref__ = forwardRef;\n    (/** @type {?} */ (forwardRefFn)).toString = function () { return stringify$1(this()); };\n    return (/** @type {?} */ (/** @type {?} */ (forwardRefFn)));\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {\\@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {\\@link forwardRef}\n * \\@experimental\n * @param {?} type\n * @return {?}\n */\nfunction resolveForwardRef$1(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return (/** @type {?} */ (type))();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\nvar _NullInjector = (function () {\n    function _NullInjector() {\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    _NullInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify$1(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return _NullInjector;\n}());\n/**\n * \\@whatItDoes Injector interface\n * \\@howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * \\@description\n * For more details, see the {\\@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {\\@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {\\@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * \\@stable\n * @abstract\n */\nvar Injector = (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    Injector.create = /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {\\@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     * @param {?} options\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new _NullInjector();\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = /** @type {?} */ ([]);\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME = /** @type {?} */ ({});\nvar ɵ2 = GET_PROPERTY_NAME;\nvar USE_VALUE$1 = getClosureSafeProperty({ provide: String, useValue: ɵ2 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'ɵ';\nvar StaticInjector = (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var /** @type {?} */ records = this._records = new Map();\n        records.set(Injector, /** @type {?} */ ({ token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false }));\n        recursivelyProcessProviders(records, providers);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    StaticInjector.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        var /** @type {?} */ record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue);\n        }\n        catch (/** @type {?} */ e) {\n            var /** @type {?} */ tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    StaticInjector.prototype.toString = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ tokens = /** @type {?} */ ([]), /** @type {?} */ records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify$1(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction resolveProvider(provider) {\n    var /** @type {?} */ deps = computeDeps(provider);\n    var /** @type {?} */ fn = IDENT;\n    var /** @type {?} */ value = EMPTY;\n    var /** @type {?} */ useNew = false;\n    var /** @type {?} */ provide = resolveForwardRef$1(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = (/** @type {?} */ (provider)).useValue;\n    }\n    else if ((/** @type {?} */ (provider)).useFactory) {\n        fn = (/** @type {?} */ (provider)).useFactory;\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        // Just use IDENT\n    }\n    else if ((/** @type {?} */ (provider)).useClass) {\n        useNew = true;\n        fn = resolveForwardRef$1((/** @type {?} */ (provider)).useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\n/**\n * @param {?} token\n * @return {?}\n */\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\n/**\n * @param {?} records\n * @param {?} provider\n * @return {?}\n */\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef$1(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var /** @type {?} */ i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var /** @type {?} */ token = resolveForwardRef$1(provider.provide);\n            var /** @type {?} */ resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var /** @type {?} */ multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = /** @type {?} */ ({\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    }));\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var /** @type {?} */ record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction tryResolveToken(token, record, records, parent, notFoundValue) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue);\n    }\n    catch (/** @type {?} */ e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var /** @type {?} */ path$$1 = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path$$1.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\n/**\n * @param {?} token\n * @param {?} record\n * @param {?} records\n * @param {?} parent\n * @param {?} notFoundValue\n * @return {?}\n */\nfunction resolveToken(token, record, records, parent, notFoundValue) {\n    var /** @type {?} */ value;\n    if (record) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var /** @type {?} */ obj = undefined;\n            var /** @type {?} */ useNew = record.useNew;\n            var /** @type {?} */ fn = record.fn;\n            var /** @type {?} */ depRecords = record.deps;\n            var /** @type {?} */ deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var /** @type {?} */ i = 0; i < depRecords.length; i++) {\n                    var /** @type {?} */ depRecord = depRecords[i];\n                    var /** @type {?} */ options = depRecord.options;\n                    var /** @type {?} */ childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND));\n                }\n            }\n            record.value = value = useNew ? new ((_a = (/** @type {?} */ (fn))).bind.apply(_a, [void 0].concat(deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else {\n        value = parent.get(token, notFoundValue);\n    }\n    return value;\n    var _a;\n}\n/**\n * @param {?} provider\n * @return {?}\n */\nfunction computeDeps(provider) {\n    var /** @type {?} */ deps = EMPTY;\n    var /** @type {?} */ providerDeps = (/** @type {?} */ (provider)).deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var /** @type {?} */ i = 0; i < providerDeps.length; i++) {\n            var /** @type {?} */ options = 6;\n            var /** @type {?} */ token = resolveForwardRef$1(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var /** @type {?} */ j = 0, /** @type {?} */ annotations = token; j < annotations.length; j++) {\n                    var /** @type {?} */ annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject$1) {\n                        token = (/** @type {?} */ (annotation)).token;\n                    }\n                    else {\n                        token = resolveForwardRef$1(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if ((/** @type {?} */ (provider)).useExisting) {\n        var /** @type {?} */ token = resolveForwardRef$1((/** @type {?} */ (provider)).useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @param {?=} source\n * @return {?}\n */\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var /** @type {?} */ context = stringify$1(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify$1).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var /** @type {?} */ parts = /** @type {?} */ ([]);\n        for (var /** @type {?} */ key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var /** @type {?} */ value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify$1(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\n/**\n * @param {?} text\n * @param {?} obj\n * @return {?}\n */\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\n/**\n * @template T\n * @param {?} objWithPropertyToExtract\n * @return {?}\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract) {\n    for (var /** @type {?} */ key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n/**\n * @param {?} error\n * @return {?}\n */\n\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getDebugContext(error) {\n    return (/** @type {?} */ (error))[ERROR_DEBUG_CONTEXT];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getOriginalError(error) {\n    return (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR];\n}\n/**\n * @param {?} error\n * @return {?}\n */\nfunction getErrorLogger(error) {\n    return (/** @type {?} */ (error))[ERROR_LOGGER] || defaultErrorLogger;\n}\n/**\n * @param {?} console\n * @param {...?} values\n * @return {?}\n */\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, values);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@whatItDoes Provides a hook for centralized exception handling.\n *\n * \\@description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * \\@NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * \\@stable\n */\nvar ErrorHandler = (function () {\n    function ErrorHandler() {\n        /**\n         * \\@internal\n         */\n        this._console = console;\n    }\n    /**\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype.handleError = /**\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ originalError = this._findOriginalError(error);\n        var /** @type {?} */ context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var /** @type {?} */ errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findContext = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    ErrorHandler.prototype._findOriginalError = /**\n     * \\@internal\n     * @param {?} error\n     * @return {?}\n     */\n    function (error) {\n        var /** @type {?} */ e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\n/**\n * @param {?} message\n * @param {?} originalError\n * @return {?}\n */\nfunction wrappedError(message, originalError) {\n    var /** @type {?} */ msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var /** @type {?} */ error = Error(msg);\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction findFirstClosedCycle(keys) {\n    var /** @type {?} */ res = [];\n    for (var /** @type {?} */ i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\n/**\n * @param {?} keys\n * @return {?}\n */\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var /** @type {?} */ reversed = findFirstClosedCycle(keys.slice().reverse());\n        var /** @type {?} */ tokenStrs = reversed.map(function (k) { return stringify$1(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\n/**\n * @record\n */\n\n/**\n * @param {?} injector\n * @param {?} key\n * @param {?} constructResolvingMessage\n * @param {?=} originalError\n * @return {?}\n */\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var /** @type {?} */ keys = [key];\n    var /** @type {?} */ errMsg = constructResolvingMessage(keys);\n    var /** @type {?} */ error = /** @type {?} */ ((originalError ? wrappedError(errMsg, originalError) : Error(errMsg)));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    (/** @type {?} */ (error))[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n/**\n * @this {?}\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {\\@link Injector}, but the\n * {\\@link Injector} does not have a {\\@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n * @param {?} injector\n * @param {?} key\n * @return {?}\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n * @param {?} injector\n * @param {?} originalException\n * @param {?} originalStack\n * @param {?} key\n * @return {?}\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var /** @type {?} */ first = stringify$1(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {\\@link Provider} (or `Type`) is passed to {\\@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n * @param {?} provider\n * @return {?}\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {\\@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {\\@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * \\@stable\n * @param {?} typeOrFunc\n * @param {?} params\n * @return {?}\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var /** @type {?} */ signature = [];\n    for (var /** @type {?} */ i = 0, /** @type {?} */ ii = params.length; i < ii; i++) {\n        var /** @type {?} */ parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify$1).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify$1(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify$1(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * \\@stable\n * @param {?} index\n * @return {?}\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n * @param {?} provider1\n * @param {?} provider2\n * @return {?}\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {\\@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {\\@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {\\@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify$1(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    ReflectiveKey.get = /**\n     * Retrieves a `Key` for a token.\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef$1(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n         * @return {?} the number of keys registered in the system.\n         */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\n/**\n * \\@internal\n */\nvar KeyRegistry = (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    /**\n     * @param {?} token\n     * @return {?}\n     */\n    KeyRegistry.prototype.get = /**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return /** @type {?} */ ((this._allKeys.get(token)));\n        }\n        var /** @type {?} */ newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@whatItDoes Represents a type that a Component or other object is instances of.\n *\n * \\@description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * \\@stable\n */\nvar Type$1$1 = Function;\n/**\n * @param {?} v\n * @return {?}\n */\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar ReflectionCapabilities = (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    /**\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.isReflectionEnabled = /**\n     * @return {?}\n     */\n    function () { return true; };\n    /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.factory = /**\n     * @template T\n     * @param {?} t\n     * @return {?}\n     */\n    function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, [void 0].concat(args)))();\n    }; };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /**\n     * \\@internal\n     * @param {?} paramTypes\n     * @param {?} paramAnnotations\n     * @return {?}\n     */\n    function (paramTypes, paramAnnotations) {\n        var /** @type {?} */ result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var /** @type {?} */ i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownParameters = /**\n     * @param {?} type\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (type, parentCtor) {\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(type.toString())) {\n            return null;\n        }\n        // Prefer the direct API.\n        if ((/** @type {?} */ (type)).parameters && (/** @type {?} */ (type)).parameters !== parentCtor.parameters) {\n            return (/** @type {?} */ (type)).parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var /** @type {?} */ tsickleCtorParams = (/** @type {?} */ (type)).ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var /** @type {?} */ ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var /** @type {?} */ paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var /** @type {?} */ paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var /** @type {?} */ paramAnnotations = type.hasOwnProperty(PARAMETERS) && (/** @type {?} */ (type))[PARAMETERS];\n        var /** @type {?} */ paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array((/** @type {?} */ (type.length))).fill(undefined);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.parameters = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(type);\n        var /** @type {?} */ parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownAnnotations = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).annotations && (/** @type {?} */ (typeOrFunc)).annotations !== parentCtor.annotations) {\n            var /** @type {?} */ annotations = (/** @type {?} */ (typeOrFunc)).annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).decorators && (/** @type {?} */ (typeOrFunc)).decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata((/** @type {?} */ (typeOrFunc)).decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return (/** @type {?} */ (typeOrFunc))[ANNOTATIONS];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var /** @type {?} */ parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype._ownPropMetadata = /**\n     * @param {?} typeOrFunc\n     * @param {?} parentCtor\n     * @return {?}\n     */\n    function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if ((/** @type {?} */ (typeOrFunc)).propMetadata &&\n            (/** @type {?} */ (typeOrFunc)).propMetadata !== parentCtor.propMetadata) {\n            var /** @type {?} */ propMetadata = (/** @type {?} */ (typeOrFunc)).propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if ((/** @type {?} */ (typeOrFunc)).propDecorators &&\n            (/** @type {?} */ (typeOrFunc)).propDecorators !== parentCtor.propDecorators) {\n            var /** @type {?} */ propDecorators_1 = (/** @type {?} */ (typeOrFunc)).propDecorators;\n            var /** @type {?} */ propMetadata_1 = /** @type {?} */ ({});\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return (/** @type {?} */ (typeOrFunc))[PROP_METADATA];\n        }\n        return null;\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var /** @type {?} */ parentCtor = getParentCtor(typeOrFunc);\n        var /** @type {?} */ propMetadata = {};\n        if (parentCtor !== Object) {\n            var /** @type {?} */ parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var /** @type {?} */ ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var /** @type {?} */ decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, propMetadata[propName]);\n                }\n                decorators.push.apply(decorators, ownPropMetadata[propName]);\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return type instanceof Type$1$1 && lcProperty in type.prototype;\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return /** @type {?} */ (new Function('o', 'return o.' + name + ';')); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        return /** @type {?} */ (new Function('o', 'v', 'return o.' + name + ' = v;'));\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        var /** @type {?} */ functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return /** @type {?} */ (new Function('o', 'args', functionBody));\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify$1(type);\n    };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return \"./\" + stringify$1(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    ReflectionCapabilities.prototype.resolveEnum = /**\n     * @param {?} enumIdentifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\n/**\n * @param {?} decoratorInvocations\n * @return {?}\n */\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var /** @type {?} */ decoratorType = decoratorInvocation.type;\n        var /** @type {?} */ annotationCls = decoratorType.annotationCls;\n        var /** @type {?} */ annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, [void 0].concat(annotationArgs)))();\n    });\n}\n/**\n * @param {?} ctor\n * @return {?}\n */\nfunction getParentCtor(ctor) {\n    var /** @type {?} */ parentProto = Object.getPrototypeOf(ctor.prototype);\n    var /** @type {?} */ parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    /**\n     * @param {?} caps\n     * @return {?}\n     */\n    Reflector.prototype.updateCapabilities = /**\n     * @param {?} caps\n     * @return {?}\n     */\n    function (caps) { this.reflectionCapabilities = caps; };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.factory = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.factory(type); };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.parameters = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.annotations = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    Reflector.prototype.propMetadata = /**\n     * @param {?} typeOrFunc\n     * @return {?}\n     */\n    function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    Reflector.prototype.hasLifecycleHook = /**\n     * @param {?} type\n     * @param {?} lcProperty\n     * @return {?}\n     */\n    function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.getter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.getter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.setter = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.setter(name); };\n    /**\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.method = /**\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) { return this.reflectionCapabilities.method(name); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.importUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.importUri(type); };\n    /**\n     * @param {?} type\n     * @return {?}\n     */\n    Reflector.prototype.resourceUri = /**\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    Reflector.prototype.resolveIdentifier = /**\n     * @param {?} name\n     * @param {?} moduleUrl\n     * @param {?} members\n     * @param {?} runtime\n     * @return {?}\n     */\n    function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    Reflector.prototype.resolveEnum = /**\n     * @param {?} identifier\n     * @param {?} name\n     * @return {?}\n     */\n    function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {\\@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    ReflectiveDependency.fromKey = /**\n     * @param {?} key\n     * @return {?}\n     */\n    function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\n/**\n * An internal resolved representation of a {\\@link Provider} used by the {\\@link Injector}.\n *\n * It is usually created automatically by `Injector.resolveAndCreate`.\n *\n * It can be created manually, as follows:\n *\n * ### Example ([live demo](http://plnkr.co/edit/RfEnhh8kUEI0G3qsnIeT?p%3Dpreview&p=preview))\n *\n * ```typescript\n * var resolvedProviders = Injector.resolve([{ provide: 'message', useValue: 'Hello' }]);\n * var injector = Injector.fromResolvedProviders(resolvedProviders);\n *\n * expect(injector.get('message')).toEqual('Hello');\n * ```\n *\n * \\@experimental\n * @record\n */\n\nvar ResolvedReflectiveProvider_ = (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n    }\n    Object.defineProperty(ResolvedReflectiveProvider_.prototype, \"resolvedFactory\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.resolvedFactories[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {\\@link\n * Provider}.\n * \\@experimental\n */\nvar ResolvedReflectiveFactory = (function () {\n    function ResolvedReflectiveFactory(factory, dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveFactory(provider) {\n    var /** @type {?} */ factoryFn;\n    var /** @type {?} */ resolvedDeps;\n    if (provider.useClass) {\n        var /** @type {?} */ useClass = resolveForwardRef$1(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {\\@link Provider} into {\\@link ResolvedProvider}.\n *\n * {\\@link Injector} internally only uses {\\@link ResolvedProvider}, {\\@link Provider} contains\n * convenience provider syntax.\n * @param {?} provider\n * @return {?}\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n * @param {?} providers\n * @return {?}\n */\nfunction resolveReflectiveProviders(providers) {\n    var /** @type {?} */ normalized = _normalizeProviders(providers, []);\n    var /** @type {?} */ resolved = normalized.map(resolveReflectiveProvider);\n    var /** @type {?} */ resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n * @param {?} providers\n * @param {?} normalizedProvidersMap\n * @return {?}\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var /** @type {?} */ i = 0; i < providers.length; i++) {\n        var /** @type {?} */ provider = providers[i];\n        var /** @type {?} */ existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var /** @type {?} */ j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var /** @type {?} */ resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\n/**\n * @param {?} providers\n * @param {?} res\n * @return {?}\n */\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type$1$1) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && (/** @type {?} */ (b)).provide !== undefined) {\n            res.push(/** @type {?} */ (b));\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\n/**\n * @param {?} typeOrFunc\n * @param {?=} dependencies\n * @return {?}\n */\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var /** @type {?} */ params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\n/**\n * @param {?} typeOrFunc\n * @return {?}\n */\nfunction _dependenciesFor(typeOrFunc) {\n    var /** @type {?} */ params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\n/**\n * @param {?} typeOrFunc\n * @param {?} metadata\n * @param {?} params\n * @return {?}\n */\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var /** @type {?} */ token = null;\n    var /** @type {?} */ optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject$1) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var /** @type {?} */ visibility = null;\n    for (var /** @type {?} */ i = 0; i < metadata.length; ++i) {\n        var /** @type {?} */ paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type$1$1) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject$1) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef$1(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\n/**\n * @param {?} token\n * @param {?} optional\n * @param {?} visibility\n * @return {?}\n */\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * \\@Injectable()\n * class Engine {\n * }\n *\n * \\@Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n * @abstract\n */\nvar ReflectiveInjector = (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector.resolve = /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {\\@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.resolveAndCreate = /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {\\@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {\\@link ReflectiveInjector#resolve resolve} and\n     * {\\@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    ReflectiveInjector.fromResolvedProviders = /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * \\@Injectable()\n     * class Engine {\n     * }\n     *\n     * \\@Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * \\@experimental\n     * @param {?} providers\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /**\n         * \\@internal\n         */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var /** @type {?} */ len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var /** @type {?} */ i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndCreateChild = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    /**\n     * @param {?} providers\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.createChildFromResolved = /**\n     * @param {?} providers\n     * @return {?}\n     */\n    function (providers) {\n        var /** @type {?} */ inj = new ReflectiveInjector_(providers);\n        (/** @type {?} */ (inj)).parent = this;\n        return inj;\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.resolveAndInstantiate = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.instantiateResolved = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.getProviderAtIndex = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._new = /**\n     * \\@internal\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = /**\n     * @return {?}\n     */\n    function () { return this.objs.length; };\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiateProvider = /**\n     * @param {?} provider\n     * @return {?}\n     */\n    function (provider) {\n        if (provider.multiProvider) {\n            var /** @type {?} */ res = new Array(provider.resolvedFactories.length);\n            for (var /** @type {?} */ i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._instantiate = /**\n     * @param {?} provider\n     * @param {?} ResolvedReflectiveFactory\n     * @return {?}\n     */\n    function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var /** @type {?} */ factory = ResolvedReflectiveFactory$$1.factory;\n        var /** @type {?} */ deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (/** @type {?} */ e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var /** @type {?} */ obj;\n        try {\n            obj = factory.apply(void 0, deps);\n        }\n        catch (/** @type {?} */ e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    /**\n     * @param {?} dep\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByReflectiveDependency = /**\n     * @param {?} dep\n     * @return {?}\n     */\n    function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKey = /**\n     * @param {?} key\n     * @param {?} visibility\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getObjByKeyId = /**\n     * @param {?} keyId\n     * @return {?}\n     */\n    function (keyId) {\n        for (var /** @type {?} */ i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._throwOrNull = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeySelf = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @return {?}\n     */\n    function (key, notFoundValue) {\n        var /** @type {?} */ obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype._getByKeyDefault = /**\n     * \\@internal\n     * @param {?} key\n     * @param {?} notFoundValue\n     * @param {?} visibility\n     * @return {?}\n     */\n    function (key, notFoundValue, visibility) {\n        var /** @type {?} */ inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var /** @type {?} */ inj_ = /** @type {?} */ (inj);\n            var /** @type {?} */ obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ReflectiveInjector_.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\n/**\n * @param {?} injector\n * @param {?} fn\n * @return {?}\n */\nfunction _mapProviders(injector, fn) {\n    var /** @type {?} */ res = new Array(injector._providers.length);\n    for (var /** @type {?} */ i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Determine if the argument is shaped like a Promise\n * @param {?} obj\n * @return {?}\n */\nfunction isPromise$1(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * \\@experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {\\@link APP_INITIALIZER}s.\n *\n * \\@experimental\n */\nvar ApplicationInitStatus = (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationInitStatus.prototype.runInitializers = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var /** @type {?} */ asyncInitPromises = [];\n        var /** @type {?} */ complete = function () {\n            (/** @type {?} */ (_this)).done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var /** @type {?} */ i = 0; i < this.appInits.length; i++) {\n                var /** @type {?} */ initResult = this.appInits[i]();\n                if (isPromise$1(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject$1, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {\\@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {\\@link Injector}\n * using this token.\n * \\@experimental\n */\nvar APP_ID = new InjectionToken('AppId');\n/**\n * @return {?}\n */\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * \\@experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: /** @type {?} */ ([]),\n};\n/**\n * @return {?}\n */\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * \\@experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * \\@experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * \\@experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * \\@experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = (function () {\n    function Console() {\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.log = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    Console.prototype.warn = /**\n     * @param {?} message\n     * @return {?}\n     */\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @return {?}\n */\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {\\@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `\\@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * \\@stable\n */\nvar Compiler = (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleSync = /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAsync = /**\n     * Compiles the given NgModule and all of its components\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n     * Same as {\\@link #compileModuleSync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n     * Same as {\\@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     * @template T\n     * @param {?} moduleType\n     * @return {?}\n     */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n     * Clears all caches.\n     * @return {?}\n     */\n    Compiler.prototype.clearCache = /**\n     * Clears all caches.\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    Compiler.prototype.clearCacheFor = /**\n     * Clears the cache for the given component/ngModule.\n     * @param {?} type\n     * @return {?}\n     */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * \\@experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * \\@experimental\n * @abstract\n */\nvar CompilerFactory = (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of a Component created via a {\\@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {\\@link #destroy}\n * method.\n * \\@stable\n * @abstract\n */\nvar ComponentRef = (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactory = (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @param {?} component\n * @return {?}\n */\nfunction noComponentFactoryError(component) {\n    var /** @type {?} */ error = Error(\"No component factory found for \" + stringify$1(component) + \". Did you add it to @NgModule.entryComponents?\");\n    (/** @type {?} */ (error))[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n/**\n * @param {?} error\n * @return {?}\n */\n\nvar _NullComponentFactoryResolver = (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = /**\n     * @template T\n     * @param {?} component\n     * @return {?}\n     */\n    function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * \\@stable\n * @abstract\n */\nvar ComponentFactoryResolver = (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = (function (_super) {\n    __extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"selector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.selector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.componentType; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"ngContentSelectors\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.ngContentSelectors; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.inputs; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactoryBoundToModule.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.factory.outputs; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactoryBoundToModule.prototype.create = /**\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an instance of an NgModule created via a {\\@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * \\@stable\n * @abstract\n */\nvar NgModuleRef = (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar NgModuleFactory = (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A scope function for the Web Tracing Framework (WTF).\n *\n * \\@experimental\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\nvar trace;\nvar events;\n/**\n * @return {?}\n */\nfunction detectWTF() {\n    var /** @type {?} */ wtf = (/** @type {?} */ (_global /** TODO #9100 */) /** TODO #9100 */)['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * @param {?} signature\n * @param {?=} flags\n * @return {?}\n */\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\n/**\n * @template T\n * @param {?} scope\n * @param {?=} returnValue\n * @return {?}\n */\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\n/**\n * @param {?=} arg0\n * @param {?=} arg1\n * @return {?}\n */\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * \\@experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * \\@experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * \\@Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * \\@stable\n */\nvar EventEmitter = (function (_super) {\n    __extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    /**\n     * @param {?=} value\n     * @return {?}\n     */\n    EventEmitter.prototype.emit = /**\n     * @param {?=} value\n     * @return {?}\n     */\n    function (value) { _super.prototype.next.call(this, value); };\n    /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    EventEmitter.prototype.subscribe = /**\n     * @param {?=} generatorOrNext\n     * @param {?=} error\n     * @param {?=} complete\n     * @return {?}\n     */\n    function (generatorOrNext, error, complete) {\n        var /** @type {?} */ schedulerFn;\n        var /** @type {?} */ errorFn = function (err) { return null; };\n        var /** @type {?} */ completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n    };\n    return EventEmitter;\n}(Subject_2));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {\\@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {\\@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '\\@angular/core';\n * import {NgIf} from '\\@angular/common';\n *\n * \\@Component({\n *   selector: 'ng-zone-demo'.\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *       // reenter the Angular zone and display done\n *       this._ngZone.run(() => {console.log('Outside Done!') });\n *     }}));\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback)), 10)\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * \\@experimental\n */\nvar NgZone = (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n         * Whether there are no outstanding microtasks or macrotasks.\n         */\n        this.isStable = true;\n        /**\n         * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n         */\n        this.onUnstable = new EventEmitter(false);\n        /**\n         * Notifies when there is no more microtasks enqueued in the current VM Turn.\n         * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n         * For this reason this event can fire multiple times per VM Turn.\n         */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n         * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n         * implies we are about to relinquish VM turn.\n         * This event gets called just once.\n         */\n        this.onStable = new EventEmitter(false);\n        /**\n         * Notifies that an error has been delivered.\n         */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error('Angular requires Zone.js prolyfill.');\n        }\n        Zone.assertZonePatched();\n        var /** @type {?} */ self = /** @type {?} */ ((this));\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if ((/** @type {?} */ (Zone))['wtfZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['wtfZoneSpec']);\n        }\n        if (enableLongStackTrace && (/** @type {?} */ (Zone))['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork((/** @type {?} */ (Zone))['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    /**\n     * @return {?}\n     */\n    NgZone.isInAngularZone = /**\n     * @return {?}\n     */\n    function () { return Zone.current.get('isAngularZone') === true; };\n    /**\n     * @return {?}\n     */\n    NgZone.assertInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    /**\n     * @return {?}\n     */\n    NgZone.assertNotInAngularZone = /**\n     * @return {?}\n     */\n    function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.run = /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.run(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    NgZone.prototype.runTask = /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {\\@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @param {?=} name\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs, name) {\n        var /** @type {?} */ zone = (/** @type {?} */ ((this)))._inner;\n        var /** @type {?} */ task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return /** @type {?} */ (zone.runTask(task, applyThis, applyArgs));\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    NgZone.prototype.runGuarded = /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     * @template T\n     * @param {?} fn\n     * @param {?=} applyThis\n     * @param {?=} applyArgs\n     * @return {?}\n     */\n    function (fn, applyThis, applyArgs) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._inner.runGuarded(fn, applyThis, applyArgs));\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NgZone.prototype.runOutsideAngular = /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {\\@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {\\@link #run} to reenter the Angular zone and do work that updates the application model.\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return /** @type {?} */ ((/** @type {?} */ ((this)))._outer.run(fn));\n    };\n    return NgZone;\n}());\n/**\n * @return {?}\n */\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: /** @type {?} */ ({ 'isAngularZone': true }),\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\n/**\n * @param {?} zone\n * @return {?}\n */\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n *\n * \\@internal\n */\nvar NoopNgZone = (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.run = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runGuarded = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runOutsideAngular = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    NoopNgZone.prototype.runTask = /**\n     * @template T\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * \\@experimental\n */\nvar Testability = (function () {\n    function Testability(_ngZone) {\n        this._ngZone = _ngZone;\n        /**\n         * \\@internal\n         */\n        this._pendingCount = 0;\n        /**\n         * \\@internal\n         */\n        this._isZoneStable = true;\n        /**\n         * Whether any work was done since the last 'whenStable' callback. This is\n         * useful to detect if this could have potentially destabilized another\n         * component while it is stabilizing.\n         * \\@internal\n         */\n        this._didWork = false;\n        /**\n         * \\@internal\n         */\n        this._callbacks = [];\n        this._watchAngularEvents();\n    }\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._watchAngularEvents = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     */\n    /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.increasePendingRequestCount = /**\n     * Increases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     */\n    /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    Testability.prototype.decreasePendingRequestCount = /**\n     * Decreases the number of pending request\n     * @return {?}\n     */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    Testability.prototype.isStable = /**\n     * Whether an associated application is stable\n     * @return {?}\n     */\n    function () {\n        return this._isZoneStable && this._pendingCount == 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    Testability.prototype._runCallbacksIfReady = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    (/** @type {?} */ ((_this._callbacks.pop())))(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Not Ready\n            this._didWork = true;\n        }\n    };\n    /**\n     * Run callback when the application is stable\n     * @param callback function to be called after the application is stable\n     */\n    /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    Testability.prototype.whenStable = /**\n     * Run callback when the application is stable\n     * @param {?} callback function to be called after the application is stable\n     * @return {?}\n     */\n    function (callback) {\n        this._callbacks.push(callback);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     */\n    /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    Testability.prototype.getPendingRequestCount = /**\n     * Get the number of pending requests\n     * @return {?}\n     */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    Testability.prototype.findProviders = /**\n     * Find providers by name\n     * @param {?} using The root element to search from\n     * @param {?} provider The name of binding variable\n     * @param {?} exactMatch Whether using exactMatch\n     * @return {?}\n     */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {\\@link Testability} instances for specific elements.\n * \\@experimental\n */\nvar TestabilityRegistry = (function () {\n    function TestabilityRegistry() {\n        /**\n         * \\@internal\n         */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.registerApplication = /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param {?} token token of application, root element\n     * @param {?} testability Testability hook\n     * @return {?}\n     */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n     * Unregisters an application.\n     * @param {?} token token of application, root element\n     * @return {?}\n     */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n     * Unregisters all applications\n     * @return {?}\n     */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getTestability = /**\n     * Get a testability hook associated with the application\n     * @param {?} elem root element\n     * @return {?}\n     */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n     * Get all registered testabilities\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n     * Get all registered applications(root elements)\n     * @return {?}\n     */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n     * Find testability of a node in the Tree\n     * @param {?} elem node\n     * @param {?=} findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     * @return {?}\n     */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\n/**\n * Adapter interface for retrieving the `Testability` service associated for a\n * particular context.\n *\n * \\@experimental Testability apis are primarily intended to be used by e2e test tool vendors like\n * the Protractor team.\n * @record\n */\n\nvar _NoopGetTestability = (function () {\n    function _NoopGetTestability() {\n    }\n    /**\n     * @param {?} registry\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.addToWindow = /**\n     * @param {?} registry\n     * @return {?}\n     */\n    function (registry) { };\n    /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    _NoopGetTestability.prototype.findTestabilityInTree = /**\n     * @param {?} registry\n     * @param {?} elem\n     * @param {?} findInAncestors\n     * @return {?}\n     */\n    function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} injector\n * @return {?}\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var /** @type {?} */ inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} parentPlatformFactory\n * @param {?} name\n * @param {?=} providers\n * @return {?}\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var /** @type {?} */ desc = \"Platform: \" + name;\n    var /** @type {?} */ marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var /** @type {?} */ platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var /** @type {?} */ injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @param {?} requiredToken\n * @return {?}\n */\nfunction assertPlatform(requiredToken) {\n    var /** @type {?} */ platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Returns the current platform.\n *\n * \\@experimental APIs related to application bootstrap are currently under review.\n * @return {?}\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * Provides additional options to the bootstraping process.\n *\n * \\@stable\n * @record\n */\n\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {\\@link platformBrowser}), or explicitly by calling the {\\@link createPlatform} function.\n *\n * \\@stable\n */\nvar PlatformRef = (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n     * Creates an instance of an `\\@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '\\@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * \\@experimental APIs related to application bootstrap are currently under review.\n     * @template M\n     * @param {?} moduleFactory\n     * @param {?=} options\n     * @return {?}\n     */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var /** @type {?} */ ngZoneOption = options ? options.ngZone : undefined;\n        var /** @type {?} */ ngZone = getNgZone(ngZoneOption);\n        var /** @type {?} */ providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var /** @type {?} */ ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var /** @type {?} */ moduleRef = /** @type {?} */ (moduleFactory.create(ngZoneInjector));\n            var /** @type {?} */ exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); }); /** @type {?} */\n            ((ngZone)).runOutsideAngular(function () { return /** @type {?} */ ((ngZone)).onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } }); });\n            return _callAndReportToErrorHandler(exceptionHandler, /** @type {?} */ ((ngZone)), function () {\n                var /** @type {?} */ initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    PlatformRef.prototype.bootstrapModule = /**\n     * Creates an instance of an `\\@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * \\@NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * \\@stable\n     * @template M\n     * @param {?} moduleType\n     * @param {?=} compilerOptions\n     * @return {?}\n     */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var /** @type {?} */ compilerFactory = this.injector.get(CompilerFactory);\n        var /** @type {?} */ options = optionsReducer({}, compilerOptions);\n        var /** @type {?} */ compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    PlatformRef.prototype._moduleDoBootstrap = /**\n     * @param {?} moduleRef\n     * @return {?}\n     */\n    function (moduleRef) {\n        var /** @type {?} */ appRef = /** @type {?} */ (moduleRef.injector.get(ApplicationRef));\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify$1(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    PlatformRef.prototype.onDestroy = /**\n     * Register a listener to be called when the platform is disposed.\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n         * Retrieve the platform {\\@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         * @return {?}\n         */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    PlatformRef.prototype.destroy = /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\n/**\n * @param {?=} ngZoneOption\n * @return {?}\n */\nfunction getNgZone(ngZoneOption) {\n    var /** @type {?} */ ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\n/**\n * @param {?} errorHandler\n * @param {?} ngZone\n * @param {?} callback\n * @return {?}\n */\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var /** @type {?} */ result = callback();\n        if (isPromise$1(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\n/**\n * @template T\n * @param {?} dst\n * @param {?} objs\n * @return {?}\n */\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = __assign({}, dst, (/** @type {?} */ (objs)));\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * \\@stable\n */\nvar ApplicationRef = (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n         * Get a list of component types registered to this application.\n         * This list is populated even before the component is created.\n         */\n        this.componentTypes = [];\n        /**\n         * Get a list of components registered to this application.\n         */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var /** @type {?} */ isCurrentlyStable = new Observable_2(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var /** @type {?} */ isStable = new Observable_2(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var /** @type {?} */ stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var /** @type {?} */ unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        (/** @type {?} */ (this)).isStable =\n            merge_2(isCurrentlyStable, share_3.call(isStable));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    ApplicationRef.prototype.bootstrap = /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {\\@example core/ts/platform/platform.ts region='longform'}\n     * @template C\n     * @param {?} componentOrFactory\n     * @param {?=} rootSelectorOrNode\n     * @return {?}\n     */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var /** @type {?} */ componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                /** @type {?} */ ((this._componentFactoryResolver.resolveComponentFactory(componentOrFactory)));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var /** @type {?} */ ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var /** @type {?} */ selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var /** @type {?} */ compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var /** @type {?} */ testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    ApplicationRef.prototype.tick = /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var /** @type {?} */ scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (/** @type {?} */ e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.attachView = /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ApplicationRef.prototype.detachView = /**\n     * Detaches a view from dirty checking again.\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        var /** @type {?} */ view = (/** @type {?} */ (viewRef));\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._loadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var /** @type {?} */ listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    ApplicationRef.prototype._unloadComponent = /**\n     * @param {?} componentRef\n     * @return {?}\n     */\n    function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    ApplicationRef.prototype.ngOnDestroy = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n         * Returns the number of attached views.\n         * @return {?}\n         */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * \\@internal\n     */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\n/**\n * @template T\n * @param {?} list\n * @param {?} el\n * @return {?}\n */\nfunction remove(list, el) {\n    var /** @type {?} */ index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @record\n */\n\n/**\n * @deprecated Use the `Renderer2` instead.\n * @abstract\n */\nvar Renderer = (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * \\@experimental\n * @record\n */\n\n/**\n * \\@experimental\n * @abstract\n */\nvar RendererFactory2 = (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * \\@experimental\n * @abstract\n */\nvar Renderer2 = (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for render\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * \\@security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * \\@stable\n */\nvar ElementRef = (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {\\@link ViewChildren}, {\\@link ContentChildren}, and {\\@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * \\@Component({...})\n * class Container {\n *   \\@ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * \\@stable\n */\nvar QueryList = (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n    }\n    Object.defineProperty(QueryList.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"first\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[0]; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList.prototype, \"last\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._results[this.length - 1]; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.map = /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     * @template U\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.filter = /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.find = /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    QueryList.prototype.reduce = /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     * @template U\n     * @param {?} fn\n     * @param {?} init\n     * @return {?}\n     */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.forEach = /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    QueryList.prototype.some = /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toArray = /**\n     * @return {?}\n     */\n    function () { return this._results.slice(); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype[getSymbolIterator()] = /**\n     * @return {?}\n     */\n    function () { return (/** @type {?} */ (this._results))[getSymbolIterator()](); };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.toString = /**\n     * @return {?}\n     */\n    function () { return this._results.toString(); };\n    /**\n     * @param {?} res\n     * @return {?}\n     */\n    QueryList.prototype.reset = /**\n     * @param {?} res\n     * @return {?}\n     */\n    function (res) {\n        this._results = flatten$2(res);\n        (/** @type {?} */ (this)).dirty = false;\n    };\n    /**\n     * @return {?}\n     */\n    QueryList.prototype.notifyOnChanges = /**\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this.changes)).emit(this); };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.setDirty = /**\n     * internal\n     * @return {?}\n     */\n    function () { (/** @type {?} */ (this)).dirty = true; };\n    /** internal */\n    /**\n     * internal\n     * @return {?}\n     */\n    QueryList.prototype.destroy = /**\n     * internal\n     * @return {?}\n     */\n    function () {\n        (/** @type {?} */ (this.changes)).complete();\n        (/** @type {?} */ (this.changes)).unsubscribe();\n    };\n    return QueryList;\n}());\n/**\n * @template T\n * @param {?} list\n * @return {?}\n */\nfunction flatten$2(list) {\n    return list.reduce(function (flat, item) {\n        var /** @type {?} */ flatItem = Array.isArray(item) ? flatten$2(item) : item;\n        return (/** @type {?} */ (flat)).concat(flatItem);\n    }, []);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {\\@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {\\@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * \\@stable\n * @abstract\n */\nvar TemplateRef = (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {\\@link Component} via {\\@link #createComponent}, and Embedded Views, created by instantiating an\n * {\\@link TemplateRef Embedded Template} via {\\@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {\\@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {\\@link ViewChild} query.\n * \\@stable\n * @abstract\n */\nvar ViewContainerRef = (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ChangeDetectorRef = (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * \\@stable\n * @abstract\n */\nvar ViewRef = (function (_super) {\n    __extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {\\@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {\\@link TemplateRef}s:\n *\n * Outer {\\@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {\\@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {\\@link TemplateRef}s.\n *\n * The outer/inner {\\@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * \\@experimental\n * @abstract\n */\nvar EmbeddedViewRef = (function (_super) {\n    __extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n/**\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Public API for compiler\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EventListener = (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugNode = (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * \\@experimental All debugging apis are currently experimental.\n */\nvar DebugElement = (function (_super) {\n    __extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.addChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    /**\n     * @param {?} child\n     * @return {?}\n     */\n    DebugElement.prototype.removeChild = /**\n     * @param {?} child\n     * @return {?}\n     */\n    function (child) {\n        var /** @type {?} */ childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    DebugElement.prototype.insertChildrenAfter = /**\n     * @param {?} child\n     * @param {?} newChildren\n     * @return {?}\n     */\n    function (child, newChildren) {\n        var _this = this;\n        var /** @type {?} */ siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, [siblingIndex + 1, 0].concat(newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugElement.prototype.insertBefore = /**\n     * @param {?} refChild\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (refChild, newChild) {\n        var /** @type {?} */ refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.query = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAll = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    DebugElement.prototype.queryAllNodes = /**\n     * @param {?} predicate\n     * @return {?}\n     */\n    function (predicate) {\n        var /** @type {?} */ matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return /** @type {?} */ (this.childNodes.filter(function (node) { return node instanceof DebugElement; }));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    DebugElement.prototype.triggerEventHandler = /**\n     * @param {?} eventName\n     * @param {?} eventObj\n     * @return {?}\n     */\n    function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @param {?} element\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\n/**\n * @param {?} parentNode\n * @param {?} predicate\n * @param {?} matches\n * @return {?}\n */\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * \\@experimental\n * @param {?} nativeNode\n * @return {?}\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n/**\n * @return {?}\n */\n\n/**\n * @param {?} node\n * @return {?}\n */\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\n/**\n * @param {?} node\n * @return {?}\n */\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n/**\n * A boolean-valued function over a value, possibly including context information\n * regarding that value's position in an array.\n *\n * \\@experimental All debugging apis are currently experimental.\n * @record\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction devModeEqual(a, b) {\n    var /** @type {?} */ isListLikeIterableA = isListLikeIterable(a);\n    var /** @type {?} */ isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var /** @type {?} */ isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var /** @type {?} */ isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {\\@link Pipe} transformation has changed even though the\n * reference\n * has not changed.\n *\n * The wrapped value will be unwrapped by change detection, and the unwrapped value will be stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * \\@stable\n */\nvar WrappedValue = (function () {\n    function WrappedValue(wrapped) {\n        this.wrapped = wrapped;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    WrappedValue.wrap = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) { return new WrappedValue(value); };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * \\@stable\n */\nvar SimpleChange = (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    SimpleChange.prototype.isFirstChange = /**\n     * Check whether the new value is the first value assigned.\n     * @return {?}\n     */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) &&\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} comparator\n * @return {?}\n */\nfunction areIterablesEqual(a, b, comparator) {\n    var /** @type {?} */ iterator1 = a[getSymbolIterator()]();\n    var /** @type {?} */ iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var /** @type {?} */ item1 = iterator1.next();\n        var /** @type {?} */ item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\n/**\n * @param {?} obj\n * @param {?} fn\n * @return {?}\n */\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var /** @type {?} */ i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var /** @type {?} */ iterator = obj[getSymbolIterator()]();\n        var /** @type {?} */ item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\n/**\n * @param {?} o\n * @return {?}\n */\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return isListLikeIterable(obj); };\n    /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    DefaultIterableDifferFactory.prototype.create = /**\n     * @template V\n     * @param {?=} trackByFn\n     * @return {?}\n     */\n    function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        this._linkedRecords = null;\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachOperation = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ nextIt = this._itHead;\n        var /** @type {?} */ nextRemove = this._removalsHead;\n        var /** @type {?} */ addRemoveOffset = 0;\n        var /** @type {?} */ moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var /** @type {?} */ record = !nextRemove ||\n                nextIt && /** @type {?} */ ((nextIt.currentIndex)) < getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                /** @type {?} */ ((nextIt)) :\n                nextRemove;\n            var /** @type {?} */ adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var /** @type {?} */ currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = /** @type {?} */ ((nextIt))._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var /** @type {?} */ localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var /** @type {?} */ localCurrentIndex = /** @type {?} */ ((currentIndex)) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var /** @type {?} */ i = 0; i < localMovePreviousIndex; i++) {\n                            var /** @type {?} */ offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var /** @type {?} */ index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var /** @type {?} */ previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachMovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.forEachIdentityChange = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.diff = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @param {?} collection\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype.check = /**\n     * @param {?} collection\n     * @return {?}\n     */\n    function (collection) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ record = this._itHead;\n        var /** @type {?} */ mayBeDirty = false;\n        var /** @type {?} */ index;\n        var /** @type {?} */ item;\n        var /** @type {?} */ itemTrackBy;\n        if (Array.isArray(collection)) {\n            (/** @type {?} */ (this)).length = collection.length;\n            for (var /** @type {?} */ index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            (/** @type {?} */ (this)).length = index;\n        }\n        this._truncate(record);\n        (/** @type {?} */ (this)).collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reset = /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            var /** @type {?} */ nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._mismatch = /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var /** @type {?} */ previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @param {?} itemTrackBy\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, item, itemTrackBy, index) {\n        var /** @type {?} */ reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, /** @type {?} */ ((record._prev)), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._truncate = /**\n     * Get rid of any excess {\\@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {\\@link IterableChangeRecord_}.\n     *\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var /** @type {?} */ nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._reinsertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prevRemoved;\n        var /** @type {?} */ next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._moveAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._insertAfter = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} prevRecord\n     * @param {?} index\n     * @return {?}\n     */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var /** @type {?} */ next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._remove = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._unlink = /**\n     * \\@internal\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var /** @type {?} */ prev = record._prev;\n        var /** @type {?} */ next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToMoves = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} toIndex\n     * @return {?}\n     */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addToRemovals = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    DefaultIterableDiffer.prototype._addIdentityChange = /**\n     * \\@internal\n     * @param {?} record\n     * @param {?} item\n     * @return {?}\n     */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * \\@stable\n */\nvar IterableChangeRecord_ = (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prevDup = null;\n        /**\n         * \\@internal\n         */\n        this._nextDup = null;\n        /**\n         * \\@internal\n         */\n        this._prevRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextMoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\nvar _DuplicateItemRecordList = (function () {\n    function _DuplicateItemRecordList() {\n        /**\n         * \\@internal\n         */\n        this._head = null;\n        /**\n         * \\@internal\n         */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.add = /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            /** @type {?} */ ((\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail))._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.get = /**\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= /** @type {?} */ ((record.currentIndex))) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateItemRecordList.prototype.remove = /**\n     * Remove one {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var /** @type {?} */ prev = record._prevDup;\n        var /** @type {?} */ next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.put = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    _DuplicateMap.prototype.get = /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     * @param {?} trackById\n     * @param {?} atOrAfterIndex\n     * @return {?}\n     */\n    function (trackById, atOrAfterIndex) {\n        var /** @type {?} */ key = trackById;\n        var /** @type {?} */ recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    _DuplicateMap.prototype.remove = /**\n     * Removes a {\\@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        var /** @type {?} */ key = record.trackById;\n        var /** @type {?} */ recordList = /** @type {?} */ ((this.map.get(key)));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    _DuplicateMap.prototype.clear = /**\n     * @return {?}\n     */\n    function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\n/**\n * @param {?} item\n * @param {?} addRemoveOffset\n * @param {?} moveOffsets\n * @return {?}\n */\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var /** @type {?} */ previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var /** @type {?} */ moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.supports = /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function (obj) { return obj instanceof Map || isJsObject(obj); };\n    /**\n     * @template K, V\n     * @return {?}\n     */\n    DefaultKeyValueDifferFactory.prototype.create = /**\n     * @template K, V\n     * @return {?}\n     */\n    function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = /**\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var /** @type {?} */ record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    /**\n     * @param {?=} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.diff = /**\n     * @param {?=} map\n     * @return {?}\n     */\n    function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify$1(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    /**\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.onDestroy = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype.check = /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     * @param {?} map\n     * @return {?}\n     */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var /** @type {?} */ insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var /** @type {?} */ record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var /** @type {?} */ record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     * @param {?} before\n     * @param {?} record\n     * @return {?}\n     */\n    function (before, record) {\n        if (before) {\n            var /** @type {?} */ prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = /**\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    function (key, value) {\n        if (this._records.has(key)) {\n            var /** @type {?} */ record_1 = /** @type {?} */ ((this._records.get(key)));\n            this._maybeAddToChanges(record_1, value);\n            var /** @type {?} */ prev = record_1._prev;\n            var /** @type {?} */ next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var /** @type {?} */ record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._reset = /**\n     * \\@internal\n     * @return {?}\n     */\n    function () {\n        if (this.isDirty) {\n            var /** @type {?} */ record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = /**\n     * @param {?} record\n     * @param {?} newValue\n     * @return {?}\n     */\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToAdditions = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._additionsTail))._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    /**\n     * @param {?} record\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._addToChanges = /**\n     * @param {?} record\n     * @return {?}\n     */\n    function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            /** @type {?} */ ((this._changesTail))._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    DefaultKeyValueDiffer.prototype._forEach = /**\n     * \\@internal\n     * @template K, V\n     * @param {?} obj\n     * @param {?} fn\n     * @return {?}\n     */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * \\@stable\n */\nvar KeyValueChangeRecord_ = (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /**\n         * \\@internal\n         */\n        this._nextPrevious = null;\n        /**\n         * \\@internal\n         */\n        this._next = null;\n        /**\n         * \\@internal\n         */\n        this._prev = null;\n        /**\n         * \\@internal\n         */\n        this._nextAdded = null;\n        /**\n         * \\@internal\n         */\n        this._nextRemoved = null;\n        /**\n         * \\@internal\n         */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A strategy for tracking changes over time to an iterable. Used by {\\@link NgForOf} to\n * respond to changes in an iterable by effecting equivalent changes in the DOM.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Iterable` collection since last time\n * `IterableDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * @deprecated v4.0.0 - Use IterableChangeRecord instead.\n * @record\n */\n\n/**\n * An optional function passed into {\\@link NgForOf} that defines how to track\n * items in an iterable (e.g. fby index or id)\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link IterableDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * \\@stable\n */\nvar IterableDiffers = (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    IterableDiffers.create = /**\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent != null) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n            return new IterableDiffers(factories);\n        }\n        else {\n            return new IterableDiffers(factories);\n        }\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    IterableDiffers.extend = /**\n     * Takes an array of {\\@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link IterableDiffers} instance with the provided factories and return a new\n     * {\\@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    IterableDiffers.prototype.find = /**\n     * @param {?} iterable\n     * @return {?}\n     */\n    function (iterable) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\n/**\n * @param {?} type\n * @return {?}\n */\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A differ that tracks changes made to an object over time.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An object describing the changes in the `Map` or `{[k:string]: string}` since last time\n * `KeyValueDiffer#diff()` was invoked.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Record representing the item change information.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Provides a factory for {\\@link KeyValueDiffer}.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * \\@stable\n */\nvar KeyValueDiffers = (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    KeyValueDiffers.create = /**\n     * @template S\n     * @param {?} factories\n     * @param {?=} parent\n     * @return {?}\n     */\n    function (factories, parent) {\n        if (parent) {\n            var /** @type {?} */ copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    KeyValueDiffers.extend = /**\n     * Takes an array of {\\@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {\\@link KeyValueDiffers} instance with the provided factories and return a new\n     * {\\@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {\\@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * \\@Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     * @template S\n     * @param {?} factories\n     * @return {?}\n     */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    /**\n     * @param {?} kv\n     * @return {?}\n     */\n    KeyValueDiffers.prototype.find = /**\n     * @param {?} kv\n     * @return {?}\n     */\n    function (kv) {\n        var /** @type {?} */ factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Change detection enables data binding in Angular.\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * \\@experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * \\@experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * \\@experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @return {?}\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\n/**\n * @return {?}\n */\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\n/**\n * @param {?=} locale\n * @return {?}\n */\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of \\@angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * \\@experimental\n */\nvar ApplicationModule = (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule$1, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject$1(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] },\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/** @enum {number} */\nvar SecurityContext$1 = {\n    NONE: 0,\n    HTML: 1,\n    STYLE: 2,\n    SCRIPT: 3,\n    URL: 4,\n    RESOURCE_URL: 5,\n};\nSecurityContext$1[SecurityContext$1.NONE] = \"NONE\";\nSecurityContext$1[SecurityContext$1.HTML] = \"HTML\";\nSecurityContext$1[SecurityContext$1.STYLE] = \"STYLE\";\nSecurityContext$1[SecurityContext$1.SCRIPT] = \"SCRIPT\";\nSecurityContext$1[SecurityContext$1.URL] = \"URL\";\nSecurityContext$1[SecurityContext$1.RESOURCE_URL] = \"RESOURCE_URL\";\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * \\@stable\n * @abstract\n */\nvar Sanitizer = (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Factory for ViewDefinitions/NgModuleDefinitions.\n * We use a function so we can reexeute it in case an error happens and use the given logger\n * function to log the error from the definition of the node, which is shown in all browser\n * logs.\n * @record\n */\n\n/**\n * Function to call console.error at the right source location. This is an indirection\n * via another function as browser will log the location that actually called\n * `console.error`.\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * A node definition in the view.\n *\n * Note: We use one type for all nodes so that loops that loop over all nodes\n * of a ViewDefinition stay monomorphic!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * View instance data.\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Data for an instantiated NodeType.Text.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asTextData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Element.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asElementData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.Provider.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asProviderData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Data for an instantiated NodeType.PureExpression.\n *\n * Attention: Adding fields to this is performance sensitive!\n * @record\n */\n\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asPureExpressionData(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n * @param {?} view\n * @param {?} index\n * @return {?}\n */\nfunction asQueryList(view, index) {\n    return /** @type {?} */ (view.nodes[index]);\n}\n/**\n * @record\n */\n\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: /** @type {?} */ ((undefined)),\n    createRootView: /** @type {?} */ ((undefined)),\n    createEmbeddedView: /** @type {?} */ ((undefined)),\n    createComponentView: /** @type {?} */ ((undefined)),\n    createNgModuleRef: /** @type {?} */ ((undefined)),\n    overrideProvider: /** @type {?} */ ((undefined)),\n    clearProviderOverrides: /** @type {?} */ ((undefined)),\n    checkAndUpdateView: /** @type {?} */ ((undefined)),\n    checkNoChangesView: /** @type {?} */ ((undefined)),\n    destroyView: /** @type {?} */ ((undefined)),\n    resolveDep: /** @type {?} */ ((undefined)),\n    createDebugContext: /** @type {?} */ ((undefined)),\n    handleEvent: /** @type {?} */ ((undefined)),\n    updateDirectives: /** @type {?} */ ((undefined)),\n    updateRenderer: /** @type {?} */ ((undefined)),\n    dirtyParentQueries: /** @type {?} */ ((undefined)),\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} context\n * @param {?} oldValue\n * @param {?} currValue\n * @param {?} isFirstCheck\n * @return {?}\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var /** @type {?} */ msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} msg\n * @param {?} context\n * @return {?}\n */\nfunction viewDebugError(msg, context) {\n    var /** @type {?} */ err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\n/**\n * @param {?} err\n * @param {?} context\n * @return {?}\n */\nfunction _addDebugContext(err, context) {\n    (/** @type {?} */ (err))[ERROR_DEBUG_CONTEXT] = context;\n    (/** @type {?} */ (err))[ERROR_LOGGER] = context.logError.bind(context);\n}\n/**\n * @param {?} err\n * @return {?}\n */\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\n/**\n * @param {?} action\n * @return {?}\n */\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\n/**\n * @param {?} token\n * @return {?}\n */\nfunction tokenKey(token) {\n    var /** @type {?} */ key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify$1(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBinding(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), oldValue, value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markParentViewsForCheck(view) {\n    var /** @type {?} */ currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} endView\n * @return {?}\n */\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var /** @type {?} */ currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (/** @type {?} */ e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var /** @type {?} */ parentView = view.parent;\n        return asElementData(parentView, /** @type {?} */ ((view.parentNodeDef)).nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n * @param {?} view\n * @return {?}\n */\nfunction viewParentEl(view) {\n    var /** @type {?} */ parentView = view.parent;\n    if (parentView) {\n        return /** @type {?} */ ((view.parentNodeDef)).parent;\n    }\n    else {\n        return null;\n    }\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\n/**\n * @param {?} target\n * @param {?} name\n * @return {?}\n */\nfunction elementEventFullName$1(target, name) {\n    return target ? target + \":\" + name : name;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isComponentView(view) {\n    return !!view.parent && !!(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(/** @type {?} */ ((view.parentNodeDef)).flags & 32768 /* Component */);\n}\n/**\n * @param {?} deps\n * @param {?=} sourceName\n * @return {?}\n */\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var /** @type {?} */ token;\n        var /** @type {?} */ flags;\n        if (Array.isArray(value)) {\n            flags = value[0], token = value[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n    });\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction getParentRenderElement(view, renderHost, def) {\n    var /** @type {?} */ renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (/** @type {?} */ ((renderParent.element)).componentRendererType && /** @type {?} */ ((/** @type {?} */ ((renderParent.element)).componentRendererType)).encapsulation === ViewEncapsulation$1.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, /** @type {?} */ ((def.renderParent)).nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\n/**\n * @template D\n * @param {?} factory\n * @return {?}\n */\nfunction resolveDefinition(factory) {\n    var /** @type {?} */ value = /** @type {?} */ (((DEFINITION_CACHE.get(factory))));\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction rootRenderNodes(view) {\n    var /** @type {?} */ renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, /** @type {?} */ ((view.def.lastRenderRootNode))));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\n/**\n * @param {?} view\n * @param {?} action\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} ngContentIndex\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var /** @type {?} */ hostView = /** @type {?} */ ((compView)).parent;\n    var /** @type {?} */ hostElDef = viewParentEl(/** @type {?} */ ((compView)));\n    var /** @type {?} */ startIndex = /** @type {?} */ ((hostElDef)).nodeIndex + 1;\n    var /** @type {?} */ endIndex = /** @type {?} */ ((hostElDef)).nodeIndex + /** @type {?} */ ((hostElDef)).childCount;\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = /** @type {?} */ ((hostView)).def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode(/** @type {?} */ ((hostView)), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!/** @type {?} */ ((hostView)).parent) {\n        // a root view\n        var /** @type {?} */ projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var /** @type {?} */ i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, /** @type {?} */ ((nodeDef.ngContent)).index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var /** @type {?} */ rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var /** @type {?} */ compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, nodeDef.nodeIndex).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !/** @type {?} */ ((nodeDef.element)).name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} action\n * @param {?} parentNode\n * @param {?} nextSibling\n * @param {?=} target\n * @return {?}\n */\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var /** @type {?} */ renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            /** @type {?} */ ((target)).push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\n/**\n * @param {?} name\n * @return {?}\n */\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var /** @type {?} */ match = /** @type {?} */ ((name.match(NS_PREFIX_RE)));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createElement(view, renderHost, def) {\n    var /** @type {?} */ elDef = /** @type {?} */ ((def.element));\n    var /** @type {?} */ rootSelectorOrNode = view.root.selectorOrNode;\n    var /** @type {?} */ renderer = view.renderer;\n    var /** @type {?} */ el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var /** @type {?} */ i = 0; i < elDef.attrs.length; i++) {\n            var _a = elDef.attrs[i], ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\n/**\n * @param {?} view\n * @param {?} compView\n * @param {?} def\n * @param {?} el\n * @return {?}\n */\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n        var /** @type {?} */ output = def.outputs[i];\n        var /** @type {?} */ handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName$1(output.target, output.eventName));\n        var /** @type {?} */ listenTarget = output.target;\n        var /** @type {?} */ listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var /** @type {?} */ disposable = /** @type {?} */ (listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure)); /** @type {?} */\n        ((view.disposables))[def.outputIndex + i] = disposable;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = def.bindings.length;\n    var /** @type {?} */ changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @return {?}\n */\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ elData = asElementData(view, def.nodeIndex);\n    var /** @type {?} */ renderNode$$1 = elData.renderElement;\n    var /** @type {?} */ name = /** @type {?} */ ((binding.name));\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var /** @type {?} */ bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} ns\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var /** @type {?} */ renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\n/**\n * @param {?} view\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var /** @type {?} */ renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ renderValue = view.root.sanitizer.sanitize(SecurityContext$1.STYLE, /** @type {?} */ (value));\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var /** @type {?} */ unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var /** @type {?} */ renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\n/**\n * @param {?} view\n * @param {?} binding\n * @param {?} renderNode\n * @param {?} name\n * @param {?} value\n * @return {?}\n */\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var /** @type {?} */ securityContext = binding.securityContext;\n    var /** @type {?} */ renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\n/**\n * @param {?} data\n * @return {?}\n */\nfunction initNgModule(data) {\n    var /** @type {?} */ def = data._def;\n    var /** @type {?} */ providers = data._providers = new Array(def.providers.length);\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\n/**\n * @param {?} data\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var /** @type {?} */ providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var /** @type {?} */ providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} ngModule\n * @param {?} providerDef\n * @return {?}\n */\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var /** @type {?} */ injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\n/**\n * @param {?} ngModule\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction _createClass(ngModule, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction _callFactory(ngModule, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n/**\n * @param {?} ngModule\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var /** @type {?} */ def = ngModule._def;\n    for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n        var /** @type {?} */ provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var /** @type {?} */ instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @param {?} parentView\n * @param {?} elementData\n * @param {?} viewIndex\n * @param {?} view\n * @return {?}\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, /** @type {?} */ ((viewIndex)), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var /** @type {?} */ prevView = /** @type {?} */ ((viewIndex)) > 0 ? embeddedViews[/** @type {?} */ ((viewIndex)) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\n/**\n * @param {?} vcElementData\n * @param {?} view\n * @return {?}\n */\nfunction attachProjectedView(vcElementData, view) {\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even accross component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(/** @type {?} */ ((view.parent)).def, /** @type {?} */ ((view.parentNodeDef)));\n}\n/**\n * @param {?} viewDef\n * @param {?} nodeDef\n * @return {?}\n */\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var /** @type {?} */ parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\n/**\n * @param {?} elementData\n * @param {?=} viewIndex\n * @return {?}\n */\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var /** @type {?} */ view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var /** @type {?} */ dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var /** @type {?} */ projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\n/**\n * @param {?} elementData\n * @param {?} oldViewIndex\n * @param {?} newViewIndex\n * @return {?}\n */\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n    var /** @type {?} */ view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var /** @type {?} */ prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\n/**\n * @param {?} elementData\n * @param {?} prevView\n * @param {?} view\n * @return {?}\n */\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var /** @type {?} */ prevRenderNode = prevView ? renderNode(prevView, /** @type {?} */ ((prevView.def.lastRenderRootNode))) :\n        elementData.renderElement;\n    var /** @type {?} */ parentNode = view.renderer.parentNode(prevRenderNode);\n    var /** @type {?} */ nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @param {?} value\n * @return {?}\n */\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\n/**\n * @param {?} arr\n * @param {?} index\n * @return {?}\n */\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nvar EMPTY_CONTEXT = new Object();\nvar ComponentFactory_ = (function (_super) {\n    __extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ inputsArr = [];\n            var /** @type {?} */ inputs = /** @type {?} */ ((this._inputs));\n            for (var /** @type {?} */ propName in inputs) {\n                var /** @type {?} */ templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ outputsArr = [];\n            for (var /** @type {?} */ propName in this._outputs) {\n                var /** @type {?} */ templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    ComponentFactory_.prototype.create = /**\n     * Creates a new component.\n     * @param {?} injector\n     * @param {?=} projectableNodes\n     * @param {?=} rootSelectorOrNode\n     * @param {?=} ngModule\n     * @return {?}\n     */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var /** @type {?} */ viewDef = resolveDefinition(this.viewDefFactory);\n        var /** @type {?} */ componentNodeIndex = /** @type {?} */ ((/** @type {?} */ ((viewDef.nodes[0].element)).componentProvider)).nodeIndex;\n        var /** @type {?} */ view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var /** @type {?} */ component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION$2.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = (function (_super) {\n    __extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return /** @type {?} */ (this._component.constructor); },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ComponentRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this._viewRef.destroy(); };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ComponentRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} elData\n * @return {?}\n */\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n         * \\@internal\n         */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ view = this._view;\n            var /** @type {?} */ elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = /** @type {?} */ ((view.parent));\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.clear = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ len = this._embeddedViews.length;\n        for (var /** @type {?} */ i = len - 1; i >= 0; i--) {\n            var /** @type {?} */ view = /** @type {?} */ ((detachEmbeddedView(this._data, i)));\n            Services.destroyView(view);\n        }\n    };\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.get = /**\n     * @param {?} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = this._embeddedViews[index];\n        if (view) {\n            var /** @type {?} */ ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createEmbeddedView = /**\n     * @template C\n     * @param {?} templateRef\n     * @param {?=} context\n     * @param {?=} index\n     * @return {?}\n     */\n    function (templateRef, context, index) {\n        var /** @type {?} */ viewRef = templateRef.createEmbeddedView(context || /** @type {?} */ ({}));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.createComponent = /**\n     * @template C\n     * @param {?} componentFactory\n     * @param {?=} index\n     * @param {?=} injector\n     * @param {?=} projectableNodes\n     * @param {?=} ngModuleRef\n     * @return {?}\n     */\n    function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var /** @type {?} */ contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var /** @type {?} */ componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.insert = /**\n     * @param {?} viewRef\n     * @param {?=} index\n     * @return {?}\n     */\n    function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ viewRef_ = /** @type {?} */ (viewRef);\n        var /** @type {?} */ viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.move = /**\n     * @param {?} viewRef\n     * @param {?} currentIndex\n     * @return {?}\n     */\n    function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var /** @type {?} */ previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.indexOf = /**\n     * @param {?} viewRef\n     * @return {?}\n     */\n    function (viewRef) {\n        return this._embeddedViews.indexOf((/** @type {?} */ (viewRef))._view);\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.remove = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    /**\n     * @param {?=} index\n     * @return {?}\n     */\n    ViewContainerRef_.prototype.detach = /**\n     * @param {?=} index\n     * @return {?}\n     */\n    function (index) {\n        var /** @type {?} */ view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.markForCheck = /**\n     * @return {?}\n     */\n    function () { markParentViewsForCheck(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detach = /**\n     * @return {?}\n     */\n    function () { this._view.state &= ~4 /* Attached */; };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detectChanges = /**\n     * @return {?}\n     */\n    function () {\n        var /** @type {?} */ fs$$1 = this._view.root.rendererFactory;\n        if (fs$$1.begin) {\n            fs$$1.begin();\n        }\n        Services.checkAndUpdateView(this._view);\n        if (fs$$1.end) {\n            fs$$1.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.checkNoChanges = /**\n     * @return {?}\n     */\n    function () { Services.checkNoChangesView(this._view); };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.reattach = /**\n     * @return {?}\n     */\n    function () { this._view.state |= 4 /* Attached */; };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    ViewRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(/** @type {?} */ (callback));\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    /**\n     * @return {?}\n     */\n    ViewRef_.prototype.detachFromAppRef = /**\n     * @return {?}\n     */\n    function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToAppRef = /**\n     * @param {?} appRef\n     * @return {?}\n     */\n    function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    ViewRef_.prototype.attachToViewContainerRef = /**\n     * @param {?} vcRef\n     * @return {?}\n     */\n    function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = (function (_super) {\n    __extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    /**\n     * @param {?} context\n     * @return {?}\n     */\n    TemplateRef_.prototype.createEmbeddedView = /**\n     * @param {?} context\n     * @return {?}\n     */\n    function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, /** @type {?} */ ((/** @type {?} */ ((this._def.element)).template)), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\n/**\n * @param {?} view\n * @param {?} elDef\n * @return {?}\n */\nfunction createInjector(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    Injector_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var /** @type {?} */ allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    RendererAdapter.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    RendererAdapter.prototype.createElement = /**\n     * @param {?} parent\n     * @param {?} namespaceAndName\n     * @return {?}\n     */\n    function (parent, namespaceAndName) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        var /** @type {?} */ el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createViewRoot = /**\n     * @param {?} hostElement\n     * @return {?}\n     */\n    function (hostElement) { return hostElement; };\n    /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    RendererAdapter.prototype.createTemplateAnchor = /**\n     * @param {?} parentElement\n     * @return {?}\n     */\n    function (parentElement) {\n        var /** @type {?} */ comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    RendererAdapter.prototype.createText = /**\n     * @param {?} parentElement\n     * @param {?} value\n     * @return {?}\n     */\n    function (parentElement, value) {\n        var /** @type {?} */ node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.projectNodes = /**\n     * @param {?} parentElement\n     * @param {?} nodes\n     * @return {?}\n     */\n    function (parentElement, nodes) {\n        for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.attachViewAfter = /**\n     * @param {?} node\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (node, viewRootNodes) {\n        var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n        var /** @type {?} */ nextSibling = this.delegate.nextSibling(node);\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.detachView = /**\n     * @param {?} viewRootNodes\n     * @return {?}\n     */\n    function (viewRootNodes) {\n        for (var /** @type {?} */ i = 0; i < viewRootNodes.length; i++) {\n            var /** @type {?} */ node = viewRootNodes[i];\n            var /** @type {?} */ parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    RendererAdapter.prototype.destroyView = /**\n     * @param {?} hostElement\n     * @param {?} viewAllNodes\n     * @return {?}\n     */\n    function (hostElement, viewAllNodes) {\n        for (var /** @type {?} */ i = 0; i < viewAllNodes.length; i++) {\n            /** @type {?} */ ((this.delegate.destroyNode))(viewAllNodes[i]);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listen = /**\n     * @param {?} renderElement\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    RendererAdapter.prototype.listenGlobal = /**\n     * @param {?} target\n     * @param {?} name\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, name, callback) {\n        return this.delegate.listen(target, name, /** @type {?} */ (callback));\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementProperty = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementAttribute = /**\n     * @param {?} renderElement\n     * @param {?} namespaceAndName\n     * @param {?} attributeValue\n     * @return {?}\n     */\n    function (renderElement, namespaceAndName, attributeValue) {\n        var _a = splitNamespace(namespaceAndName), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setBindingDebugInfo = /**\n     * @param {?} renderElement\n     * @param {?} propertyName\n     * @param {?} propertyValue\n     * @return {?}\n     */\n    function (renderElement, propertyName, propertyValue) { };\n    /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementClass = /**\n     * @param {?} renderElement\n     * @param {?} className\n     * @param {?} isAdd\n     * @return {?}\n     */\n    function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    RendererAdapter.prototype.setElementStyle = /**\n     * @param {?} renderElement\n     * @param {?} styleName\n     * @param {?} styleValue\n     * @return {?}\n     */\n    function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    RendererAdapter.prototype.invokeElementMethod = /**\n     * @param {?} renderElement\n     * @param {?} methodName\n     * @param {?} args\n     * @return {?}\n     */\n    function (renderElement, methodName, args) {\n        (/** @type {?} */ (renderElement))[methodName].apply(renderElement, args);\n    };\n    /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    RendererAdapter.prototype.setText = /**\n     * @param {?} renderNode\n     * @param {?} text\n     * @return {?}\n     */\n    function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    /**\n     * @return {?}\n     */\n    RendererAdapter.prototype.animate = /**\n     * @return {?}\n     */\n    function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\n/**\n * @param {?} moduleType\n * @param {?} parent\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        initNgModule(this);\n    }\n    /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    NgModuleRef_.prototype.get = /**\n     * @param {?} token\n     * @param {?=} notFoundValue\n     * @return {?}\n     */\n    function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: 0 /* None */ }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @return {?}\n     */\n    NgModuleRef_.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify$1(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    /**\n     * @param {?} callback\n     * @return {?}\n     */\n    NgModuleRef_.prototype.onDestroy = /**\n     * @param {?} callback\n     * @return {?}\n     */\n    function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var /** @type {?} */ compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var /** @type {?} */ allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass(/** @type {?} */ ((compView.parent)), /** @type {?} */ ((viewParentEl(compView))), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var /** @type {?} */ allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var /** @type {?} */ instance = createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((def.provider)).value, /** @type {?} */ ((def.provider)).deps);\n    if (def.outputs.length) {\n        for (var /** @type {?} */ i = 0; i < def.outputs.length; i++) {\n            var /** @type {?} */ output = def.outputs[i];\n            var /** @type {?} */ subscription = instance[/** @type {?} */ ((output.propName))].subscribe(eventHandlerClosure(view, /** @type {?} */ ((def.parent)).nodeIndex, output.eventName)); /** @type {?} */\n            ((view.disposables))[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} eventName\n * @return {?}\n */\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    var /** @type {?} */ bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var /** @type {?} */ providerData = asProviderData(view, def.nodeIndex);\n    var /** @type {?} */ directive = providerData.instance;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ changes = /** @type {?} */ ((undefined));\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((view.state & 2 /* FirstCheck */) && (def.flags & 65536 /* OnInit */)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var /** @type {?} */ allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var /** @type {?} */ providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).value, /** @type {?} */ ((providerDef)).deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, /** @type {?} */ ((def.parent)), allowPrivateServices, /** @type {?} */ ((providerDef)).deps[0]);\n        case 256 /* TypeValueProvider */:\n            return /** @type {?} */ ((providerDef)).value;\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} ctor\n * @param {?} deps\n * @return {?}\n */\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = new Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, [void 0].concat(depValues)))();\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} factory\n * @param {?} deps\n * @return {?}\n */\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var /** @type {?} */ len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var /** @type {?} */ depValues = Array(len);\n            for (var /** @type {?} */ i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, depValues);\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @param {?} depDef\n * @param {?=} notFoundValue\n * @return {?}\n */\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var /** @type {?} */ startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var /** @type {?} */ tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && /** @type {?} */ ((elDef.element)).componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = /** @type {?} */ ((elDef.parent));\n    }\n    while (view) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var /** @type {?} */ compView = findCompView(view, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(view, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(view, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (/** @type {?} */ ((elDef.element)).template) {\n                        return asElementData(view, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var /** @type {?} */ cdView = findCompView(view, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                    return createInjector(view, elDef);\n                default:\n                    var /** @type {?} */ providerDef_1 = /** @type {?} */ (((allowPrivateServices ? /** @type {?} */ ((elDef.element)).allProviders : /** @type {?} */ ((elDef.element)).publicProviders)))[tokenKey$$1];\n                    if (providerDef_1) {\n                        var /** @type {?} */ providerData = asProviderData(view, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(view, providerDef_1) };\n                            view.nodes[providerDef_1.nodeIndex] = /** @type {?} */ (providerData);\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(view);\n        elDef = /** @type {?} */ ((viewParentEl(view)));\n        view = /** @type {?} */ ((view.parent));\n    }\n    var /** @type {?} */ value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} allowPrivateServices\n * @return {?}\n */\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var /** @type {?} */ compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\n/**\n * @param {?} view\n * @param {?} providerData\n * @param {?} def\n * @param {?} bindingIdx\n * @param {?} value\n * @param {?} changes\n * @return {?}\n */\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((def.parent)).nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var /** @type {?} */ binding = def.bindings[bindingIdx];\n    var /** @type {?} */ propName = /** @type {?} */ ((binding.name));\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var /** @type {?} */ oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n        if (oldValue instanceof WrappedValue) {\n            oldValue = oldValue.wrapped;\n        }\n        var /** @type {?} */ binding_1 = def.bindings[bindingIdx];\n        changes[/** @type {?} */ ((binding_1.nonMinifiedName))] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n/**\n * @param {?} view\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var /** @type {?} */ nodes = view.def.nodes;\n    for (var /** @type {?} */ i = 0; i < nodes.length; i++) {\n        var /** @type {?} */ nodeDef = nodes[i];\n        var /** @type {?} */ parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                callElementProvidersLifecycles(view, parent_1, lifecycles);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} elDef\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callElementProvidersLifecycles(view, elDef, lifecycles) {\n    for (var /** @type {?} */ i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n}\n/**\n * @param {?} view\n * @param {?} index\n * @param {?} lifecycles\n * @return {?}\n */\nfunction callProviderLifecycles(view, index, lifecycles) {\n    var /** @type {?} */ providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var /** @type {?} */ provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @return {?}\n */\nfunction createQuery() {\n    return new QueryList();\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction dirtyParentQueries(view) {\n    var /** @type {?} */ queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var /** @type {?} */ tplDef = /** @type {?} */ ((view.parentNodeDef));\n        view = view.parent;\n        // content queries\n        var /** @type {?} */ end = tplDef.nodeIndex + tplDef.childCount;\n        for (var /** @type {?} */ i = 0; i <= end; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (/** @type {?} */ ((nodeDef.query)).filterId & queryIds) === /** @type {?} */ ((nodeDef.query)).filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var /** @type {?} */ i = 0; i < view.def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var /** @type {?} */ directiveInstance;\n    var /** @type {?} */ newValues = /** @type {?} */ ((undefined));\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var /** @type {?} */ elementDef = /** @type {?} */ ((/** @type {?} */ ((nodeDef.parent)).parent));\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = asProviderData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, /** @type {?} */ ((nodeDef.query)), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var /** @type {?} */ bindings = /** @type {?} */ ((nodeDef.query)).bindings;\n    var /** @type {?} */ notify = false;\n    for (var /** @type {?} */ i = 0; i < bindings.length; i++) {\n        var /** @type {?} */ binding = bindings[i];\n        var /** @type {?} */ boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\n/**\n * @param {?} view\n * @param {?} startIndex\n * @param {?} endIndex\n * @param {?} queryDef\n * @param {?} values\n * @return {?}\n */\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var /** @type {?} */ i = startIndex; i <= endIndex; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        var /** @type {?} */ valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && /** @type {?} */ ((nodeDef.element)).template &&\n            (/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).template)).nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var /** @type {?} */ elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var /** @type {?} */ embeddedViews = /** @type {?} */ ((elementData.viewContainer))._embeddedViews;\n                for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                    var /** @type {?} */ embeddedView = embeddedViews[k];\n                    var /** @type {?} */ dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var /** @type {?} */ projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ k = 0; k < projectedViews.length; k++) {\n                    var /** @type {?} */ projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} queryValueType\n * @return {?}\n */\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction appendNgContent(view, renderHost, def) {\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var /** @type {?} */ ngContentIndex = /** @type {?} */ ((def.ngContent)).index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @param {?} view\n * @param {?} def\n * @return {?}\n */\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[/** @type {?} */ ((bindings[0].name))] = v0;\n                if (bindLen > 1)\n                    value[/** @type {?} */ ((bindings[1].name))] = v1;\n                if (bindLen > 2)\n                    value[/** @type {?} */ ((bindings[2].name))] = v2;\n                if (bindLen > 3)\n                    value[/** @type {?} */ ((bindings[3].name))] = v3;\n                if (bindLen > 4)\n                    value[/** @type {?} */ ((bindings[4].name))] = v4;\n                if (bindLen > 5)\n                    value[/** @type {?} */ ((bindings[5].name))] = v5;\n                if (bindLen > 6)\n                    value[/** @type {?} */ ((bindings[6].name))] = v6;\n                if (bindLen > 7)\n                    value[/** @type {?} */ ((bindings[7].name))] = v7;\n                if (bindLen > 8)\n                    value[/** @type {?} */ ((bindings[8].name))] = v8;\n                if (bindLen > 9)\n                    value[/** @type {?} */ ((bindings[9].name))] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ data = asPureExpressionData(view, def.nodeIndex);\n        var /** @type {?} */ value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var /** @type {?} */ i = 0; i < values.length; i++) {\n                    value[/** @type {?} */ ((bindings[i].name))] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var /** @type {?} */ pipe = values[0];\n                var /** @type {?} */ params = values.slice(1);\n                value = pipe.transform.apply(pipe, params);\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @param {?} view\n * @param {?} renderHost\n * @param {?} def\n * @return {?}\n */\nfunction createText(view, renderHost, def) {\n    var /** @type {?} */ renderNode$$1;\n    var /** @type {?} */ renderer = view.renderer;\n    renderNode$$1 = renderer.createText(/** @type {?} */ ((def.text)).prefix);\n    var /** @type {?} */ parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ changed = false;\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var /** @type {?} */ value = /** @type {?} */ ((def.text)).prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} view\n * @param {?} def\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var /** @type {?} */ bindings = def.bindings;\n    var /** @type {?} */ changed = false;\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var /** @type {?} */ value = '';\n        for (var /** @type {?} */ i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = /** @type {?} */ ((def.text)).prefix + value;\n        var /** @type {?} */ renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\n/**\n * @param {?} value\n * @param {?} binding\n * @return {?}\n */\nfunction _addInterpolationPart(value, binding) {\n    var /** @type {?} */ valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @param {?} parent\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var /** @type {?} */ view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} root\n * @param {?} def\n * @param {?=} context\n * @return {?}\n */\nfunction createRootView(root, def, context) {\n    var /** @type {?} */ view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var /** @type {?} */ rendererType = /** @type {?} */ ((nodeDef.element)).componentRendererType;\n    var /** @type {?} */ compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, /** @type {?} */ ((nodeDef.element)).componentProvider, viewDef);\n}\n/**\n * @param {?} root\n * @param {?} renderer\n * @param {?} parent\n * @param {?} parentNodeDef\n * @param {?} def\n * @return {?}\n */\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var /** @type {?} */ nodes = new Array(def.nodes.length);\n    var /** @type {?} */ disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var /** @type {?} */ view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables\n    };\n    return view;\n}\n/**\n * @param {?} view\n * @param {?} component\n * @param {?} context\n * @return {?}\n */\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction createViewNodes(view) {\n    var /** @type {?} */ renderHost;\n    if (isComponentView(view)) {\n        var /** @type {?} */ hostDef = view.parentNodeDef;\n        renderHost = asElementData(/** @type {?} */ ((view.parent)), /** @type {?} */ ((/** @type {?} */ ((hostDef)).parent)).nodeIndex).renderElement;\n    }\n    var /** @type {?} */ def = view.def;\n    var /** @type {?} */ nodes = view.nodes;\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var /** @type {?} */ nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var /** @type {?} */ el = /** @type {?} */ (createElement(view, renderHost, nodeDef));\n                var /** @type {?} */ componentView = /** @type {?} */ ((undefined));\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var /** @type {?} */ compViewDef = resolveDefinition(/** @type {?} */ ((/** @type {?} */ ((nodeDef.element)).componentView)));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = /** @type {?} */ ({\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: /** @type {?} */ ((nodeDef.element)).template ? createTemplateData(view, nodeDef) : undefined\n                });\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = /** @type {?} */ (createText(view, renderHost, nodeDef));\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var /** @type {?} */ instance = createProviderInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var /** @type {?} */ instance = createPipeInstance(view, nodeDef);\n                nodeData = /** @type {?} */ ({ instance: instance });\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var /** @type {?} */ instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = /** @type {?} */ ({ instance: instance });\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var /** @type {?} */ compView = asElementData(view, /** @type {?} */ ((nodeDef.parent)).nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = /** @type {?} */ (createPureExpression(view, nodeDef));\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = /** @type {?} */ (createQuery());\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ |\n        (view.state & 2 /* FirstCheck */ ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction markProjectedViewsForCheck(view) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var /** @type {?} */ projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var /** @type {?} */ i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var /** @type {?} */ projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} v0\n * @param {?} v1\n * @param {?} v2\n * @param {?} v3\n * @param {?} v4\n * @param {?} v5\n * @param {?} v6\n * @param {?} v7\n * @param {?} v8\n * @param {?} v9\n * @return {?}\n */\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} values\n * @return {?}\n */\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var /** @type {?} */ i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n * @param {?} view\n * @param {?} nodeDef\n * @return {?}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var /** @type {?} */ queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" not dirty\", \"Query \" + (/** @type {?} */ ((nodeDef.query))).id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var /** @type {?} */ i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction destroyViewNodes(view) {\n    var /** @type {?} */ len = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < len; i++) {\n        var /** @type {?} */ def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            /** @type {?} */ ((view.renderer.destroyNode))(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\n/** @enum {number} */\nvar ViewAction = {\n    CreateViewNodes: 0,\n    CheckNoChanges: 1,\n    CheckNoChangesProjectedViews: 2,\n    CheckAndUpdate: 3,\n    CheckAndUpdateProjectedViews: 4,\n    Destroy: 5,\n};\nViewAction[ViewAction.CreateViewNodes] = \"CreateViewNodes\";\nViewAction[ViewAction.CheckNoChanges] = \"CheckNoChanges\";\nViewAction[ViewAction.CheckNoChangesProjectedViews] = \"CheckNoChangesProjectedViews\";\nViewAction[ViewAction.CheckAndUpdate] = \"CheckAndUpdate\";\nViewAction[ViewAction.CheckAndUpdateProjectedViews] = \"CheckAndUpdateProjectedViews\";\nViewAction[ViewAction.Destroy] = \"Destroy\";\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execComponentViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execEmbeddedViewsAction(view, action) {\n    var /** @type {?} */ def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var /** @type {?} */ embeddedViews = /** @type {?} */ ((asElementData(view, i).viewContainer))._embeddedViews;\n            for (var /** @type {?} */ k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction callViewAction(view, action) {\n    var /** @type {?} */ viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\n/**\n * @param {?} view\n * @param {?} action\n * @return {?}\n */\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\n/**\n * @param {?} view\n * @param {?} queryFlags\n * @param {?} staticDynamicQueryFlag\n * @param {?} checkType\n * @return {?}\n */\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var /** @type {?} */ nodeCount = view.def.nodes.length;\n    for (var /** @type {?} */ i = 0; i < nodeCount; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\n/**\n * @return {?}\n */\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var /** @type {?} */ services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.clearProviderOverrides = services.clearProviderOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\n/**\n * @return {?}\n */\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        clearProviderOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\n/**\n * @return {?}\n */\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        clearProviderOverrides: debugClearProviderOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\n/**\n * @param {?} elInjector\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @param {?} def\n * @param {?} ngModule\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var /** @type {?} */ rendererFactory = ngModule.injector.get(RendererFactory2);\n    var /** @type {?} */ root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\n/**\n * @param {?} elInjector\n * @param {?} ngModule\n * @param {?} rendererFactory\n * @param {?} projectableNodes\n * @param {?} rootSelectorOrNode\n * @return {?}\n */\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var /** @type {?} */ sanitizer = ngModule.injector.get(Sanitizer);\n    var /** @type {?} */ errorHandler = ngModule.injector.get(ErrorHandler);\n    var /** @type {?} */ renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\n/**\n * @param {?} parentView\n * @param {?} anchorDef\n * @param {?} viewDef\n * @param {?=} context\n * @return {?}\n */\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\n/**\n * @param {?} parentView\n * @param {?} nodeDef\n * @param {?} viewDef\n * @param {?} hostElement\n * @return {?}\n */\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, defWithOverride, hostElement]);\n}\n/**\n * @param {?} moduleType\n * @param {?} parentInjector\n * @param {?} bootstrapComponents\n * @param {?} def\n * @return {?}\n */\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var /** @type {?} */ defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\n/**\n * @param {?} override\n * @return {?}\n */\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n}\n/**\n * @return {?}\n */\nfunction debugClearProviderOverrides() {\n    providerOverrides.clear();\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var /** @type {?} */ elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    for (var /** @type {?} */ i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var /** @type {?} */ elIndicesWithOverwrittenProviders = [];\n        var /** @type {?} */ lastElementDef = null;\n        for (var /** @type {?} */ i = 0; i < def.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(/** @type {?} */ ((nodeDef.provider)).token)) {\n                elIndicesWithOverwrittenProviders.push(/** @type {?} */ ((lastElementDef)).nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    /**\n     * @param {?} viewDef\n     * @param {?} elIndex\n     * @return {?}\n     */\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var /** @type {?} */ i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var /** @type {?} */ provider = /** @type {?} */ ((nodeDef.provider));\n                var /** @type {?} */ override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} def\n * @return {?}\n */\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = /** @type {?} */ ((def.factory))(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function calcHasOverrides(def) {\n        var /** @type {?} */ hasOverrides = false;\n        var /** @type {?} */ hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var /** @type {?} */ override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    /**\n     * @param {?} def\n     * @return {?}\n     */\n    function applyProviderOverrides(def) {\n        for (var /** @type {?} */ i = 0; i < def.providers.length; i++) {\n            var /** @type {?} */ provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var /** @type {?} */ override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @param {?} checkIndex\n * @param {?} argStyle\n * @param {?=} v0\n * @param {?=} v1\n * @param {?=} v2\n * @param {?=} v3\n * @param {?=} v4\n * @param {?=} v5\n * @param {?=} v6\n * @param {?=} v7\n * @param {?=} v8\n * @param {?=} v9\n * @return {?}\n */\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var /** @type {?} */ nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\n/** @enum {number} */\nvar DebugAction = {\n    create: 0,\n    detectChanges: 1,\n    checkNoChanges: 2,\n    destroy: 3,\n    handleEvent: 4,\n};\nDebugAction[DebugAction.create] = \"create\";\nDebugAction[DebugAction.detectChanges] = \"detectChanges\";\nDebugAction[DebugAction.checkNoChanges] = \"checkNoChanges\";\nDebugAction[DebugAction.destroy] = \"destroy\";\nDebugAction[DebugAction.handleEvent] = \"handleEvent\";\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @param {?} eventName\n * @param {?} event\n * @return {?}\n */\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} checkType\n * @return {?}\n */\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    /**\n     * @param {?} view\n     * @param {?} nodeIndex\n     * @param {?} argStyle\n     * @param {...?} values\n     * @return {?}\n     */\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var /** @type {?} */ nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} givenValues\n * @return {?}\n */\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var /** @type {?} */ changed = (/** @type {?} */ (checkAndUpdateNode)).apply(void 0, [view, nodeDef, argStyle].concat(givenValues));\n    if (changed) {\n        var /** @type {?} */ values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var /** @type {?} */ bindingValues = {};\n            for (var /** @type {?} */ i = 0; i < nodeDef.bindings.length; i++) {\n                var /** @type {?} */ binding = nodeDef.bindings[i];\n                var /** @type {?} */ value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName(/** @type {?} */ ((binding.nonMinifiedName)))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var /** @type {?} */ elDef = /** @type {?} */ ((nodeDef.parent));\n            var /** @type {?} */ el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!/** @type {?} */ ((elDef.element)).name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var /** @type {?} */ attr in bindingValues) {\n                    var /** @type {?} */ value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} argStyle\n * @param {?} values\n * @return {?}\n */\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    (/** @type {?} */ (checkNoChangesNode)).apply(void 0, [view, nodeDef, argStyle].concat(values));\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\n/**\n * @param {?} input\n * @return {?}\n */\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (/** @type {?} */ e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var /** @type {?} */ i = nodeIndex; i < view.def.nodes.length; i++) {\n        var /** @type {?} */ nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var /** @type {?} */ elDef = this.nodeDef;\n        var /** @type {?} */ elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = /** @type {?} */ ((elDef.parent));\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = /** @type {?} */ ((viewParentEl(elView)));\n                elView = /** @type {?} */ ((elView.parent));\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return createInjector(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ tokens = [];\n            if (this.elDef) {\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(/** @type {?} */ ((childDef.provider)).token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var /** @type {?} */ i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var /** @type {?} */ childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            var /** @type {?} */ elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    DebugContext_.prototype.logError = /**\n     * @param {?} console\n     * @param {...?} values\n     * @return {?}\n     */\n    function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var /** @type {?} */ logViewDef;\n        var /** @type {?} */ logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var /** @type {?} */ renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var /** @type {?} */ currRenderNodeIndex = -1;\n        var /** @type {?} */ nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, [console].concat(values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        }; /** @type {?} */\n        ((logViewDef.factory))(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, values);\n        }\n    };\n    return DebugContext_;\n}());\n/**\n * @param {?} viewDef\n * @param {?} nodeIndex\n * @return {?}\n */\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var /** @type {?} */ renderNodeIndex = -1;\n    for (var /** @type {?} */ i = 0; i <= nodeIndex; i++) {\n        var /** @type {?} */ nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\n/**\n * @param {?} view\n * @return {?}\n */\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = /** @type {?} */ ((view.parent));\n    }\n    if (view.parent) {\n        return asElementData(view.parent, /** @type {?} */ ((viewParentEl(view))).nodeIndex);\n    }\n    return null;\n}\n/**\n * @param {?} view\n * @param {?} nodeDef\n * @param {?} references\n * @return {?}\n */\nfunction collectReferences(view, nodeDef, references) {\n    for (var /** @type {?} */ refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\n/**\n * @param {?} action\n * @param {?} fn\n * @param {?} self\n * @param {?} args\n * @return {?}\n */\nfunction callWithDebugContext(action, fn, self, args) {\n    var /** @type {?} */ oldAction = _currentAction;\n    var /** @type {?} */ oldView = _currentView;\n    var /** @type {?} */ oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var /** @type {?} */ result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (/** @type {?} */ e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, /** @type {?} */ ((getCurrentDebugContext())));\n    }\n}\n/**\n * @return {?}\n */\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.createRenderer = /**\n     * @param {?} element\n     * @param {?} renderData\n     * @return {?}\n     */\n    function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.begin = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.end = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRendererFactory2.prototype.whenRenderingDone = /**\n     * @return {?}\n     */\n    function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n    }\n    Object.defineProperty(DebugRenderer2.prototype, \"data\", {\n        get: /**\n         * @return {?}\n         */\n        function () { return this.delegate.data; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroyNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) {\n        removeDebugNodeFromIndex(/** @type {?} */ ((getDebugNode(node))));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    DebugRenderer2.prototype.destroy = /**\n     * @return {?}\n     */\n    function () { this.delegate.destroy(); };\n    /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createElement = /**\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (name, namespace) {\n        var /** @type {?} */ el = this.delegate.createElement(name, namespace);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var /** @type {?} */ debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createComment = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ comment = this.delegate.createComment(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.createText = /**\n     * @param {?} value\n     * @return {?}\n     */\n    function (value) {\n        var /** @type {?} */ text = this.delegate.createText(value);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.appendChild = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @return {?}\n     */\n    function (parent, newChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.insertBefore = /**\n     * @param {?} parent\n     * @param {?} newChild\n     * @param {?} refChild\n     * @return {?}\n     */\n    function (parent, newChild, refChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(newChild);\n        var /** @type {?} */ debugRefEl = /** @type {?} */ ((getDebugNode(refChild)));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeChild = /**\n     * @param {?} parent\n     * @param {?} oldChild\n     * @return {?}\n     */\n    function (parent, oldChild) {\n        var /** @type {?} */ debugEl = getDebugNode(parent);\n        var /** @type {?} */ debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    DebugRenderer2.prototype.selectRootElement = /**\n     * @param {?} selectorOrNode\n     * @return {?}\n     */\n    function (selectorOrNode) {\n        var /** @type {?} */ el = this.delegate.selectRootElement(selectorOrNode);\n        var /** @type {?} */ debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, value, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeAttribute = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?=} namespace\n     * @return {?}\n     */\n    function (el, name, namespace) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var /** @type {?} */ fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.addClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeClass = /**\n     * @param {?} el\n     * @param {?} name\n     * @return {?}\n     */\n    function (el, name) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} value\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, value, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    DebugRenderer2.prototype.removeStyle = /**\n     * @param {?} el\n     * @param {?} style\n     * @param {?} flags\n     * @return {?}\n     */\n    function (el, style, flags) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setProperty = /**\n     * @param {?} el\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (el, name, value) {\n        var /** @type {?} */ debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    DebugRenderer2.prototype.listen = /**\n     * @param {?} target\n     * @param {?} eventName\n     * @param {?} callback\n     * @return {?}\n     */\n    function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var /** @type {?} */ debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.parentNode = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.parentNode(node); };\n    /**\n     * @param {?} node\n     * @return {?}\n     */\n    DebugRenderer2.prototype.nextSibling = /**\n     * @param {?} node\n     * @return {?}\n     */\n    function (node) { return this.delegate.nextSibling(node); };\n    /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    DebugRenderer2.prototype.setValue = /**\n     * @param {?} node\n     * @param {?} value\n     * @return {?}\n     */\n    function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\nvar NgModuleFactory_ = (function (_super) {\n    __extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    NgModuleFactory_.prototype.create = /**\n     * @param {?} parentInjector\n     * @return {?}\n     */\n    function (parentInjector) {\n        initServicesIfNeeded();\n        var /** @type {?} */ def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license Angular v5.1.0-beta.0-faa6212\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The kind of diagnostic message.\n *\n * @experimental\n */\nvar DiagnosticKind;\n(function (DiagnosticKind) {\n    DiagnosticKind[DiagnosticKind[\"Error\"] = 0] = \"Error\";\n    DiagnosticKind[DiagnosticKind[\"Warning\"] = 1] = \"Warning\";\n})(DiagnosticKind || (DiagnosticKind = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isParseSourceSpan(value) {\n    return value && !!value.start;\n}\nfunction spanOf(span) {\n    if (!span)\n        return undefined;\n    if (isParseSourceSpan(span)) {\n        return { start: span.start.offset, end: span.end.offset };\n    }\n    else {\n        if (span.endSourceSpan) {\n            return { start: span.sourceSpan.start.offset, end: span.endSourceSpan.end.offset };\n        }\n        else if (span.children && span.children.length) {\n            return {\n                start: span.sourceSpan.start.offset,\n                end: spanOf(span.children[span.children.length - 1]).end\n            };\n        }\n        return { start: span.sourceSpan.start.offset, end: span.sourceSpan.end.offset };\n    }\n}\nfunction inSpan(position, span, exclusive) {\n    return span != null && (exclusive ? position >= span.start && position < span.end :\n        position >= span.start && position <= span.end);\n}\nfunction offsetSpan(span, amount) {\n    return { start: span.start + amount, end: span.end + amount };\n}\nfunction isNarrower(spanA, spanB) {\n    return spanA.start >= spanB.start && spanA.end <= spanB.end;\n}\nfunction hasTemplateReference(type) {\n    if (type.diDeps) {\n        for (var _i = 0, _a = type.diDeps; _i < _a.length; _i++) {\n            var diDep = _a[_i];\n            if (diDep.token && diDep.token.identifier &&\n                identifierName(diDep.token.identifier) == 'TemplateRef')\n                return true;\n        }\n    }\n    return false;\n}\nfunction getSelectors(info) {\n    var map = new Map();\n    var selectors = flatten(info.directives.map(function (directive) {\n        var selectors = CssSelector.parse(directive.selector);\n        selectors.forEach(function (selector) { return map.set(selector, directive); });\n        return selectors;\n    }));\n    return { selectors: selectors, map: map };\n}\nfunction flatten(a) {\n    return (_a = []).concat.apply(_a, a);\n    var _a;\n}\nfunction removeSuffix(value, suffix) {\n    if (value.endsWith(suffix))\n        return value.substring(0, value.length - suffix.length);\n    return value;\n}\nfunction uniqueByName(elements) {\n    if (elements) {\n        var result = [];\n        var set = new Set();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            if (!set.has(element.name)) {\n                set.add(element.name);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\n\nfunction diagnosticInfoFromTemplateInfo(info) {\n    return {\n        fileName: info.fileName,\n        offset: info.template.span.start,\n        query: info.template.query,\n        members: info.template.members,\n        htmlAst: info.htmlAst,\n        templateAst: info.templateAst\n    };\n}\nfunction findTemplateAstAt(ast, position, allowWidening) {\n    if (allowWidening === void 0) { allowWidening = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast, context) {\n            var span = spanOf(ast);\n            if (inSpan(position, span)) {\n                var len = path$$1.length;\n                if (!len || allowWidening || isNarrower(span, spanOf(path$$1[len - 1]))) {\n                    path$$1.push(ast);\n                }\n            }\n            else {\n                // Returning a value here will result in the children being skipped.\n                return true;\n            }\n        };\n        class_1.prototype.visitEmbeddedTemplate = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ignore reference, variable and providers\n                visit(ast.attrs);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitElement = function (ast, context) {\n            return this.visitChildren(context, function (visit) {\n                // Ingnore providers\n                visit(ast.attrs);\n                visit(ast.inputs);\n                visit(ast.outputs);\n                visit(ast.references);\n                visit(ast.directives);\n                visit(ast.children);\n            });\n        };\n        class_1.prototype.visitDirective = function (ast, context) {\n            // Ignore the host properties of a directive\n            var result = this.visitChildren(context, function (visit) { visit(ast.inputs); });\n            // We never care about the diretive itself, just its inputs.\n            if (path$$1[path$$1.length - 1] == ast) {\n                path$$1.pop();\n            }\n            return result;\n        };\n        return class_1;\n    }(RecursiveTemplateAstVisitor));\n    templateVisitAll(visitor, ast);\n    return new AstPath(path$$1, position);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findAstAt(ast, position, excludeEmpty) {\n    if (excludeEmpty === void 0) { excludeEmpty = false; }\n    var path$$1 = [];\n    var visitor = new (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            return _super !== null && _super.apply(this, arguments) || this;\n        }\n        class_1.prototype.visit = function (ast) {\n            if ((!excludeEmpty || ast.span.start < ast.span.end) && inSpan(position, ast.span)) {\n                path$$1.push(ast);\n                visitAstChildren(ast, this);\n            }\n        };\n        return class_1;\n    }(NullAstVisitor));\n    // We never care about the ASTWithSource node and its visit() method calls its ast's visit so\n    // the visit() method above would never see it.\n    if (ast instanceof ASTWithSource) {\n        ast = ast.ast;\n    }\n    visitor.visit(ast);\n    return new AstPath(path$$1, position);\n}\nfunction getExpressionCompletions(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    var result = scope;\n    function getType(ast) { return new language_services_4(scope, query, {}).getType(ast); }\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { result = undefined; },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) { },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                result = query.getPipes();\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitQuote: function (ast) {\n            // For a quote, return the members of any (if there are any).\n            result = query.getBuiltinType(language_services_7.Any).members();\n        },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            result = receiverType ? receiverType.members() : scope;\n        },\n    });\n    return result && result.values();\n}\nfunction getExpressionSymbol(scope, ast, position, query) {\n    var path$$1 = findAstAt(ast, position, /* excludeEmpty */ true);\n    if (path$$1.empty)\n        return undefined;\n    var tail = path$$1.tail;\n    function getType(ast) { return new language_services_4(scope, query, {}).getType(ast); }\n    var symbol = undefined;\n    var span = undefined;\n    // If the completion request is in a not in a pipe or property access then the global scope\n    // (that is the scope of the implicit receiver) is the right scope as the user is typing the\n    // beginning of an expression.\n    tail.visit({\n        visitBinary: function (ast) { },\n        visitChain: function (ast) { },\n        visitConditional: function (ast) { },\n        visitFunctionCall: function (ast) { },\n        visitImplicitReceiver: function (ast) { },\n        visitInterpolation: function (ast) { },\n        visitKeyedRead: function (ast) { },\n        visitKeyedWrite: function (ast) { },\n        visitLiteralArray: function (ast) { },\n        visitLiteralMap: function (ast) { },\n        visitLiteralPrimitive: function (ast) { },\n        visitMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPipe: function (ast) {\n            if (position >= ast.exp.span.end &&\n                (!ast.args || !ast.args.length || position < ast.args[0].span.start)) {\n                // We are in a position a pipe name is expected.\n                var pipes = query.getPipes();\n                if (pipes) {\n                    symbol = pipes.get(ast.name);\n                    span = ast.span;\n                }\n            }\n        },\n        visitPrefixNot: function (ast) { },\n        visitNonNullAssert: function (ast) { },\n        visitPropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitPropertyWrite: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitQuote: function (ast) { },\n        visitSafeMethodCall: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n        visitSafePropertyRead: function (ast) {\n            var receiverType = getType(ast.receiver);\n            symbol = receiverType && receiverType.members().get(ast.name);\n            span = ast.span;\n        },\n    });\n    if (symbol && span) {\n        return { symbol: symbol, span: span };\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar values = [\n    'ID',\n    'CDATA',\n    'NAME',\n    ['ltr', 'rtl'],\n    ['rect', 'circle', 'poly', 'default'],\n    'NUMBER',\n    ['nohref'],\n    ['ismap'],\n    ['declare'],\n    ['DATA', 'REF', 'OBJECT'],\n    ['GET', 'POST'],\n    'IDREF',\n    ['TEXT', 'PASSWORD', 'CHECKBOX', 'RADIO', 'SUBMIT', 'RESET', 'FILE', 'HIDDEN', 'IMAGE', 'BUTTON'],\n    ['checked'],\n    ['disabled'],\n    ['readonly'],\n    ['multiple'],\n    ['selected'],\n    ['button', 'submit', 'reset'],\n    ['void', 'above', 'below', 'hsides', 'lhs', 'rhs', 'vsides', 'box', 'border'],\n    ['none', 'groups', 'rows', 'cols', 'all'],\n    ['left', 'center', 'right', 'justify', 'char'],\n    ['top', 'middle', 'bottom', 'baseline'],\n    'IDREFS',\n    ['row', 'col', 'rowgroup', 'colgroup'],\n    ['defer']\n];\nvar groups = [\n    { id: 0 },\n    {\n        onclick: 1,\n        ondblclick: 1,\n        onmousedown: 1,\n        onmouseup: 1,\n        onmouseover: 1,\n        onmousemove: 1,\n        onmouseout: 1,\n        onkeypress: 1,\n        onkeydown: 1,\n        onkeyup: 1\n    },\n    { lang: 2, dir: 3 },\n    { onload: 1, onunload: 1 },\n    { name: 1 },\n    { href: 1 },\n    { type: 1 },\n    { alt: 1 },\n    { tabindex: 5 },\n    { media: 1 },\n    { nohref: 6 },\n    { usemap: 1 },\n    { src: 1 },\n    { onfocus: 1, onblur: 1 },\n    { charset: 1 },\n    { declare: 8, classid: 1, codebase: 1, data: 1, codetype: 1, archive: 1, standby: 1 },\n    { title: 1 },\n    { value: 1 },\n    { cite: 1 },\n    { datetime: 1 },\n    { accept: 1 },\n    { shape: 4, coords: 1 },\n    { for: 11\n    },\n    { action: 1, method: 10, enctype: 1, onsubmit: 1, onreset: 1, 'accept-charset': 1 },\n    { valuetype: 9 },\n    { longdesc: 1 },\n    { width: 1 },\n    { disabled: 14 },\n    { readonly: 15, onselect: 1 },\n    { accesskey: 1 },\n    { size: 5, multiple: 16 },\n    { onchange: 1 },\n    { label: 1 },\n    { selected: 17 },\n    { type: 12, checked: 13, size: 1, maxlength: 5 },\n    { rows: 5, cols: 5 },\n    { type: 18 },\n    { height: 1 },\n    { summary: 1, border: 1, frame: 19, rules: 20, cellspacing: 1, cellpadding: 1, datapagesize: 1 },\n    { align: 21, char: 1, charoff: 1, valign: 22 },\n    { span: 5 },\n    { abbr: 1, axis: 1, headers: 23, scope: 24, rowspan: 5, colspan: 5 },\n    { profile: 1 },\n    { 'http-equiv': 2, name: 2, content: 1, scheme: 1 },\n    { class: 1, style: 1 },\n    { hreflang: 2, rel: 1, rev: 1 },\n    { ismap: 7 },\n    { defer: 25, event: 1, for: 1 }\n];\nvar elements = {\n    TT: [0, 1, 2, 16, 44],\n    I: [0, 1, 2, 16, 44],\n    B: [0, 1, 2, 16, 44],\n    BIG: [0, 1, 2, 16, 44],\n    SMALL: [0, 1, 2, 16, 44],\n    EM: [0, 1, 2, 16, 44],\n    STRONG: [0, 1, 2, 16, 44],\n    DFN: [0, 1, 2, 16, 44],\n    CODE: [0, 1, 2, 16, 44],\n    SAMP: [0, 1, 2, 16, 44],\n    KBD: [0, 1, 2, 16, 44],\n    VAR: [0, 1, 2, 16, 44],\n    CITE: [0, 1, 2, 16, 44],\n    ABBR: [0, 1, 2, 16, 44],\n    ACRONYM: [0, 1, 2, 16, 44],\n    SUB: [0, 1, 2, 16, 44],\n    SUP: [0, 1, 2, 16, 44],\n    SPAN: [0, 1, 2, 16, 44],\n    BDO: [0, 2, 16, 44],\n    BR: [0, 16, 44],\n    BODY: [0, 1, 2, 3, 16, 44],\n    ADDRESS: [0, 1, 2, 16, 44],\n    DIV: [0, 1, 2, 16, 44],\n    A: [0, 1, 2, 4, 5, 6, 8, 13, 14, 16, 21, 29, 44, 45],\n    MAP: [0, 1, 2, 4, 16, 44],\n    AREA: [0, 1, 2, 5, 7, 8, 10, 13, 16, 21, 29, 44],\n    LINK: [0, 1, 2, 5, 6, 9, 14, 16, 44, 45],\n    IMG: [0, 1, 2, 4, 7, 11, 12, 16, 25, 26, 37, 44, 46],\n    OBJECT: [0, 1, 2, 4, 6, 8, 11, 15, 16, 26, 37, 44],\n    PARAM: [0, 4, 6, 17, 24],\n    HR: [0, 1, 2, 16, 44],\n    P: [0, 1, 2, 16, 44],\n    H1: [0, 1, 2, 16, 44],\n    H2: [0, 1, 2, 16, 44],\n    H3: [0, 1, 2, 16, 44],\n    H4: [0, 1, 2, 16, 44],\n    H5: [0, 1, 2, 16, 44],\n    H6: [0, 1, 2, 16, 44],\n    PRE: [0, 1, 2, 16, 44],\n    Q: [0, 1, 2, 16, 18, 44],\n    BLOCKQUOTE: [0, 1, 2, 16, 18, 44],\n    INS: [0, 1, 2, 16, 18, 19, 44],\n    DEL: [0, 1, 2, 16, 18, 19, 44],\n    DL: [0, 1, 2, 16, 44],\n    DT: [0, 1, 2, 16, 44],\n    DD: [0, 1, 2, 16, 44],\n    OL: [0, 1, 2, 16, 44],\n    UL: [0, 1, 2, 16, 44],\n    LI: [0, 1, 2, 16, 44],\n    FORM: [0, 1, 2, 4, 16, 20, 23, 44],\n    LABEL: [0, 1, 2, 13, 16, 22, 29, 44],\n    INPUT: [0, 1, 2, 4, 7, 8, 11, 12, 13, 16, 17, 20, 27, 28, 29, 31, 34, 44, 46],\n    SELECT: [0, 1, 2, 4, 8, 13, 16, 27, 30, 31, 44],\n    OPTGROUP: [0, 1, 2, 16, 27, 32, 44],\n    OPTION: [0, 1, 2, 16, 17, 27, 32, 33, 44],\n    TEXTAREA: [0, 1, 2, 4, 8, 13, 16, 27, 28, 29, 31, 35, 44],\n    FIELDSET: [0, 1, 2, 16, 44],\n    LEGEND: [0, 1, 2, 16, 29, 44],\n    BUTTON: [0, 1, 2, 4, 8, 13, 16, 17, 27, 29, 36, 44],\n    TABLE: [0, 1, 2, 16, 26, 38, 44],\n    CAPTION: [0, 1, 2, 16, 44],\n    COLGROUP: [0, 1, 2, 16, 26, 39, 40, 44],\n    COL: [0, 1, 2, 16, 26, 39, 40, 44],\n    THEAD: [0, 1, 2, 16, 39, 44],\n    TBODY: [0, 1, 2, 16, 39, 44],\n    TFOOT: [0, 1, 2, 16, 39, 44],\n    TR: [0, 1, 2, 16, 39, 44],\n    TH: [0, 1, 2, 16, 39, 41, 44],\n    TD: [0, 1, 2, 16, 39, 41, 44],\n    HEAD: [2, 42],\n    TITLE: [2],\n    BASE: [5],\n    META: [2, 43],\n    STYLE: [2, 6, 9, 16],\n    SCRIPT: [6, 12, 14, 47],\n    NOSCRIPT: [0, 1, 2, 16, 44],\n    HTML: [2]\n};\nvar defaultAttributes = [0, 1, 2, 4];\nfunction elementNames() {\n    return Object.keys(elements).sort().map(function (v) { return v.toLowerCase(); });\n}\nfunction compose(indexes) {\n    var result = {};\n    if (indexes) {\n        for (var _i = 0, indexes_1 = indexes; _i < indexes_1.length; _i++) {\n            var index = indexes_1[_i];\n            var group = groups[index];\n            for (var name_1 in group)\n                if (group.hasOwnProperty(name_1))\n                    result[name_1] = values[group[name_1]];\n        }\n    }\n    return result;\n}\nfunction attributeNames(element) {\n    return Object.keys(compose(elements[element.toUpperCase()] || defaultAttributes)).sort();\n}\n\n// This section is describes the DOM property surface of a DOM element and is derivgulp formated\n// from\n// from the SCHEMA strings from the security context information. SCHEMA is copied here because\n// it would be an unnecessary risk to allow this array to be imported from the security context\n// schema registry.\nvar SCHEMA = [\n    '[Element]|textContent,%classList,className,id,innerHTML,*beforecopy,*beforecut,*beforepaste,*copy,*cut,*paste,*search,*selectstart,*webkitfullscreenchange,*webkitfullscreenerror,*wheel,outerHTML,#scrollLeft,#scrollTop,slot' +\n        /* added manually to avoid breaking changes */\n        ',*message,*mozfullscreenchange,*mozfullscreenerror,*mozpointerlockchange,*mozpointerlockerror,*webglcontextcreationerror,*webglcontextlost,*webglcontextrestored',\n    '[HTMLElement]^[Element]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'abbr,address,article,aside,b,bdi,bdo,cite,code,dd,dfn,dt,em,figcaption,figure,footer,header,i,kbd,main,mark,nav,noscript,rb,rp,rt,rtc,ruby,s,samp,section,small,strong,sub,sup,u,var,wbr^[HTMLElement]|accessKey,contentEditable,dir,!draggable,!hidden,innerText,lang,*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,outerText,!spellcheck,%style,#tabIndex,title,!translate',\n    'media^[HTMLElement]|!autoplay,!controls,%controlsList,%crossOrigin,#currentTime,!defaultMuted,#defaultPlaybackRate,!disableRemotePlayback,!loop,!muted,*encrypted,*waitingforkey,#playbackRate,preload,src,%srcObject,#volume',\n    ':svg:^[HTMLElement]|*abort,*auxclick,*blur,*cancel,*canplay,*canplaythrough,*change,*click,*close,*contextmenu,*cuechange,*dblclick,*drag,*dragend,*dragenter,*dragleave,*dragover,*dragstart,*drop,*durationchange,*emptied,*ended,*error,*focus,*gotpointercapture,*input,*invalid,*keydown,*keypress,*keyup,*load,*loadeddata,*loadedmetadata,*loadstart,*lostpointercapture,*mousedown,*mouseenter,*mouseleave,*mousemove,*mouseout,*mouseover,*mouseup,*mousewheel,*pause,*play,*playing,*pointercancel,*pointerdown,*pointerenter,*pointerleave,*pointermove,*pointerout,*pointerover,*pointerup,*progress,*ratechange,*reset,*resize,*scroll,*seeked,*seeking,*select,*show,*stalled,*submit,*suspend,*timeupdate,*toggle,*volumechange,*waiting,%style,#tabIndex',\n    ':svg:graphics^:svg:|',\n    ':svg:animation^:svg:|*begin,*end,*repeat',\n    ':svg:geometry^:svg:|',\n    ':svg:componentTransferFunction^:svg:|',\n    ':svg:gradient^:svg:|',\n    ':svg:textContent^:svg:graphics|',\n    ':svg:textPositioning^:svg:textContent|',\n    'a^[HTMLElement]|charset,coords,download,hash,host,hostname,href,hreflang,name,password,pathname,ping,port,protocol,referrerPolicy,rel,rev,search,shape,target,text,type,username',\n    'area^[HTMLElement]|alt,coords,download,hash,host,hostname,href,!noHref,password,pathname,ping,port,protocol,referrerPolicy,rel,search,shape,target,username',\n    'audio^media|',\n    'br^[HTMLElement]|clear',\n    'base^[HTMLElement]|href,target',\n    'body^[HTMLElement]|aLink,background,bgColor,link,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,text,vLink',\n    'button^[HTMLElement]|!autofocus,!disabled,formAction,formEnctype,formMethod,!formNoValidate,formTarget,name,type,value',\n    'canvas^[HTMLElement]|#height,#width',\n    'content^[HTMLElement]|select',\n    'dl^[HTMLElement]|!compact',\n    'datalist^[HTMLElement]|',\n    'details^[HTMLElement]|!open',\n    'dialog^[HTMLElement]|!open,returnValue',\n    'dir^[HTMLElement]|!compact',\n    'div^[HTMLElement]|align',\n    'embed^[HTMLElement]|align,height,name,src,type,width',\n    'fieldset^[HTMLElement]|!disabled,name',\n    'font^[HTMLElement]|color,face,size',\n    'form^[HTMLElement]|acceptCharset,action,autocomplete,encoding,enctype,method,name,!noValidate,target',\n    'frame^[HTMLElement]|frameBorder,longDesc,marginHeight,marginWidth,name,!noResize,scrolling,src',\n    'frameset^[HTMLElement]|cols,*beforeunload,*blur,*error,*focus,*hashchange,*languagechange,*load,*message,*offline,*online,*pagehide,*pageshow,*popstate,*rejectionhandled,*resize,*scroll,*storage,*unhandledrejection,*unload,rows',\n    'hr^[HTMLElement]|align,color,!noShade,size,width',\n    'head^[HTMLElement]|',\n    'h1,h2,h3,h4,h5,h6^[HTMLElement]|align',\n    'html^[HTMLElement]|version',\n    'iframe^[HTMLElement]|align,!allowFullscreen,frameBorder,height,longDesc,marginHeight,marginWidth,name,referrerPolicy,%sandbox,scrolling,src,srcdoc,width',\n    'img^[HTMLElement]|align,alt,border,%crossOrigin,#height,#hspace,!isMap,longDesc,lowsrc,name,referrerPolicy,sizes,src,srcset,useMap,#vspace,#width',\n    'input^[HTMLElement]|accept,align,alt,autocapitalize,autocomplete,!autofocus,!checked,!defaultChecked,defaultValue,dirName,!disabled,%files,formAction,formEnctype,formMethod,!formNoValidate,formTarget,#height,!incremental,!indeterminate,max,#maxLength,min,#minLength,!multiple,name,pattern,placeholder,!readOnly,!required,selectionDirection,#selectionEnd,#selectionStart,#size,src,step,type,useMap,value,%valueAsDate,#valueAsNumber,#width',\n    'li^[HTMLElement]|type,#value',\n    'label^[HTMLElement]|htmlFor',\n    'legend^[HTMLElement]|align',\n    'link^[HTMLElement]|as,charset,%crossOrigin,!disabled,href,hreflang,integrity,media,referrerPolicy,rel,%relList,rev,%sizes,target,type',\n    'map^[HTMLElement]|name',\n    'marquee^[HTMLElement]|behavior,bgColor,direction,height,#hspace,#loop,#scrollAmount,#scrollDelay,!trueSpeed,#vspace,width',\n    'menu^[HTMLElement]|!compact',\n    'meta^[HTMLElement]|content,httpEquiv,name,scheme',\n    'meter^[HTMLElement]|#high,#low,#max,#min,#optimum,#value',\n    'ins,del^[HTMLElement]|cite,dateTime',\n    'ol^[HTMLElement]|!compact,!reversed,#start,type',\n    'object^[HTMLElement]|align,archive,border,code,codeBase,codeType,data,!declare,height,#hspace,name,standby,type,useMap,#vspace,width',\n    'optgroup^[HTMLElement]|!disabled,label',\n    'option^[HTMLElement]|!defaultSelected,!disabled,label,!selected,text,value',\n    'output^[HTMLElement]|defaultValue,%htmlFor,name,value',\n    'p^[HTMLElement]|align',\n    'param^[HTMLElement]|name,type,value,valueType',\n    'picture^[HTMLElement]|',\n    'pre^[HTMLElement]|#width',\n    'progress^[HTMLElement]|#max,#value',\n    'q,blockquote,cite^[HTMLElement]|',\n    'script^[HTMLElement]|!async,charset,%crossOrigin,!defer,event,htmlFor,integrity,src,text,type',\n    'select^[HTMLElement]|!autofocus,!disabled,#length,!multiple,name,!required,#selectedIndex,#size,value',\n    'shadow^[HTMLElement]|',\n    'slot^[HTMLElement]|name',\n    'source^[HTMLElement]|media,sizes,src,srcset,type',\n    'span^[HTMLElement]|',\n    'style^[HTMLElement]|!disabled,media,type',\n    'caption^[HTMLElement]|align',\n    'th,td^[HTMLElement]|abbr,align,axis,bgColor,ch,chOff,#colSpan,headers,height,!noWrap,#rowSpan,scope,vAlign,width',\n    'col,colgroup^[HTMLElement]|align,ch,chOff,#span,vAlign,width',\n    'table^[HTMLElement]|align,bgColor,border,%caption,cellPadding,cellSpacing,frame,rules,summary,%tFoot,%tHead,width',\n    'tr^[HTMLElement]|align,bgColor,ch,chOff,vAlign',\n    'tfoot,thead,tbody^[HTMLElement]|align,ch,chOff,vAlign',\n    'template^[HTMLElement]|',\n    'textarea^[HTMLElement]|autocapitalize,!autofocus,#cols,defaultValue,dirName,!disabled,#maxLength,#minLength,name,placeholder,!readOnly,!required,#rows,selectionDirection,#selectionEnd,#selectionStart,value,wrap',\n    'title^[HTMLElement]|text',\n    'track^[HTMLElement]|!default,kind,label,src,srclang',\n    'ul^[HTMLElement]|!compact,type',\n    'unknown^[HTMLElement]|',\n    'video^media|#height,poster,#width',\n    ':svg:a^:svg:graphics|',\n    ':svg:animate^:svg:animation|',\n    ':svg:animateMotion^:svg:animation|',\n    ':svg:animateTransform^:svg:animation|',\n    ':svg:circle^:svg:geometry|',\n    ':svg:clipPath^:svg:graphics|',\n    ':svg:defs^:svg:graphics|',\n    ':svg:desc^:svg:|',\n    ':svg:discard^:svg:|',\n    ':svg:ellipse^:svg:geometry|',\n    ':svg:feBlend^:svg:|',\n    ':svg:feColorMatrix^:svg:|',\n    ':svg:feComponentTransfer^:svg:|',\n    ':svg:feComposite^:svg:|',\n    ':svg:feConvolveMatrix^:svg:|',\n    ':svg:feDiffuseLighting^:svg:|',\n    ':svg:feDisplacementMap^:svg:|',\n    ':svg:feDistantLight^:svg:|',\n    ':svg:feDropShadow^:svg:|',\n    ':svg:feFlood^:svg:|',\n    ':svg:feFuncA^:svg:componentTransferFunction|',\n    ':svg:feFuncB^:svg:componentTransferFunction|',\n    ':svg:feFuncG^:svg:componentTransferFunction|',\n    ':svg:feFuncR^:svg:componentTransferFunction|',\n    ':svg:feGaussianBlur^:svg:|',\n    ':svg:feImage^:svg:|',\n    ':svg:feMerge^:svg:|',\n    ':svg:feMergeNode^:svg:|',\n    ':svg:feMorphology^:svg:|',\n    ':svg:feOffset^:svg:|',\n    ':svg:fePointLight^:svg:|',\n    ':svg:feSpecularLighting^:svg:|',\n    ':svg:feSpotLight^:svg:|',\n    ':svg:feTile^:svg:|',\n    ':svg:feTurbulence^:svg:|',\n    ':svg:filter^:svg:|',\n    ':svg:foreignObject^:svg:graphics|',\n    ':svg:g^:svg:graphics|',\n    ':svg:image^:svg:graphics|',\n    ':svg:line^:svg:geometry|',\n    ':svg:linearGradient^:svg:gradient|',\n    ':svg:mpath^:svg:|',\n    ':svg:marker^:svg:|',\n    ':svg:mask^:svg:|',\n    ':svg:metadata^:svg:|',\n    ':svg:path^:svg:geometry|',\n    ':svg:pattern^:svg:|',\n    ':svg:polygon^:svg:geometry|',\n    ':svg:polyline^:svg:geometry|',\n    ':svg:radialGradient^:svg:gradient|',\n    ':svg:rect^:svg:geometry|',\n    ':svg:svg^:svg:graphics|#currentScale,#zoomAndPan',\n    ':svg:script^:svg:|type',\n    ':svg:set^:svg:animation|',\n    ':svg:stop^:svg:|',\n    ':svg:style^:svg:|!disabled,media,title,type',\n    ':svg:switch^:svg:graphics|',\n    ':svg:symbol^:svg:|',\n    ':svg:tspan^:svg:textPositioning|',\n    ':svg:text^:svg:textPositioning|',\n    ':svg:textPath^:svg:textContent|',\n    ':svg:title^:svg:|',\n    ':svg:use^:svg:graphics|',\n    ':svg:view^:svg:|#zoomAndPan',\n    'data^[HTMLElement]|value',\n    'keygen^[HTMLElement]|!autofocus,challenge,!disabled,form,keytype,name',\n    'menuitem^[HTMLElement]|type,label,icon,!disabled,!checked,radiogroup,!default',\n    'summary^[HTMLElement]|',\n    'time^[HTMLElement]|dateTime',\n    ':svg:cursor^:svg:|',\n];\nvar EVENT = 'event';\nvar BOOLEAN = 'boolean';\nvar NUMBER = 'number';\nvar STRING = 'string';\nvar OBJECT = 'object';\nvar SchemaInformation = (function () {\n    function SchemaInformation() {\n        var _this = this;\n        this.schema = {};\n        SCHEMA.forEach(function (encodedType) {\n            var parts = encodedType.split('|');\n            var properties = parts[1].split(',');\n            var typeParts = (parts[0] + '^').split('^');\n            var typeName = typeParts[0];\n            var type = {};\n            typeName.split(',').forEach(function (tag) { return _this.schema[tag.toLowerCase()] = type; });\n            var superName = typeParts[1];\n            var superType = superName && _this.schema[superName.toLowerCase()];\n            if (superType) {\n                for (var key in superType) {\n                    type[key] = superType[key];\n                }\n            }\n            properties.forEach(function (property) {\n                if (property == '') {\n                }\n                else if (property.startsWith('*')) {\n                    type[property.substring(1)] = EVENT;\n                }\n                else if (property.startsWith('!')) {\n                    type[property.substring(1)] = BOOLEAN;\n                }\n                else if (property.startsWith('#')) {\n                    type[property.substring(1)] = NUMBER;\n                }\n                else if (property.startsWith('%')) {\n                    type[property.substring(1)] = OBJECT;\n                }\n                else {\n                    type[property] = STRING;\n                }\n            });\n        });\n    }\n    SchemaInformation.prototype.allKnownElements = function () { return Object.keys(this.schema); };\n    SchemaInformation.prototype.eventsOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] === EVENT; });\n    };\n    SchemaInformation.prototype.propertiesOf = function (elementName) {\n        var elementType = this.schema[elementName.toLowerCase()] || {};\n        return Object.keys(elementType).filter(function (property) { return elementType[property] !== EVENT; });\n    };\n    SchemaInformation.prototype.typeOf = function (elementName, property) {\n        return (this.schema[elementName.toLowerCase()] || {})[property];\n    };\n    Object.defineProperty(SchemaInformation, \"instance\", {\n        get: function () {\n            var result = SchemaInformation._instance;\n            if (!result) {\n                result = SchemaInformation._instance = new SchemaInformation();\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return SchemaInformation;\n}());\nfunction eventNames(elementName) {\n    return SchemaInformation.instance.eventsOf(elementName);\n}\nfunction propertyNames(elementName) {\n    return SchemaInformation.instance.propertiesOf(elementName);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar TEMPLATE_ATTR_PREFIX = '*';\nvar hiddenHtmlElements = {\n    html: true,\n    script: true,\n    noscript: true,\n    base: true,\n    body: true,\n    title: true,\n    head: true,\n    link: true,\n};\nfunction getTemplateCompletions(templateInfo) {\n    var result = undefined;\n    var htmlAst = templateInfo.htmlAst, templateAst = templateInfo.templateAst, template = templateInfo.template;\n    // The templateNode starts at the delimiter character so we add 1 to skip it.\n    if (templateInfo.position != null) {\n        var templatePosition_1 = templateInfo.position - template.span.start;\n        var path_1 = findNode(htmlAst, templatePosition_1);\n        var mostSpecific = path_1.tail;\n        if (path_1.empty || !mostSpecific) {\n            result = elementCompletions(templateInfo, path_1);\n        }\n        else {\n            var astPosition_1 = templatePosition_1 - mostSpecific.sourceSpan.start.offset;\n            mostSpecific.visit({\n                visitElement: function (ast) {\n                    var startTagSpan = spanOf(ast.sourceSpan);\n                    var tagLen = ast.name.length;\n                    if (templatePosition_1 <=\n                        startTagSpan.start + tagLen + 1 /* 1 for the opening angle bracked */) {\n                        // If we are in the tag then return the element completions.\n                        result = elementCompletions(templateInfo, path_1);\n                    }\n                    else if (templatePosition_1 < startTagSpan.end) {\n                        // We are in the attribute section of the element (but not in an attribute).\n                        // Return the attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                },\n                visitAttribute: function (ast) {\n                    if (!ast.valueSpan || !inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        // We are in the name of an attribute. Show attribute completions.\n                        result = attributeCompletions(templateInfo, path_1);\n                    }\n                    else if (ast.valueSpan && inSpan(templatePosition_1, spanOf(ast.valueSpan))) {\n                        result = attributeValueCompletions(templateInfo, templatePosition_1, ast);\n                    }\n                },\n                visitText: function (ast) {\n                    // Check if we are in a entity.\n                    result = entityCompletions(getSourceText(template, spanOf(ast)), astPosition_1);\n                    if (result)\n                        return result;\n                    result = interpolationCompletions(templateInfo, templatePosition_1);\n                    if (result)\n                        return result;\n                    var element = path_1.first(Element);\n                    if (element) {\n                        var definition = getHtmlTagDefinition(element.name);\n                        if (definition.contentType === TagContentType.PARSABLE_DATA) {\n                            result = voidElementAttributeCompletions(templateInfo, path_1);\n                            if (!result) {\n                                // If the element can hold content Show element completions.\n                                result = elementCompletions(templateInfo, path_1);\n                            }\n                        }\n                    }\n                    else {\n                        // If no element container, implies parsable data so show elements.\n                        result = voidElementAttributeCompletions(templateInfo, path_1);\n                        if (!result) {\n                            result = elementCompletions(templateInfo, path_1);\n                        }\n                    }\n                },\n                visitComment: function (ast) { },\n                visitExpansion: function (ast) { },\n                visitExpansionCase: function (ast) { }\n            }, null);\n        }\n    }\n    return result;\n}\nfunction attributeCompletions(info, path$$1) {\n    var item = path$$1.tail instanceof Element ? path$$1.tail : path$$1.parentOf(path$$1.tail);\n    if (item instanceof Element) {\n        return attributeCompletionsForElement(info, item.name, item);\n    }\n    return undefined;\n}\nfunction attributeCompletionsForElement(info, elementName, element) {\n    var attributes = getAttributeInfosForElement(info, elementName, element);\n    // Map all the attributes to a completion\n    return attributes.map(function (attr) { return ({\n        kind: attr.fromHtml ? 'html attribute' : 'attribute',\n        name: nameOfAttr(attr),\n        sort: attr.name\n    }); });\n}\nfunction getAttributeInfosForElement(info, elementName, element) {\n    var attributes = [];\n    // Add html attributes\n    var htmlAttributes = attributeNames(elementName) || [];\n    if (htmlAttributes) {\n        attributes.push.apply(attributes, htmlAttributes.map(function (name) { return ({ name: name, fromHtml: true }); }));\n    }\n    // Add html properties\n    var htmlProperties = propertyNames(elementName);\n    if (htmlProperties) {\n        attributes.push.apply(attributes, htmlProperties.map(function (name) { return ({ name: name, input: true }); }));\n    }\n    // Add html events\n    var htmlEvents = eventNames(elementName);\n    if (htmlEvents) {\n        attributes.push.apply(attributes, htmlEvents.map(function (name) { return ({ name: name, output: true }); }));\n    }\n    var _a = getSelectors(info), selectors = _a.selectors, selectorMap = _a.map;\n    if (selectors && selectors.length) {\n        // All the attributes that are selectable should be shown.\n        var applicableSelectors = selectors.filter(function (selector) { return !selector.element || selector.element == elementName; });\n        var selectorAndAttributeNames = applicableSelectors.map(function (selector) { return ({ selector: selector, attrs: selector.attrs.filter(function (a) { return !!a; }) }); });\n        var attrs_1 = flatten(selectorAndAttributeNames.map(function (selectorAndAttr) {\n            var directive = selectorMap.get(selectorAndAttr.selector);\n            var result = selectorAndAttr.attrs.map(function (name) { return ({ name: name, input: name in directive.inputs, output: name in directive.outputs }); });\n            return result;\n        }));\n        // Add template attribute if a directive contains a template reference\n        selectorAndAttributeNames.forEach(function (selectorAndAttr) {\n            var selector = selectorAndAttr.selector;\n            var directive = selectorMap.get(selector);\n            if (directive && hasTemplateReference(directive.type) && selector.attrs.length &&\n                selector.attrs[0]) {\n                attrs_1.push({ name: selector.attrs[0], template: true });\n            }\n        });\n        // All input and output properties of the matching directives should be added.\n        var elementSelector = element ?\n            createElementCssSelector(element) :\n            createElementCssSelector(new Element(elementName, [], [], null, null, null));\n        var matcher = new SelectorMatcher();\n        matcher.addSelectables(selectors);\n        matcher.match(elementSelector, function (selector) {\n            var directive = selectorMap.get(selector);\n            if (directive) {\n                attrs_1.push.apply(attrs_1, Object.keys(directive.inputs).map(function (name) { return ({ name: name, input: true }); }));\n                attrs_1.push.apply(attrs_1, Object.keys(directive.outputs).map(function (name) { return ({ name: name, output: true }); }));\n            }\n        });\n        // If a name shows up twice, fold it into a single value.\n        attrs_1 = foldAttrs(attrs_1);\n        // Now expand them back out to ensure that input/output shows up as well as input and\n        // output.\n        attributes.push.apply(attributes, flatten(attrs_1.map(expandedAttr)));\n    }\n    return attributes;\n}\nfunction attributeValueCompletions(info, position, attr) {\n    var path$$1 = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = path$$1.tail;\n    var dinfo = diagnosticInfoFromTemplateInfo(info);\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, attr, function () { return language_services_2(dinfo, path$$1, false); });\n        mostSpecific.visit(visitor, null);\n        if (!visitor.result || !visitor.result.length) {\n            // Try allwoing widening the path\n            var widerPath_1 = findTemplateAstAt(info.templateAst, position, /* allowWidening */ true);\n            if (widerPath_1.tail) {\n                var widerVisitor = new ExpressionVisitor(info, position, attr, function () { return language_services_2(dinfo, widerPath_1, false); });\n                widerPath_1.tail.visit(widerVisitor, null);\n                return widerVisitor.result;\n            }\n        }\n        return visitor.result;\n    }\n}\nfunction elementCompletions(info, path$$1) {\n    var htmlNames = elementNames().filter(function (name) { return !(name in hiddenHtmlElements); });\n    // Collect the elements referenced by the selectors\n    var directiveElements = getSelectors(info)\n        .selectors.map(function (selector) { return selector.element; })\n        .filter(function (name) { return !!name; });\n    var components = directiveElements.map(function (name) { return ({ kind: 'component', name: name, sort: name }); });\n    var htmlElements = htmlNames.map(function (name) { return ({ kind: 'element', name: name, sort: name }); });\n    // Return components and html elements\n    return uniqueByName(htmlElements.concat(components));\n}\nfunction entityCompletions(value, position) {\n    // Look for entity completions\n    var re = /&[A-Za-z]*;?(?!\\d)/g;\n    var found;\n    var result = undefined;\n    while (found = re.exec(value)) {\n        var len = found[0].length;\n        if (position >= found.index && position < (found.index + len)) {\n            result = Object.keys(NAMED_ENTITIES)\n                .map(function (name) { return ({ kind: 'entity', name: \"&\" + name + \";\", sort: name }); });\n            break;\n        }\n    }\n    return result;\n}\nfunction interpolationCompletions(info, position) {\n    // Look for an interpolation in at the position.\n    var templatePath = findTemplateAstAt(info.templateAst, position);\n    var mostSpecific = templatePath.tail;\n    if (mostSpecific) {\n        var visitor = new ExpressionVisitor(info, position, undefined, function () { return language_services_2(diagnosticInfoFromTemplateInfo(info), templatePath, false); });\n        mostSpecific.visit(visitor, null);\n        return uniqueByName(visitor.result);\n    }\n}\n// There is a special case of HTML where text that contains a unclosed tag is treated as\n// text. For exaple '<h1> Some <a text </h1>' produces a text nodes inside of the H1\n// element \"Some <a text\". We, however, want to treat this as if the user was requesting\n// the attributes of an \"a\" element, not requesting completion in the a text element. This\n// code checks for this case and returns element completions if it is detected or undefined\n// if it is not.\nfunction voidElementAttributeCompletions(info, path$$1) {\n    var tail = path$$1.tail;\n    if (tail instanceof Text) {\n        var match = tail.value.match(/<(\\w(\\w|\\d|-)*:)?(\\w(\\w|\\d|-)*)\\s/);\n        // The position must be after the match, otherwise we are still in a place where elements\n        // are expected (such as `<|a` or `<a|`; we only want attributes for `<a |` or after).\n        if (match &&\n            path$$1.position >= (match.index || 0) + match[0].length + tail.sourceSpan.start.offset) {\n            return attributeCompletionsForElement(info, match[3]);\n        }\n    }\n}\nvar ExpressionVisitor = (function (_super) {\n    __extends(ExpressionVisitor, _super);\n    function ExpressionVisitor(info, position, attr, getExpressionScope$$1) {\n        var _this = _super.call(this) || this;\n        _this.info = info;\n        _this.position = position;\n        _this.attr = attr;\n        _this.getExpressionScope = getExpressionScope$$1 || (function () { return info.template.members; });\n        return _this;\n    }\n    ExpressionVisitor.prototype.visitDirectiveProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitElementProperty = function (ast) {\n        this.attributeValueCompletions(ast.value);\n    };\n    ExpressionVisitor.prototype.visitEvent = function (ast) { this.attributeValueCompletions(ast.handler); };\n    ExpressionVisitor.prototype.visitElement = function (ast) {\n        var _this = this;\n        if (this.attr && getSelectors(this.info) && this.attr.name.startsWith(TEMPLATE_ATTR_PREFIX)) {\n            // The value is a template expression but the expression AST was not produced when the\n            // TemplateAst was produce so\n            // do that now.\n            var key_1 = this.attr.name.substr(TEMPLATE_ATTR_PREFIX.length);\n            // Find the selector\n            var selectorInfo = getSelectors(this.info);\n            var selectors = selectorInfo.selectors;\n            var selector_1 = selectors.filter(function (s) { return s.attrs.some(function (attr, i) { return i % 2 == 0 && attr == key_1; }); })[0];\n            var templateBindingResult = this.info.expressionParser.parseTemplateBindings(key_1, this.attr.value, null);\n            // find the template binding that contains the position\n            if (!this.attr.valueSpan)\n                return;\n            var valueRelativePosition_1 = this.position - this.attr.valueSpan.start.offset - 1;\n            var bindings = templateBindingResult.templateBindings;\n            var binding = bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span, /* exclusive */ true); }) ||\n                bindings.find(function (binding) { return inSpan(valueRelativePosition_1, binding.span); });\n            var keyCompletions = function () {\n                var keys = [];\n                if (selector_1) {\n                    var attrNames = selector_1.attrs.filter(function (_, i) { return i % 2 == 0; });\n                    keys = attrNames.filter(function (name) { return name.startsWith(key_1) && name != key_1; })\n                        .map(function (name) { return lowerName(name.substr(key_1.length)); });\n                }\n                keys.push('let');\n                _this.result = keys.map(function (key) { return ({ kind: 'key', name: key, sort: key }); });\n            };\n            if (!binding || (binding.key == key_1 && !binding.expression)) {\n                // We are in the root binding. We should return `let` and keys that are left in the\n                // selector.\n                keyCompletions();\n            }\n            else if (binding.keyIsVar) {\n                var equalLocation = this.attr.value.indexOf('=');\n                this.result = [];\n                if (equalLocation >= 0 && valueRelativePosition_1 >= equalLocation) {\n                    // We are after the '=' in a let clause. The valid values here are the members of the\n                    // template reference's type parameter.\n                    var directiveMetadata = selectorInfo.map.get(selector_1);\n                    if (directiveMetadata) {\n                        var contextTable = this.info.template.query.getTemplateContext(directiveMetadata.type.reference);\n                        if (contextTable) {\n                            this.result = this.symbolsToCompletions(contextTable.values());\n                        }\n                    }\n                }\n                else if (binding.key && valueRelativePosition_1 <= (binding.key.length - key_1.length)) {\n                    keyCompletions();\n                }\n            }\n            else {\n                // If the position is in the expression or after the key or there is no key, return the\n                // expression completions\n                if ((binding.expression && inSpan(valueRelativePosition_1, binding.expression.ast.span)) ||\n                    (binding.key &&\n                        valueRelativePosition_1 > binding.span.start + (binding.key.length - key_1.length)) ||\n                    !binding.key) {\n                    var span = new ParseSpan(0, this.attr.value.length);\n                    this.attributeValueCompletions(binding.expression ? binding.expression.ast :\n                        new PropertyRead(span, new ImplicitReceiver(span), ''), valueRelativePosition_1);\n                }\n                else {\n                    keyCompletions();\n                }\n            }\n        }\n    };\n    ExpressionVisitor.prototype.visitBoundText = function (ast) {\n        var expressionPosition = this.position - ast.sourceSpan.start.offset;\n        if (inSpan(expressionPosition, ast.value.span)) {\n            var completions = getExpressionCompletions(this.getExpressionScope(), ast.value, expressionPosition, this.info.template.query);\n            if (completions) {\n                this.result = this.symbolsToCompletions(completions);\n            }\n        }\n    };\n    ExpressionVisitor.prototype.attributeValueCompletions = function (value, position) {\n        var symbols = getExpressionCompletions(this.getExpressionScope(), value, position == null ? this.attributeValuePosition : position, this.info.template.query);\n        if (symbols) {\n            this.result = this.symbolsToCompletions(symbols);\n        }\n    };\n    ExpressionVisitor.prototype.symbolsToCompletions = function (symbols) {\n        return symbols.filter(function (s) { return !s.name.startsWith('__') && s.public; })\n            .map(function (symbol) { return ({ kind: symbol.kind, name: symbol.name, sort: symbol.name }); });\n    };\n    Object.defineProperty(ExpressionVisitor.prototype, \"attributeValuePosition\", {\n        get: function () {\n            if (this.attr && this.attr.valueSpan) {\n                return this.position - this.attr.valueSpan.start.offset - 1;\n            }\n            return 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ExpressionVisitor;\n}(NullTemplateVisitor));\nfunction getSourceText(template, span) {\n    return template.source.substring(span.start, span.end);\n}\nfunction nameOfAttr(attr) {\n    var name = attr.name;\n    if (attr.output) {\n        name = removeSuffix(name, 'Events');\n        name = removeSuffix(name, 'Changed');\n    }\n    var result = [name];\n    if (attr.input) {\n        result.unshift('[');\n        result.push(']');\n    }\n    if (attr.output) {\n        result.unshift('(');\n        result.push(')');\n    }\n    if (attr.template) {\n        result.unshift('*');\n    }\n    return result.join('');\n}\nvar templateAttr = /^(\\w+:)?(template$|^\\*)/;\nfunction createElementCssSelector(element) {\n    var cssSelector = new CssSelector();\n    var elNameNoNs = splitNsName(element.name)[1];\n    cssSelector.setElement(elNameNoNs);\n    for (var _i = 0, _a = element.attrs; _i < _a.length; _i++) {\n        var attr = _a[_i];\n        if (!attr.name.match(templateAttr)) {\n            var _b = splitNsName(attr.name), _ = _b[0], attrNameNoNs = _b[1];\n            cssSelector.addAttribute(attrNameNoNs, attr.value);\n            if (attr.name.toLowerCase() == 'class') {\n                var classes = attr.value.split(/s+/g);\n                classes.forEach(function (className) { return cssSelector.addClassName(className); });\n            }\n        }\n    }\n    return cssSelector;\n}\nfunction foldAttrs(attrs) {\n    var inputOutput = new Map();\n    var templates = new Map();\n    var result = [];\n    attrs.forEach(function (attr) {\n        if (attr.fromHtml) {\n            return attr;\n        }\n        if (attr.template) {\n            var duplicate = templates.get(attr.name);\n            if (!duplicate) {\n                result.push({ name: attr.name, template: true });\n                templates.set(attr.name, attr);\n            }\n        }\n        if (attr.input || attr.output) {\n            var duplicate = inputOutput.get(attr.name);\n            if (duplicate) {\n                duplicate.input = duplicate.input || attr.input;\n                duplicate.output = duplicate.output || attr.output;\n            }\n            else {\n                var cloneAttr = { name: attr.name };\n                if (attr.input)\n                    cloneAttr.input = true;\n                if (attr.output)\n                    cloneAttr.output = true;\n                result.push(cloneAttr);\n                inputOutput.set(attr.name, cloneAttr);\n            }\n        }\n    });\n    return result;\n}\nfunction expandedAttr(attr) {\n    if (attr.input && attr.output) {\n        return [\n            attr, { name: attr.name, input: true, output: false },\n            { name: attr.name, input: false, output: true }\n        ];\n    }\n    return [attr];\n}\nfunction lowerName(name) {\n    return name && (name[0].toLowerCase() + name.substr(1));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction locateSymbol(info) {\n    if (!info.position)\n        return undefined;\n    var templatePosition = info.position - info.template.span.start;\n    var path$$1 = findTemplateAstAt(info.templateAst, templatePosition);\n    if (path$$1.tail) {\n        var symbol_1 = undefined;\n        var span_1 = undefined;\n        var attributeValueSymbol_1 = function (ast, inEvent) {\n            if (inEvent === void 0) { inEvent = false; }\n            var attribute = findAttribute(info);\n            if (attribute) {\n                if (inSpan(templatePosition, spanOf(attribute.valueSpan))) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_2(dinfo, path$$1, inEvent);\n                    if (attribute.valueSpan) {\n                        var expressionOffset = attribute.valueSpan.start.offset + 1;\n                        var result = getExpressionSymbol(scope, ast, templatePosition - expressionOffset, info.template.query);\n                        if (result) {\n                            symbol_1 = result.symbol;\n                            span_1 = offsetSpan(result.span, expressionOffset);\n                        }\n                    }\n                    return true;\n                }\n            }\n            return false;\n        };\n        path$$1.tail.visit({\n            visitNgContent: function (ast) { },\n            visitEmbeddedTemplate: function (ast) { },\n            visitElement: function (ast) {\n                var component = ast.directives.find(function (d) { return d.directive.isComponent; });\n                if (component) {\n                    symbol_1 = info.template.query.getTypeSymbol(component.directive.type.reference);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'component');\n                    span_1 = spanOf(ast);\n                }\n                else {\n                    // Find a directive that matches the element name\n                    var directive = ast.directives.find(function (d) { return d.directive.selector != null && d.directive.selector.indexOf(ast.name) >= 0; });\n                    if (directive) {\n                        symbol_1 = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                        symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'directive');\n                        span_1 = spanOf(ast);\n                    }\n                }\n            },\n            visitReference: function (ast) {\n                symbol_1 = ast.value && info.template.query.getTypeSymbol(tokenReference(ast.value));\n                span_1 = spanOf(ast);\n            },\n            visitVariable: function (ast) { },\n            visitEvent: function (ast) {\n                if (!attributeValueSymbol_1(ast.handler, /* inEvent */ true)) {\n                    symbol_1 = findOutputBinding(info, path$$1, ast);\n                    symbol_1 = symbol_1 && new OverrideKindSymbol(symbol_1, 'event');\n                    span_1 = spanOf(ast);\n                }\n            },\n            visitElementProperty: function (ast) { attributeValueSymbol_1(ast.value); },\n            visitAttr: function (ast) { },\n            visitBoundText: function (ast) {\n                var expressionPosition = templatePosition - ast.sourceSpan.start.offset;\n                if (inSpan(expressionPosition, ast.value.span)) {\n                    var dinfo = diagnosticInfoFromTemplateInfo(info);\n                    var scope = language_services_2(dinfo, path$$1, /* includeEvent */ false);\n                    var result = getExpressionSymbol(scope, ast.value, expressionPosition, info.template.query);\n                    if (result) {\n                        symbol_1 = result.symbol;\n                        span_1 = offsetSpan(result.span, ast.sourceSpan.start.offset);\n                    }\n                }\n            },\n            visitText: function (ast) { },\n            visitDirective: function (ast) {\n                symbol_1 = info.template.query.getTypeSymbol(ast.directive.type.reference);\n                span_1 = spanOf(ast);\n            },\n            visitDirectiveProperty: function (ast) {\n                if (!attributeValueSymbol_1(ast.value)) {\n                    symbol_1 = findInputBinding(info, path$$1, ast);\n                    span_1 = spanOf(ast);\n                }\n            }\n        }, null);\n        if (symbol_1 && span_1) {\n            return { symbol: symbol_1, span: offsetSpan(span_1, info.template.span.start) };\n        }\n    }\n}\nfunction findAttribute(info) {\n    if (info.position) {\n        var templatePosition = info.position - info.template.span.start;\n        var path$$1 = findNode(info.htmlAst, templatePosition);\n        return path$$1.first(Attribute$1);\n    }\n}\nfunction findInputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedInput = invertMap(directive.directive.inputs);\n            var fieldName = invertedInput[binding.templateName];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction findOutputBinding(info, path$$1, binding) {\n    var element = path$$1.first(ElementAst);\n    if (element) {\n        for (var _i = 0, _a = element.directives; _i < _a.length; _i++) {\n            var directive = _a[_i];\n            var invertedOutputs = invertMap(directive.directive.outputs);\n            var fieldName = invertedOutputs[binding.name];\n            if (fieldName) {\n                var classSymbol = info.template.query.getTypeSymbol(directive.directive.type.reference);\n                if (classSymbol) {\n                    return classSymbol.members().get(fieldName);\n                }\n            }\n        }\n    }\n}\nfunction invertMap(obj) {\n    var result = {};\n    for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n        var name_1 = _a[_i];\n        var v = obj[name_1];\n        result[v] = name_1;\n    }\n    return result;\n}\n/**\n * Wrap a symbol and change its kind to component.\n */\nvar OverrideKindSymbol = (function () {\n    function OverrideKindSymbol(sym, kindOverride) {\n        this.sym = sym;\n        this.kind = kindOverride;\n    }\n    Object.defineProperty(OverrideKindSymbol.prototype, \"name\", {\n        get: function () { return this.sym.name; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"language\", {\n        get: function () { return this.sym.language; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"type\", {\n        get: function () { return this.sym.type; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"container\", {\n        get: function () { return this.sym.container; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"public\", {\n        get: function () { return this.sym.public; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"callable\", {\n        get: function () { return this.sym.callable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"nullable\", {\n        get: function () { return this.sym.nullable; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OverrideKindSymbol.prototype, \"definition\", {\n        get: function () { return this.sym.definition; },\n        enumerable: true,\n        configurable: true\n    });\n    OverrideKindSymbol.prototype.members = function () { return this.sym.members(); };\n    OverrideKindSymbol.prototype.signatures = function () { return this.sym.signatures(); };\n    OverrideKindSymbol.prototype.selectSignature = function (types) { return this.sym.selectSignature(types); };\n    OverrideKindSymbol.prototype.indexed = function (argument) { return this.sym.indexed(argument); };\n    return OverrideKindSymbol;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getDefinition(info) {\n    var result = locateSymbol(info);\n    return result && result.symbol.definition;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getTemplateDiagnostics(fileName, astProvider, templates) {\n    var results = [];\n    var _loop_1 = function (template) {\n        var ast = astProvider.getTemplateAst(template, fileName);\n        if (ast) {\n            if (ast.parseErrors && ast.parseErrors.length) {\n                results.push.apply(results, ast.parseErrors.map(function (e) { return ({\n                    kind: DiagnosticKind.Error,\n                    span: offsetSpan(spanOf(e.span), template.span.start),\n                    message: e.msg\n                }); }));\n            }\n            else if (ast.templateAst && ast.htmlAst) {\n                var info = {\n                    templateAst: ast.templateAst,\n                    htmlAst: ast.htmlAst,\n                    offset: template.span.start,\n                    query: template.query,\n                    members: template.members\n                };\n                var expressionDiagnostics = language_services_3(info);\n                results.push.apply(results, expressionDiagnostics);\n            }\n            if (ast.errors) {\n                results.push.apply(results, ast.errors.map(function (e) { return ({ kind: e.kind, span: e.span || template.span, message: e.message }); }));\n            }\n        }\n    };\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\n        var template = templates_1[_i];\n        _loop_1(template);\n    }\n    return results;\n}\nfunction getDeclarationDiagnostics(declarations, modules) {\n    var results = [];\n    var directives = undefined;\n    var _loop_2 = function (declaration) {\n        var report = function (message, span) {\n            results.push({\n                kind: DiagnosticKind.Error,\n                span: span || declaration.declarationSpan, message: message\n            });\n        };\n        for (var _i = 0, _a = declaration.errors; _i < _a.length; _i++) {\n            var error = _a[_i];\n            report(error.message, error.span);\n        }\n        if (declaration.metadata) {\n            if (declaration.metadata.isComponent) {\n                if (!modules.ngModuleByPipeOrDirective.has(declaration.type)) {\n                    report(\"Component '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n                if (!declaration.metadata.template.template &&\n                    !declaration.metadata.template.templateUrl) {\n                    report(\"Component \" + declaration.type.name + \" must have a template or templateUrl\");\n                }\n            }\n            else {\n                if (!directives) {\n                    directives = new Set();\n                    modules.ngModules.forEach(function (module) {\n                        module.declaredDirectives.forEach(function (directive) { directives.add(directive.reference); });\n                    });\n                }\n                if (!directives.has(declaration.type)) {\n                    report(\"Directive '\" + declaration.type.name + \"' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration\");\n                }\n            }\n        }\n    };\n    for (var _i = 0, declarations_1 = declarations; _i < declarations_1.length; _i++) {\n        var declaration = declarations_1[_i];\n        _loop_2(declaration);\n    }\n    return results;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getHover(info) {\n    var result = locateSymbol(info);\n    if (result) {\n        return { text: hoverTextOf(result.symbol), span: result.span };\n    }\n}\nfunction hoverTextOf(symbol) {\n    var result = [{ text: symbol.kind }, { text: ' ' }, { text: symbol.name, language: symbol.language }];\n    var container = symbol.container;\n    if (container) {\n        result.push({ text: ' of ' }, { text: container.name, language: container.language });\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create an instance of an Angular `LanguageService`.\n *\n * @experimental\n */\nfunction createLanguageService(host) {\n    return new LanguageServiceImpl(host);\n}\nvar LanguageServiceImpl = (function () {\n    function LanguageServiceImpl(host) {\n        this.host = host;\n    }\n    Object.defineProperty(LanguageServiceImpl.prototype, \"metadataResolver\", {\n        get: function () { return this.host.resolver; },\n        enumerable: true,\n        configurable: true\n    });\n    LanguageServiceImpl.prototype.getTemplateReferences = function () { return this.host.getTemplateReferences(); };\n    LanguageServiceImpl.prototype.getDiagnostics = function (fileName) {\n        var results = [];\n        var templates = this.host.getTemplates(fileName);\n        if (templates && templates.length) {\n            results.push.apply(results, getTemplateDiagnostics(fileName, this, templates));\n        }\n        var declarations = this.host.getDeclarations(fileName);\n        if (declarations && declarations.length) {\n            var summary = this.host.getAnalyzedModules();\n            results.push.apply(results, getDeclarationDiagnostics(declarations, summary));\n        }\n        return uniqueBySpan(results);\n    };\n    LanguageServiceImpl.prototype.getPipesAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return templateInfo.pipes;\n        }\n        return [];\n    };\n    LanguageServiceImpl.prototype.getCompletionsAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getTemplateCompletions(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getDefinitionAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getDefinition(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getHoverAt = function (fileName, position) {\n        var templateInfo = this.getTemplateAstAtPosition(fileName, position);\n        if (templateInfo) {\n            return getHover(templateInfo);\n        }\n    };\n    LanguageServiceImpl.prototype.getTemplateAstAtPosition = function (fileName, position) {\n        var template = this.host.getTemplateAt(fileName, position);\n        if (template) {\n            var astResult = this.getTemplateAst(template, fileName);\n            if (astResult && astResult.htmlAst && astResult.templateAst && astResult.directive &&\n                astResult.directives && astResult.pipes && astResult.expressionParser)\n                return {\n                    position: position,\n                    fileName: fileName,\n                    template: template,\n                    htmlAst: astResult.htmlAst,\n                    directive: astResult.directive,\n                    directives: astResult.directives,\n                    pipes: astResult.pipes,\n                    templateAst: astResult.templateAst,\n                    expressionParser: astResult.expressionParser\n                };\n        }\n        return undefined;\n    };\n    LanguageServiceImpl.prototype.getTemplateAst = function (template, contextFile) {\n        var _this = this;\n        var result = undefined;\n        try {\n            var resolvedMetadata = this.metadataResolver.getNonNormalizedDirectiveMetadata(template.type);\n            var metadata = resolvedMetadata && resolvedMetadata.metadata;\n            if (metadata) {\n                var rawHtmlParser = new HtmlParser();\n                var htmlParser = new I18NHtmlParser(rawHtmlParser);\n                var expressionParser = new Parser(new Lexer());\n                var config = new CompilerConfig();\n                var parser = new TemplateParser(config, this.host.resolver.getReflector(), expressionParser, new DomElementSchemaRegistry(), htmlParser, null, []);\n                var htmlResult = htmlParser.parse(template.source, '', true);\n                var analyzedModules = this.host.getAnalyzedModules();\n                var errors = undefined;\n                var ngModule = analyzedModules.ngModuleByPipeOrDirective.get(template.type);\n                if (!ngModule) {\n                    // Reported by the the declaration diagnostics.\n                    ngModule = findSuitableDefaultModule(analyzedModules);\n                }\n                if (ngModule) {\n                    var resolvedDirectives = ngModule.transitiveModule.directives.map(function (d) { return _this.host.resolver.getNonNormalizedDirectiveMetadata(d.reference); });\n                    var directives = removeMissing(resolvedDirectives).map(function (d) { return d.metadata.toSummary(); });\n                    var pipes = ngModule.transitiveModule.pipes.map(function (p) { return _this.host.resolver.getOrLoadPipeMetadata(p.reference).toSummary(); });\n                    var schemas = ngModule.schemas;\n                    var parseResult = parser.tryParseHtml(htmlResult, metadata, directives, pipes, schemas);\n                    result = {\n                        htmlAst: htmlResult.rootNodes,\n                        templateAst: parseResult.templateAst,\n                        directive: metadata, directives: directives, pipes: pipes,\n                        parseErrors: parseResult.errors, expressionParser: expressionParser, errors: errors\n                    };\n                }\n            }\n        }\n        catch (e) {\n            var span = template.span;\n            if (e.fileName == contextFile) {\n                span = template.query.getSpanAt(e.line, e.column) || span;\n            }\n            result = { errors: [{ kind: DiagnosticKind.Error, message: e.message, span: span }] };\n        }\n        return result || {};\n    };\n    return LanguageServiceImpl;\n}());\nfunction removeMissing(values) {\n    return values.filter(function (e) { return !!e; });\n}\nfunction uniqueBySpan(elements) {\n    if (elements) {\n        var result = [];\n        var map = new Map();\n        for (var _i = 0, elements_1 = elements; _i < elements_1.length; _i++) {\n            var element = elements_1[_i];\n            var span = element.span;\n            var set = map.get(span.start);\n            if (!set) {\n                set = new Set();\n                map.set(span.start, set);\n            }\n            if (!set.has(span.end)) {\n                set.add(span.end);\n                result.push(element);\n            }\n        }\n        return result;\n    }\n}\nfunction findSuitableDefaultModule(modules) {\n    var result = undefined;\n    var resultSize = 0;\n    for (var _i = 0, _a = modules.ngModules; _i < _a.length; _i++) {\n        var module_1 = _a[_i];\n        var moduleSize = module_1.transitiveModule.directives.length;\n        if (moduleSize > resultSize) {\n            result = module_1;\n            resultSize = moduleSize;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ReflectorModuleModuleResolutionHost = (function () {\n    function ReflectorModuleModuleResolutionHost(host, getProgram) {\n        var _this = this;\n        this.host = host;\n        this.getProgram = getProgram;\n        // Note: verboseInvalidExpressions is important so that\n        // the collector will collect errors instead of throwing\n        this.metadataCollector = new language_services_13({ verboseInvalidExpression: true });\n        if (host.directoryExists)\n            this.directoryExists = function (directoryName) { return _this.host.directoryExists(directoryName); };\n    }\n    ReflectorModuleModuleResolutionHost.prototype.fileExists = function (fileName) { return !!this.host.getScriptSnapshot(fileName); };\n    ReflectorModuleModuleResolutionHost.prototype.readFile = function (fileName) {\n        var snapshot = this.host.getScriptSnapshot(fileName);\n        if (snapshot) {\n            return snapshot.getText(0, snapshot.getLength());\n        }\n        // Typescript readFile() declaration should be `readFile(fileName: string): string | undefined\n        return undefined;\n    };\n    ReflectorModuleModuleResolutionHost.prototype.getSourceFileMetadata = function (fileName) {\n        var sf = this.getProgram().getSourceFile(fileName);\n        return sf ? this.metadataCollector.getMetadata(sf) : undefined;\n    };\n    ReflectorModuleModuleResolutionHost.prototype.cacheMetadata = function (fileName) {\n        // Don't cache the metadata for .ts files as they might change in the editor!\n        return fileName.endsWith('.d.ts');\n    };\n    return ReflectorModuleModuleResolutionHost;\n}());\nvar ReflectorHost = (function () {\n    function ReflectorHost(getProgram, serviceHost, options) {\n        this.options = options;\n        this.metadataReaderCache = language_services_14();\n        this.hostAdapter = new ReflectorModuleModuleResolutionHost(serviceHost, getProgram);\n        this.moduleResolutionCache =\n            ts.createModuleResolutionCache(serviceHost.getCurrentDirectory(), function (s) { return s; });\n    }\n    ReflectorHost.prototype.getMetadataFor = function (modulePath) {\n        return language_services_15(modulePath, this.hostAdapter, this.metadataReaderCache);\n    };\n    ReflectorHost.prototype.moduleNameToFileName = function (moduleName, containingFile) {\n        if (!containingFile) {\n            if (moduleName.indexOf('.') === 0) {\n                throw new Error('Resolution of relative paths requires a containing file.');\n            }\n            // Any containing file gives the same result for absolute imports\n            containingFile = path.join(this.options.basePath, 'index.ts');\n        }\n        var resolved = ts.resolveModuleName(moduleName, containingFile, this.options, this.hostAdapter)\n            .resolvedModule;\n        return resolved ? resolved.resolvedFileName : null;\n    };\n    return ReflectorHost;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a `LanguageServiceHost`\n */\nfunction createLanguageServiceFromTypescript(host, service) {\n    var ngHost = new TypeScriptServiceHost(host, service);\n    var ngServer = createLanguageService(ngHost);\n    ngHost.setSite(ngServer);\n    return ngServer;\n}\n/**\n * The language service never needs the normalized versions of the metadata. To avoid parsing\n * the content and resolving references, return an empty file. This also allows normalizing\n * template that are syntatically incorrect which is required to provide completions in\n * syntactically incorrect templates.\n */\nvar DummyHtmlParser = (function (_super) {\n    __extends(DummyHtmlParser, _super);\n    function DummyHtmlParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyHtmlParser.prototype.parse = function (source, url, parseExpansionForms, interpolationConfig) {\n        if (parseExpansionForms === void 0) { parseExpansionForms = false; }\n        if (interpolationConfig === void 0) { interpolationConfig = DEFAULT_INTERPOLATION_CONFIG; }\n        return new ParseTreeResult([], []);\n    };\n    return DummyHtmlParser;\n}(HtmlParser));\n/**\n * Avoid loading resources in the language servcie by using a dummy loader.\n */\nvar DummyResourceLoader = (function (_super) {\n    __extends(DummyResourceLoader, _super);\n    function DummyResourceLoader() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DummyResourceLoader.prototype.get = function (url) { return Promise.resolve(''); };\n    return DummyResourceLoader;\n}(ResourceLoader));\n/**\n * An implemntation of a `LanguageServiceHost` for a TypeScript project.\n *\n * The `TypeScriptServiceHost` implements the Angular `LanguageServiceHost` using\n * the TypeScript language services.\n *\n * @experimental\n */\nvar TypeScriptServiceHost = (function () {\n    function TypeScriptServiceHost(host, tsService) {\n        this.host = host;\n        this.tsService = tsService;\n        this._staticSymbolCache = new StaticSymbolCache();\n        this._typeCache = [];\n        this.modulesOutOfDate = true;\n        this.fileVersions = new Map();\n    }\n    TypeScriptServiceHost.prototype.setSite = function (service) { this.service = service; };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"resolver\", {\n        /**\n         * Angular LanguageServiceHost implementation\n         */\n        get: function () {\n            var _this = this;\n            this.validate();\n            var result = this._resolver;\n            if (!result) {\n                var moduleResolver = new NgModuleResolver(this.reflector);\n                var directiveResolver = new DirectiveResolver(this.reflector);\n                var pipeResolver = new PipeResolver(this.reflector);\n                var elementSchemaRegistry = new DomElementSchemaRegistry();\n                var resourceLoader = new DummyResourceLoader();\n                var urlResolver = createOfflineCompileUrlResolver();\n                var htmlParser = new DummyHtmlParser();\n                // This tracks the CompileConfig in codegen.ts. Currently these options\n                // are hard-coded.\n                var config = new CompilerConfig({ defaultEncapsulation: ViewEncapsulation$1.Emulated, useJit: false });\n                var directiveNormalizer = new DirectiveNormalizer(resourceLoader, urlResolver, htmlParser, config);\n                result = this._resolver = new CompileMetadataResolver(config, htmlParser, moduleResolver, directiveResolver, pipeResolver, new JitSummaryResolver(), elementSchemaRegistry, directiveNormalizer, new Console(), this._staticSymbolCache, this.reflector, function (error, type) { return _this.collectError(error, type && type.filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateReferences = function () {\n        this.ensureTemplateMap();\n        return this.templateReferences || [];\n    };\n    TypeScriptServiceHost.prototype.getTemplateAt = function (fileName, position) {\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            this.context = sourceFile.fileName;\n            var node = this.findNode(sourceFile, position);\n            if (node) {\n                return this.getSourceFromNode(fileName, this.host.getScriptVersion(sourceFile.fileName), node);\n            }\n        }\n        else {\n            this.ensureTemplateMap();\n            // TODO: Cannocalize the file?\n            var componentType = this.fileToComponent.get(fileName);\n            if (componentType) {\n                return this.getSourceFromType(fileName, this.host.getScriptVersion(fileName), componentType);\n            }\n        }\n        return undefined;\n    };\n    TypeScriptServiceHost.prototype.getAnalyzedModules = function () {\n        this.validate();\n        return this.ensureAnalyzedModules();\n    };\n    TypeScriptServiceHost.prototype.ensureAnalyzedModules = function () {\n        var analyzedModules = this.analyzedModules;\n        if (!analyzedModules) {\n            var analyzeHost = { isSourceFile: function (filePath) { return true; } };\n            var programFiles = this.program.getSourceFiles().map(function (sf) { return sf.fileName; });\n            analyzedModules = this.analyzedModules =\n                analyzeNgModules(programFiles, analyzeHost, this.staticSymbolResolver, this.resolver);\n        }\n        return analyzedModules;\n    };\n    TypeScriptServiceHost.prototype.getTemplates = function (fileName) {\n        var _this = this;\n        this.ensureTemplateMap();\n        var componentType = this.fileToComponent.get(fileName);\n        if (componentType) {\n            var templateSource = this.getTemplateAt(fileName, 0);\n            if (templateSource) {\n                return [templateSource];\n            }\n        }\n        else {\n            var version_1 = this.host.getScriptVersion(fileName);\n            var result_1 = [];\n            // Find each template string in the file\n            var visit_1 = function (child) {\n                var templateSource = _this.getSourceFromNode(fileName, version_1, child);\n                if (templateSource) {\n                    result_1.push(templateSource);\n                }\n                else {\n                    ts.forEachChild(child, visit_1);\n                }\n            };\n            var sourceFile = this.getSourceFile(fileName);\n            if (sourceFile) {\n                this.context = sourceFile.path || sourceFile.fileName;\n                ts.forEachChild(sourceFile, visit_1);\n            }\n            return result_1.length ? result_1 : undefined;\n        }\n    };\n    TypeScriptServiceHost.prototype.getDeclarations = function (fileName) {\n        var _this = this;\n        var result = [];\n        var sourceFile = this.getSourceFile(fileName);\n        if (sourceFile) {\n            var visit_2 = function (child) {\n                var declaration = _this.getDeclarationFromNode(sourceFile, child);\n                if (declaration) {\n                    result.push(declaration);\n                }\n                else {\n                    ts.forEachChild(child, visit_2);\n                }\n            };\n            ts.forEachChild(sourceFile, visit_2);\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFile = function (fileName) {\n        return this.tsService.getProgram().getSourceFile(fileName);\n    };\n    TypeScriptServiceHost.prototype.updateAnalyzedModules = function () {\n        this.validate();\n        if (this.modulesOutOfDate) {\n            this.analyzedModules = null;\n            this._reflector = null;\n            this.templateReferences = null;\n            this.fileToComponent = null;\n            this.ensureAnalyzedModules();\n            this.modulesOutOfDate = false;\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"program\", {\n        get: function () { return this.tsService.getProgram(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"checker\", {\n        get: function () {\n            var checker = this._checker;\n            if (!checker) {\n                checker = this._checker = this.program.getTypeChecker();\n            }\n            return checker;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.validate = function () {\n        var _this = this;\n        var program = this.program;\n        if (this._staticSymbolResolver && this.lastProgram != program) {\n            // Invalidate file that have changed in the static symbol resolver\n            var invalidateFile = function (fileName) {\n                return _this._staticSymbolResolver.invalidateFile(fileName);\n            };\n            this.clearCaches();\n            var seen_1 = new Set();\n            for (var _i = 0, _a = this.program.getSourceFiles(); _i < _a.length; _i++) {\n                var sourceFile = _a[_i];\n                var fileName = sourceFile.fileName;\n                seen_1.add(fileName);\n                var version$$1 = this.host.getScriptVersion(fileName);\n                var lastVersion = this.fileVersions.get(fileName);\n                if (version$$1 != lastVersion) {\n                    this.fileVersions.set(fileName, version$$1);\n                    invalidateFile(fileName);\n                }\n            }\n            // Remove file versions that are no longer in the file and invalidate them.\n            var missing = Array.from(this.fileVersions.keys()).filter(function (f) { return !seen_1.has(f); });\n            missing.forEach(function (f) { return _this.fileVersions.delete(f); });\n            missing.forEach(invalidateFile);\n            this.lastProgram = program;\n        }\n    };\n    TypeScriptServiceHost.prototype.clearCaches = function () {\n        this._checker = null;\n        this._typeCache = [];\n        this._resolver = null;\n        this.collectedErrors = null;\n        this.modulesOutOfDate = true;\n    };\n    TypeScriptServiceHost.prototype.ensureTemplateMap = function () {\n        if (!this.fileToComponent || !this.templateReferences) {\n            var fileToComponent = new Map();\n            var templateReference = [];\n            var ngModuleSummary = this.getAnalyzedModules();\n            var urlResolver = createOfflineCompileUrlResolver();\n            for (var _i = 0, _a = ngModuleSummary.ngModules; _i < _a.length; _i++) {\n                var module_1 = _a[_i];\n                for (var _b = 0, _c = module_1.declaredDirectives; _b < _c.length; _b++) {\n                    var directive = _c[_b];\n                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(directive.reference).metadata;\n                    if (metadata.isComponent && metadata.template && metadata.template.templateUrl) {\n                        var templateName = urlResolver.resolve(this.reflector.componentModuleUrl(directive.reference), metadata.template.templateUrl);\n                        fileToComponent.set(templateName, directive.reference);\n                        templateReference.push(templateName);\n                    }\n                }\n            }\n            this.fileToComponent = fileToComponent;\n            this.templateReferences = templateReference;\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromDeclaration = function (fileName, version$$1, source, span, type, declaration, node, sourceFile) {\n        var queryCache = undefined;\n        var t = this;\n        if (declaration) {\n            return {\n                version: version$$1,\n                source: source,\n                span: span,\n                type: type,\n                get members() {\n                    return language_services_10(t.program, t.checker, sourceFile, declaration);\n                },\n                get query() {\n                    if (!queryCache) {\n                        var pipes_1 = t.service.getPipesAt(fileName, node.getStart());\n                        queryCache = language_services_12(t.program, t.checker, sourceFile, function () { return language_services_11(sourceFile, t.program, t.checker, pipes_1); });\n                    }\n                    return queryCache;\n                }\n            };\n        }\n    };\n    TypeScriptServiceHost.prototype.getSourceFromNode = function (fileName, version$$1, node) {\n        var result = undefined;\n        var t = this;\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n            case ts.SyntaxKind.StringLiteral:\n                var _a = this.getTemplateClassDeclFromNode(node), declaration = _a[0], decorator = _a[1];\n                if (declaration && declaration.name) {\n                    var sourceFile = this.getSourceFile(fileName);\n                    return this.getSourceFromDeclaration(fileName, version$$1, this.stringOf(node) || '', shrink(spanOf$1(node)), this.reflector.getStaticSymbol(sourceFile.fileName, declaration.name.text), declaration, node, sourceFile);\n                }\n                break;\n        }\n        return result;\n    };\n    TypeScriptServiceHost.prototype.getSourceFromType = function (fileName, version$$1, type) {\n        var result = undefined;\n        var declaration = this.getTemplateClassFromStaticSymbol(type);\n        if (declaration) {\n            var snapshot = this.host.getScriptSnapshot(fileName);\n            if (snapshot) {\n                var source = snapshot.getText(0, snapshot.getLength());\n                result = this.getSourceFromDeclaration(fileName, version$$1, source, { start: 0, end: source.length }, type, declaration, declaration, declaration.getSourceFile());\n            }\n        }\n        return result;\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflectorHost\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflectorHost;\n            if (!result) {\n                if (!this.context) {\n                    // Make up a context by finding the first script and using that as the base dir.\n                    this.context = this.host.getScriptFileNames()[0];\n                }\n                // Use the file context's directory as the base directory.\n                // The host's getCurrentDirectory() is not reliable as it is always \"\" in\n                // tsserver. We don't need the exact base directory, just one that contains\n                // a source file.\n                var source = this.tsService.getProgram().getSourceFile(this.context);\n                if (!source) {\n                    throw new Error('Internal error: no context could be determined');\n                }\n                var tsConfigPath = findTsConfig(source.fileName);\n                var basePath = path.dirname(tsConfigPath || this.context);\n                var options = { basePath: basePath, genDir: basePath };\n                var compilerOptions = this.host.getCompilationSettings();\n                if (compilerOptions && compilerOptions.baseUrl) {\n                    options.baseUrl = compilerOptions.baseUrl;\n                }\n                result = this._reflectorHost =\n                    new ReflectorHost(function () { return _this.tsService.getProgram(); }, this.host, options);\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.collectError = function (error, filePath) {\n        if (filePath) {\n            var errorMap = this.collectedErrors;\n            if (!errorMap || !this.collectedErrors) {\n                errorMap = this.collectedErrors = new Map();\n            }\n            var errors = errorMap.get(filePath);\n            if (!errors) {\n                errors = [];\n                this.collectedErrors.set(filePath, errors);\n            }\n            errors.push(error);\n        }\n    };\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"staticSymbolResolver\", {\n        get: function () {\n            var _this = this;\n            var result = this._staticSymbolResolver;\n            if (!result) {\n                this._summaryResolver = new AotSummaryResolver({\n                    loadSummary: function (filePath) { return null; },\n                    isSourceFile: function (sourceFilePath) { return true; },\n                    toSummaryFileName: function (sourceFilePath) { return sourceFilePath; },\n                    fromSummaryFileName: function (filePath) { return filePath; },\n                }, this._staticSymbolCache);\n                result = this._staticSymbolResolver = new StaticSymbolResolver(this.reflectorHost, this._staticSymbolCache, this._summaryResolver, function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TypeScriptServiceHost.prototype, \"reflector\", {\n        get: function () {\n            var _this = this;\n            var result = this._reflector;\n            if (!result) {\n                var ssr = this.staticSymbolResolver;\n                result = this._reflector = new StaticReflector(this._summaryResolver, ssr, [], [], function (e, filePath) { return _this.collectError(e, filePath); });\n            }\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TypeScriptServiceHost.prototype.getTemplateClassFromStaticSymbol = function (type) {\n        var source = this.getSourceFile(type.filePath);\n        if (source) {\n            var declarationNode = ts.forEachChild(source, function (child) {\n                if (child.kind === ts.SyntaxKind.ClassDeclaration) {\n                    var classDeclaration = child;\n                    if (classDeclaration.name != null && classDeclaration.name.text === type.name) {\n                        return classDeclaration;\n                    }\n                }\n            });\n            return declarationNode;\n        }\n        return undefined;\n    };\n    /**\n     * Given a template string node, see if it is an Angular template string, and if so return the\n     * containing class.\n     */\n    TypeScriptServiceHost.prototype.getTemplateClassDeclFromNode = function (currentToken) {\n        // Verify we are in a 'template' property assignment, in an object literal, which is an call\n        // arg, in a decorator\n        var parentNode = currentToken.parent; // PropertyAssignment\n        if (!parentNode) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        if (parentNode.kind !== ts.SyntaxKind.PropertyAssignment) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        else {\n            // TODO: Is this different for a literal, i.e. a quoted property name like \"template\"?\n            if (parentNode.name.text !== 'template') {\n                return TypeScriptServiceHost.missingTemplate;\n            }\n        }\n        parentNode = parentNode.parent; // ObjectLiteralExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.ObjectLiteralExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        parentNode = parentNode.parent; // CallExpression\n        if (!parentNode || parentNode.kind !== ts.SyntaxKind.CallExpression) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var callTarget = parentNode.expression;\n        var decorator = parentNode.parent; // Decorator\n        if (!decorator || decorator.kind !== ts.SyntaxKind.Decorator) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        var declaration = decorator.parent; // ClassDeclaration\n        if (!declaration || declaration.kind !== ts.SyntaxKind.ClassDeclaration) {\n            return TypeScriptServiceHost.missingTemplate;\n        }\n        return [declaration, callTarget];\n    };\n    TypeScriptServiceHost.prototype.getCollectedErrors = function (defaultSpan, sourceFile) {\n        var errors = (this.collectedErrors && this.collectedErrors.get(sourceFile.fileName));\n        return (errors && errors.map(function (e) {\n            return { message: e.message, span: spanAt(sourceFile, e.line, e.column) || defaultSpan };\n        })) ||\n            [];\n    };\n    TypeScriptServiceHost.prototype.getDeclarationFromNode = function (sourceFile, node) {\n        if (node.kind == ts.SyntaxKind.ClassDeclaration && node.decorators &&\n            node.name) {\n            for (var _i = 0, _a = node.decorators; _i < _a.length; _i++) {\n                var decorator = _a[_i];\n                if (decorator.expression && decorator.expression.kind == ts.SyntaxKind.CallExpression) {\n                    var classDeclaration = node;\n                    if (classDeclaration.name) {\n                        var call = decorator.expression;\n                        var target = call.expression;\n                        var type = this.checker.getTypeAtLocation(target);\n                        if (type) {\n                            var staticSymbol = this.reflector.getStaticSymbol(sourceFile.fileName, classDeclaration.name.text);\n                            try {\n                                if (this.resolver.isDirective(staticSymbol)) {\n                                    var metadata = this.resolver.getNonNormalizedDirectiveMetadata(staticSymbol).metadata;\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        metadata: metadata,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                            catch (e) {\n                                if (e.message) {\n                                    this.collectError(e, sourceFile.fileName);\n                                    var declarationSpan = spanOf$1(target);\n                                    return {\n                                        type: staticSymbol,\n                                        declarationSpan: declarationSpan,\n                                        errors: this.getCollectedErrors(declarationSpan, sourceFile)\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TypeScriptServiceHost.prototype.stringOf = function (node) {\n        switch (node.kind) {\n            case ts.SyntaxKind.NoSubstitutionTemplateLiteral:\n                return node.text;\n            case ts.SyntaxKind.StringLiteral:\n                return node.text;\n        }\n    };\n    TypeScriptServiceHost.prototype.findNode = function (sourceFile, position) {\n        function find(node) {\n            if (position >= node.getStart() && position < node.getEnd()) {\n                return ts.forEachChild(node, find) || node;\n            }\n        }\n        return find(sourceFile);\n    };\n    TypeScriptServiceHost.missingTemplate = [undefined, undefined];\n    return TypeScriptServiceHost;\n}());\nfunction findTsConfig(fileName) {\n    var dir = path.dirname(fileName);\n    while (fs.existsSync(dir)) {\n        var candidate = path.join(dir, 'tsconfig.json');\n        if (fs.existsSync(candidate))\n            return candidate;\n        var parentDir = path.dirname(dir);\n        if (parentDir === dir)\n            break;\n        dir = parentDir;\n    }\n}\nfunction spanOf$1(node) {\n    return { start: node.getStart(), end: node.getEnd() };\n}\nfunction shrink(span, offset) {\n    if (offset == null)\n        offset = 1;\n    return { start: span.start + offset, end: span.end - offset };\n}\nfunction spanAt(sourceFile, line, column) {\n    if (line != null && column != null) {\n        var position_1 = ts.getPositionOfLineAndCharacter(sourceFile, line, column);\n        var findChild = function findChild(node) {\n            if (node.kind > ts.SyntaxKind.LastToken && node.pos <= position_1 && node.end > position_1) {\n                var betterNode = ts.forEachChild(node, findChild);\n                return betterNode || node;\n            }\n        };\n        var node = ts.forEachChild(sourceFile, findChild);\n        if (node) {\n            return { start: node.getStart(), end: node.getEnd() };\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar projectHostMap = new WeakMap();\nfunction getExternalFiles(project) {\n    var host = projectHostMap.get(project);\n    if (host) {\n        return host.getTemplateReferences();\n    }\n}\nvar angularOnlyResults = process.argv.indexOf('--angularOnlyResults') >= 0;\nfunction angularOnlyFilter(ls) {\n    return {\n        cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n        getSyntacticDiagnostics: function (fileName) { return []; },\n        getSemanticDiagnostics: function (fileName) { return []; },\n        getCompilerOptionsDiagnostics: function () { return []; },\n        getSyntacticClassifications: function (fileName, span) { return []; },\n        getSemanticClassifications: function (fileName, span) { return []; },\n        getEncodedSyntacticClassifications: function (fileName, span) { return ({ undefined: undefined }); },\n        getEncodedSemanticClassifications: function (fileName, span) { return undefined; },\n        getCompletionsAtPosition: function (fileName, position) { return undefined; },\n        getCompletionEntryDetails: function (fileName, position, entryName) {\n            return undefined;\n        },\n        getCompletionEntrySymbol: function (fileName, position, entryName) { return undefined; },\n        getQuickInfoAtPosition: function (fileName, position) { return undefined; },\n        getNameOrDottedNameSpan: function (fileName, startPos, endPos) { return undefined; },\n        getBreakpointStatementAtPosition: function (fileName, position) { return undefined; },\n        getSignatureHelpItems: function (fileName, position) { return undefined; },\n        getRenameInfo: function (fileName, position) { return undefined; },\n        findRenameLocations: function (fileName, position, findInStrings, findInComments) {\n            return [];\n        },\n        getDefinitionAtPosition: function (fileName, position) { return []; },\n        getTypeDefinitionAtPosition: function (fileName, position) { return []; },\n        getImplementationAtPosition: function (fileName, position) { return []; },\n        getReferencesAtPosition: function (fileName, position) { return []; },\n        findReferences: function (fileName, position) { return []; },\n        getDocumentHighlights: function (fileName, position, filesToSearch) { return []; },\n        /** @deprecated */\n        getOccurrencesAtPosition: function (fileName, position) { return []; },\n        getNavigateToItems: function (searchValue) { return []; },\n        getNavigationBarItems: function (fileName) { return []; },\n        getNavigationTree: function (fileName) { return undefined; },\n        getOutliningSpans: function (fileName) { return []; },\n        getTodoComments: function (fileName, descriptors) { return []; },\n        getBraceMatchingAtPosition: function (fileName, position) { return []; },\n        getIndentationAtPosition: function (fileName, position, options) { return undefined; },\n        getFormattingEditsForRange: function (fileName, start, end, options) { return []; },\n        getFormattingEditsForDocument: function (fileName, options) { return []; },\n        getFormattingEditsAfterKeystroke: function (fileName, position, key, options) { return []; },\n        getDocCommentTemplateAtPosition: function (fileName, position) { return undefined; },\n        isValidBraceCompletionAtPosition: function (fileName, position, openingBrace) { return undefined; },\n        getCodeFixesAtPosition: function (fileName, start, end, errorCodes) { return []; },\n        getEmitOutput: function (fileName) { return undefined; },\n        getProgram: function () { return ls.getProgram(); },\n        dispose: function () { return ls.dispose(); },\n        getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n        getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n            return undefined;\n        },\n    };\n}\nfunction create(info /* ts.server.PluginCreateInfo */) {\n    // Create the proxy\n    var proxy = Object.create(null);\n    var oldLS = info.languageService;\n    if (angularOnlyResults) {\n        oldLS = angularOnlyFilter(oldLS);\n    }\n    function tryCall(fileName, callback) {\n        if (fileName && !oldLS.getProgram().getSourceFile(fileName)) {\n            return undefined;\n        }\n        try {\n            return callback();\n        }\n        catch (e) {\n            return undefined;\n        }\n    }\n    function tryFilenameCall(m) {\n        return function (fileName) { return tryCall(fileName, function () { return (m.call(ls, fileName)); }); };\n    }\n    function tryFilenameOneCall(m) {\n        return function (fileName, p) { return tryCall(fileName, function () { return (m.call(ls, fileName, p)); }); };\n    }\n    function tryFilenameTwoCall(m) {\n        return function (fileName, p1, p2) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2)); }); };\n    }\n    function tryFilenameThreeCall(m) {\n        return function (fileName, p1, p2, p3) { return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3)); }); };\n    }\n    function tryFilenameFourCall(m) {\n        return function (fileName, p1, p2, p3, p4) {\n            return tryCall(fileName, function () { return (m.call(ls, fileName, p1, p2, p3, p4)); });\n        };\n    }\n    function typescriptOnly(ls) {\n        return {\n            cleanupSemanticCache: function () { return ls.cleanupSemanticCache(); },\n            getSyntacticDiagnostics: tryFilenameCall(ls.getSyntacticDiagnostics),\n            getSemanticDiagnostics: tryFilenameCall(ls.getSemanticDiagnostics),\n            getCompilerOptionsDiagnostics: function () { return ls.getCompilerOptionsDiagnostics(); },\n            getSyntacticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getSemanticClassifications: tryFilenameOneCall(ls.getSemanticClassifications),\n            getEncodedSyntacticClassifications: tryFilenameOneCall(ls.getEncodedSyntacticClassifications),\n            getEncodedSemanticClassifications: tryFilenameOneCall(ls.getEncodedSemanticClassifications),\n            getCompletionsAtPosition: tryFilenameOneCall(ls.getCompletionsAtPosition),\n            getCompletionEntryDetails: tryFilenameTwoCall(ls.getCompletionEntryDetails),\n            getCompletionEntrySymbol: tryFilenameTwoCall(ls.getCompletionEntrySymbol),\n            getQuickInfoAtPosition: tryFilenameOneCall(ls.getQuickInfoAtPosition),\n            getNameOrDottedNameSpan: tryFilenameTwoCall(ls.getNameOrDottedNameSpan),\n            getBreakpointStatementAtPosition: tryFilenameOneCall(ls.getBreakpointStatementAtPosition),\n            getSignatureHelpItems: tryFilenameOneCall(ls.getSignatureHelpItems),\n            getRenameInfo: tryFilenameOneCall(ls.getRenameInfo),\n            findRenameLocations: tryFilenameThreeCall(ls.findRenameLocations),\n            getDefinitionAtPosition: tryFilenameOneCall(ls.getDefinitionAtPosition),\n            getTypeDefinitionAtPosition: tryFilenameOneCall(ls.getTypeDefinitionAtPosition),\n            getImplementationAtPosition: tryFilenameOneCall(ls.getImplementationAtPosition),\n            getReferencesAtPosition: tryFilenameOneCall(ls.getReferencesAtPosition),\n            findReferences: tryFilenameOneCall(ls.findReferences),\n            getDocumentHighlights: tryFilenameTwoCall(ls.getDocumentHighlights),\n            /** @deprecated */\n            getOccurrencesAtPosition: tryFilenameOneCall(ls.getOccurrencesAtPosition),\n            getNavigateToItems: function (searchValue, maxResultCount, fileName, excludeDtsFiles) { return tryCall(fileName, function () { return ls.getNavigateToItems(searchValue, maxResultCount, fileName, excludeDtsFiles); }); },\n            getNavigationBarItems: tryFilenameCall(ls.getNavigationBarItems),\n            getNavigationTree: tryFilenameCall(ls.getNavigationTree),\n            getOutliningSpans: tryFilenameCall(ls.getOutliningSpans),\n            getTodoComments: tryFilenameOneCall(ls.getTodoComments),\n            getBraceMatchingAtPosition: tryFilenameOneCall(ls.getBraceMatchingAtPosition),\n            getIndentationAtPosition: tryFilenameTwoCall(ls.getIndentationAtPosition),\n            getFormattingEditsForRange: tryFilenameThreeCall(ls.getFormattingEditsForRange),\n            getFormattingEditsForDocument: tryFilenameOneCall(ls.getFormattingEditsForDocument),\n            getFormattingEditsAfterKeystroke: tryFilenameThreeCall(ls.getFormattingEditsAfterKeystroke),\n            getDocCommentTemplateAtPosition: tryFilenameOneCall(ls.getDocCommentTemplateAtPosition),\n            isValidBraceCompletionAtPosition: tryFilenameTwoCall(ls.isValidBraceCompletionAtPosition),\n            getCodeFixesAtPosition: tryFilenameFourCall(ls.getCodeFixesAtPosition),\n            getEmitOutput: tryFilenameCall(ls.getEmitOutput),\n            getProgram: function () { return ls.getProgram(); },\n            dispose: function () { return ls.dispose(); },\n            getApplicableRefactors: function (fileName, positionOrRaneg) { return []; },\n            getEditsForRefactor: function (fileName, formatOptions, positionOrRange, refactorName, actionName) {\n                return undefined;\n            },\n        };\n    }\n    oldLS = typescriptOnly(oldLS);\n    var _loop_1 = function (k) {\n        proxy[k] = function () { return oldLS[k].apply(oldLS, arguments); };\n    };\n    for (var k in oldLS) {\n        _loop_1(k);\n    }\n    function completionToEntry(c) {\n        return {\n            // TODO: remove any and fix type error.\n            kind: c.kind,\n            name: c.name,\n            sortText: c.sort,\n            kindModifiers: ''\n        };\n    }\n    function diagnosticToDiagnostic(d, file) {\n        var result = {\n            file: file,\n            start: d.span.start,\n            length: d.span.end - d.span.start,\n            messageText: d.message,\n            category: ts.DiagnosticCategory.Error,\n            code: 0,\n            source: 'ng'\n        };\n        return result;\n    }\n    function tryOperation(attempting, callback) {\n        try {\n            return callback();\n        }\n        catch (e) {\n            info.project.projectService.logger.info(\"Failed to \" + attempting + \": \" + e.toString());\n            info.project.projectService.logger.info(\"Stack trace: \" + e.stack);\n            return null;\n        }\n    }\n    var serviceHost = new TypeScriptServiceHost(info.languageServiceHost, info.languageService);\n    var ls = createLanguageService(serviceHost);\n    serviceHost.setSite(ls);\n    projectHostMap.set(info.project, serviceHost);\n    proxy.getCompletionsAtPosition = function (fileName, position) {\n        var base = oldLS.getCompletionsAtPosition(fileName, position) || {\n            isGlobalCompletion: false,\n            isMemberCompletion: false,\n            isNewIdentifierLocation: false,\n            entries: []\n        };\n        tryOperation('get completions', function () {\n            var results = ls.getCompletionsAt(fileName, position);\n            if (results && results.length) {\n                if (base === undefined) {\n                    base = {\n                        isGlobalCompletion: false,\n                        isMemberCompletion: false,\n                        isNewIdentifierLocation: false,\n                        entries: []\n                    };\n                }\n                for (var _i = 0, results_1 = results; _i < results_1.length; _i++) {\n                    var entry = results_1[_i];\n                    base.entries.push(completionToEntry(entry));\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getQuickInfoAtPosition = function (fileName, position) {\n        var base = oldLS.getQuickInfoAtPosition(fileName, position);\n        // TODO(vicb): the tags property has been removed in TS 2.2\n        tryOperation('get quick info', function () {\n            var ours = ls.getHoverAt(fileName, position);\n            if (ours) {\n                var displayParts = [];\n                for (var _i = 0, _a = ours.text; _i < _a.length; _i++) {\n                    var part = _a[_i];\n                    displayParts.push({ kind: part.language || 'angular', text: part.text });\n                }\n                var tags = base && base.tags;\n                base = {\n                    displayParts: displayParts,\n                    documentation: [],\n                    kind: 'angular',\n                    kindModifiers: 'what does this do?',\n                    textSpan: { start: ours.span.start, length: ours.span.end - ours.span.start },\n                };\n                if (tags) {\n                    base.tags = tags;\n                }\n            }\n        });\n        return base;\n    };\n    proxy.getSemanticDiagnostics = function (fileName) {\n        var result = oldLS.getSemanticDiagnostics(fileName);\n        var base = result || [];\n        tryOperation('get diagnostics', function () {\n            info.project.projectService.logger.info(\"Computing Angular semantic diagnostics...\");\n            var ours = ls.getDiagnostics(fileName);\n            if (ours && ours.length) {\n                var file_1 = oldLS.getProgram().getSourceFile(fileName);\n                base.push.apply(base, ours.map(function (d) { return diagnosticToDiagnostic(d, file_1); }));\n            }\n        });\n        return base;\n    };\n    proxy.getDefinitionAtPosition = function (fileName, position) {\n        var base = oldLS.getDefinitionAtPosition(fileName, position);\n        if (base && base.length) {\n            return base;\n        }\n        return tryOperation('get definition', function () {\n            var ours = ls.getDefinitionAt(fileName, position);\n            if (ours && ours.length) {\n                base = base || [];\n                for (var _i = 0, ours_1 = ours; _i < ours_1.length; _i++) {\n                    var loc = ours_1[_i];\n                    base.push({\n                        fileName: loc.fileName,\n                        textSpan: { start: loc.span.start, length: loc.span.end - loc.span.start },\n                        name: '',\n                        // TODO: remove any and fix type error.\n                        kind: 'definition',\n                        containerName: loc.fileName,\n                        containerKind: 'file',\n                    });\n                }\n            }\n            return base;\n        }) || [];\n    };\n    return proxy;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @module\n * @description\n * Entry point for all public APIs of the common package.\n */\n/**\n * @stable\n */\nvar VERSION = new Version$1('5.1.0-beta.0-faa6212');\n\nexports.createLanguageService = createLanguageService;\nexports.TypeScriptServiceHost = TypeScriptServiceHost;\nexports.createLanguageServiceFromTypescript = createLanguageServiceFromTypescript;\nexports.VERSION = VERSION;\nexports.getExternalFiles = getExternalFiles;\nexports.create = create;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n});\n//# sourceMappingURL=language-service.umd.js.map\n"]}