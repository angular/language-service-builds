{"version":3,"file":"ts_plugin.js","sourceRoot":"","sources":["../../../../modules/@angular/language-service/src/ts_plugin.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ts from 'typescript';\n\nimport {createLanguageService} from './language_service';\nimport {Completion, Diagnostic, LanguageService, LanguageServiceHost} from './types';\nimport {TypeScriptServiceHost} from './typescript_host';\n\nexport function create(info: any /* ts.server.PluginCreateInfo */): ts.LanguageService {\n  // Create the proxy\n  const proxy: ts.LanguageService = Object.create(null);\n  const oldLS: ts.LanguageService = info.languageService;\n  for (const k in oldLS) {\n    (<any>proxy)[k] = function() { return (oldLS as any)[k].apply(oldLS, arguments); };\n  }\n\n  function completionToEntry(c: Completion): ts.CompletionEntry {\n    return {kind: c.kind, name: c.name, sortText: c.sort, kindModifiers: ''};\n  }\n\n  function diagnosticToDiagnostic(d: Diagnostic, file: ts.SourceFile): ts.Diagnostic {\n    return {\n      file,\n      start: d.span.start,\n      length: d.span.end - d.span.start,\n      messageText: d.message,\n      category: ts.DiagnosticCategory.Error,\n      code: 0\n    };\n  }\n\n  function tryOperation(attempting: string, callback: () => void) {\n    try {\n      callback();\n    } catch (e) {\n      info.project.projectService.logger.info(`Failed to ${attempting}: ${e.toString()}`);\n      info.project.projectService.logger.info(`Stack trace: ${e.stack}`);\n    }\n  }\n\n  const serviceHost = new TypeScriptServiceHost(info.languageServiceHost, info.languageService);\n  const ls = createLanguageService(serviceHost);\n  serviceHost.setSite(ls);\n\n  proxy.getCompletionsAtPosition = function(fileName: string, position: number) {\n    let base = oldLS.getCompletionsAtPosition(fileName, position);\n    tryOperation('get completions', () => {\n      const results = ls.getCompletionsAt(fileName, position);\n      if (results && results.length) {\n        if (base === undefined) {\n          base = {isMemberCompletion: false, isNewIdentifierLocation: false, entries: []};\n        }\n        for (const entry of results) {\n          base.entries.push(completionToEntry(entry));\n        }\n      }\n    });\n    return base;\n  };\n\n  proxy.getQuickInfoAtPosition = function(fileName: string, position: number): ts.QuickInfo {\n    let base = oldLS.getQuickInfoAtPosition(fileName, position);\n    tryOperation('get quick info', () => {\n      const ours = ls.getHoverAt(fileName, position);\n      if (ours) {\n        const displayParts: typeof base.displayParts = [];\n        for (const part of ours.text) {\n          displayParts.push({kind: part.language, text: part.text});\n        }\n        base = {\n          displayParts,\n          documentation: [],\n          kind: 'angular',\n          kindModifiers: 'what does this do?',\n          textSpan: {start: ours.span.start, length: ours.span.end - ours.span.start}\n        };\n      }\n    });\n\n    return base;\n  };\n\n  proxy.getSemanticDiagnostics = function(fileName: string) {\n    let base = oldLS.getSemanticDiagnostics(fileName);\n    if (base === undefined) {\n      base = [];\n    }\n    tryOperation('get diagnostics', () => {\n      info.project.projectService.logger.info(`Computing Angular semantic diagnostics...`);\n      const ours = ls.getDiagnostics(fileName);\n      if (ours && ours.length) {\n        const file = oldLS.getProgram().getSourceFile(fileName);\n        base.push.apply(base, ours.map(d => diagnosticToDiagnostic(d, file)));\n      }\n    });\n\n    return base;\n  };\n\n  proxy.getDefinitionAtPosition = function(\n                                      fileName: string, position: number): ts.DefinitionInfo[] {\n    let base = oldLS.getDefinitionAtPosition(fileName, position);\n    if (base && base.length) {\n      return base;\n    }\n\n    tryOperation('get definition', () => {\n      const ours = ls.getDefinitionAt(fileName, position);\n      if (ours && ours.length) {\n        base = base || [];\n        for (const loc of ours) {\n          base.push({\n            fileName: loc.fileName,\n            textSpan: {start: loc.span.start, length: loc.span.end - loc.span.start},\n            name: '',\n            kind: 'definition',\n            containerName: loc.fileName,\n            containerKind: 'file'\n          });\n        }\n      }\n    });\n    return base;\n  };\n\n  return proxy;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}