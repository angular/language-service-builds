{"version":3,"file":"diagnostics.js","sourceRoot":"","sources":["../../../../modules/@angular/language-service/src/diagnostics.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CompileDirectiveMetadata, CompileDirectiveSummary, StaticSymbol} from '@angular/compiler';\nimport {NgAnalyzedModules} from '@angular/compiler/src/aot/compiler';\nimport {AST} from '@angular/compiler/src/expression_parser/ast';\nimport {Attribute} from '@angular/compiler/src/ml_parser/ast';\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '@angular/compiler/src/template_parser/template_ast';\n\nimport {AstResult, SelectorInfo, TemplateInfo} from './common';\nimport {getExpressionDiagnostics, getExpressionScope} from './expressions';\nimport {HtmlAstPath} from './html_path';\nimport {NullTemplateVisitor, TemplateAstChildVisitor, TemplateAstPath} from './template_path';\nimport {Declaration, Declarations, Diagnostic, DiagnosticKind, Diagnostics, Span, SymbolTable, TemplateSource} from './types';\nimport {getSelectors, hasTemplateReference, offsetSpan, spanOf} from './utils';\n\nexport interface AstProvider {\n  getTemplateAst(template: TemplateSource, fileName: string): AstResult;\n}\n\nexport function getTemplateDiagnostics(\n    fileName: string, astProvider: AstProvider, templates: TemplateSource[]): Diagnostics {\n  const results: Diagnostics = [];\n  for (const template of templates) {\n    const ast = astProvider.getTemplateAst(template, fileName);\n    if (ast) {\n      if (ast.parseErrors && ast.parseErrors.length) {\n        results.push(...ast.parseErrors.map<Diagnostic>(\n            e => ({\n              kind: DiagnosticKind.Error,\n              span: offsetSpan(spanOf(e.span), template.span.start),\n              message: e.msg\n            })));\n      } else if (ast.templateAst) {\n        const expressionDiagnostics = getTemplateExpressionDiagnostics(template, ast);\n        results.push(...expressionDiagnostics);\n      }\n      if (ast.errors) {\n        results.push(...ast.errors.map<Diagnostic>(\n            e => ({kind: e.kind, span: e.span || template.span, message: e.message})));\n      }\n    }\n  }\n  return results;\n}\n\nexport function getDeclarationDiagnostics(\n    declarations: Declarations, modules: NgAnalyzedModules): Diagnostics {\n  const results: Diagnostics = [];\n\n  let directives: Set<StaticSymbol>|undefined = undefined;\n  for (const declaration of declarations) {\n    const report = (message: string, span?: Span) => {\n      results.push(<Diagnostic>{\n        kind: DiagnosticKind.Error,\n        span: span || declaration.declarationSpan, message\n      });\n    };\n    for (const error of declaration.errors) {\n      report(error.message, error.span);\n    }\n    if (declaration.metadata) {\n      if (declaration.metadata.isComponent) {\n        if (!modules.ngModuleByPipeOrDirective.has(declaration.type)) {\n          report(\n              `Component '${declaration.type.name}' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration`);\n        }\n        if (declaration.metadata.template.template == null &&\n            !declaration.metadata.template.templateUrl) {\n          report(`Component ${declaration.type.name} must have a template or templateUrl`);\n        }\n      } else {\n        if (!directives) {\n          directives = new Set();\n          modules.ngModules.forEach(module => {\n            module.declaredDirectives.forEach(\n                directive => { directives.add(directive.reference); });\n          });\n        }\n        if (!directives.has(declaration.type)) {\n          report(\n              `Directive '${declaration.type.name}' is not included in a module and will not be available inside a template. Consider adding it to a NgModule declaration`);\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction getTemplateExpressionDiagnostics(\n    template: TemplateSource, astResult: AstResult): Diagnostics {\n  const info: TemplateInfo = {\n    template,\n    htmlAst: astResult.htmlAst,\n    directive: astResult.directive,\n    directives: astResult.directives,\n    pipes: astResult.pipes,\n    templateAst: astResult.templateAst,\n    expressionParser: astResult.expressionParser\n  };\n  const visitor = new ExpressionDiagnosticsVisitor(\n      info, (path: TemplateAstPath, includeEvent: boolean) =>\n                getExpressionScope(info, path, includeEvent));\n  templateVisitAll(visitor, astResult.templateAst);\n  return visitor.diagnostics;\n}\n\nclass ExpressionDiagnosticsVisitor extends TemplateAstChildVisitor {\n  private path: TemplateAstPath;\n  private directiveSummary: CompileDirectiveSummary;\n\n  diagnostics: Diagnostics = [];\n\n  constructor(\n      private info: TemplateInfo,\n      private getExpressionScope: (path: TemplateAstPath, includeEvent: boolean) => SymbolTable) {\n    super();\n    this.path = new TemplateAstPath([], 0);\n  }\n\n  visitDirective(ast: DirectiveAst, context: any): any {\n    // Override the default child visitor to ignore the host properties of a directive.\n    if (ast.inputs && ast.inputs.length) {\n      templateVisitAll(this, ast.inputs, context);\n    }\n  }\n\n  visitBoundText(ast: BoundTextAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.value, ast.sourceSpan.start.offset, false);\n    this.pop();\n  }\n\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n    this.pop();\n  }\n\n  visitElementProperty(ast: BoundElementPropertyAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.value, this.attributeValueLocation(ast), false);\n    this.pop();\n  }\n\n  visitEvent(ast: BoundEventAst): void {\n    this.push(ast);\n    this.diagnoseExpression(ast.handler, this.attributeValueLocation(ast), true);\n    this.pop();\n  }\n\n  visitVariable(ast: VariableAst): void {\n    const directive = this.directiveSummary;\n    if (directive && ast.value) {\n      const context = this.info.template.query.getTemplateContext(directive.type.reference);\n      if (!context.has(ast.value)) {\n        if (ast.value === '$implicit') {\n          this.reportError(\n              'The template context does not have an implicit value', spanOf(ast.sourceSpan));\n        } else {\n          this.reportError(\n              `The template context does not defined a member called '${ast.value}'`,\n              spanOf(ast.sourceSpan));\n        }\n      }\n    }\n  }\n\n  visitElement(ast: ElementAst, context: any): void {\n    this.push(ast);\n    super.visitElement(ast, context);\n    this.pop();\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    const previousDirectiveSummary = this.directiveSummary;\n\n    this.push(ast);\n\n    // Find directive that refernces this template\n    this.directiveSummary =\n        ast.directives.map(d => d.directive).find(d => hasTemplateReference(d.type));\n\n    // Process children\n    super.visitEmbeddedTemplate(ast, context);\n\n    this.pop();\n\n    this.directiveSummary = previousDirectiveSummary;\n  }\n\n  private attributeValueLocation(ast: TemplateAst) {\n    const path = new HtmlAstPath(this.info.htmlAst, ast.sourceSpan.start.offset);\n    const last = path.tail;\n    if (last instanceof Attribute && last.valueSpan) {\n      // Add 1 for the quote.\n      return last.valueSpan.start.offset + 1;\n    }\n    return ast.sourceSpan.start.offset;\n  }\n\n  private diagnoseExpression(ast: AST, offset: number, includeEvent: boolean) {\n    const scope = this.getExpressionScope(this.path, includeEvent);\n    this.diagnostics.push(\n        ...getExpressionDiagnostics(scope, ast, this.info.template.query, {\n          event: includeEvent\n        }).map(d => ({\n                 span: offsetSpan(d.ast.span, offset + this.info.template.span.start),\n                 kind: d.kind,\n                 message: d.message\n               })));\n  }\n\n  private push(ast: TemplateAst) { this.path.push(ast); }\n\n  private pop() { this.path.pop(); }\n\n  private _selectors: SelectorInfo;\n  private selectors(): SelectorInfo {\n    let result = this._selectors;\n    if (!result) {\n      this._selectors = result = getSelectors(this.info);\n    }\n    return result;\n  }\n\n  private findElement(position: number): Element {\n    const htmlPath = new HtmlAstPath(this.info.htmlAst, position);\n    if (htmlPath.tail instanceof Element) {\n      return htmlPath.tail;\n    }\n  }\n\n  private reportError(message: string, span: Span) {\n    this.diagnostics.push({\n      span: offsetSpan(span, this.info.template.span.start),\n      kind: DiagnosticKind.Error, message\n    });\n  }\n\n  private reportWarning(message: string, span: Span) {\n    this.diagnostics.push({\n      span: offsetSpan(span, this.info.template.span.start),\n      kind: DiagnosticKind.Warning, message\n    });\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}