{"version":3,"file":"template_path.js","sourceRoot":"","sources":["../../../../modules/@angular/language-service/src/template_path.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AttrAst, BoundDirectivePropertyAst, BoundElementPropertyAst, BoundEventAst, BoundTextAst, DirectiveAst, ElementAst, EmbeddedTemplateAst, NgContentAst, ReferenceAst, TemplateAst, TemplateAstVisitor, TextAst, VariableAst, templateVisitAll} from '@angular/compiler/src/template_parser/template_ast';\n\nimport {AstPath} from './ast_path';\nimport {inSpan, isNarrower, spanOf} from './utils';\n\nexport class TemplateAstPath extends AstPath<TemplateAst> {\n  constructor(ast: TemplateAst[], public position: number, allowWidening: boolean = false) {\n    super(buildTemplatePath(ast, position, allowWidening));\n  }\n}\n\nfunction buildTemplatePath(\n    ast: TemplateAst[], position: number, allowWidening: boolean = false): TemplateAst[] {\n  const visitor = new TemplateAstPathBuilder(position, allowWidening);\n  templateVisitAll(visitor, ast);\n  return visitor.getPath();\n}\n\nexport class NullTemplateVisitor implements TemplateAstVisitor {\n  visitNgContent(ast: NgContentAst): void {}\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst): void {}\n  visitElement(ast: ElementAst): void {}\n  visitReference(ast: ReferenceAst): void {}\n  visitVariable(ast: VariableAst): void {}\n  visitEvent(ast: BoundEventAst): void {}\n  visitElementProperty(ast: BoundElementPropertyAst): void {}\n  visitAttr(ast: AttrAst): void {}\n  visitBoundText(ast: BoundTextAst): void {}\n  visitText(ast: TextAst): void {}\n  visitDirective(ast: DirectiveAst): void {}\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst): void {}\n}\n\nexport class TemplateAstChildVisitor implements TemplateAstVisitor {\n  constructor(private visitor?: TemplateAstVisitor) {}\n\n  // Nodes with children\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.references);\n      visit(ast.variables);\n      visit(ast.directives);\n      visit(ast.providers);\n      visit(ast.children);\n    });\n  }\n\n  visitElement(ast: ElementAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.attrs);\n      visit(ast.inputs);\n      visit(ast.outputs);\n      visit(ast.references);\n      visit(ast.directives);\n      visit(ast.providers);\n      visit(ast.children);\n    });\n  }\n\n  visitDirective(ast: DirectiveAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      visit(ast.inputs);\n      visit(ast.hostProperties);\n      visit(ast.hostEvents);\n    });\n  }\n\n  // Terminal nodes\n  visitNgContent(ast: NgContentAst, context: any): any {}\n  visitReference(ast: ReferenceAst, context: any): any {}\n  visitVariable(ast: VariableAst, context: any): any {}\n  visitEvent(ast: BoundEventAst, context: any): any {}\n  visitElementProperty(ast: BoundElementPropertyAst, context: any): any {}\n  visitAttr(ast: AttrAst, context: any): any {}\n  visitBoundText(ast: BoundTextAst, context: any): any {}\n  visitText(ast: TextAst, context: any): any {}\n  visitDirectiveProperty(ast: BoundDirectivePropertyAst, context: any): any {}\n\n  protected visitChildren<T extends TemplateAst>(\n      context: any,\n      cb: (visit: (<V extends TemplateAst>(children: V[]|undefined) => void)) => void) {\n    const visitor = this.visitor || this;\n    let results: any[][] = [];\n    function visit<T extends TemplateAst>(children: T[] | undefined) {\n      if (children && children.length) results.push(templateVisitAll(visitor, children, context));\n    }\n    cb(visit);\n    return [].concat.apply([], results);\n  }\n}\n\nclass TemplateAstPathBuilder extends TemplateAstChildVisitor {\n  private path: TemplateAst[] = [];\n\n  constructor(private position: number, private allowWidening: boolean) { super(); }\n\n  visit(ast: TemplateAst, context: any): any {\n    let span = spanOf(ast);\n    if (inSpan(this.position, span)) {\n      const len = this.path.length;\n      if (!len || this.allowWidening || isNarrower(span, spanOf(this.path[len - 1]))) {\n        this.path.push(ast);\n      }\n    } else {\n      // Returning a value here will result in the children being skipped.\n      return true;\n    }\n  }\n\n  visitEmbeddedTemplate(ast: EmbeddedTemplateAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      // Ignore reference, variable and providers\n      visit(ast.attrs);\n      visit(ast.directives);\n      visit(ast.children);\n    });\n  }\n\n  visitElement(ast: ElementAst, context: any): any {\n    return this.visitChildren(context, visit => {\n      // Ingnore providers\n      visit(ast.attrs);\n      visit(ast.inputs);\n      visit(ast.outputs);\n      visit(ast.references);\n      visit(ast.directives);\n      visit(ast.children);\n    });\n  }\n\n  visitDirective(ast: DirectiveAst, context: any): any {\n    // Ignore the host properties of a directive\n    const result = this.visitChildren(context, visit => { visit(ast.inputs); });\n    // We never care about the diretive itself, just its inputs.\n    if (this.path[this.path.length - 1] == ast) {\n      this.path.pop();\n    }\n    return result;\n  }\n\n  getPath() { return this.path; }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}