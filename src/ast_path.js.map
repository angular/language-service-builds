{"version":3,"file":"ast_path.js","sourceRoot":"","sources":["../../../../modules/@angular/language-service/src/ast_path.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;IACE,YAAoB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;IAAG,CAAC;IAEjC,IAAI,KAAK,KAAc,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAChE,IAAI,IAAI,KAAkB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,IAAI,KAAkB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEnE,QAAQ,CAAC,IAAO,IAAiB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACjF,OAAO,CAAC,IAAO,IAAiB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAEhF,KAAK,CAAc,IAA+B;QAChD,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/C,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,IAAI,YAAY,IAAI,CAAC;gBAAC,MAAM,CAAI,IAAI,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,IAAI,CAAC,IAAO,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAEvC,GAAG,KAAQ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;AACtC,CAAC;AAAA","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport class AstPath<T> {\n  constructor(private path: T[]) {}\n\n  get empty(): boolean { return !this.path || !this.path.length; }\n  get head(): T|undefined { return this.path[0]; }\n  get tail(): T|undefined { return this.path[this.path.length - 1]; }\n\n  parentOf(node: T): T|undefined { return this.path[this.path.indexOf(node) - 1]; }\n  childOf(node: T): T|undefined { return this.path[this.path.indexOf(node) + 1]; }\n\n  first<N extends T>(ctor: {new (...args: any[]): N}): N|undefined {\n    for (let i = this.path.length - 1; i >= 0; i--) {\n      let item = this.path[i];\n      if (item instanceof ctor) return <N>item;\n    }\n  }\n\n  push(node: T) { this.path.push(node); }\n\n  pop(): T { return this.path.pop(); }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}